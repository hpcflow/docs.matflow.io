Search.setIndex({"docnames": ["alternative_install", "contribute/index", "development/environments", "development/index", "index", "installation", "reference/_autosummary/matflow", "reference/_autosummary/matflow.Action", "reference/_autosummary/matflow.ActionEnvironment", "reference/_autosummary/matflow.ActionRule", "reference/_autosummary/matflow.ActionScope", "reference/_autosummary/matflow.ActionScopeType", "reference/_autosummary/matflow.Command", "reference/_autosummary/matflow.CommandFilesList", "reference/_autosummary/matflow.DirectPosix", "reference/_autosummary/matflow.DirectWindows", "reference/_autosummary/matflow.Element", "reference/_autosummary/matflow.ElementAction", "reference/_autosummary/matflow.ElementActionRun", "reference/_autosummary/matflow.ElementFilter", "reference/_autosummary/matflow.ElementGroup", "reference/_autosummary/matflow.ElementInputFiles", "reference/_autosummary/matflow.ElementInputs", "reference/_autosummary/matflow.ElementIteration", "reference/_autosummary/matflow.ElementOutputFiles", "reference/_autosummary/matflow.ElementOutputs", "reference/_autosummary/matflow.ElementParameter", "reference/_autosummary/matflow.ElementPropagation", "reference/_autosummary/matflow.ElementRepeats", "reference/_autosummary/matflow.ElementResources", "reference/_autosummary/matflow.ElementSet", "reference/_autosummary/matflow.Elements", "reference/_autosummary/matflow.Environment", "reference/_autosummary/matflow.EnvironmentsList", "reference/_autosummary/matflow.Executable", "reference/_autosummary/matflow.ExecutableInstance", "reference/_autosummary/matflow.ExecutablesList", "reference/_autosummary/matflow.Executor", "reference/_autosummary/matflow.FileNameExt", "reference/_autosummary/matflow.FileNameSpec", "reference/_autosummary/matflow.FileNameStem", "reference/_autosummary/matflow.FileSpec", "reference/_autosummary/matflow.GroupList", "reference/_autosummary/matflow.InputFile", "reference/_autosummary/matflow.InputFileGenerator", "reference/_autosummary/matflow.InputFileGeneratorSource", "reference/_autosummary/matflow.InputSource", "reference/_autosummary/matflow.InputSourceType", "reference/_autosummary/matflow.InputValue", "reference/_autosummary/matflow.Jobscript", "reference/_autosummary/matflow.JobscriptBlock", "reference/_autosummary/matflow.Loop", "reference/_autosummary/matflow.MetaTask", "reference/_autosummary/matflow.MetaTaskSchema", "reference/_autosummary/matflow.MultiPathSequence", "reference/_autosummary/matflow.NumCores", "reference/_autosummary/matflow.OutputFileParser", "reference/_autosummary/matflow.OutputFileParserSource", "reference/_autosummary/matflow.OutputLabel", "reference/_autosummary/matflow.Parameter", "reference/_autosummary/matflow.ParameterPath", "reference/_autosummary/matflow.ParameterPropagationMode", "reference/_autosummary/matflow.ParameterValue", "reference/_autosummary/matflow.Parameters", "reference/_autosummary/matflow.ParametersList", "reference/_autosummary/matflow.QueuedScheduler", "reference/_autosummary/matflow.ResourceList", "reference/_autosummary/matflow.ResourceSpec", "reference/_autosummary/matflow.Rule", "reference/_autosummary/matflow.RunDirAppFiles", "reference/_autosummary/matflow.SGEPosix", "reference/_autosummary/matflow.SchemaInput", "reference/_autosummary/matflow.SchemaOutput", "reference/_autosummary/matflow.SchemaParameter", "reference/_autosummary/matflow.SlurmPosix", "reference/_autosummary/matflow.SubParameter", "reference/_autosummary/matflow.Submission", "reference/_autosummary/matflow.Task", "reference/_autosummary/matflow.TaskInputParameters", "reference/_autosummary/matflow.TaskList", "reference/_autosummary/matflow.TaskObjective", "reference/_autosummary/matflow.TaskOutputParameters", "reference/_autosummary/matflow.TaskSchema", "reference/_autosummary/matflow.TaskSchemasList", "reference/_autosummary/matflow.TaskSourceType", "reference/_autosummary/matflow.TaskTemplateList", "reference/_autosummary/matflow.ValuePerturbation", "reference/_autosummary/matflow.ValueSequence", "reference/_autosummary/matflow.Workflow", "reference/_autosummary/matflow.WorkflowBlueprint", "reference/_autosummary/matflow.WorkflowLoop", "reference/_autosummary/matflow.WorkflowLoopList", "reference/_autosummary/matflow.WorkflowTask", "reference/_autosummary/matflow.WorkflowTaskList", "reference/_autosummary/matflow.WorkflowTemplate", "reference/_autosummary/matflow.app", "reference/_autosummary/matflow.cancel", "reference/_autosummary/matflow.cli", "reference/_autosummary/matflow.get_OS_info", "reference/_autosummary/matflow.get_known_submissions", "reference/_autosummary/matflow.get_shell_info", "reference/_autosummary/matflow.make_and_submit_demo_workflow", "reference/_autosummary/matflow.make_and_submit_workflow", "reference/_autosummary/matflow.make_demo_workflow", "reference/_autosummary/matflow.make_workflow", "reference/_autosummary/matflow.param_classes", "reference/_autosummary/matflow.param_classes.load", "reference/_autosummary/matflow.param_classes.load.LoadCase", "reference/_autosummary/matflow.param_classes.load.LoadStep", "reference/_autosummary/matflow.param_classes.load.StrainRateMode", "reference/_autosummary/matflow.param_classes.orientations", "reference/_autosummary/matflow.param_classes.orientations.EulerDefinition", "reference/_autosummary/matflow.param_classes.orientations.LatticeDirection", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentation", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentationType", "reference/_autosummary/matflow.param_classes.orientations.Orientations", "reference/_autosummary/matflow.param_classes.orientations.QuatOrder", "reference/_autosummary/matflow.param_classes.orientations.UnitCellAlignment", "reference/_autosummary/matflow.param_classes.seeds", "reference/_autosummary/matflow.param_classes.seeds.MicrostructureSeeds", "reference/_autosummary/matflow.param_classes.single_crystal_parameters", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.Perturbation", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.SingleCrystalParameters", "reference/_autosummary/matflow.param_classes.utils", "reference/_autosummary/matflow.param_classes.utils.masked_array_from_list", "reference/_autosummary/matflow.run_hpcflow_tests", "reference/_autosummary/matflow.run_tests", "reference/_autosummary/matflow.show", "reference/_autosummary/matflow.show_legend", "reference/_autosummary/matflow.submit_workflow", "reference/_autosummary/matflow.tests", "reference/_autosummary/matflow.tests.conftest", "reference/_autosummary/matflow.tests.conftest.load_case_1", "reference/_autosummary/matflow.tests.conftest.new_null_config", "reference/_autosummary/matflow.tests.conftest.null_config", "reference/_autosummary/matflow.tests.conftest.orientations_1", "reference/_autosummary/matflow.tests.conftest.orientations_2", "reference/_autosummary/matflow.tests.conftest.pytest_addoption", "reference/_autosummary/matflow.tests.conftest.pytest_collection_modifyitems", "reference/_autosummary/matflow.tests.conftest.pytest_configure", "reference/_autosummary/matflow.tests.conftest.pytest_unconfigure", "reference/_autosummary/matflow.tests.conftest.seeds_1", "reference/_autosummary/matflow.tests.data", "reference/_autosummary/matflow.tests.test_cli", "reference/_autosummary/matflow.tests.test_cli.test_hpcflow_version", "reference/_autosummary/matflow.tests.test_cli.test_version", "reference/_autosummary/matflow.tests.test_utils", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D_masked", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D_masked", "reference/_autosummary/matflow.tests.utils", "reference/api", "reference/cli", "reference/config_file", "reference/glossary", "reference/index", "reference/template_components", "reference/template_components/command_files", "reference/template_components/environments", "reference/template_components/parameters", "reference/template_components/task_schemas", "reference/workflows", "user/getting_started/advanced_workflow_concepts", "user/getting_started/custom_task_schemas_and_workflows", "user/getting_started/errors", "user/getting_started/index", "user/getting_started/running_workflows", "user/how_to/config", "user/how_to/environments", "user/how_to/index", "user/how_to/loops", "user/how_to/meta_tasks", "user/how_to/task_schemas", "user/how_to/template_components", "user/how_to/workflow_templates", "user/how_to/workflows", "user/index", "user/tutorials/index", "user/tutorials/notebooks/index", "user/tutorials/notebooks/simulate_yield_surface_2D"], "filenames": ["alternative_install.rst", "contribute/index.rst", "development/environments.rst", "development/index.rst", "index.rst", "installation.rst", "reference/_autosummary/matflow.rst", "reference/_autosummary/matflow.Action.rst", "reference/_autosummary/matflow.ActionEnvironment.rst", "reference/_autosummary/matflow.ActionRule.rst", "reference/_autosummary/matflow.ActionScope.rst", "reference/_autosummary/matflow.ActionScopeType.rst", "reference/_autosummary/matflow.Command.rst", "reference/_autosummary/matflow.CommandFilesList.rst", "reference/_autosummary/matflow.DirectPosix.rst", "reference/_autosummary/matflow.DirectWindows.rst", "reference/_autosummary/matflow.Element.rst", "reference/_autosummary/matflow.ElementAction.rst", "reference/_autosummary/matflow.ElementActionRun.rst", "reference/_autosummary/matflow.ElementFilter.rst", "reference/_autosummary/matflow.ElementGroup.rst", "reference/_autosummary/matflow.ElementInputFiles.rst", "reference/_autosummary/matflow.ElementInputs.rst", "reference/_autosummary/matflow.ElementIteration.rst", "reference/_autosummary/matflow.ElementOutputFiles.rst", "reference/_autosummary/matflow.ElementOutputs.rst", "reference/_autosummary/matflow.ElementParameter.rst", "reference/_autosummary/matflow.ElementPropagation.rst", "reference/_autosummary/matflow.ElementRepeats.rst", "reference/_autosummary/matflow.ElementResources.rst", "reference/_autosummary/matflow.ElementSet.rst", "reference/_autosummary/matflow.Elements.rst", "reference/_autosummary/matflow.Environment.rst", "reference/_autosummary/matflow.EnvironmentsList.rst", "reference/_autosummary/matflow.Executable.rst", "reference/_autosummary/matflow.ExecutableInstance.rst", "reference/_autosummary/matflow.ExecutablesList.rst", "reference/_autosummary/matflow.Executor.rst", "reference/_autosummary/matflow.FileNameExt.rst", "reference/_autosummary/matflow.FileNameSpec.rst", "reference/_autosummary/matflow.FileNameStem.rst", "reference/_autosummary/matflow.FileSpec.rst", "reference/_autosummary/matflow.GroupList.rst", "reference/_autosummary/matflow.InputFile.rst", "reference/_autosummary/matflow.InputFileGenerator.rst", "reference/_autosummary/matflow.InputFileGeneratorSource.rst", "reference/_autosummary/matflow.InputSource.rst", "reference/_autosummary/matflow.InputSourceType.rst", "reference/_autosummary/matflow.InputValue.rst", "reference/_autosummary/matflow.Jobscript.rst", "reference/_autosummary/matflow.JobscriptBlock.rst", "reference/_autosummary/matflow.Loop.rst", "reference/_autosummary/matflow.MetaTask.rst", "reference/_autosummary/matflow.MetaTaskSchema.rst", "reference/_autosummary/matflow.MultiPathSequence.rst", "reference/_autosummary/matflow.NumCores.rst", "reference/_autosummary/matflow.OutputFileParser.rst", "reference/_autosummary/matflow.OutputFileParserSource.rst", "reference/_autosummary/matflow.OutputLabel.rst", "reference/_autosummary/matflow.Parameter.rst", "reference/_autosummary/matflow.ParameterPath.rst", "reference/_autosummary/matflow.ParameterPropagationMode.rst", "reference/_autosummary/matflow.ParameterValue.rst", "reference/_autosummary/matflow.Parameters.rst", "reference/_autosummary/matflow.ParametersList.rst", "reference/_autosummary/matflow.QueuedScheduler.rst", "reference/_autosummary/matflow.ResourceList.rst", "reference/_autosummary/matflow.ResourceSpec.rst", "reference/_autosummary/matflow.Rule.rst", "reference/_autosummary/matflow.RunDirAppFiles.rst", "reference/_autosummary/matflow.SGEPosix.rst", "reference/_autosummary/matflow.SchemaInput.rst", "reference/_autosummary/matflow.SchemaOutput.rst", "reference/_autosummary/matflow.SchemaParameter.rst", "reference/_autosummary/matflow.SlurmPosix.rst", "reference/_autosummary/matflow.SubParameter.rst", "reference/_autosummary/matflow.Submission.rst", "reference/_autosummary/matflow.Task.rst", "reference/_autosummary/matflow.TaskInputParameters.rst", "reference/_autosummary/matflow.TaskList.rst", "reference/_autosummary/matflow.TaskObjective.rst", "reference/_autosummary/matflow.TaskOutputParameters.rst", "reference/_autosummary/matflow.TaskSchema.rst", "reference/_autosummary/matflow.TaskSchemasList.rst", "reference/_autosummary/matflow.TaskSourceType.rst", "reference/_autosummary/matflow.TaskTemplateList.rst", "reference/_autosummary/matflow.ValuePerturbation.rst", "reference/_autosummary/matflow.ValueSequence.rst", "reference/_autosummary/matflow.Workflow.rst", "reference/_autosummary/matflow.WorkflowBlueprint.rst", "reference/_autosummary/matflow.WorkflowLoop.rst", "reference/_autosummary/matflow.WorkflowLoopList.rst", "reference/_autosummary/matflow.WorkflowTask.rst", "reference/_autosummary/matflow.WorkflowTaskList.rst", "reference/_autosummary/matflow.WorkflowTemplate.rst", "reference/_autosummary/matflow.app.rst", "reference/_autosummary/matflow.cancel.rst", "reference/_autosummary/matflow.cli.rst", "reference/_autosummary/matflow.get_OS_info.rst", "reference/_autosummary/matflow.get_known_submissions.rst", "reference/_autosummary/matflow.get_shell_info.rst", "reference/_autosummary/matflow.make_and_submit_demo_workflow.rst", "reference/_autosummary/matflow.make_and_submit_workflow.rst", "reference/_autosummary/matflow.make_demo_workflow.rst", "reference/_autosummary/matflow.make_workflow.rst", "reference/_autosummary/matflow.param_classes.rst", "reference/_autosummary/matflow.param_classes.load.rst", "reference/_autosummary/matflow.param_classes.load.LoadCase.rst", "reference/_autosummary/matflow.param_classes.load.LoadStep.rst", "reference/_autosummary/matflow.param_classes.load.StrainRateMode.rst", "reference/_autosummary/matflow.param_classes.orientations.rst", "reference/_autosummary/matflow.param_classes.orientations.EulerDefinition.rst", "reference/_autosummary/matflow.param_classes.orientations.LatticeDirection.rst", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentation.rst", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentationType.rst", "reference/_autosummary/matflow.param_classes.orientations.Orientations.rst", "reference/_autosummary/matflow.param_classes.orientations.QuatOrder.rst", "reference/_autosummary/matflow.param_classes.orientations.UnitCellAlignment.rst", "reference/_autosummary/matflow.param_classes.seeds.rst", "reference/_autosummary/matflow.param_classes.seeds.MicrostructureSeeds.rst", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.rst", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.Perturbation.rst", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.rst", "reference/_autosummary/matflow.param_classes.utils.rst", "reference/_autosummary/matflow.param_classes.utils.masked_array_from_list.rst", "reference/_autosummary/matflow.run_hpcflow_tests.rst", "reference/_autosummary/matflow.run_tests.rst", "reference/_autosummary/matflow.show.rst", "reference/_autosummary/matflow.show_legend.rst", "reference/_autosummary/matflow.submit_workflow.rst", "reference/_autosummary/matflow.tests.rst", "reference/_autosummary/matflow.tests.conftest.rst", "reference/_autosummary/matflow.tests.conftest.load_case_1.rst", "reference/_autosummary/matflow.tests.conftest.new_null_config.rst", "reference/_autosummary/matflow.tests.conftest.null_config.rst", "reference/_autosummary/matflow.tests.conftest.orientations_1.rst", "reference/_autosummary/matflow.tests.conftest.orientations_2.rst", "reference/_autosummary/matflow.tests.conftest.pytest_addoption.rst", "reference/_autosummary/matflow.tests.conftest.pytest_collection_modifyitems.rst", "reference/_autosummary/matflow.tests.conftest.pytest_configure.rst", "reference/_autosummary/matflow.tests.conftest.pytest_unconfigure.rst", "reference/_autosummary/matflow.tests.conftest.seeds_1.rst", "reference/_autosummary/matflow.tests.data.rst", "reference/_autosummary/matflow.tests.test_cli.rst", "reference/_autosummary/matflow.tests.test_cli.test_hpcflow_version.rst", "reference/_autosummary/matflow.tests.test_cli.test_version.rst", "reference/_autosummary/matflow.tests.test_utils.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D_masked.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D_masked.rst", "reference/_autosummary/matflow.tests.utils.rst", "reference/api.rst", "reference/cli.rst", "reference/config_file.rst", "reference/glossary.rst", "reference/index.rst", "reference/template_components.rst", "reference/template_components/command_files.rst", "reference/template_components/environments.rst", "reference/template_components/parameters.rst", "reference/template_components/task_schemas.rst", "reference/workflows.rst", "user/getting_started/advanced_workflow_concepts.rst", "user/getting_started/custom_task_schemas_and_workflows.rst", "user/getting_started/errors.rst", "user/getting_started/index.rst", "user/getting_started/running_workflows.rst", "user/how_to/config.rst", "user/how_to/environments.rst", "user/how_to/index.rst", "user/how_to/loops.rst", "user/how_to/meta_tasks.rst", "user/how_to/task_schemas.rst", "user/how_to/template_components.rst", "user/how_to/workflow_templates.rst", "user/how_to/workflows.rst", "user/index.rst", "user/tutorials/index.rst", "user/tutorials/notebooks/index.rst", "user/tutorials/notebooks/simulate_yield_surface_2D.ipynb"], "titles": ["Alternative installation methods", "Contribute", "Environments", "Development", "Welcome to MatFlow\u2019s documentation!", "Installation", "matflow", "matflow.Action", "matflow.ActionEnvironment", "matflow.ActionRule", "matflow.ActionScope", "matflow.ActionScopeType", "matflow.Command", "matflow.CommandFilesList", "matflow.DirectPosix", "matflow.DirectWindows", "matflow.Element", "matflow.ElementAction", "matflow.ElementActionRun", "matflow.ElementFilter", "matflow.ElementGroup", "matflow.ElementInputFiles", "matflow.ElementInputs", "matflow.ElementIteration", "matflow.ElementOutputFiles", "matflow.ElementOutputs", "matflow.ElementParameter", "matflow.ElementPropagation", "matflow.ElementRepeats", "matflow.ElementResources", "matflow.ElementSet", "matflow.Elements", "matflow.Environment", "matflow.EnvironmentsList", "matflow.Executable", "matflow.ExecutableInstance", "matflow.ExecutablesList", "matflow.Executor", "matflow.FileNameExt", "matflow.FileNameSpec", "matflow.FileNameStem", "matflow.FileSpec", "matflow.GroupList", "matflow.InputFile", "matflow.InputFileGenerator", "matflow.InputFileGeneratorSource", "matflow.InputSource", "matflow.InputSourceType", "matflow.InputValue", "matflow.Jobscript", "matflow.JobscriptBlock", "matflow.Loop", "matflow.MetaTask", "matflow.MetaTaskSchema", "matflow.MultiPathSequence", "matflow.NumCores", "matflow.OutputFileParser", "matflow.OutputFileParserSource", "matflow.OutputLabel", "matflow.Parameter", "matflow.ParameterPath", "matflow.ParameterPropagationMode", "matflow.ParameterValue", "matflow.Parameters", "matflow.ParametersList", "matflow.QueuedScheduler", "matflow.ResourceList", "matflow.ResourceSpec", "matflow.Rule", "matflow.RunDirAppFiles", "matflow.SGEPosix", "matflow.SchemaInput", "matflow.SchemaOutput", "matflow.SchemaParameter", "matflow.SlurmPosix", "matflow.SubParameter", "matflow.Submission", "matflow.Task", "matflow.TaskInputParameters", "matflow.TaskList", "matflow.TaskObjective", "matflow.TaskOutputParameters", "matflow.TaskSchema", "matflow.TaskSchemasList", "matflow.TaskSourceType", "matflow.TaskTemplateList", "matflow.ValuePerturbation", "matflow.ValueSequence", "matflow.Workflow", "matflow.WorkflowBlueprint", "matflow.WorkflowLoop", "matflow.WorkflowLoopList", "matflow.WorkflowTask", "matflow.WorkflowTaskList", "matflow.WorkflowTemplate", "matflow.app", "matflow.cancel", "matflow.cli", "matflow.get_OS_info", "matflow.get_known_submissions", "matflow.get_shell_info", "matflow.make_and_submit_demo_workflow", "matflow.make_and_submit_workflow", "matflow.make_demo_workflow", "matflow.make_workflow", "matflow.param_classes", "matflow.param_classes.load", "matflow.param_classes.load.LoadCase", "matflow.param_classes.load.LoadStep", "matflow.param_classes.load.StrainRateMode", "matflow.param_classes.orientations", "matflow.param_classes.orientations.EulerDefinition", "matflow.param_classes.orientations.LatticeDirection", "matflow.param_classes.orientations.OrientationRepresentation", "matflow.param_classes.orientations.OrientationRepresentationType", "matflow.param_classes.orientations.Orientations", "matflow.param_classes.orientations.QuatOrder", "matflow.param_classes.orientations.UnitCellAlignment", "matflow.param_classes.seeds", "matflow.param_classes.seeds.MicrostructureSeeds", "matflow.param_classes.single_crystal_parameters", "matflow.param_classes.single_crystal_parameters.Perturbation", "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters", "matflow.param_classes.utils", "matflow.param_classes.utils.masked_array_from_list", "matflow.run_hpcflow_tests", "matflow.run_tests", "matflow.show", "matflow.show_legend", "matflow.submit_workflow", "matflow.tests", "matflow.tests.conftest", "matflow.tests.conftest.load_case_1", "matflow.tests.conftest.new_null_config", "matflow.tests.conftest.null_config", "matflow.tests.conftest.orientations_1", "matflow.tests.conftest.orientations_2", "matflow.tests.conftest.pytest_addoption", "matflow.tests.conftest.pytest_collection_modifyitems", "matflow.tests.conftest.pytest_configure", "matflow.tests.conftest.pytest_unconfigure", "matflow.tests.conftest.seeds_1", "matflow.tests.data", "matflow.tests.test_cli", "matflow.tests.test_cli.test_hpcflow_version", "matflow.tests.test_cli.test_version", "matflow.tests.test_utils", "matflow.tests.test_utils.test_masked_array_from_list_1D", "matflow.tests.test_utils.test_masked_array_from_list_1D_masked", "matflow.tests.test_utils.test_masked_array_from_list_2D", "matflow.tests.test_utils.test_masked_array_from_list_2D_masked", "matflow.tests.utils", "Python API", "Command-line interface", "Configuration file", "Glossary", "Reference", "Template components", "Command files", "Environments", "Parameters", "Task schemas", "Demo workflows", "Advanced workflow concepts", "Writing custom workflows", "Common errors", "Getting started", "Demo workflows", "Configuration how-tos", "Environment how-tos", "How-To Guides", "Loops", "Meta-tasks", "Task schema how-tos", "Template components", "Workflow templates how-tos", "Workflow how-tos", "User Guide", "Tutorials", "Jupyter notebooks", "Simulating yield surfaces with DAMASK simulations"], "terms": {"The": [0, 2, 5, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 107, 108, 109, 111, 115, 117, 119, 121, 122, 153, 154, 155, 160, 162, 163, 164, 165, 168, 169, 172, 180], "can": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 18, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 91, 93, 94, 153, 154, 155, 162, 163, 164, 165, 167, 168, 169, 171, 172, 175, 176], "linux": [0, 3, 5], "maco": [0, 3], "window": [0, 3, 15, 49, 67, 76, 153], "through": [0, 71, 170], "termin": [0, 16, 23, 51, 88, 90, 162], "shell": [0, 1, 2, 7, 12, 14, 15, 18, 23, 29, 49, 65, 67, 69, 70, 74, 76, 88, 100, 154, 162, 172], "prompt": 0, "open": [0, 1, 4, 5, 163, 164], "past": 0, "command": [0, 2, 4, 5, 7, 9, 13, 14, 15, 18, 32, 35, 37, 49, 53, 65, 69, 70, 74, 76, 82, 88, 97, 101, 102, 117, 128, 156, 157, 162, 163, 164, 167, 168, 169, 171, 172], "shown": [0, 153, 167], "below": [0, 1, 2, 163, 164, 168, 169, 172], "press": 0, "enter": [0, 32], "touch": 0, "tmp": [0, 76], "sh": [0, 2, 5, 70], "curl": 0, "fssl": 0, "http": [0, 2, 70, 74, 115, 116, 155, 162, 165, 176], "raw": 0, "githubusercont": 0, "com": [0, 1, 74, 115], "hpcflow": [0, 2, 3, 7, 16, 17, 18, 19, 23, 28, 30, 51, 77, 88, 90, 92, 125, 156, 165, 174], "main": [0, 10, 11, 75, 76, 162, 163, 165], "src": 0, "bash": [0, 2, 153, 154], "prereleas": 0, "path": [0, 1, 2, 5, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 23, 26, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 101, 102, 103, 104, 115, 119, 121, 129, 133, 134, 154, 161, 162, 163, 164, 167, 168, 172, 176, 180], "univlink": 0, "rm": [0, 1, 2], "powershel": [0, 153, 154], "scriptblock": 0, "creat": [0, 1, 2, 5, 16, 56, 69, 88, 90, 92, 101, 102, 103, 104, 115, 121, 122, 153, 155, 160, 163, 164, 165, 167], "new": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "object": [0, 7, 8, 9, 10, 12, 13, 16, 19, 20, 23, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 103, 104, 105, 107, 115, 121, 132, 135, 136, 141, 153, 162, 163, 164, 169, 171, 172, 173, 174, 176], "net": [0, 70, 116], "webclient": 0, "downloadstr": 0, "ps1": 0, "abov": [0, 2, 163, 165, 167, 171, 172], "from": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180], "github": [0, 1, 2, 5, 155, 165, 175], "repositori": [0, 155, 175], "run": [0, 1, 2, 5, 7, 12, 14, 15, 16, 17, 18, 23, 29, 32, 34, 37, 44, 49, 50, 56, 65, 67, 68, 69, 70, 74, 76, 88, 97, 125, 126, 127, 155, 159, 162, 163, 164, 165, 166, 167, 168, 171, 177], "follow": [0, 1, 121, 153, 154, 167, 168, 171, 175], "It": [0, 4, 29, 154, 163, 164], "latest": [0, 2, 16, 155, 169], "version": [0, 1, 2, 5, 14, 15, 26, 49, 53, 65, 66, 70, 74, 82, 95, 153, 154, 155, 165, 168, 170, 177], "zip": [0, 88, 154, 163, 176], "archiv": [0, 154, 176], "singl": [0, 48, 49, 66, 71, 77, 88, 92, 107, 108, 120, 121, 122, 153, 160, 162, 172, 176], "folder": [0, 1, 2], "i": [0, 1, 2, 4, 5, 7, 8, 9, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 48, 49, 51, 53, 54, 56, 57, 61, 63, 65, 66, 67, 70, 71, 72, 74, 75, 76, 77, 80, 82, 86, 87, 88, 90, 92, 101, 102, 103, 104, 105, 107, 108, 113, 114, 115, 121, 125, 154, 155, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 176, 180], "extract": [0, 7, 62, 70, 74, 107, 108, 113, 115, 117, 119, 122, 162], "place": [0, 5], "an": [0, 2, 4, 7, 8, 9, 10, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 107, 108, 113, 115, 117, 119, 121, 122, 129, 135, 136, 153, 154, 155, 160, 161, 162, 163, 164, 166, 169, 172, 175, 176, 177, 180], "access": [0, 13, 18, 33, 36, 42, 64, 66, 79, 83, 85, 91, 93, 108, 162, 164], "locat": [0, 153, 160, 162, 168], "depend": [0, 3, 16, 18, 23, 29, 30, 49, 50, 67, 88, 90, 92, 94, 153, 155, 164, 165, 169, 171, 180], "oper": [0, 35, 98, 100, 153, 160], "system": [0, 4, 14, 29, 49, 65, 67, 98, 100, 153, 155, 159], "In": [0, 2, 49, 121, 162, 163, 164, 165, 168, 169, 171, 172, 173, 176], "local": [0, 4, 16, 18, 23, 30, 46, 47, 77, 88, 92, 153, 154, 171, 176], "share": [0, 4, 7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94, 155], "librari": [0, 155], "applic": [0, 2, 7, 18, 23, 26, 34, 49, 153, 155, 169], "support": [0, 4, 7, 14, 15, 29, 35, 49, 55, 65, 70, 74, 88, 100, 101, 102, 108, 129, 153, 162, 176], "usernam": 0, "appdata": 0, "A": [0, 5, 9, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 33, 34, 35, 36, 41, 42, 48, 49, 50, 51, 53, 54, 55, 59, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 107, 108, 112, 113, 115, 117, 121, 132, 141, 154, 155, 160, 162, 163, 164, 167, 169, 170, 172, 177], "symbol": [0, 109], "link": [0, 4, 163], "alia": [0, 49, 153], "point": [0, 1, 5, 154, 160, 162, 163, 169, 180], "file": [0, 1, 2, 4, 5, 7, 10, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 29, 30, 38, 39, 40, 41, 43, 44, 45, 49, 50, 56, 57, 59, 65, 67, 69, 70, 74, 76, 77, 87, 88, 92, 94, 99, 101, 102, 103, 104, 115, 119, 127, 136, 156, 157, 160, 161, 162, 165, 166, 167, 169, 170, 172, 175, 176, 177], "allow": [0, 4, 5, 30, 44, 56, 71, 77, 88, 101, 102, 115, 119, 129, 153, 155, 172], "simpl": [0, 4, 87, 162, 169, 170, 177], "ad": [0, 27, 48, 66, 88, 90, 92], "bashrc": [0, 2], "zshrc": 0, "profil": 0, "ani": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 101, 102, 103, 104, 107, 108, 113, 115, 117, 119, 122, 153, 155, 162, 163, 164, 168, 169, 172], "If": [0, 1, 5, 7, 12, 13, 16, 18, 20, 21, 22, 23, 24, 25, 29, 30, 33, 34, 36, 39, 42, 46, 49, 64, 65, 66, 67, 68, 70, 71, 74, 77, 79, 83, 85, 87, 88, 90, 92, 94, 99, 100, 101, 102, 103, 104, 108, 119, 121, 127, 129, 153, 154, 155, 163, 164, 165, 168, 169, 171, 176], "detect": 0, "try": [0, 1, 18, 74, 92], "alreadi": [0, 43, 66, 88, 101, 102, 103, 104, 153, 163], "stop": [0, 5, 37, 44, 51, 54, 55, 87, 162, 169], "exit": [0, 18, 88, 153], "you": [0, 1, 5, 155, 162, 163, 164, 165, 167, 168, 169, 170, 171, 176], "ar": [0, 1, 2, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 23, 29, 30, 33, 34, 36, 42, 43, 45, 48, 49, 50, 51, 53, 56, 57, 63, 64, 69, 70, 71, 74, 76, 77, 79, 82, 83, 85, 87, 88, 89, 90, 92, 94, 99, 101, 102, 103, 104, 105, 107, 108, 113, 115, 116, 119, 121, 127, 128, 129, 153, 154, 155, 160, 162, 163, 164, 169, 171, 172, 176], "hpc": [0, 1, 4, 5, 70, 156], "resourc": [0, 2, 14, 15, 18, 23, 29, 30, 49, 65, 66, 67, 70, 74, 77, 87, 88, 92, 94, 153, 155, 161, 162, 166, 169, 172, 177], "check": [0, 9, 30, 46, 68, 77, 88, 90, 92, 115, 153, 161, 166, 177], "connect": 0, "internet": 0, "first": [0, 1, 5, 30, 49, 76, 77, 90, 108, 116, 121, 153, 160, 162, 163, 166, 167, 168, 169, 171, 172, 180], "might": [0, 14, 15, 160, 163, 164, 165, 167, 168, 169], "need": [0, 1, 5, 29, 44, 76, 77, 155, 159, 162, 163, 164, 168, 172], "load": [0, 2, 5, 7, 53, 69, 77, 82, 88, 94, 115, 119, 132, 155, 158, 161, 162, 163, 164, 165, 168, 170, 177], "proxi": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "exampl": [0, 3, 4, 5, 7, 23, 46, 71, 89, 107, 108, 153, 154, 160, 163, 165, 166, 169, 170, 171, 175, 177], "avail": [0, 5, 77, 125, 153, 154, 163, 169, 172], "two": [0, 2, 5, 7, 23, 90, 108, 155, 163, 169, 171, 172], "format": [0, 7, 18, 39, 53, 65, 70, 74, 82, 88, 94, 101, 102, 103, 104, 153, 155, 162, 164, 169, 172, 175, 176], "correspond": [0, 7, 18, 30, 54, 76, 92, 107, 108, 115, 119, 121, 155, 169, 172], "differ": [0, 7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 91, 93, 94, 155, 162, 163, 164, 169, 171, 172], "pyinstal": 0, "gener": [0, 2, 7, 10, 16, 18, 44, 45, 49, 54, 59, 66, 68, 76, 77, 87, 88, 90, 94, 101, 102, 103, 104, 108, 115, 117, 119, 124, 132, 135, 136, 141, 153, 154, 161, 162, 164, 166, 167, 169, 170, 177, 180], "execut": [0, 2, 5, 7, 12, 16, 18, 23, 29, 32, 35, 36, 37, 49, 50, 53, 55, 67, 76, 82, 88, 94, 96, 101, 102, 129, 154, 155, 161, 163, 164, 169], "contain": [0, 2, 7, 8, 9, 10, 12, 13, 16, 18, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 101, 102, 104, 105, 119, 124, 153, 154, 162, 163, 164], "everyth": [0, 1, 155], "click": [0, 1, 153], "your": [0, 1, 5, 155, 162, 163, 164, 166, 167, 168, 177], "platform": 0, "executablematflow": 0, "v0": 0, "3": [0, 1, 2, 5, 11, 26, 47, 95, 99, 108, 112, 127, 154, 160, 161, 162, 164, 165, 169, 180], "0a161": [0, 5, 26, 95, 154], "linuxlinux": 0, "foldermatflow": 0, "dir": [0, 2], "zipmaco": 0, "macosmaco": 0, "zipwindow": 0, "win": 0, "ex": [0, 2, 161, 169], "home": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "runner": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "work": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "convent": [1, 111, 117, 174], "commit": [1, 49, 88], "git": [1, 2], "see": [1, 4, 17, 18, 23, 49, 107, 155, 160, 162, 163, 164, 165, 168, 174, 176], "ssh": [1, 176], "make": [1, 5, 7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 101, 103, 108, 113, 155, 160, 162, 163, 168, 176], "sure": [1, 155], "switch": [1, 2, 65, 70, 74], "branch": 1, "thi": [1, 2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 101, 102, 103, 104, 105, 107, 108, 109, 113, 115, 117, 119, 121, 122, 125, 129, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 180], "protect": 1, "so": [1, 5, 7, 88, 101, 102, 103, 104, 153, 155, 160, 162, 163, 164, 165, 169, 172], "featur": [1, 88, 101, 102, 129, 153], "befor": [1, 5, 7, 9, 18, 23, 88, 163, 168], "push": 1, "should": [1, 16, 18, 27, 29, 48, 51, 53, 56, 58, 67, 71, 77, 82, 88, 90, 101, 102, 103, 104, 108, 153, 154, 155, 160, 162, 163, 164, 165, 167, 169, 171, 172], "abl": 1, "simpli": [1, 7, 71, 171], "flow": 1, "take": [1, 18, 69, 88, 171], "care": 1, "some": [1, 5, 7, 14, 15, 17, 30, 35, 54, 88, 115, 155, 163, 164, 165, 167, 171], "reason": 1, "fail": [1, 74, 88, 168, 180], "delet": [1, 7, 65, 88, 153], "virtualenv": 1, "find": [1, 2, 7, 9, 53, 75, 82, 88, 92, 164, 180], "us": [1, 2, 4, 7, 16, 18, 19, 20, 23, 29, 30, 32, 35, 39, 45, 46, 48, 49, 53, 54, 56, 57, 59, 63, 65, 67, 68, 70, 71, 74, 76, 77, 82, 87, 88, 90, 94, 101, 102, 103, 104, 108, 111, 113, 115, 116, 117, 119, 122, 129, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 173, 175, 176, 177, 180], "env": [1, 2, 5, 12, 37, 169], "info": [1, 49, 53, 82, 88, 101, 102, 103, 104, 154, 165, 173], "remov": [1, 49, 56, 99, 121, 127, 153, 168], "virtual": [1, 5, 88, 156, 159], "environ": [1, 3, 4, 7, 8, 12, 18, 29, 30, 33, 34, 36, 44, 49, 53, 56, 67, 76, 77, 82, 94, 153, 156, 157, 161, 163, 164, 167, 168, 170, 177], "10": [1, 2, 87, 153, 162, 163], "6": [1, 2, 5, 160, 161, 162, 165], "clear": [1, 121, 163, 165, 170, 177], "all": [1, 2, 7, 13, 14, 15, 16, 18, 23, 29, 30, 33, 36, 42, 49, 70, 71, 74, 76, 77, 78, 79, 81, 83, 85, 88, 91, 92, 93, 94, 101, 102, 115, 121, 129, 160, 162, 163, 164, 169, 172, 180], "cach": [1, 43, 88, 90, 180], "list": [1, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 101, 102, 105, 107, 108, 113, 115, 116, 117, 119, 121, 122, 124, 129, 138, 154, 155, 160, 162, 163, 164, 167, 168, 169, 172, 180], "pypi": [1, 5], "reinstal": 1, "enviro": 1, "interact": [1, 2, 29, 153, 155, 163, 164, 168], "call": [1, 7, 12, 105, 164, 165, 168, 171, 172], "python3": 1, "help": [1, 18, 116, 153, 155, 166, 170], "To": [1, 153, 160, 163, 164, 169, 172], "immedi": [1, 56, 88, 101, 102, 153], "chang": [1, 18, 30, 88, 168, 169], "reflect": 1, "reconfigur": 1, "copi": [1, 30, 67, 77, 88, 115, 121, 122, 155, 162, 164, 167, 168], "do": [1, 2, 49, 51, 92, 99, 103, 104, 127, 153, 160, 163, 165, 169, 171, 172], "add": [1, 2, 13, 33, 36, 42, 64, 66, 77, 79, 83, 85, 88, 90, 91, 92, 93, 101, 102, 103, 104, 160, 161, 162, 164, 169], "edit": 1, "updat": [1, 65, 70, 74, 99, 121, 127, 162, 165, 168, 172, 180], "doe": [1, 7, 18, 21, 22, 24, 25, 39, 46, 67, 68, 71, 88, 101, 102, 103, 104, 121, 129, 153, 162, 164, 168, 172], "manual": 1, "modifi": [1, 5, 7, 18, 67, 77, 153, 162, 164, 168, 171, 172], "pyproject": 1, "toml": 1, "replac": 1, "new2": [1, 165], "0": [1, 2, 5, 11, 26, 47, 61, 71, 74, 84, 86, 87, 88, 95, 109, 111, 112, 114, 115, 116, 119, 135, 160, 161, 162, 163, 165, 171, 180], "2": [1, 5, 11, 47, 61, 70, 74, 84, 94, 108, 109, 112, 121, 160, 161, 162, 163, 164, 165, 169, 171, 172, 180], "0a14": 1, "true": [1, 2, 7, 9, 12, 13, 16, 18, 23, 29, 30, 33, 36, 39, 42, 43, 44, 48, 49, 53, 54, 56, 64, 66, 68, 71, 76, 77, 79, 82, 83, 85, 87, 88, 92, 94, 96, 99, 100, 101, 102, 103, 104, 127, 129, 153, 161, 162, 169, 180], "Then": [1, 162, 163], "accordingli": [1, 164], "lock": 1, "re": [1, 30, 77, 163], "There": [2, 5, 163, 164, 172, 176], "wai": [2, 5, 65, 66, 70, 74, 155, 164, 165, 167, 169, 171, 172], "task": [2, 5, 7, 10, 16, 17, 18, 23, 26, 27, 29, 30, 31, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 63, 67, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 101, 102, 129, 135, 136, 156, 157, 162, 166, 170, 171, 177, 180], "mtex": [2, 5, 117, 158, 159, 160, 161, 162, 164], "script": [2, 4, 7, 18, 29, 44, 49, 56, 65, 67, 76, 88, 153, 161, 162, 163, 164], "either": [2, 4, 16, 23, 87, 88, 92, 94, 102, 104, 108, 121, 153, 162, 163, 167], "compil": [2, 5, 161, 162], "directli": [2, 5, 7, 18, 49, 54, 59, 77, 87, 108, 115, 162, 163, 164], "control": [2, 5, 18, 65, 70, 71, 74, 158, 160, 163, 168, 169, 176], "input": [2, 7, 10, 12, 16, 17, 18, 21, 22, 23, 24, 25, 27, 30, 43, 44, 45, 46, 47, 48, 51, 53, 54, 56, 57, 58, 67, 71, 72, 77, 78, 82, 84, 86, 87, 88, 92, 155, 160, 161, 162, 164, 166, 169, 171, 172, 173, 180], "paramet": [2, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 107, 108, 113, 115, 117, 119, 120, 122, 124, 125, 126, 127, 129, 133, 134, 137, 138, 139, 140, 141, 155, 156, 157, 161, 162, 163, 164, 169, 170, 171, 172, 173, 177, 180], "which": [2, 4, 5, 7, 16, 18, 20, 21, 22, 24, 25, 26, 29, 30, 44, 46, 48, 49, 51, 53, 60, 67, 71, 76, 77, 82, 87, 88, 90, 92, 94, 96, 101, 102, 103, 104, 105, 107, 108, 116, 153, 154, 160, 162, 163, 164, 165, 167, 168, 169, 172, 180], "fals": [2, 5, 7, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 29, 30, 33, 36, 39, 42, 44, 49, 56, 59, 63, 64, 66, 68, 71, 76, 77, 79, 83, 85, 88, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 113, 127, 129, 153, 161, 162, 180], "default": [2, 5, 7, 16, 17, 18, 23, 29, 30, 46, 47, 53, 55, 63, 64, 65, 67, 70, 71, 74, 77, 82, 88, 92, 94, 96, 101, 102, 108, 115, 117, 119, 121, 129, 153, 156, 159, 160, 162, 169, 170, 171], "when": [2, 7, 12, 18, 39, 45, 46, 49, 54, 57, 63, 67, 74, 88, 94, 101, 102, 103, 104, 153, 160, 164, 168, 169, 171, 172, 180], "run_mtex": [2, 5, 161], "must": [2, 5, 7, 9, 18, 44, 50, 54, 56, 66, 68, 71, 77, 154, 160, 162, 163, 168, 169, 171, 172, 174], "defin": [2, 5, 16, 18, 21, 22, 23, 24, 25, 30, 51, 53, 71, 77, 82, 88, 90, 92, 105, 155, 160, 161, 162, 163, 164, 171, 172], "compile_mtex": [2, 5, 161], "run_compiled_mtex": [2, 5, 161], "exectu": 2, "both": [2, 5, 87, 108, 163, 164], "fine": 2, "mean": [2, 71, 87, 88, 108, 171, 174, 180], "For": [2, 4, 7, 17, 18, 23, 71, 77, 78, 81, 88, 89, 113, 115, 119, 153, 159, 160, 162, 163, 164, 167, 169, 172, 175, 176], "direct": [2, 14, 15, 49, 65, 70, 74, 76, 88, 101, 102, 108, 112, 117, 129, 153, 154, 160, 161, 162, 164, 169, 180], "matlab": [2, 5, 159, 164], "batch": [2, 5, 74, 88, 165], "document": [2, 8, 9, 32, 41, 53, 82, 94, 107, 153, 155, 168, 176], "here": [2, 88, 154, 155, 160, 163, 164, 165, 169], "note": [2, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94, 162, 164, 167, 168, 169, 171, 172], "requir": [2, 5, 7, 8, 9, 10, 12, 13, 18, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 91, 93, 94, 119, 153, 155, 162, 163, 165, 166, 169, 172], "instal": [2, 3, 4, 119, 155, 165, 167], "perform": [2, 14, 15, 51, 65, 70, 74, 155], "via": [2, 5, 7, 18, 41, 77, 88, 115, 119, 162, 163, 164, 169, 172, 176], "explor": [2, 5, 153], "within": [2, 7, 8, 12, 16, 18, 23, 43, 48, 49, 50, 53, 59, 69, 71, 75, 76, 77, 82, 88, 90, 92, 153, 154, 155, 163, 164, 168, 170, 172], "gui": [2, 162], "todo": [2, 176, 180], "current": [2, 5, 7, 49, 65, 67, 70, 74, 88, 92, 101, 102, 103, 104, 108, 153, 154, 162, 167, 168], "test": [2, 7, 9, 14, 15, 44, 56, 65, 67, 68, 70, 74, 88, 101, 102, 117, 125, 126, 159, 161, 162, 167], "onli": [2, 7, 16, 18, 23, 30, 43, 45, 49, 53, 57, 76, 77, 82, 87, 88, 99, 101, 102, 107, 108, 125, 129, 153, 162, 163, 168, 169, 171], "name": [2, 5, 7, 9, 11, 12, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 29, 32, 33, 34, 38, 39, 40, 41, 42, 43, 45, 47, 49, 51, 53, 54, 56, 57, 58, 61, 65, 67, 69, 70, 71, 74, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 108, 109, 111, 112, 114, 116, 153, 154, 155, 160, 162, 163, 164, 168, 170, 171, 172, 176, 177, 180], "label": [2, 5, 7, 12, 13, 17, 18, 21, 22, 23, 24, 25, 34, 36, 41, 48, 53, 54, 58, 71, 77, 82, 87, 119, 154, 155, 160, 162, 163, 164, 169], "instanc": [2, 5, 7, 8, 9, 10, 12, 13, 17, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 92, 93, 94, 99, 108, 153, 160, 163, 169, 176], "c": [2, 112, 115, 162], "addpath": 2, "script_dir": 2, "script_name_no_ext": [2, 5], "arg": [2, 5, 39, 65, 70, 74, 125, 126, 153, 160, 162], "num_cor": [2, 5, 14, 15, 29, 34, 35, 65, 67, 70, 74, 94, 154, 162, 163, 169, 172], "1": [2, 5, 11, 13, 16, 17, 23, 33, 36, 42, 47, 49, 54, 55, 61, 64, 66, 70, 74, 79, 83, 84, 85, 86, 87, 88, 91, 93, 108, 109, 111, 112, 114, 116, 136, 160, 161, 162, 163, 164, 165, 169, 171, 172, 180], "parallel_mod": [2, 5, 29, 34, 35, 67, 154, 169], "null": [2, 5, 71, 169], "mtex_path": 2, "mcc": 2, "bat": 2, "r": [2, 70, 153, 162, 163, 164, 180], "singlecompthread": [2, 5], "m": [2, 161, 162, 172], "script_path": [2, 7], "o": [2, 29, 38, 40, 41, 49, 67, 153, 162], "matlab_ex": 2, "data": [2, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 23, 26, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 107, 108, 113, 115, 117, 119, 122, 136, 154, 155, 158, 160, 161, 162, 163, 164, 165, 172, 180], "plot": [2, 119], "plotting_tool": 2, "color": 2, "mat": [2, 162], "setup": [2, 5, 32, 153], "set": [2, 5, 12, 16, 18, 23, 26, 27, 29, 30, 48, 54, 66, 67, 68, 70, 71, 77, 88, 92, 94, 99, 101, 102, 121, 129, 154, 155, 159, 160, 162, 163, 164, 165, 169, 170, 177, 180], "up": [2, 18, 23, 29, 32, 59, 60, 67, 68, 77, 88, 90, 92, 153, 164, 165, 180], "e": [2, 7, 18, 30, 48, 49, 67, 71, 94, 121, 153, 160, 162, 163, 164, 165, 169, 172, 174, 180], "g": [2, 7, 18, 94, 153, 160, 161, 162, 163, 164, 165, 169, 172, 180], "mtex_dir": 2, "type": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 122, 124, 125, 126, 127, 128, 129, 132, 135, 136, 141, 153, 154, 160, 162, 163, 164, 169, 172, 174], "d": [2, 70, 121], "grep": 2, "v": [2, 51, 121, 153, 162], "privat": 2, "matlabpath": 2, "done": [2, 5, 76, 88, 108, 163, 164, 168], "export": [2, 5], "softwareopengl": 2, "makedoc": 2, "templat": [2, 4, 5, 18, 23, 30, 39, 51, 53, 66, 67, 77, 82, 85, 88, 89, 90, 92, 94, 101, 102, 103, 104, 153, 156, 162, 164, 165, 168, 170, 171, 172, 177, 180], "nfft_openmp": 2, "compat": [2, 34, 71, 88, 99, 153, 172], "mtex_includ": 2, "matlab_runtim": 2, "runtim": [2, 180], "run_matlab_ex": 2, "dream_3d_runn": [2, 5, 161], "pipelin": [2, 155, 158, 161, 162], "process": [2, 10, 11, 12, 14, 15, 49, 65, 70, 74, 76, 88, 99, 155, 160, 162, 163, 164], "json": [2, 7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 91, 93, 94, 99, 101, 102, 103, 104, 107, 108, 113, 115, 117, 119, 122, 153, 154, 161, 162, 163, 164, 172, 176], "python_script": [2, 5, 161, 163, 164, 169], "python": [2, 3, 4, 5, 7, 18, 29, 39, 67, 80, 153, 154, 155, 156, 159, 162, 163, 164, 168, 170, 173, 174, 176], "dream3d": [2, 5, 116], "directori": [2, 7, 16, 18, 38, 39, 40, 41, 44, 49, 56, 69, 70, 74, 76, 77, 88, 92, 101, 102, 103, 104, 153, 154, 162, 163, 164, 167, 169], "bin": [2, 5], "pipelinerunn": [2, 5, 162], "includ": [2, 9, 16, 18, 23, 30, 49, 53, 69, 76, 77, 82, 87, 88, 94, 99, 101, 102, 103, 104, 122, 129, 153, 155, 160, 162, 164, 168, 169, 172, 174], "defdap": [2, 156, 159, 161], "93": [2, 162], "4": [2, 5, 11, 112, 115, 162, 164, 165, 169], "numpi": [2, 76, 87, 88, 101, 102, 103, 104, 108, 115, 153, 159, 165, 180], "23": 2, "5": [2, 5, 74, 112, 160, 162], "we": [2, 30, 54, 65, 70, 74, 88, 115, 153, 155, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 176], "our": 2, "cento": 2, "docker": [2, 5], "imag": [2, 5, 158, 160, 161, 180], "org": [2, 70, 74, 155, 162, 176], "produc": [2, 7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94, 162], "relocat": 2, "conda": 2, "matflow": [2, 3, 5, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "pack": [2, 59], "becaus": [2, 18, 71, 88, 101, 102, 103, 104, 105, 153, 155, 163, 169, 172], "glibc": 2, "miniconda": 2, "doc": [2, 9, 32, 41, 53, 68, 82, 94, 153, 155], "io": [2, 155, 165], "project": [2, 165], "en": [2, 155], "user": [2, 4, 5, 14, 15, 44, 59, 70, 74, 108, 165, 166, 169, 176], "guid": [2, 4], "html": [2, 53, 70, 82, 115, 155], "initialis": [2, 23, 30, 71, 77, 92, 115, 119], "init": 2, "reload": [2, 88, 154], "sourc": [2, 3, 4, 5, 7, 16, 18, 27, 30, 43, 45, 46, 47, 48, 53, 56, 57, 67, 71, 77, 82, 84, 86, 87, 88, 92, 168, 171, 175], "pars": [2, 14, 15, 18, 46, 56, 57, 65, 77, 88, 101, 102, 103, 104, 153, 156], "n": [2, 5, 162, 180], "matflow_damask_parse_v3a7_env": 2, "libgl": 2, "vtk": 2, "packag": [2, 5, 105, 155, 165], "yum": 2, "mesa": 2, "activ": [2, 4, 5, 49, 76, 99], "pip": [2, 4, 165], "deactiv": 2, "tarbal": 2, "save": [2, 7, 30, 43, 45, 48, 49, 56, 57, 67, 77, 86, 87, 88, 115, 154, 163, 164, 168], "result": [2, 4, 7, 8, 9, 10, 12, 13, 18, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 108, 160, 162, 163, 164, 180], "compress": [2, 155, 162], "outsid": 2, "transfer": [2, 161], "target": [2, 49, 108, 162, 163], "machin": [2, 5, 7, 18, 23, 29, 49, 76, 99, 154, 155, 168, 169], "On": [2, 71], "unpack": [2, 165], "mkdir": 2, "tar": 2, "xzf": 2, "gz": 2, "now": [2, 99, 160, 169], "normal": [2, 53, 54, 55, 59, 82, 87, 108, 153, 160, 163, 172, 180], "index": [2, 4, 7, 13, 16, 17, 18, 23, 30, 33, 36, 42, 48, 49, 50, 64, 65, 66, 76, 77, 79, 83, 85, 86, 88, 90, 91, 92, 93, 109, 111, 129, 135, 136, 153, 160, 171, 180], "manag": [2, 4, 5, 12, 18, 34, 49, 53, 59, 82, 88, 155, 165, 168, 177], "160": [2, 162], "damask_parse_env": [2, 5, 163], "matflow_damask_parse_env": 2, "damask_env": [2, 5, 163], "damask_grid": [2, 5, 161], "volum": [2, 108, 160, 161, 162], "pwd": [2, 161], "wd": 2, "omp_num_thread": 2, "eisenforschung": 2, "grid": [2, 160, 161, 162], "alpha7": [2, 5], "matlab_env": [3, 5], "definit": [3, 46, 113, 119, 155, 163, 164, 169], "dream_3d_env": [3, 5], "defdap_env": [3, 5], "damask_pars": [3, 159, 160], "damask": [3, 5, 107, 117, 156, 158, 159, 160, 161, 162, 177, 179], "contribut": [3, 4, 5], "recommend": [3, 5], "read": [3, 12, 115, 119, 162, 164], "clone": 3, "repo": 3, "poetri": 3, "framework": 4, "comput": [4, 5, 29, 67, 155, 180], "materi": [4, 155, 158, 160, 161, 162, 164, 177], "scienc": [4, 155, 162, 164, 177], "workflow": [4, 5, 7, 12, 16, 18, 23, 30, 39, 41, 43, 45, 46, 48, 49, 50, 51, 53, 56, 57, 59, 62, 63, 66, 67, 71, 76, 77, 82, 86, 87, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 107, 108, 113, 115, 117, 119, 122, 127, 129, 156, 161, 166, 168, 170, 172, 177, 180], "design": [4, 5, 155], "flexibl": 4, "extens": [4, 7, 38, 39, 41, 43, 45, 57, 88, 94], "togeth": [4, 7, 18, 49, 54, 87, 88, 172], "exist": [4, 30, 49, 64, 68, 71, 77, 88, 101, 102, 103, 104, 129, 153, 154, 155, 168, 169, 171], "tool": [4, 155], "anlaysi": 4, "cohes": 4, "deploi": 4, "power": 4, "These": [4, 5, 155, 162, 163, 164, 168, 174], "describ": [4, 5, 12, 53, 82, 118, 160], "form": [4, 7, 53, 82, 88], "yaml": [4, 5, 7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 91, 93, 94, 101, 102, 103, 104, 115, 119, 132, 135, 136, 141, 153, 158, 161, 163, 164, 167, 169, 172, 175, 176], "text": [4, 49, 50, 68, 88, 115, 119, 153], "reus": 4, "reproduc": [4, 155], "wa": [4, 16, 18, 23, 30, 49, 51, 66, 88, 90, 94, 165], "origin": [4, 17, 23, 43, 46, 161, 162], "develop": [4, 5, 88, 164, 165], "adam": 4, "plowman": 4, "research": [4, 162], "univers": [4, 5, 77], "manchest": [4, 5, 74], "clari": 4, "formerli": 4, "lightform": [4, 155], "group": [4, 7, 18, 20, 30, 42, 43, 45, 48, 49, 57, 62, 67, 71, 76, 77, 86, 92, 107, 108, 113, 115, 117, 119, 122, 155, 162, 166, 172, 177, 180], "collabor": 4, "ukaea": 4, "usag": [4, 74, 155], "et": [4, 162], "al": [4, 162], "2023": 4, "altern": [4, 163], "method": [4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 101, 102, 103, 104, 107, 108, 109, 111, 113, 115, 117, 119, 121, 122, 174], "configur": [4, 29, 77, 88, 119, 131, 156, 167, 169, 170, 177], "get": [4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 23, 26, 29, 30, 33, 36, 38, 39, 40, 42, 43, 44, 45, 49, 50, 51, 53, 56, 57, 64, 65, 66, 69, 70, 71, 74, 76, 77, 79, 82, 83, 84, 85, 88, 90, 91, 92, 93, 98, 100, 121, 154, 165, 167, 170, 177, 180], "start": [4, 5, 7, 11, 18, 47, 49, 54, 55, 61, 76, 84, 87, 88, 109, 111, 112, 114, 115, 116, 119, 162, 164, 165, 167, 169, 174, 177], "how": [4, 5, 7, 12, 27, 29, 30, 45, 48, 57, 61, 67, 71, 72, 75, 77, 108, 111, 113, 114, 115, 153, 155, 177], "tutori": [4, 177], "refer": [4, 21, 22, 24, 25, 46, 49, 70, 74, 88, 94, 115, 116, 153, 154, 155, 162, 163, 164, 168, 172, 176, 180], "api": [4, 5, 156, 160, 162, 168, 170, 173], "line": [4, 5, 7, 12, 49, 50, 97, 115, 119, 127, 155, 156, 162, 163, 165], "interfac": [4, 5, 97, 155, 156], "compon": [4, 7, 16, 75, 87, 88, 108, 116, 117, 153, 156, 162, 165, 166, 168, 170, 172, 177], "demo": [4, 101, 103, 136, 154, 156, 166, 177, 180], "glossari": [4, 156], "search": [4, 39], "page": [4, 5], "cli": [5, 153, 156, 162, 168, 176], "option": [5, 7, 14, 15, 18, 41, 48, 53, 56, 58, 65, 66, 68, 70, 71, 74, 82, 92, 108, 153, 154, 155, 160, 162, 163, 165, 166, 168, 169, 176], "beginn": 5, "strongli": 5, "want": [5, 155, 163, 164, 167, 168, 169, 171], "cluster": [5, 156], "comfort": 5, "interest": 5, "simultan": [5, 88, 101, 102, 129, 153], "also": [5, 7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 91, 93, 94, 115, 119, 160, 162, 163, 167, 168, 169, 172, 174], "give": [5, 160, 164], "switcher": 5, "top": [5, 18, 87, 154, 155, 162, 163, 164], "right": [5, 87, 162], "corner": 5, "download": [5, 155], "other": [5, 16, 23, 29, 46, 56, 66, 71, 77, 88, 92, 116, 155, 164, 169, 171, 172, 180], "although": 5, "advanc": [5, 166, 177], "mai": [5, 12, 16, 18, 23, 27, 30, 32, 34, 67, 71, 77, 88, 92, 94, 124, 127, 153, 154, 155, 162, 169, 174], "wish": [5, 163], "one": [5, 7, 18, 23, 30, 51, 54, 59, 65, 66, 68, 71, 77, 87, 88, 90, 92, 101, 102, 103, 104, 108, 153, 155, 160, 162, 163, 164, 167, 169, 171, 172], "config": [5, 53, 82, 88, 94, 138, 139, 140, 156, 163, 165, 170, 177], "detail": [5, 7, 18, 77, 157, 160, 164, 174, 176], "time": [5, 12, 18, 28, 29, 30, 49, 74, 76, 88, 94, 101, 102, 103, 104, 108, 153, 162, 165, 171, 172], "submit": [5, 18, 29, 49, 65, 70, 74, 76, 88, 101, 102, 103, 104, 129, 166, 169, 177], "without": [5, 46, 48, 77, 87, 92, 153, 163, 172], "modif": 5, "person": 5, "howev": [5, 155, 164, 167, 168, 169, 172], "like": [5, 7, 13, 18, 33, 36, 42, 54, 64, 65, 66, 70, 74, 79, 83, 85, 88, 91, 93, 94, 105, 108, 121, 153, 154, 162, 163, 164, 165, 168, 169, 172, 176], "job": [5, 14, 15, 18, 29, 49, 65, 67, 70, 74, 76, 88, 164], "schedul": [5, 14, 15, 23, 29, 49, 65, 67, 70, 74, 76, 88, 99, 101, 102, 129, 154, 155, 163], "multipl": [5, 13, 18, 21, 22, 24, 25, 29, 33, 36, 39, 42, 48, 49, 53, 54, 56, 64, 65, 67, 70, 71, 74, 77, 79, 82, 83, 85, 86, 88, 91, 92, 93, 101, 102, 107, 121, 127, 129, 153, 155, 162, 163, 165, 170, 171, 172, 177], "core": [5, 7, 14, 15, 16, 17, 18, 19, 23, 28, 29, 30, 34, 35, 55, 65, 67, 70, 74, 77, 88, 90, 92, 108, 163, 174], "given": [5, 7, 11, 13, 14, 15, 17, 18, 21, 22, 23, 24, 25, 27, 30, 33, 34, 36, 42, 44, 46, 47, 50, 53, 56, 61, 64, 65, 68, 70, 74, 76, 77, 79, 82, 83, 84, 85, 88, 90, 91, 92, 93, 94, 100, 109, 111, 112, 114, 116, 121, 153, 163, 164, 165, 171], "": [5, 7, 14, 15, 16, 17, 18, 30, 43, 45, 48, 49, 53, 54, 57, 59, 70, 74, 76, 77, 82, 86, 88, 90, 92, 101, 102, 103, 104, 107, 117, 121, 153, 155, 157, 161, 162, 163, 165, 169, 171, 172, 180], "csf": 5, "found": [5, 7, 18, 99, 121, 180], "ha": [5, 7, 18, 21, 22, 23, 24, 25, 49, 71, 107, 121, 153, 155, 161, 163, 164, 167, 169, 172], "concept": [5, 166, 177], "similar": [5, 169], "specif": [5, 7, 14, 15, 18, 23, 29, 35, 38, 40, 41, 53, 65, 67, 70, 74, 82, 86, 92], "softwar": [5, 155, 170, 177], "thei": [5, 54, 76, 77, 90, 155, 164, 172, 174], "environment_sourc": [5, 154, 169], "kei": [5, 7, 13, 18, 32, 33, 36, 42, 50, 53, 64, 65, 70, 71, 74, 76, 77, 79, 82, 83, 85, 92, 99, 107, 121, 153, 154, 158, 160, 162, 163, 166, 169, 172], "onc": [5, 37, 115], "been": [5, 7, 18, 23, 49, 76, 90, 153, 163], "own": [5, 7, 26, 43, 45, 57, 67, 155, 164, 166, 177], "particular": [5, 9, 14, 15, 17, 18, 23, 35, 41, 49, 65, 70, 71, 72, 74, 88, 92, 101, 102, 103, 104, 153, 160, 163, 164, 169], "section": [5, 157, 166], "each": [5, 7, 16, 18, 23, 29, 49, 50, 54, 65, 66, 70, 74, 76, 77, 87, 88, 90, 92, 101, 102, 127, 153, 154, 160, 162, 163, 169, 172, 180], "full": [5, 43, 45, 48, 57, 67, 88, 127, 153, 160, 162, 163, 164], "venv": 5, "script_nam": 5, "32": [5, 162], "formable_env": 5, "mpi": 5, "intel": 5, "18": [5, 165], "openmpi": 5, "img_path": 5, "grid_3": 5, "sif": 5, "hdf5_use_file_lock": 5, "singular": [5, 56], "mpirun": 5, "nslot": 5, "app": [5, 7, 26, 29, 49, 51, 67, 69, 76, 77, 88, 125, 153, 154, 165, 169, 175, 176], "binapp": 5, "r2019a": 5, "third": [5, 108, 162, 172], "parti": 5, "toolbox": 5, "run_": 5, "matlab_hom": 5, "16": [5, 162, 163, 165], "python_env": [5, 163, 164], "171": 5, "x86_64": 5, "attribut": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 169, 174], "function": [6, 18, 49, 76, 123, 125, 131, 143, 146, 151, 153, 154, 160, 161, 162, 163, 164, 169, 176], "class": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 154, 160], "none": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 127, 128, 129, 161, 162, 180], "script_data_in": [7, 164, 169], "script_data_out": [7, 164, 169], "script_data_files_use_opt": 7, "script_ex": [7, 163, 164, 169], "script_pass_env_spec": [7, 44, 56, 169], "abort": [7, 37, 44, 56, 88], "input_file_gener": [7, 10, 11, 161, 163], "output_file_pars": [7, 10, 11, 161, 163], "input_fil": [7, 16, 17, 18, 23, 30, 44, 77, 92, 161, 162, 163, 164], "output_fil": [7, 16, 17, 18, 23, 56, 161], "rule": [7, 9, 12, 19, 20, 28, 44, 46, 51, 56, 58, 174], "save_fil": [7, 56, 163, 164], "clean_up": [7, 56], "requires_dir": [7, 44, 56], "base": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122], "atom": [7, 18], "enact": [7, 8, 16, 17, 18], "iter": [7, 9, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 33, 36, 42, 46, 51, 53, 63, 64, 66, 68, 71, 76, 77, 79, 82, 83, 85, 88, 90, 91, 92, 93, 121, 162, 171], "structur": [7, 8, 9, 10, 12, 13, 18, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 91, 93, 94, 162], "actionenviron": 7, "str": [7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 113, 115, 117, 119, 121, 122, 124, 125, 126, 154, 160, 163, 164], "inform": [7, 17, 18, 23, 27, 49, 50, 53, 70, 76, 82, 88, 90, 92, 94, 98, 99, 100, 110, 119, 127, 129, 153, 160, 170, 177], "about": [7, 17, 18, 23, 49, 53, 70, 82, 92, 98, 99, 100, 127, 153, 170, 176, 177], "output": [7, 10, 12, 14, 15, 16, 17, 18, 23, 24, 25, 29, 46, 49, 53, 56, 57, 58, 65, 67, 70, 71, 72, 74, 76, 77, 81, 82, 84, 88, 90, 92, 127, 128, 153, 155, 158, 160, 161, 162, 164, 166, 167, 169, 171, 172, 173, 180], "bool": [7, 9, 12, 13, 14, 15, 16, 17, 18, 23, 26, 29, 30, 33, 36, 39, 42, 43, 44, 45, 48, 49, 53, 54, 56, 57, 59, 63, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 79, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 108, 113, 115, 119, 127, 129, 160], "pass": [7, 12, 18, 29, 44, 56, 67, 76, 77, 88, 94, 101, 102, 103, 104, 108, 153, 162, 163, 166, 177], "hdf5": [7, 62, 107, 108, 113, 115, 117, 119, 122, 158, 161, 164], "etc": [7, 18, 49, 88, 180], "alwai": [7, 71, 72, 88, 101, 102, 103, 104, 153], "overwritten": [7, 88, 101, 102, 103, 104, 153], "regardless": [7, 88], "its": [7, 23, 30, 49, 53, 77, 82, 90, 92, 168, 169, 171, 172], "initi": [7, 16, 94, 122, 160, 162, 174], "valu": [7, 11, 12, 13, 16, 17, 18, 21, 22, 24, 25, 26, 29, 30, 32, 33, 36, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 53, 54, 57, 59, 61, 62, 63, 64, 65, 66, 70, 71, 74, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 124, 153, 154, 155, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 180], "whether": [7, 12, 14, 15, 16, 18, 23, 26, 29, 30, 39, 43, 44, 45, 48, 49, 50, 53, 56, 57, 59, 63, 65, 67, 70, 71, 72, 74, 76, 77, 82, 86, 88, 94, 96, 102, 113, 129, 160, 167], "inputfilegener": [7, 45], "outputfilepars": [7, 57], "parser": [7, 10, 18, 56, 57, 137, 166, 169], "filespec": [7, 13, 43, 44, 45, 56, 57], "actionrul": [7, 12, 44, 56], "determin": [7, 14, 15, 18, 65, 68, 71, 76, 102, 104, 153, 160], "explicitli": [7, 18, 71, 164], "after": [7, 18, 30, 88, 155, 163, 167], "step": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94, 107, 108, 162, 163], "compose_sourc": 7, "snip_path": 7, "content": [7, 43, 45, 49, 57, 88, 153, 164], "return": [7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 115, 117, 119, 121, 122, 124, 125, 126, 127, 128, 129, 132, 135, 136, 141, 153, 154, 163, 164, 180], "static": [7, 14, 15, 29, 65, 69, 70, 74, 76, 77, 92, 115], "env_spec_from_hash": 7, "env_spec_h": 7, "tupl": [7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 101, 102, 115, 119, 121, 124, 180], "dict": [7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 101, 102, 103, 104, 107, 108, 113, 115, 117, 119, 121, 122, 129, 154, 160, 163], "env_spec_to_hash": 7, "env_spec": [7, 18, 169], "map": [7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 88, 90, 91, 92, 93, 94, 98, 101, 102, 121, 129, 153, 154, 160, 162, 169, 172], "expand": [7, 163], "necessari": [7, 169], "convert": [7, 8, 9, 10, 12, 13, 18, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 91, 93, 94, 176], "sequenc": [7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 99, 101, 102, 107, 162, 166, 172, 177], "classmethod": [7, 8, 9, 10, 12, 13, 14, 15, 19, 20, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 107, 108, 113, 115, 117, 119, 122], "from_json_lik": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94, 115, 119, 160], "json_lik": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94], "shared_data": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94], "jsone": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 55, 57, 58, 59, 60, 64, 66, 67, 68, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 91, 93, 94], "deserialis": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94], "objectlist": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 55, 57, 58, 59, 60, 64, 66, 67, 68, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 91, 93, 94], "jsonabl": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94], "context": [7, 8, 9, 10, 12, 13, 18, 19, 20, 26, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 91, 93, 94], "generate_data_index": 7, "act_idx": 7, "ear_id": [7, 23, 49, 50, 88, 153], "schema_data_idx": 7, "all_data_idx": 7, "param_sourc": 7, "element": [7, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 44, 46, 49, 50, 54, 56, 62, 63, 65, 66, 67, 68, 70, 71, 74, 76, 77, 78, 81, 88, 90, 92, 94, 107, 108, 109, 113, 115, 117, 119, 122, 124, 128, 153, 160, 161, 162, 163, 169, 180], "whose": [7, 13, 18, 33, 36, 42, 48, 53, 64, 71, 77, 79, 82, 83, 85, 88, 90, 92, 124, 153, 154, 160, 180], "overal": [7, 18, 23], "mutat": [7, 14, 15, 65, 70, 74, 92], "int": [7, 13, 14, 15, 16, 17, 18, 23, 28, 29, 30, 33, 34, 35, 36, 37, 42, 43, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 60, 62, 64, 65, 66, 67, 70, 71, 74, 76, 77, 79, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 96, 99, 101, 102, 107, 108, 109, 111, 113, 115, 117, 119, 121, 122, 124, 125, 126, 127, 129, 160, 163, 171, 172, 180], "dataindex": [7, 16, 17, 18, 23, 26, 92], "paramsourc": [7, 16, 17, 18, 23, 43, 45, 48, 53, 57, 67, 82, 86, 87, 88], "get_block_act_idx_shell_var": 7, "jobscript": [7, 14, 15, 18, 29, 50, 65, 67, 69, 70, 74, 76, 88, 101, 102, 128, 129, 163], "block": [7, 18, 49, 50, 88, 101, 102, 153, 162, 163, 169, 172], "idx": [7, 77, 153, 162, 180], "variabl": [7, 12, 18, 65, 70, 74, 88, 94, 101, 102, 103, 104, 153, 154, 163, 166, 172, 177], "substitut": [7, 12, 88, 94, 101, 102, 103, 104, 153], "seem": [7, 116], "agnost": [7, 29], "least": 7, "those": [7, 18, 29, 71, 88, 154, 163, 165, 169, 172], "blockactionkei": [7, 18, 49, 69, 88], "get_command_file_label": 7, "get_command_input_typ": 7, "sub_paramet": [7, 59], "sub": [7, 30, 48, 76, 77, 87, 88, 105, 165, 168, 169, 180], "dot": [7, 13, 33, 36, 42, 46, 48, 64, 79, 83, 85, 91, 92, 93, 153, 164, 167, 180], "delimit": [7, 46, 48, 50, 115, 119, 153, 162], "untouch": 7, "root": 7, "disregard": 7, "part": [7, 16, 18, 23, 26, 48, 59, 76, 87, 90, 163, 172], "get_command_output_typ": 7, "stdout": [7, 12, 14, 15, 18, 65, 70, 74, 88, 161, 163, 169, 171, 172], "stderr": [7, 12, 18, 88, 161], "argument": [7, 10, 12, 18, 29, 30, 39, 48, 66, 67, 70, 71, 74, 88, 94, 101, 102, 103, 104, 107, 108, 153, 160, 163, 164, 165, 169], "get_command_parameter_typ": 7, "appear": [7, 14, 15, 70, 74], "get_commands_action_env": 7, "actual": [7, 12, 18, 35, 39, 43, 45, 57, 155, 164], "get_commands_file_hash": [7, 18], "data_idx": [7, 18, 23, 26], "action_idx": [7, 16, 17, 23, 49, 50], "hash": [7, 13, 14, 15, 18, 29, 33, 36, 42, 59, 64, 65, 70, 74, 79, 83, 85], "have": [7, 14, 15, 18, 23, 29, 53, 54, 66, 76, 82, 90, 153, 155, 160, 163, 164, 165, 168, 169, 172, 176], "same": [7, 18, 23, 30, 43, 45, 49, 57, 65, 70, 74, 77, 88, 92, 155, 162, 163, 164, 170, 171, 172, 177], "stabl": [7, 18, 88, 155, 169], "across": [7, 16, 18, 49, 54, 78, 81, 153], "session": [7, 18, 168], "get_environ": [7, 18], "primari": [7, 160, 162], "get_environment_nam": 7, "get_environment_spec": [7, 18], "envion": 7, "assum": [7, 71, 88, 96, 115, 153], "get_input_file_generator_action_env": 7, "get_input_file_label": 7, "get_input_typ": 7, "consum": 7, "get_output_file_label": 7, "get_output_file_parser_action_env": 7, "get_output_typ": [7, 12], "standard": [7, 12, 14, 15, 18, 29, 43, 49, 65, 67, 69, 70, 74, 76, 88, 131, 153, 158], "error": [7, 12, 14, 15, 29, 49, 65, 67, 69, 70, 74, 76, 88, 153, 154, 158, 166, 177], "get_param_dump_file_path_hdf5": 7, "block_act_kei": [7, 18, 49, 69, 88], "dump": [7, 69, 108, 160, 163, 164], "get_param_dump_file_path_json": 7, "get_param_load_file_path_hdf5": 7, "get_param_load_file_path_json": 7, "get_parameter_depend": [7, 53, 82], "where": [7, 9, 16, 17, 18, 20, 23, 28, 39, 43, 45, 46, 48, 49, 50, 53, 57, 58, 66, 67, 68, 76, 77, 82, 86, 88, 90, 92, 101, 102, 103, 104, 108, 121, 122, 153, 154, 160, 162, 164, 167, 169, 180], "schemaparamet": [7, 53, 82], "parameterdepend": 7, "get_parameter_nam": [7, 17, 18, 23], "prefix": [7, 17, 18, 21, 22, 23, 24, 25, 48, 69, 70, 74, 77, 87], "associ": [7, 17, 18, 21, 22, 23, 24, 25, 26, 30, 48, 50, 69, 71, 76, 77, 88, 92, 94, 109, 153, 160, 169], "would": [7, 23, 54, 105, 163, 164, 167, 169], "p1": [7, 23, 71, 163, 164, 169, 171, 172], "p2": [7, 23, 163, 164, 169, 172], "ignor": [7, 17, 18, 23, 30, 53, 77, 82, 88, 94, 153], "accept": [7, 13, 23, 33, 36, 42, 48, 64, 79, 83, 85], "distinct": [7, 23, 30, 77], "taskschema": [7, 53, 60, 71, 77, 83, 172, 173], "level": [7, 18, 23, 94, 154, 162, 163, 164, 165, 168, 169], "wherea": [7, 23, 116, 162], "schema": [7, 10, 16, 18, 21, 22, 23, 24, 25, 42, 52, 53, 56, 58, 59, 71, 73, 77, 78, 81, 82, 83, 153, 156, 157, 162, 166, 170, 171, 172, 177], "One": [7, 17, 18, 23, 90, 94, 96, 100, 108], "get_possible_scop": 7, "scope": [7, 8, 10, 11, 18, 23, 30, 66, 67, 77, 87, 88, 94, 161, 162, 163, 164, 169], "inclus": 7, "order": [7, 27, 54, 87, 92, 111, 113, 116, 121, 162, 164, 172, 180], "decreas": 7, "sdk": [7, 16, 17, 18, 19, 23, 28, 30, 77, 88, 90, 92, 165, 174], "actionscop": [7, 8, 66, 67], "get_precise_scop": 7, "exact": 7, "prior": [7, 68], "get_required_execut": [7, 12], "get_script_artifact_nam": [7, 18], "ret_specifi": 7, "include_suffix": 7, "specs_suffix_delim": 7, "write": [7, 12, 18, 49, 50, 62, 107, 108, 113, 115, 117, 119, 122, 153, 155, 160, 161, 166, 169, 172, 177], "artifact": [7, 18, 88, 164], "get_script_nam": [7, 18], "snippet": [7, 18, 169, 170], "get_script_determinant_hash": 7, "uniqu": [7, 13, 14, 15, 33, 36, 42, 64, 65, 66, 70, 74, 76, 77, 79, 83, 85, 88, 91, 92, 93], "get_script_determin": 7, "affect": 7, "get_script_input_output_file_command_arg": 7, "get_script_input_output_file_path": 7, "final": [7, 8, 9, 10, 12, 13, 16, 19, 20, 23, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 167, 172], "get_snippet_script_path": 7, "specifi": [7, 14, 15, 16, 18, 20, 23, 29, 30, 32, 40, 44, 48, 51, 56, 66, 67, 68, 70, 71, 74, 76, 77, 87, 88, 90, 92, 94, 101, 102, 103, 104, 108, 121, 153, 154, 160, 162, 163, 164, 165, 170, 172, 176], "get_snippet_script_str": 7, "complet": [7, 14, 15, 37, 74, 88, 90, 101, 102, 129, 153, 167, 172], "properti": [7, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 37, 39, 41, 43, 45, 48, 49, 50, 51, 53, 54, 57, 59, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 82, 86, 87, 88, 90, 92, 107, 108, 109, 111, 119, 122, 173], "is_ifg": 7, "is_ofp": 7, "is_input_type_requir": [7, 77], "typ": [7, 10, 16, 17, 18, 23, 59, 71, 72, 73, 77, 161, 174], "provided_fil": 7, "is_snippet_script": [7, 18], "provid": [7, 10, 18, 30, 51, 53, 59, 64, 68, 77, 82, 88, 121, 127, 153, 154, 155, 162, 168, 169, 171, 172, 175], "string": [7, 10, 18, 43, 45, 46, 48, 49, 53, 57, 67, 71, 76, 77, 82, 88, 94, 101, 102, 103, 104, 108, 153, 154, 160, 169, 172], "repres": [7, 9, 10, 18, 27, 30, 44, 50, 53, 56, 59, 67, 68, 71, 78, 81, 82, 88, 90, 92, 94, 101, 102, 107, 108, 113, 114, 115, 153, 180], "receiv": [7, 18, 163, 169], "process_script_data_format": 7, "scriptdata": 7, "script_data_in_group": 7, "script_data_in_has_direct": 7, "script_data_in_has_fil": 7, "intermedi": 7, "script_data_out_group": 7, "out": [7, 49, 69, 108, 121, 153, 161, 172, 180], "script_data_out_has_direct": 7, "script_data_out_has_fil": 7, "script_is_python_snippet": 7, "task_schema": [7, 71, 163, 164, 172], "came": 7, "test_rul": 7, "element_it": [7, 19, 46, 90], "against": [7, 29, 169], "elementiter": [7, 9, 16, 17, 18, 19, 21, 22, 24, 25, 26, 30, 68, 88, 92], "to_dict": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94, 107, 108, 113, 115, 117, 119, 122], "serial": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94], "dictionari": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94, 107, 108, 113, 115, 117, 119, 121, 122, 160, 163, 164], "to_json_lik": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94], "dct": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94], "exclud": [7, 8, 9, 10, 12, 13, 19, 20, 23, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94, 99, 100, 153], "trivial": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94], "just": [7, 8, 9, 10, 12, 13, 18, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 92, 93, 94, 155, 163, 164, 168], "_jsondeserst": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94], "jsondocu": [7, 8, 9, 10, 12, 13, 19, 20, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 83, 85, 86, 87, 91, 93, 94], "action": [8, 9, 10, 11, 12, 16, 17, 18, 21, 22, 23, 24, 25, 44, 49, 50, 53, 56, 67, 68, 76, 77, 82, 88, 92, 94, 161, 163, 164, 171, 172], "check_exist": [9, 68], "check_miss": [9, 68], "condit": [9, 51, 68, 88, 108, 154, 160, 162], "cast": [9, 48, 68], "appli": [9, 16, 18, 19, 46, 58, 67, 68, 71, 86, 88, 94, 106, 107, 108, 111, 113, 121, 122, 160, 161, 169, 172, 174], "special": [9, 159], "enabl": [9, 56, 65, 70, 74], "present": [9, 18, 34, 121], "absent": [9, 18, 63], "conditionlik": [9, 68], "more": [9, 17, 18, 30, 54, 65, 66, 71, 77, 88, 90, 108, 127, 163, 164, 169, 171, 174, 176], "complex": [9, 29, 108, 115, 119], "guard": 9, "element_iter": [9, 17, 18, 21, 22, 24, 25, 30], "hold": [9, 49], "kwarg": [10, 13, 14, 15, 33, 36, 42, 64, 65, 66, 68, 70, 74, 79, 83, 85, 87, 88, 91, 93, 107, 119], "identif": 10, "subset": [10, 18, 58, 77, 88, 90, 162, 163, 171], "filter": [10, 14, 15, 19, 20, 23, 28, 29, 46, 58, 70, 74, 116, 162], "actionscopetyp": 10, "extra": [10, 164], "keyword": [10, 48, 66, 70, 71, 74, 88, 101, 102, 103, 104, 165], "to_str": [10, 46], "render": [10, 41, 46, 65], "qualnam": [11, 47, 61, 84, 109, 111, 112, 114, 116], "boundari": [11, 47, 61, 84, 108, 109, 111, 112, 114, 116], "enum": [11, 47, 61, 84, 109, 111, 112, 114, 116], "stdin": 12, "factori": [12, 19, 29, 44, 56, 59, 94, 108], "prepar": [12, 18, 49, 62, 107, 108, 113, 115, 117, 119, 122], "state": [12, 14, 15, 18, 49, 65, 67, 70, 74, 76, 128, 153, 162], "elig": 12, "overrid": [12, 70, 153], "get_command_lin": 12, "ear": [12, 16, 17, 18, 21, 22, 23, 24, 25, 49, 50, 76, 88, 92, 128, 153], "resolv": [12, 16, 18, 23, 39, 41, 88, 154, 160], "ordinarili": 12, "write_command": 12, "elementactionrun": [12, 16, 17, 21, 22, 23, 24, 25, 26, 49, 50, 68, 76, 88], "process_std_stream": 12, "descript": [12, 21, 22, 24, 25, 30, 49, 50, 66, 68, 76, 88, 90, 115, 117, 155, 158, 160], "stread": 12, "becom": [12, 169], "later": 12, "thing": [12, 80, 168], "stream": [12, 14, 15, 29, 49, 65, 67, 70, 74, 76, 88, 153], "handl": [12, 30, 39, 41, 65, 101, 102, 129], "_object": [13, 33, 36, 42, 64, 66, 79, 83, 85, 91, 93], "notat": [13, 33, 36, 42, 64, 79, 83, 85, 91, 93, 164], "add_object": [13, 33, 36, 42, 64, 66, 79, 83, 85, 91, 93], "obj": [13, 33, 36, 42, 62, 64, 66, 79, 83, 85, 91, 93, 107, 108, 113, 115, 117, 119, 122], "skip_dupl": [13, 33, 36, 42, 64, 66, 79, 83, 85, 91, 93], "t": [13, 30, 33, 36, 42, 64, 66, 70, 77, 79, 83, 85, 91, 93, 153, 155, 162, 163], "is_hash": [13, 33, 36, 42, 64, 79, 83, 85], "access_attribute_valu": [13, 33, 36, 42, 64, 79, 83, 85, 91, 93], "match": [13, 33, 34, 36, 39, 42, 64, 65, 70, 71, 74, 76, 79, 83, 85, 88, 91, 93, 154, 163, 164, 169], "criteria": [13, 33, 36, 42, 64, 79, 83, 85, 91, 93], "get_al": [13, 33, 36, 42, 64, 66, 79, 83, 85, 91, 93, 154], "list_attr": [13, 33, 36, 42, 64, 79, 83, 85, 91, 93], "constitu": [13, 33, 36, 42, 64, 79, 83, 85, 91, 93], "shebang_execut": [14, 15, 154], "posix": [14, 161], "cancel_job": [14, 15, 65, 70, 74], "js_ref": [14, 15, 65, 70, 74], "cancel": [14, 15, 65, 70, 74, 76, 88, 101, 102, 166, 177], "directref": [14, 15], "get_job_state_info": [14, 15, 65, 70, 74], "queri": [14, 15, 65, 70, 74, 153], "id": [14, 15, 16, 18, 23, 30, 49, 50, 51, 65, 70, 74, 76, 77, 88, 90, 92, 96, 99, 167], "statu": [14, 15, 18, 70, 74, 76, 88, 90, 96, 99, 101, 102, 103, 104, 166, 177], "jobscriptelementst": [14, 15, 49, 65, 70, 74, 76], "get_std_out_err_filenam": [14, 15, 65, 70, 74], "js_idx": [14, 15, 65, 70, 74, 88, 153], "combin": [14, 15, 29, 30, 49, 65, 67, 68, 70, 74, 76, 88, 94, 101, 102, 103, 104, 163, 164, 167], "get_stderr_filenam": [14, 15, 65, 70, 74], "get_stdout_filenam": [14, 15, 65, 70, 74], "get_submit_command": [14, 15, 65, 70, 74], "js_path": [14, 15, 65, 70, 74, 76], "dep": [14, 15, 49, 65, 70, 74], "concret": [14, 15, 17, 30, 34, 53, 82, 88, 94], "submiss": [14, 15, 18, 49, 50, 65, 70, 74, 88, 96, 99, 101, 102, 103, 104, 127, 129, 165, 170, 177], "get_version_info": [14, 15, 65, 70, 74], "versioninfo": [14, 15, 49, 65, 70, 74, 100], "is_jobscript_act": [14, 15, 65, 70, 74], "process_id": [14, 15, 49], "process_cmdlin": [14, 15], "wait": [14, 15, 65, 70, 74, 88, 101, 102, 129], "upstream": [14, 15, 16, 18, 23, 30, 56, 88, 90, 92, 180], "is_num_cores_support": [14, 15, 65, 70, 74], "core_rang": [14, 15, 65, 70, 74], "number": [14, 15, 17, 23, 28, 29, 32, 34, 35, 50, 51, 55, 65, 67, 70, 71, 74, 77, 87, 88, 90, 92, 99, 107, 108, 115, 119, 127, 153, 160, 162, 164, 172, 174], "rang": [14, 15, 54, 55, 65, 70, 74, 87, 180], "parse_submission_output": [14, 15, 65, 70, 74], "process_resourc": [14, 15, 65, 70, 74], "scheduler_config": [14, 15, 65, 70, 74], "schedulerconfigdescriptor": [14, 15, 65, 70, 74], "unique_properti": [14, 15, 65, 70, 74, 76], "wait_for_jobscript": [14, 15, 65, 70, 74], "callback": [14, 15, 153], "until": [14, 15, 88, 101, 102, 153], "callabl": [14, 15], "psutil": [14, 15], "id_": [16, 18, 23, 88], "is_pend": [16, 18, 23], "es_idx": 16, "seq_idx": 16, "src_idx": 16, "iteration_id": 16, "basic": [16, 72, 170, 177], "pend": [16, 18, 23, 65, 70, 74], "workflowtask": [16, 17, 18, 23, 26, 27, 30, 31, 46, 51, 63, 77, 78, 81, 88, 90, 93], "indic": [16, 17, 18, 23, 26, 29, 30, 43, 45, 49, 50, 54, 57, 67, 76, 77, 88, 90, 92, 101, 102, 129, 153, 162, 172, 180], "known": [16, 18, 23, 34, 43, 45, 49, 57, 77, 86, 88, 92, 99, 101, 102, 108, 127, 165, 170, 177, 180], "action_run": [16, 23], "taken": [16, 18, 23, 162], "elementact": [16, 18, 21, 22, 23, 24, 25, 26], "most": [16, 18, 29, 88, 116, 165, 172], "recent": [16, 18, 88, 99, 101, 102, 153, 165, 168], "skip": [16, 18, 23, 29, 67, 88, 90, 115, 119], "due": [16, 18, 23, 88], "loop": [16, 18, 23, 49, 50, 88, 90, 91, 94, 162, 163, 170, 177, 180], "dir_nam": [16, 77, 92], "temporari": [16, 27, 76, 88, 92, 168], "element_set": [16, 27, 30, 66, 67, 77, 92, 162], "elementset": [16, 27, 66, 67, 77, 86, 92], "element_set_idx": 16, "run_idx": [16, 17, 23], "raise_on_miss": [16, 17, 18, 23, 63, 92], "raise_on_unset": [16, 17, 18, 23, 63], "get_ear_depend": [16, 18, 23], "as_object": [16, 18, 23, 30, 92, 180], "get_data_idx": [16, 17, 18, 23], "get_dependent_ear": [16, 18, 23], "get_dependent_element_iter": [16, 23], "get_dependent_el": [16, 23, 92], "get_dependent_elements_recurs": 16, "task_insert_id": [16, 49, 50, 51, 88, 90], "downstream": [16, 18, 23, 27, 29, 67, 71, 88, 90, 92], "recurs": [16, 90], "identifi": [16, 48, 77, 80, 174], "previou": [16, 18, 163, 164, 171], "parametris": [16, 56, 77, 88, 94, 101, 102, 104, 107, 108, 162, 170, 171, 177], "get_dependent_task": [16, 23, 92], "get_element_depend": [16, 23, 92, 180], "get_element_iteration_depend": [16, 23], "get_input_depend": [16, 18, 23], "get_parameter_sourc": [16, 17, 18, 23, 88], "as_str": [16, 17, 18, 23], "use_task_index": [16, 17, 18, 23], "rather": [16, 23, 163], "than": [16, 23, 30, 77, 163, 167], "insert": [16, 23, 49, 50, 51, 77, 88, 90, 92, 121], "get_sequence_valu": 16, "sequence_path": [16, 30], "get_task_depend": [16, 23, 30, 92], "come": [16, 23, 30, 46, 77, 92, 162, 163, 164, 167], "global_idx": 16, "elementinputfil": [16, 17, 18, 23], "input_source_idx": 16, "input_sourc": [16, 27, 30, 71, 77, 92, 162, 164], "inputsourc": [16, 27, 30, 77, 92], "elementinput": [16, 17, 18, 23], "latest_iter": 16, "latest_iteration_non_skip": 16, "elementoutputfil": [16, 17, 18, 23], "elementoutput": [16, 17, 18, 23], "schema_paramet": [16, 23], "sequence_idx": 16, "to_element_set_data": 16, "bound": [16, 54, 63, 73, 90, 92], "inputvalu": [16, 30, 71, 77, 92], "resourcelist": [16, 30, 94], "resourcespec": [16, 66, 94], "abstract": [17, 30, 32, 34, 65], "represent": [17, 59, 113, 114, 115, 162], "model": [17, 23, 158, 160, 161, 162], "num_run": 17, "element_act": [18, 21, 22, 24, 25], "commands_idx": 18, "start_tim": [18, 49, 76], "end_tim": [18, 49, 76], "snapshot_start": 18, "snapshot_end": 18, "submission_idx": [18, 88, 153], "commands_file_id": 18, "success": 18, "exit_cod": [18, 88], "metadata": [18, 65, 88, 153, 158, 169], "run_hostnam": 18, "port_numb": [18, 37, 88], "unit": [18, 49, 112, 115, 117, 160, 180], "program": [18, 34, 116, 155], "With": 18, "over": [18, 30, 76, 77, 90, 163, 164, 171], "sai": [18, 162], "space": [18, 29, 67, 87, 112, 115, 119, 153], "mani": [18, 29, 67, 115, 155], "per": [18, 29, 50, 67, 108, 153, 162], "collect": [18, 30, 76, 180], "look": [18, 32, 59, 60, 68, 88, 94, 153, 162, 163, 165, 169, 180], "datetim": [18, 49, 76, 88, 101, 102, 103, 104, 153], "ever": 18, "end": [18, 49, 76, 88, 153, 165, 167, 169], "snapshot": 18, "unspecifi": [18, 29], "what": [18, 28, 35, 43, 45, 49, 50, 57, 90, 113, 160, 164, 172], "succeed": 18, "code": [18, 45, 57, 59, 70, 71, 72, 73, 74, 88, 153, 163, 164], "compose_command": 18, "disk": [18, 88], "word": [18, 70, 74, 171, 172], "shell_var": 18, "environmentslist": [18, 76], "dir_diff": 18, "directorysnapshotdiff": 18, "finish": [18, 74, 99, 153], "env_spec_hash": 18, "underli": [18, 49, 155], "rais": [18, 63, 71, 77, 88, 101, 102, 121, 129, 153], "except": [18, 63, 67, 153, 165, 174], "unset": [18, 63, 71, 154, 163], "get_ifg_input_valu": 18, "get_ofp_input": 18, "get_ofp_output_fil": 18, "go": [18, 34, 49, 54, 162, 164, 167], "get_ofp_output": 18, "get_all_previous_iteration_run": 18, "include_self": 18, "get_app_log_path": [18, 76], "get_app_std_path": [18, 49, 76], "get_directori": 18, "aim": [18, 108, 172], "get_input_valu": 18, "label_dict": 18, "all_iter": [18, 161], "arrang": [18, 115], "get_input_values_direct": 18, "human": 18, "readabl": 18, "get_py_script_func_kwarg": 18, "add_script_fil": 18, "blk_act_kei": 18, "retriev": [18, 49, 67, 71, 78, 81, 88, 99, 153, 168, 180], "addit": [18, 29, 32, 66, 67, 86, 88, 94, 163, 164, 169], "_input_fil": [18, 164], "_output_fil": [18, 164], "js_blk_act_kei": 18, "three": [18, 169, 172, 180], "integ": [18, 29, 43, 45, 57, 67, 71, 88, 92, 160], "get_resourc": [18, 23], "consid": [18, 23, 30, 46, 65, 70, 74, 77, 88, 90, 92, 160, 162, 171], "raise_on_failure_threshold": 18, "track": [18, 88, 101, 102, 103, 104, 153, 164, 168], "were": 18, "_get_merged_parameter_data": 18, "unsetparamtrack": 18, "elementresourc": [18, 23, 49, 65, 70, 74], "skip_reason": [18, 88], "jsonlikedirsnapshot": [18, 69], "earstatu": 18, "did": 18, "succe": 18, "implement": [18, 53, 59, 82, 172, 174], "try_write_command": 18, "attempt": [18, 74, 80, 88, 94, 165], "write_script_input_fil": 18, "select": [19, 20, 34, 88, 163, 170], "subsequ": [19, 30, 77, 90, 163, 171], "group_by_distinct": [20, 77], "elementfilt": [20, 28, 46, 58, 77], "parameterpath": [20, 77], "element_action_run": [21, 22, 24, 25], "prefixed_names_unlabel": [21, 22, 24, 25], "between": [21, 22, 24, 25, 74, 153, 155, 170, 171], "even": [21, 22, 24, 25, 49, 88, 153], "empti": [21, 22, 24, 25, 71, 90, 121, 154, 163, 169], "prefixed_names_unlabelled_str": [21, 22, 24, 25], "ears_initialis": [23, 88], "loop_idx": [23, 92], "parent": [23, 26, 49, 50, 54, 66, 88, 90], "resolut": [23, 77, 161], "ear_ids_flat": 23, "persist": [23, 30, 43, 45, 48, 53, 56, 57, 67, 77, 82, 86, 87, 88, 94, 101, 102, 103, 104, 115, 153, 165, 168, 170, 172, 177], "store": [23, 43, 45, 48, 49, 56, 57, 67, 86, 88, 94, 101, 102, 103, 104, 129, 153, 162, 164, 168, 176], "ones": 23, "relev": [23, 53, 82], "set_default": [23, 29], "os_nam": [23, 29, 49, 67, 161], "get_resources_obj": 23, "searchabl": 23, "get_template_resourc": 23, "loopindex": 23, "loop_skip": 23, "entir": [23, 92], "entiti": [26, 90], "classvar": [26, 65, 67, 70, 74], "baseapp": 26, "data_idx_is_set": 26, "get_siz": 26, "store_kwarg": [26, 88, 94, 101, 102, 103, 104], "size": [26, 119, 153, 161, 162], "is_set": 26, "nesting_ord": [27, 30, 54, 77, 87, 92, 162, 163], "newli": [27, 48, 70, 74, 86, 92, 115], "propag": [27, 61, 71, 72, 92], "float": [27, 29, 30, 54, 60, 67, 71, 74, 86, 87, 92, 108, 115, 119, 121, 122, 124, 160, 161, 180], "nest": [27, 30, 48, 54, 77, 87, 92, 108, 154, 163], "move": 27, "reinterpret": 27, "repetit": 28, "repeat": [28, 30, 77, 92, 162, 171, 172], "scratch": [29, 67], "num_cores_per_nod": [29, 67, 154], "num_thread": [29, 67], "num_nod": [29, 67, 154], "use_job_arrai": [29, 67], "max_array_item": [29, 67], "write_app_log": [29, 67], "combine_jobscript_std": [29, 49, 67], "combine_script": [29, 49, 67, 162], "time_limit": [29, 67], "scheduler_arg": [29, 49, 67, 163], "shell_arg": [29, 49, 67], "resources_id": [29, 67], "skip_downstream_on_failur": [29, 67, 162], "allow_failed_depend": [29, 67, 71], "sge_parallel_env": [29, 67, 163], "slurm_partit": [29, 67], "slurm_num_task": [29, 67], "slurm_num_tasks_per_nod": [29, 67], "slurm_num_nod": [29, 67], "slurm_num_cpus_per_task": [29, 67], "common": [29, 49, 69, 155, 162, 166, 169, 170, 177], "leav": 29, "them": [29, 88, 92, 163, 164], "parallelmod": [29, 67], "parallel": [29, 34, 35, 67, 76, 88, 101, 102, 129, 153], "mode": [29, 34, 35, 65, 67, 71, 109, 161], "request": [29, 67, 101, 102, 129, 163], "node": [29, 65, 67, 70, 74, 138, 163], "thread": [29, 67], "arrai": [29, 49, 50, 65, 67, 70, 74, 88, 108, 115, 124, 153, 180], "item": [29, 65, 67, 70, 71, 74, 88, 92, 107, 121, 138, 153, 164, 170, 172, 177, 180], "log": [29, 65, 67, 69, 74, 76, 88, 154, 168], "written": [29, 65, 67, 70, 74, 108, 172], "long": [29, 67, 160], "arbitrari": [29, 67, 169], "forc": [29, 67, 88, 101, 102, 103, 104, 153], "failur": [29, 67, 71, 88, 160], "toler": [29, 67], "respect": [29, 39, 41, 67, 115, 119, 154, 160, 171], "proport": [29, 67, 71], "sge": [29, 67, 70, 74, 154, 163], "slurm": [29, 67, 74, 154], "partit": [29, 67, 154], "cpu": [29, 67], "ask": [29, 67], "slurm_is_parallel": 29, "get_default_os_nam": 29, "get_default_schedul": 29, "shell_nam": [29, 49, 100, 153], "get_default_shel": 29, "get_env_instance_filterable_attribut": 29, "get_jobscript_hash": 29, "distinguish": [29, 71, 163], "is_parallel": 29, "validate_against_machin": 29, "valid": [29, 30, 59, 80, 92, 94, 156, 168, 174], "multi_path_sequ": [30, 77], "env_preset": [30, 77, 94, 169], "sourceable_elem_it": [30, 77, 92], "allow_non_coincident_task_sourc": [30, 77], "is_creat": 30, "parameteris": [30, 77, 89, 155], "inputfil": [30, 77, 92], "valuesequ": [30, 54, 77, 92], "multipathsequ": [30, 77], "multi": [30, 54, 77, 88, 155], "elementgroup": [30, 77], "descriptor": [30, 49, 50, 71, 76, 88, 113, 115, 158, 160], "preset": [30, 77, 94, 162], "don": [30, 66], "global": [30, 92], "sourceabl": [30, 92], "intersect": [30, 77], "merg": [30, 66, 77, 94], "belong": [30, 88], "defined_input_typ": [30, 77], "elem_iter_id": 30, "element_local_idx_rang": 30, "ensure_element_set": 30, "repeatsdescriptor": [30, 92], "self": [30, 46, 54, 62, 66, 77, 87, 88, 92, 107, 108, 113, 115, 117, 119, 122], "get_defined_parameter_typ": 30, "get_defined_sub_parameter_typ": 30, "get_locally_defined_input": 30, "get_sequence_from_path": 30, "input_typ": [30, 53, 82, 87], "reconstruct": [30, 160, 161], "case": [30, 49, 53, 82, 107, 108, 121, 132, 154, 155, 161, 162, 163, 165, 168, 169, 171, 172, 174], "is_input_type_provid": 30, "labelled_path": [30, 77], "prepare_persistent_copi": 30, "made": [30, 77, 88, 108, 168], "dure": [30, 88, 96, 153], "integr": 30, "task_templ": [30, 53, 82], "deriv": [30, 38, 40, 77, 94, 125, 162], "undefined_input_typ": [30, 77], "aren": 30, "relat": [30, 43, 45, 57, 88, 122, 153], "_hash_valu": [32, 41, 53, 59, 82], "suppli": [32, 72, 87, 90], "pair": [32, 76, 121, 169, 180], "executableinst": 34, "filter_inst": 34, "desir": 34, "numcor": 35, "from_spec": [35, 86], "spec": [35, 66, 67, 86], "construct": [35, 86, 162], "cmd": 37, "package_nam": 37, "q": [37, 162], "launch": 37, "subprocess": [37, 49, 88], "zmq": 37, "server": 37, "kill": [37, 153], "shutdown": 37, "messag": [37, 153], "sent": 37, "send_abort": 37, "hostnam": [37, 70, 154], "send": 37, "start_zmq_serv": 37, "stop_zmq_serv": 37, "zmq_context": 37, "file_nam": [38, 40, 153], "filenamespec": [38, 40, 41], "pathlik": [38, 39, 40, 41, 88, 94, 101, 102, 103, 104, 129], "is_regex": 39, "pattern": [39, 65, 70, 74, 153, 158, 167], "posit": [39, 92, 119], "omit": [39, 66, 119], "regex": 39, "filenamepart": 39, "ext": [39, 41], "filenameext": [39, 41], "stem": [39, 40, 41, 162], "filenamestem": [39, 41], "possibli": [40, 160], "jinja": 41, "store_cont": [43, 45, 57], "make_persist": [43, 45, 48, 53, 57, 67, 82, 86, 87, 92], "zarr": [43, 45, 48, 57, 67, 86, 88, 101, 102, 103, 104, 115, 153, 176], "normalised_files_path": 43, "normalised_path": [43, 45, 48, 57, 67, 86, 87], "filesystem": [43, 45, 57], "close": [43, 45, 57, 180], "read_cont": [43, 45, 57], "earli": 44, "quick": [44, 170], "tend": 44, "get_action_rul": [44, 56], "recreat": [45, 57], "source_typ": [46, 162], "import_ref": 46, "task_ref": [46, 88, 162], "task_source_typ": 46, "inputsourcetyp": 46, "import": [46, 47, 77, 162, 163, 164, 165, 168, 175, 176, 180], "tasksourcetyp": 46, "goe": [46, 164], "from_str": 46, "str_defn": 46, "get_task": 46, "referenc": [46, 164, 169, 172], "import_": 46, "is_in": 46, "other_input_sourc": 46, "value_class_method": [48, 54, 87], "_check_obj": 48, "schemainput": [48, 53, 77, 82, 86, 172], "obtain": [48, 164], "real": [48, 112], "invok": [48, 69, 76, 107, 153, 168, 172], "is_sub_valu": [48, 87], "interpret": [48, 88, 153, 155], "labelled_typ": [48, 87], "normalis": [48, 66, 77, 86, 87, 180], "normalised_inputs_path": [48, 87], "itself": [48, 71, 86, 163, 164], "is_arrai": [49, 65, 70, 74], "at_submit_metadata": [49, 76], "submit_hostnam": 49, "submit_machin": 49, "shell_idx": [49, 76], "version_info": 49, "resource_hash": 49, "task_act": [49, 50], "task_loop_idx": [49, 50], "js_action_idx": [49, 50], "task_el": [49, 50], "js_element_idx": [49, 50], "task_element_idx": [49, 50], "plai": [49, 50], "submit_tim": [49, 76], "submit_cmdlin": 49, "scheduler_job_id": 49, "scheduler_nam": [49, 153], "jobscriptblock": 49, "ear_id_file_nam": 49, "ear_id_file_path": 49, "all_ear_id": [49, 76], "ndarrai": [49, 50, 54, 76, 88, 108, 115, 119, 124, 180], "miss": [49, 63, 161], "all_ear": [49, 50, 76], "combined_script_indices_file_nam": 49, "combined_script_indices_file_path": 49, "compose_combined_script": 49, "action_script": 49, "compose_jobscript": 49, "account": 49, "direct_std_out_err_path": 49, "otherwis": [49, 88, 121, 153, 168], "direct_stdout_path": 49, "direct_stderr_path": 49, "separ": [49, 115, 119, 153, 172], "get_stdout_path": 49, "get_stderr_path": 49, "direct_win_pid_file_nam": 49, "pid": 49, "direct_win_pid_file_path": 49, "last": [49, 121, 165], "get_active_st": 49, "as_json": [49, 76, 99], "get_commands_file_nam": [49, 69], "get_std_out_err_path": 49, "array_idx": [49, 65, 70, 74, 153], "get_stderr": 49, "non": [49, 67, 76, 77, 88, 92, 107, 108, 154], "whole": [49, 88, 163, 172], "get_stdout": 49, "is_schedul": [49, 76], "is_submit": 49, "jobscript_functions_nam": 49, "jobscript_functions_path": 49, "jobscript_nam": 49, "jobscript_path": 49, "print_stderr": 49, "print": [49, 65, 70, 74, 76, 88, 153, 161, 163, 164, 168, 173], "print_stdout": [49, 76, 88], "scheduler_js_ref": 49, "compos": [49, 54, 87], "std_path": 49, "scheduler_ref": 49, "behalf": 49, "workflow_app_alia": [49, 76], "write_jobscript": 49, "os_arg": [49, 154], "write_script_indices_fil": 49, "num_elem": 49, "num_act": [49, 50, 92], "combined_script": 49, "rectangular": 50, "resolvedjobscriptblockdepend": 50, "get_task_loop_idx_arrai": 50, "maxim": 50, "num_el": [50, 65, 70, 74, 88, 92], "variou": [50, 160, 164], "write_ear_id_fil": 50, "fp": 50, "token": 50, "textio": 50, "num_iter": [51, 90, 162, 171], "non_iterable_paramet": 51, "termination_task": [51, 162], "criterion": [51, 160, 180], "express": 51, "evalu": [51, 68], "insert_id": [51, 77, 92], "extent": [51, 90], "task_object": [51, 90], "termination_task_insert_id": 51, "workflow_templ": [51, 66, 67, 77, 89], "workflowtempl": [51, 66, 67, 77, 88, 89, 101, 102, 175], "metataskschema": [52, 172], "web_doc": [53, 82], "environment_preset": [53, 82, 169], "effect": [53, 162, 172], "taskobject": [53, 77, 82], "schemaoutput": [53, 77, 82, 172], "sphinx": [53, 82], "built": [53, 82, 89, 154, 155, 157, 164, 165, 167, 172], "overridden": [53, 64, 65, 82], "basic_info": [53, 82], "show": [53, 65, 70, 74, 82, 88, 96, 101, 102, 119, 128, 161, 167, 168, 170, 177], "tabl": [53, 76, 82, 88, 153], "get_by_kei": [53, 82], "get_info_html": [53, 82], "get_kei": [53, 82], "hashabl": [53, 82], "actparameterdepend": [53, 82], "ignore_invalid_act": [53, 82], "invalid": [53, 82, 88, 94, 153], "multi_input_typ": [53, 82], "output_typ": [53, 82], "parameter_class_modul": [53, 82], "handler": [53, 62, 82], "provides_paramet": [53, 77, 82], "tasktempl": [53, 60, 82, 85], "distribut": [54, 115, 160, 162], "interdepend": 54, "Not": [54, 56, 59, 87], "from_latin_hypercub": 54, "num_sampl": [54, 162], "scrambl": 54, "strength": 54, "optim": 54, "rng": 54, "scipi": 54, "latin": 54, "hypercub": 54, "sampler": 54, "stat": [54, 162], "qmc": 54, "latinhypercub": 54, "liter": [54, 71, 76, 88, 94, 101, 102, 103, 104, 129, 161], "random": [54, 87, 107, 108, 115, 119, 161, 162], "cd": 54, "lloyd": 54, "sequence_indic": [54, 92], "child": [54, 66, 90], "minimum": [55, 108], "maximum": [55, 76, 88, 99, 108, 127, 153], "confus": [56, 165], "plural": [56, 169], "miscellan": [56, 123], "initvar": 56, "is_fil": 59, "_value_class": 59, "_valid": 59, "parametervalu": [59, 105, 107, 108, 113, 115, 117, 119, 122], "subparamet": 59, "url_slug": 59, "url": [59, 88, 154, 175], "explicit": [61, 71], "implicit": [61, 71, 72], "never": [61, 71], "intend": [62, 166], "subclass": 62, "dump_element_group_to_hdf5_group": [62, 107, 108, 113, 115, 117, 119, 122, 160], "hdf5group": [62, 107, 108, 113, 117, 119, 122], "dump_to_hdf5_group": [62, 107, 108, 113, 115, 117, 119, 122], "prepare_json_dump": [62, 107, 108, 113, 115, 117, 119, 122], "serialis": [62, 107, 108, 113, 115, 117, 119, 122], "save_from_hdf5_group": [62, 107, 108, 113, 115, 117, 119, 122, 160], "param_id": [62, 88, 107, 108, 113, 115, 117, 119, 122], "save_from_json": [62, 107, 108, 113, 115, 117, 119, 122], "return_element_paramet": 63, "submit_cmd": [65, 74, 154], "show_cmd": [65, 74, 154], "del_cmd": [65, 74, 154], "js_cmd": [65, 74, 154], "login_nodes_cmd": [65, 74], "array_switch": [65, 74, 154], "array_item_var": [65, 74, 154], "verbatim": [65, 70, 74], "flag": [65, 70, 74], "deprec": [65, 160], "pleas": 65, "instead": [65, 92, 153, 160, 164], "login": [65, 70, 74, 163], "default_array_item_var": [65, 70, 74], "containin": 65, "default_array_switch": [65, 70, 74], "default_del_cmd": [65, 70, 74], "default_js_cmd": [65, 70, 74], "marker": 65, "default_login_nodes_cmd": [65, 70, 74], "default_login_node_match": [65, 70, 74], "default_show_cmd": [65, 70, 74], "default_submit_cmd": [65, 70, 74], "jsreftyp": 65, "format_direct": [65, 70, 74], "sub_idx": [65, 70, 74, 76, 88, 153], "format_switch": [65, 70, 74], "j": [65, 70, 74, 108, 162], "job_id": [65, 70, 74], "filenam": [65, 70, 74, 160, 162], "append": [66, 180], "get_scop": 66, "merge_on": 66, "lower": [66, 163, 174], "preced": [66, 88], "simplifi": 66, "merge_oth": 66, "potenti": [66, 171, 172], "sever": [66, 176], "correct": [67, 165], "wsl": [67, 154], "still": [67, 169], "nt": [67, 161], "allowed_paramet": 67, "copy_non_persist": 67, "resourcepersistingworkflow": 67, "intern": 67, "normalised_resources_path": 67, "unus": [67, 162], "testabl": 68, "exactli": 68, "element_lik": 68, "encapsul": 69, "recognit": 69, "get_run_file_prefix": 69, "get_run_param_dump_file_prefix": 69, "get_run_param_load_file_prefix": 69, "take_snapshot": 69, "root_path": [69, 162], "cwd_switch": [70, 154], "gridschedul": 70, "sourceforg": 70, "htmlman": 70, "htmlman1": 70, "qsub": 70, "softpanorama": 70, "grid_engin": 70, "queue": [70, 74], "queue_stat": 70, "shtml": 70, "sge_task_id": 70, "default_cwd_switch": 70, "cwd": 70, "qdel": 70, "qconf": 70, "qstat": 70, "get_job_status": 70, "get_login_nod": 70, "administr": 70, "report": [70, 88], "state_lookup": [70, 74], "eh": 70, "eq": [70, 180], "rt": 70, "rr": 70, "dr": 70, "dt": 70, "hr": 70, "hq": 70, "qw": 70, "tt": 70, "default_valu": [71, 164], "nulldefault": 71, "propagation_mod": [71, 72], "parameterpropagationmod": [71, 72], "expect": [71, 77, 94, 155, 165, 169], "squar": 71, "bracket": 71, "labelinfo": 71, "catch": 71, "remain": [71, 77, 108, 172], "treat": [71, 78, 81], "By": [71, 88, 94, 101, 102, 108, 129, 153, 154, 174], "inaccess": 71, "unsetparameterdataerror": 71, "equival": [71, 164, 168, 180], "permit": 71, "all_labelled_typ": 71, "input_or_output": [71, 72], "labelled_info": 71, "labellingdescriptor": 71, "single_label": 71, "single_labelled_data": 71, "single_labelled_typ": 71, "memori": [74, 115, 163, 180], "stackoverflow": [74, 115], "44143229": 74, "5042280": [74, 115], "manpag": 74, "sbatch": 74, "ri": 74, "itservic": 74, "ac": 74, "uk": 74, "csf4": 74, "slurm_array_task_id": 74, "scancel": 74, "squeue": 74, "me": 74, "inter_state_query_delai": 74, "delai": 74, "second": [74, 108, 153, 162, 172], "num_state_query_tri": 74, "out_of_memori": 74, "timeout": [74, 153], "address": 75, "anoth": [75, 164, 169], "js_parallel": [76, 88, 101, 102, 129, 153], "submission_part": 76, "exploit": 76, "app_std_dir_nam": 76, "app_std": 76, "commands_dir_nam": 76, "ears_by_el": 76, "js_dir_nam": 76, "js_funcs_dir_nam": 76, "js_func": 76, "js_run_ids_dir_nam": 76, "js_run_id": 76, "js_script_indices_dir_nam": 76, "js_script_indic": 76, "js_std_dir_nam": 76, "js_std": 76, "js_win_pids_dir_nam": 76, "js_pid": 76, "log_dir_nam": 76, "app_log": 76, "scripts_dir_nam": 76, "tmp_dir_nam": 76, "wkflow_app": 76, "all_ears_ids_by_jobscript": 76, "all_ears_by_jobscript": 76, "app_log_path": 76, "app_std_path": 76, "commands_path": 76, "get_active_jobscript": 76, "get_app_log_file_nam": 76, "run_id": [76, 88, 153], "get_app_log_file_path": 76, "submissions_path": [76, 88], "get_commands_path": 76, "get_end_tim": 76, "get_jobscript_functions_nam": 76, "get_jobscript_functions_path": 76, "get_js_funcs_path": 76, "commmand": 76, "get_js_path": 76, "get_js_run_ids_path": 76, "get_js_script_indices_path": 76, "get_js_std_path": 76, "get_js_win_pids_path": 76, "get_path": 76, "get_process_id": [76, 88], "get_scheduler_job_id": [76, 88], "get_scripts_path": 76, "get_start_tim": 76, "get_tmp_path": 76, "get_unique_schedul": 76, "scheduler_map": 76, "get_unique_schedulers_of_jobscript": 76, "queuedschedul": 76, "get_unique_shel": 76, "jobscript_indic": 76, "js_funcs_path": 76, "js_run_ids_path": 76, "js_script_indices_path": 76, "js_std_path": 76, "js_win_pids_path": 76, "list_jobscript": [76, 88], "max_j": [76, 88, 153], "width": [76, 88, 153, 180], "displai": [76, 88, 101, 102, 103, 104, 128, 153, 167, 180], "cannot": [76, 88, 164, 174], "charact": [76, 88, 108, 153], "list_task_jobscript": [76, 88], "task_nam": [76, 88, 153], "needs_app_log_dir": 76, "submis": 76, "needs_script_indices_dir": 76, "needs_submit": 76, "needs_win_pids_dir": 76, "outstanding_jobscript": 76, "yet": [76, 92, 153], "successfulli": [76, 88, 167], "scripts_path": 76, "submissionstatu": 76, "submissionpart": 76, "ignore_error": [76, 88], "add_to_known": [76, 88, 101, 102], "submitted_jobscript": 76, "tmp_path": [76, 133, 134], "output_label": 77, "merge_env": [77, 94], "isol": [77, 155], "satisfi": 77, "fetch": 77, "outputlabel": 77, "add_group": 77, "all_schema_act": 77, "all_schema_input_normalised_path": 77, "all_schema_input_typ": 77, "all_schema_input": 77, "all_schema_output_typ": 77, "all_schema_output": 77, "all_sourced_normalised_path": 77, "being": [77, 88, 90, 153, 164], "artefact": 77, "get_available_task_input_sourc": 77, "source_task": 77, "possibl": [77, 163, 164], "get_input_status": 77, "elem_set": 77, "inputstatu": 77, "status": 77, "get_param_provided_element_set": 77, "caller": 77, "freeli": 77, "get_schema_act": 77, "get_task_unique_nam": [77, 88], "non_universal_input_typ": 77, "num_all_schema_act": 77, "total": [77, 88, 108], "num_element_set": [77, 92], "goal": 77, "prepare_element_resolut": 77, "input_data_indic": [77, 92], "especi": 77, "multiplicitydescriptor": [77, 92], "els": [77, 87, 121, 165], "set_sequence_paramet": 77, "to_persist": 77, "doesn": [77, 155], "undefined_input": 77, "undefin": 77, "universal_input_typ": 77, "unmodifi": [78, 81], "namespac": [78, 81], "achiev": [80, 108, 163, 164], "mechan": [82, 160, 162], "_workflow": [86, 101, 102, 103, 104], "_element_set": 86, "_schema_input": 86, "_valu": 86, "_value_group_idx": 86, "multiplicative_factor": 86, "additive_factor": 86, "perturb": [86, 122, 162], "numer": [86, 155, 158, 162], "factor": [86, 160, 180], "from_fil": [87, 88, 94, 115, 119, 160, 163], "file_path": [87, 153], "build": 87, "from_geometric_spac": 87, "num": [87, 162], "endpoint": 87, "geometr": 87, "from_linear_spac": 87, "linear": [87, 160], "from_log_spac": 87, "logarithm": 87, "from_random_uniform": 87, "low": 87, "high": [87, 155, 161, 163], "seed": [87, 141, 160, 161, 162], "uniform": [87, 162], "from_rang": [87, 162], "from_rectangl": [87, 162], "coord": [87, 162], "cover": 87, "rectangl": 87, "coordin": 87, "edg": 87, "choos": [87, 163, 169], "bottom": 87, "left": 87, "input_path": 87, "path_split": 87, "path_typ": 87, "resource_scop": 87, "workflow_ref": [88, 96, 153, 167], "store_fmt": 88, "fs_kwarg": 88, "pre": [88, 89], "phase": [88, 119, 122, 160, 161, 162], "abort_run": 88, "task_idx": 88, "element_idx": 88, "add_loop": 88, "add_submiss": [88, 103, 104], "force_arrai": 88, "purpos": [88, 153], "add_task": 88, "new_index": 88, "add_task_aft": 88, "new_task": 88, "add_task_befor": 88, "begin": 88, "artifacts_path": 88, "batch_upd": 88, "is_workflow_cr": 88, "cached_merged_paramet": 88, "check_parameters_exist": 88, "id_lst": 88, "creation_info": 88, "creationinfo": 88, "creation": [88, 102, 103, 104, 153], "ensure_commands_fil": 88, "ensur": [88, 153], "execute_combined_run": 88, "jobscript_idx": [88, 153], "execute_run": 88, "execution_path": 88, "from_json_fil": [88, 94], "json_path": 88, "overwrit": [88, 101, 102, 103, 104, 153, 172], "ts_fmt": [88, 101, 102, 103, 104, 153], "ts_name_fmt": [88, 101, 102, 103, 104, 153], "join": [88, 101, 102, 103, 104, 153, 161], "date": [88, 94, 101, 102, 103, 104, 153], "timestamp": [88, 101, 102, 103, 104, 153], "utc": [88, 101, 102, 103, 104, 153], "zone": [88, 101, 102, 103, 104, 153, 160, 161, 162], "write_empty_workflow": [88, 101, 102, 103, 104], "var": [88, 94, 153, 162], "occur": [88, 94], "from_json_str": [88, 94], "json_str": 88, "from_yaml_fil": [88, 94, 175], "yaml_path": 88, "from_yaml_str": [88, 94], "yaml_str": 88, "template_path": 88, "template_format": [88, 94, 101, 102, 103, 104], "yml": 88, "from_templ": [88, 176], "from_template_data": [88, 172], "template_nam": [88, 172], "workflow_nam": [88, 101, 103, 153, 162], "whenev": 88, "get_ear_ids_of_task": 88, "get_ear_skip": 88, "get_ears_from_id": 88, "as_dict": 88, "get_ears_of_task": 88, "get_all_ear": 88, "get_all_element_iter": [88, 92], "get_all_el": 88, "get_all_parameter_data": 88, "dataset_copi": 88, "get_all_parameter_sourc": 88, "get_all_paramet": 88, "storeparamet": 88, "get_all_submission_run_id": 88, "get_element_ids_from_ear_id": 88, "get_element_iteration_ids_from_ear_id": 88, "get_element_iterations_from_id": 88, "get_element_iterations_of_task": 88, "get_elements_from_id": 88, "get_iteration_task_pathwai": 88, "ret_iter_id": 88, "ret_data_idx": 88, "pathwai": [88, 153], "get_paramet": 88, "kwtype": 88, "get_parameter_data": 88, "get_parameter_set_status": 88, "get_run_directori": 88, "dir_indices_arr": 88, "pathlib": [88, 154, 160], "_local": [88, 154, 160], "get_running_el": 88, "accord": [88, 92, 99, 153, 160, 169, 180], "get_running_run": 88, "get_store_ear": 88, "storeear": 88, "get_store_element_iter": 88, "storeelementit": 88, "get_store_el": 88, "storeel": 88, "get_store_task": 88, "storetask": 88, "get_task_ids_from_element_id": 88, "get_task_el": 88, "idx_lst": 88, "map_to_insert_id": 88, "get_text_fil": 88, "input_files_path": 88, "is_parameter_set": 88, "workflowlooplist": 88, "num_ear": 88, "num_added_task": 88, "num_element_iter": 88, "num_loop": 88, "num_submiss": 88, "num_task": 88, "process_shell_parameter_output": 88, "cmd_idx": [88, 153], "rechunk": 88, "chunk_siz": [88, 153], "backup": [88, 153], "effici": [88, 90], "rechunk_parameter_bas": 88, "reorganis": 88, "chunk": [88, 153], "rechunk_run": 88, "resolve_jobscript": 88, "objectcach": 88, "save_paramet": 88, "set_ear_end": 88, "zero": [88, 108, 180], "set_ear_skip": 88, "record": [88, 176], "met": 88, "skipreason": 88, "set_ear_start": 88, "run_dir": 88, "set_ears_initialis": 88, "iter_id": [88, 92], "set_multi_run_end": 88, "set_multi_run_start": 88, "set_parameter_valu": 88, "show_all_ear_status": 88, "everi": [88, 108], "store_format": 88, "th": 88, "return_idx": [88, 101, 102, 129], "halt": 88, "jobscript_parallel": [88, 101, 102, 129, 153], "hide": [88, 161], "monitor": [88, 101, 102], "benchmark": [88, 101, 102, 153], "live": [88, 96, 101, 102, 103, 104, 153], "progress": [88, 101, 102, 103, 104, 153, 162, 171], "task_artifacts_path": 88, "workflowtasklist": 88, "template_compon": [88, 155, 162, 163, 164, 165, 172], "templatecompon": 88, "temporary_renam": 88, "f": [88, 121, 153, 162, 163, 164, 167, 180], "renam": [88, 153], "restor": 88, "abstractfilesystem": 88, "unzip": 88, "fsspec": [88, 153, 154, 175], "sub_j": 88, "include_execut": 88, "include_rechunk_backup": 88, "simpler": 89, "fit": [89, 160, 162], "insid": [89, 90], "blueprint": 89, "num_added_iter": 90, "iterable_paramet": 90, "output_paramet": 90, "iterableparam": 90, "add_iter": 90, "parent_loop_indic": 90, "got": [90, 165], "loopcach": 90, "downstream_task": [90, 92], "get_child_loop": 90, "ident": 90, "get_element_id": 90, "get_el": 90, "get_parent_loop": 90, "superset": 90, "new_empty_loop": 90, "iter_loop_idx": 90, "skip_downstream_iter": 90, "elem_it": 90, "dep_element_id": 90, "task_indic": 90, "test_termin": 90, "upstream_task": [90, 92], "workflowloop": 91, "element_id": 92, "bind": 92, "add_el": 92, "base_el": 92, "propagate_to": 92, "return_indic": 92, "elementpropag": 92, "ensure_input_sourc": 92, "behaviour": [92, 163], "generate_new_el": 92, "output_data_indic": 92, "element_data_indic": 92, "source_indic": 92, "get_dir_nam": 92, "initialise_ear": 92, "uninitialis": 92, "taskinputparamet": 92, "new_empty_task": 92, "taskoutputparamet": 92, "resolve_element_data_indic": 92, "element_dat_idx": 92, "product": [92, 180], "cross": [92, 180], "unique_nam": 92, "source_fil": 94, "merge_resourc": 94, "limit": 94, "logic": 94, "stamp": 94, "constructor": [94, 160], "ref_is_path": 96, "max_rec": [99, 127, 153], "no_upd": [99, 127], "inact": [99, 127, 153], "knownsubmissionitem": 99, "exclude_o": 100, "template_file_or_str": [102, 104, 153], "is_str": [102, 104], "template_path_or_str": [102, 104], "builtin": [103, 153], "_submiss": [103, 104], "conflict": 105, "simul": [106, 108, 155, 160, 162, 163, 164, 177, 179], "sampl": [106, 108, 160, 161, 162], "consist": 107, "loadstep": 107, "biaxial": [107, 108, 160], "create_damask_loading_plan": 107, "turn": 107, "plan": [107, 115], "example_uniaxi": [107, 108, 160], "uniaxi": [107, 108, 160, 161, 162], "multistep": [107, 160], "remaind": 107, "num_step": 107, "planar_2d": [107, 108, 160], "planar": [107, 108, 160], "2d": [107, 108, 124, 161], "plane_strain": [107, 108, 160], "plane": [107, 108, 180], "strain": [107, 108, 109, 162, 180], "random_2d": [107, 108, 160], "random_3d": [107, 108, 160, 162], "3d": [107, 108, 158, 159, 162, 180], "uniaxial_cycl": [107, 108, 160], "cyclic": [107, 108], "total_tim": [108, 162], "num_incr": [108, 162], "normal_direct": 108, "target_def_grad": [108, 162], "target_def_grad_r": [108, 162], "target_vel_grad": 108, "stress": [108, 160, 161, 162, 180], "dump_frequ": [108, 162], "increment": [108, 160, 162, 171], "vector": [108, 113, 116, 180], "ma": 108, "maskedarrai": 108, "shape": [108, 115, 153, 180], "deform": [108, 109, 155], "gradient": [108, 109], "tensor": [108, 180], "mask": [108, 124], "unmask": 108, "rate": [108, 109], "veloc": [108, 109], "ij": [108, 180], "x": [108, 117, 124, 160, 161, 162, 180], "y": [108, 117, 160, 161, 162, 180], "z": [108, 117, 160, 161, 162], "along": [108, 163, 164], "frequent": 108, "method_arg": 108, "method_nam": 108, "flat": 108, "fourth": 108, "row": [108, 180], "column": [108, 160, 180], "shear": [108, 180], "strain_rate_mod": 108, "strainratemod": 108, "def_grad_r": [108, 109], "vel_grad": [108, 109], "vel_grad_approx": [108, 109], "mix": [108, 164], "randomli": [108, 162], "interv": [108, 153], "strain_like_tensor": 108, "buffer": [108, 115, 119, 160, 161, 162], "_supportsarrai": [108, 115, 119], "dtype": [108, 115, 119, 124], "_nestedsequ": [108, 115, 119], "byte": [108, 115, 119], "friendli": 108, "max_stress": 108, "min_stress": 108, "cycle_frequ": 108, "num_increments_per_cycl": 108, "num_cycl": 108, "waveform": 108, "sine": 108, "scalar": [108, 113, 116, 180], "cycl": 108, "_strainratemod": 109, "approxim": 109, "enumer": [109, 111, 180], "crystal": [110, 118, 120, 122, 155, 160, 161, 162], "_eulerdefinit": 111, "euler": [111, 113, 114, 155, 162, 180], "angl": [111, 113, 114, 155, 162, 180], "bung": [111, 113, 162], "typic": [111, 155, 160], "crystallographi": 111, "rotation_ord": 111, "rotat": [111, 160], "lattic": [112, 162], "cell": [112, 115, 117, 165], "a_star": 112, "reciproc": 112, "b": [112, 162], "b_star": 112, "c_star": 112, "euler_definit": [113, 162], "euler_is_degre": [113, 162], "quat_ord": 113, "orientationrepresentationtyp": 113, "eulerdefinit": 113, "degre": [113, 162, 169], "radian": 113, "quatord": 113, "quaternion": [113, 114, 115, 116, 136, 155], "wrt": 113, "is_degre": 113, "scalar_vector": [113, 116], "unit_cell_align": [115, 162], "_type": 115, "_array_lik": 115, "_scalartype_co": [115, 119, 124], "unitcellalign": 115, "align": [115, 117, 162], "orientationrepresent": 115, "ori_format": 115, "custom": [115, 119, 162, 168], "start_index": [115, 119], "header": [115, 119], "comma": [115, 119, 153], "tab": [115, 119], "sensibl": [115, 119], "csv": [115, 119, 160, 161, 162], "tsv": [115, 119], "from_random": [115, 119, 160, 162], "quat_sample_random": 115, "uniformli": 115, "quat": 115, "44031492": 115, "uiuc": 115, "edu": 115, "node198": 115, "avoid": 115, "firstli": 115, "small": [115, 167], "datastor": 115, "four": 116, "bluequartz": 116, "orientationanalysisfilt": 116, "convertquaternion": 116, "vector_scalar": 116, "latticedirect": 117, "from_hex_convention_damask": 117, "hexagon": [117, 160, 162], "symmetri": [117, 160], "from_hex_convention_mtex": 117, "crystalsymmetri": [117, 160], "scheme": [118, 160], "grow": 118, "box_siz": [119, 162], "phase_label": [119, 162], "orient": [119, 135, 136, 141, 155, 161, 162], "random_se": 119, "crystallin": [119, 161], "microstructur": [119, 141, 160, 161], "box": [119, 160], "num_se": [119, 162], "matplotlib": [119, 165], "typeddict": 121, "shallow": 121, "fromkei": 121, "view": 121, "pop": 121, "k": [121, 180], "keyerror": 121, "popitem": 121, "lifo": 121, "setdefault": 121, "lack": 121, "bulk": 122, "as_bas": 122, "arr": 124, "fill_valu": 124, "1d": 124, "fill": 124, "suit": [125, 126, 153], "span": 127, "longer": [127, 153], "legend": [128, 153, 167], "workflow_path": [129, 153], "fixtur": 131, "pytest": [131, 153], "compar": [132, 135, 136, 141], "define_load": 132, "loadcas": [132, 156, 160], "define_orient": [135, 136, 160], "txt": [136, 162], "_pytest": 138, "orientations_1": 141, "define_se": 141, "microstructurese": [141, 160], "assist": 151, "config_dir": 153, "config_kei": [153, 154], "with_config": 153, "timeit": 153, "summari": 153, "decor": 153, "timeit_fil": 153, "std": [153, 162], "std_stream": 153, "redirect": 153, "ref": 153, "ref_typ": 153, "guess": 153, "no_callback": 153, "known_nam": 153, "sha": 153, "env_source_fil": 153, "l": [153, 162, 163], "destin": [153, 162], "i1": 153, "infile1": 153, "i2": 153, "infile2": 153, "fmt": 153, "syntax": [153, 166, 177], "3600": 153, "timeout_check_interv": 153, "exceed": 153, "60": [153, 162], "watch_interv": 153, "poll": 153, "click_exit_cod": 153, "sleep": 153, "block_idx": 153, "block_action_idx": 153, "infrequ": 153, "app_nam": [153, 154], "bak": 153, "equal": [153, 162], "max": 153, "py_test_arg": 153, "submitt": 153, "colon": 153, "semicolon": 153, "invoc": 154, "environment_setup": 154, "log_file_path": 154, "matflow_v0": 154, "task_schema_sourc": 154, "command_file_sourc": 154, "parameter_sourc": 154, "default_schedul": [154, 163], "default_shel": 154, "conform": 154, "conditionand": [154, 160], "valuedatatyp": 154, "equal_to": [154, 160, 161, 162], "lt": [154, 160, 161], "x27": [154, 160, 161], "gt": [154, 160, 161], "keys_is_inst": 154, "quot": [154, 160, 161], "optionalcondit": [154, 160], "required_kei": 154, "requiredcondit": 154, "allowed_kei": 154, "noneconfig": 154, "forbidden_kei": 154, "config_directori": 154, "config_file_nam": 154, "config_file_path": 154, "config_file_cont": 154, "config_schema": 154, "invoking_user_id": 154, "host_user_id": 154, "host_user_id_file_path": 154, "config_callback": 154, "_set": 154, "user_orcid": 154, "user_nam": 154, "user_affili": 154, "executable_arg": 154, "wsl_execut": 154, "wsl_distribut": 154, "wsl_user": 154, "noneexecutable_arg": 154, "noneexecut": 154, "nonewsl_us": 154, "nonewsl_execut": 154, "nonewsl_distribut": 154, "nonewsl": 154, "nonepowershel": 154, "nonebash": 154, "noneschedul": 154, "direct_posix": 154, "parallel_environ": 154, "noneparallel_environ": 154, "nonedefault": 154, "noneshow_cmd": 154, "noneshebang_execut": 154, "noneopt": 154, "nonejs_cmd": 154, "nonedirect": 154, "nonedel_cmd": 154, "nonecwd_switch": 154, "nonearray_switch": 154, "nonearray_item_var": 154, "noneslurm": 154, "nonenum_nod": 154, "nonenum_cores_per_nod": 154, "nonenum_cor": 154, "nonesg": 154, "nonedirect_posix": 154, "noneparameter_sourc": 154, "socket": 154, "gethostnam": 154, "is_inst": [154, 160], "app_vers": 154, "rel": [154, 160, 162], "log_file_level": 154, "notset": 154, "debug": [154, 168], "warn": 154, "critic": 154, "in_": [154, 160], "log_console_level": [154, 168], "linux_release_fil": 154, "demo_data_manifest_fil": 154, "manifest": 154, "in_zip": 154, "text_fil": 154, "demo_data_dir": 154, "u": [155, 162, 172], "jupyt": [155, 177, 178, 180], "notebook": [155, 177, 178, 180], "under": [155, 161, 163, 164, 169, 172], "command_fil": [155, 163, 164], "new_inp_fil": [155, 164], "friction_conduct": 155, "inp": 155, "fortran": 155, "physic": [155, 160], "plastic": [155, 160, 162], "offici": 155, "webpag": 155, "multiphys": 155, "translat": 155, "analysi": [155, 165], "manipul": 155, "readthedoc": 155, "mechmicroman": 155, "piec": 155, "compet": 155, "someon": 155, "layer": 155, "focus": 155, "stretch": 155, "roll": 155, "usual": [155, 165, 168, 169], "rve_extrusion_ebsd": 156, "rve_extrusion_ebsd_d": 156, "cubic_textur": 156, "damask_input_fil": 156, "damask_numer": [156, 161], "fit_single_crystal_paramet": [156, 160], "fit_yield_func": 156, "generate_volume_element_from_statist": 156, "modify_volume_element_grid_s": [156, 167], "read_tensile_test_csv": [156, 161], "sample_orientations_crc_fil": 156, "sample_orientations_ctf_fil": 156, "sample_texture_crc_fil": 156, "sample_texture_ctf_fil": 156, "sample_texture_odf_mat": [156, 161], "sample_texture_model_odf": [156, 161], "sample_texture_random": [156, 161], "simulate_yield_surface_2d": [156, 180], "simulate_yield_surface_2d_brass": 156, "subset_simulation_damask_": 156, "subset_simulation_damask_mg": 156, "subset_simulation_damask_mg_ac": 156, "subset_simulation_damask_mg_two_level": 156, "subset_simulation_toy_model": 156, "subset_simulation_toy_model_ac": 156, "subset_simulation_toy_model_acs_extern": 156, "subset_simulation_toy_model_c": 156, "subset_simulation_toy_model_delayed_accept": 156, "subset_simulation_toy_model_extern": 156, "subset_simulation_toy_model_two_level": 156, "subset_simulation_toy_model_two_level_extern": 156, "tension_damask_": 156, "tension_damask_al_n_repeat": 156, "tension_damask_mg": 156, "tension_damask_ti": 156, "formabl": [156, 159, 161], "geometri": [158, 162], "visualis": [158, 160, 162], "figur": [158, 162], "pole": [158, 162], "invers": 158, "dream": [158, 159, 162], "h5py": 159, "pathcondit": 160, "channel": [160, 161], "oxford": 160, "instrument": 160, "binari": [160, 162], "sample_textur": [160, 162], "sample_orient": [160, 162], "dictcondit": 160, "read_tensile_test": 160, "ctf": [160, 161, 162], "hkl": 160, "crop": [160, 162, 165], "scale": [160, 162, 180], "homog_point": [160, 162], "min_grain_s": [160, 162], "digit": 160, "correl": 160, "load_microstructur": 160, "boundary_tol": [160, 162], "electron": [160, 161], "backscatt": [160, 161], "diffract": [160, 161], "strcondit": 160, "euler_to_spati": [160, 161], "spatial_to_eul": [160, 161], "converteuler2spatialreferencefram": [160, 161, 162], "convertspatial2eulerreferencefram": [160, 161], "referemc": 160, "frame": 160, "transform": [160, 162], "euler_angles_deg": 160, "keep_xi": 160, "keep_eul": 160, "visualise_orient": 160, "odf": [160, 161, 162], "length": [160, 161, 162], "valuelength": 160, "pixel": [160, 162], "voxel": 160, "generate_volume_el": 160, "respons": [160, 161], "dump_all_yield_stress": 160, "fit_yield_funct": [160, 162], "simulate_ve_load": 160, "geom_path": 160, "incremental_data": 160, "volume_data": [160, 162], "phase_data": [160, 162, 180], "field_data": [160, 162], "grain_data": [160, 162], "read_hdf5_fil": 160, "consult": 160, "twice": 160, "elong": 160, "generate_microstructure_se": 160, "face": [160, 162], "modify_v": 160, "boolcondit": 160, "visualise_multi_orient": 160, "cubic": [160, 162], "symmetryexampl": 160, "post": [160, 163], "opt": [160, 162], "add_absolut": 160, "add_calcul": 160, "add_stress_cauchi": [160, 162], "add_determin": 160, "add_devi": 160, "add_eigenvalu": 160, "add_eigenvector": 160, "add_ipf_color": [160, 162], "add_maximum_shear": 160, "add_equivalent_mis": 160, "add_norm": 160, "add_stress_second_piola_kirchhoff": 160, "add_pol": 160, "add_rot": 160, "add_spher": 160, "add_strain": [160, 162], "add_stretch_tensor": 160, "add_curl": 160, "add_diverg": 160, "add_gradi": 160, "thermal": 160, "damag": 160, "solver": 160, "phenomenon": 160, "spectral_polar": 160, "spectral_bas": 160, "conditionor": 160, "field": [160, 162], "visual": 160, "intcondit": 160, "warp": [160, 161], "floodfil": [160, 161], "grain": [160, 162], "emploi": 160, "sx": [160, 161, 162], "damp": 160, "listcondit": 160, "define_load_cas": [160, 162], "define_microstructure_se": 160, "generate_orient": 160, "generate_rv": 160, "visualise_v": 160, "ve": 160, "statist": [160, 161], "crystal_structur": [160, 162], "volume_fract": [160, 162], "size_distribut": [160, 162], "radial_distribution_funct": 160, "number_fraction_on_boundari": 160, "preset_statistics_model": 160, "axis_odf": 160, "matrix": 160, "floatcondit": 160, "singlecrystalparamet": 160, "specimen": 160, "understood": 160, "specimensymmetri": 160, "cubicexampl": 160, "orthorhomb": [160, 162], "pa": [160, 161], "mpa": [160, 161, 162], "gpa": [160, 161], "pascal": 160, "countour": 160, "colour": 160, "bar": 160, "yield": [160, 161, 162, 177, 179], "vonmis": 160, "von": [160, 180], "mise": [160, 180], "criteronexampl": 160, "tresca": 160, "ductil": 160, "criterionexampl": 160, "hosford": 160, "barlat_yld91": 160, "barlat": 160, "anisotrop": 160, "modelexampl": 160, "barlat_yld2000_2d": 160, "barlat_yld2004_18p": 160, "functionsexampl": 160, "hill1979": 160, "generalis": 160, "hill": 160, "hill1948": [160, 162], "quadrat": 160, "inputsparametertypedefaultg": 161, "all_g": 161, "noneall_x": 161, "noneall_accept": 161, "nonep_0": 161, "outputsparametertypechain_se": 161, "chain_g": 161, "threshold": [161, 162], "num_chain": [161, 162], "num_fail": 161, "level_pf": 161, "level_cov": 161, "pf": 161, "is_finish": [161, 162], "accept_r": 161, "0rule": 161, "mainenviron": 161, "damask_parse_envscript": 161, "uq": 161, "python_scriptscript": 161, "all_xall_acceptall_gp_0xscript": 161, "level_pfnum_failedchain_seedslevel_covnum_chainsaccept_ratepfis_finishedchain_gthresholdcommand": 161, "0ex": 161, "descriptionpseudo": 161, "inputsparametertypedefaultload_caseloadcas": 161, "outputsthi": 161, "actionsthi": 161, "inputsparametertypedefaultmicrostructure_seedsmicrostructurese": 161, "inputsparametertypedefaultorientationsorient": 161, "inputsparametertypedefaultx": 161, "outputsparametertypei": 161, "python_envscript": 161, "xscript": 161, "ycommand": 161, "descriptiondump": 161, "inputsparametertypedefaultve_responsedict": 161, "yield_pointfloat": 161, "dump_pathstr": 161, "yield_pointve_responsedump_pathcommand": 161, "sum_i": [161, 162], "target_pf": [161, 162], "dimens": [161, 162], "outputsparametertypeg": 161, "target_pfdimensionsum_yxscript": 161, "gcommand": 161, "threshold_yield_stress": [161, 162], "yield_stress": 161, "threshold_yield_stressxyield_stressscript": 161, "descriptionfit": 161, "tensil": [161, 162], "single_crystal_parameterssinglecrystalparamet": 161, "tensile_test": 161, "initial_dampinglist": 161, "outputsparametertypesingle_crystal_parameterssinglecrystalparameterslevenberg_marquardt_fitterlistact": 161, "formable_envscript": 161, "ve_respons": [161, 162, 180], "single_crystal_paramet": [161, 162], "tensile_testinitial_dampingscript": 161, "single_crystal_parameterslevenberg_marquardt_fittercommand": 161, "volumem": 161, "inputsparametertypedefaultyield_function_namestr": 161, "yield_point_criteria": [161, 162], "ve_responsedict": 161, "fit_yield_fixed_paramet": 161, "nonefit_yield_initial_paramet": 161, "nonefit_yield_opt_paramet": 161, "noneoutputsparametertypefitted_yield_funct": 161, "fit_yield_fixed_parametersyield_function_nameve_respons": 161, "fit_yield_initial_parametersfit_yield_opt_parametersyield_point_criteriave_respons": 161, "multiaxi": [161, 162], "fitted_yield_functionscommand": 161, "descriptiongener": 161, "inputsparametertypedefaultve_sizelist": 161, "num_grainsint": 161, "phase_labelstr": 161, "outputsparametertypemicrostructure_seedsmicrostructureseedsact": 161, "seeds_from_random": 161, "num_grainsphase_labelve_sizescript": 161, "microstructure_seedscommand": 161, "prop_std": [161, 162], "outputsparametertypex": 161, "prop_stdxscript": 161, "xcommand": 161, "lambda_": 161, "prop_stdlambda_xscript": 161, "inputsparametertypedefaultnum_orientationsint": 161, "outputsparametertypeorientationsorientationsact": 161, "main_script_test": 161, "num_orientationsscript": 161, "orientationscommand": 161, "inputsparametertypedefaultgeom_path": 161, "material_path": 161, "orientationsorientationsnoneoutputsparametertypevolume_elementdictact": 161, "generate_volume_element_from_damask_input_fil": 161, "geom_pathorientationsmaterial_pathscript": 161, "volume_elementcommand": 161, "voronoi": [161, 162], "diagram": 161, "ve_grid_sizelist": 161, "homog_labelstr": 161, "orientationsorientationsnonescale_morphologylist": 161, "3nonescale_update_sizebool": 161, "outputsparametertypevolume_elementdictact": 161, "generate_volume_element_voronoi": 161, "ve_grid_sizescale_morphologyorientationsmicrostructure_seedsscale_update_sizehomog_labelscript": 161, "inputsparametertypedefaultgrid_sizelist": 161, "phase_statisticslist": 161, "resolutionlistnonesizelist": 161, "3noneoriginlist": 161, "3noneperiodicbool": 161, "precipitatesboolnoneorientationsorientationsnoneoutputsparametertypevolume_elementdictact": 161, "dream_3d_hdf5_fil": 161, "dream_3d_pipelin": 161, "dream_3d_envinput": 161, "dream_3d_pipelineinput": 161, "grid_siz": [161, 162], "period": 161, "phase_statist": [161, 162], "precipit": 161, "orientationsscript": 161, "dream_3d": 161, "generate_volume_element_statist": 161, "sizegrid_sizeorientationsresolutionoriginprecipitatesperiodicphase_statisticscommand": 161, "1rule": 161, "dream_3d_envcommand": 161, "0cmd": 161, "json2rul": 161, "volume_el": [161, 162], "dream_3d_envoutput": 161, "volume_elementoutput": 161, "dream_3d_hdf5_filescript": 161, "parse_dream_3d_volume_el": 161, "extrus": 161, "inputsparametertypedefaultmicrostructure_imagedict": 161, "depthint": 161, "image_axeslist": 161, "phase_labelstrnonephase_label_mappingdictnoneoutputsparametertypevolume_elementdictact": 161, "phase_label_mappingphase_labelimage_axesmicrostructure_imagedepthhomog_labelscript": 161, "ve_sizelist": 161, "scale_morphologylist": 161, "generate_volume_element_voronoi_vari": 161, "phase_labelve_sizeve_grid_sizescale_morphologyscale_update_sizehomog_labelxscript": 161, "all_x": 161, "all_accept": 161, "all_xall_acceptall_ggthresholdxscript": 161, "all_xall_acceptall_ggxcommand": 161, "all_x_inn": 161, "noneall_g_inn": 161, "noneoutputsparametertypex": 161, "all_g_inn": 161, "all_xall_gall_g_innergall_x_innerthresholdxscript": 161, "all_g_innerxall_x_innercommand": 161, "inputsparametertypedefaultchain_index": 161, "chain_se": 161, "chain_gchain_seedschain_indexscript": 161, "num_chains_per_upd": [161, 162], "chain_index": [161, 162], "all_xchain_seedsall_acceptall_gnum_chains_per_updatechain_gscript": 161, "descriptionget": 161, "differenti": 161, "interfer": 161, "contrast": 161, "microscopi": 161, "inputsparametertypedefaultdicdict": 161, "ebsddict": 161, "root_pathstr": 161, "transform_typestr": 161, "affin": [161, 162], "scaling_factorint": 161, "find_grains_algorithmstr": 161, "outputsparametertypemicrostructure_imagedictact": 161, "defdap_envscript": 161, "find_grains_algorithmebsddicroot_pathscaling_factortransform_typescript": 161, "microstructure_imagecommand": 161, "inputsparametertypedefaultebsddict": 161, "scaling_factorroot_pathebsdscript": 161, "inputsparametertypedefaulti": 161, "outputsparametertypesum_i": 161, "null_envcommand": 161, "delim": 161, "echo": [161, 163, 169, 171, 172], "pythonout": 161, "descriptionmodifi": 161, "around": [161, 166, 177], "inputsparametertypedefaultvolume_elementdict": 161, "buffer_sizeslist": 161, "phase_idslist": 161, "phase_labelslist": 161, "orderlist": 161, "3noneoutputsparametertypevolume_elementdictact": 161, "add_ve_buffer_zon": 161, "phase_idsorderphase_labelshomog_labelbuffer_sizesvolume_elementscript": 161, "alter": 161, "new_grid_sizelist": 161, "volume_elementnew_grid_sizescript": 161, "descriptionread": 161, "inputsparametertypedefaultcsv_file_pathstr": 161, "csv_argumentsdict": 161, "eng_stress_col_indexintnoneeng_strain_col_indexintnonetrue_stress_col_indexintnonetrue_strain_col_indexintnonestress_unitsstr": 161, "plastic_rangelist": 161, "2noneoutputsparametertypetensile_test": 161, "plastic_rangetrue_strain_col_indexeng_stress_col_indexcsv_argumentscsv_file_pathtrue_stress_col_indexeng_strain_col_indexstress_unitsscript": 161, "tensile_testcommand": 161, "inputsparametertypedefaultdimens": 161, "dimensionscript": 161, "inputsparametertypedefaultcompilebool": 161, "ctf_file_pathstr": 161, "specimen_symmetrystr": 161, "ebsd_phasestr": 161, "num_orientationsint": 161, "ebsd_reference_frame_transformationstr": 161, "ebsd_rotationdictnoneoutputsparametertypeorientationsorientationsact": 161, "matlab_envscript": 161, "sample_orientations_ctf": 161, "compile_mtexcommand": 161, "sample_orientations_ctfscript": 161, "run_compiled_mtexscript": 161, "ebsd_phaseebsd_reference_frame_transformationctf_file_pathcompilenum_orientationsspecimen_symmetryebsd_rotationscript": 161, "2rule": 161, "run_mtexscript": 161, "crc_file_pathstr": 161, "sample_orientations_crc": 161, "sample_orientations_crcscript": 161, "ebsd_phaseebsd_reference_frame_transformationcompilenum_orientationsspecimen_symmetryebsd_rotationcrc_file_pathscript": 161, "descriptionextract": 161, "sample_texture_ctf": 161, "sample_texture_ctfscript": 161, "sample_texture_crc": 161, "sample_texture_crcscript": 161, "odf_mat_file_pathstr": 161, "sample_texture_odf_matscript": 161, "compileodf_mat_file_pathnum_orientationsscript": 161, "crystal_symmetrystr": 161, "odf_componentslist": 161, "compilebool": 161, "sample_texture_model_odfscript": 161, "compilenum_orientationsspecimen_symmetrycrystal_symmetryodf_componentsscript": 161, "sample_texture_randomscript": 161, "compilenum_orientationscrystal_symmetryspecimen_symmetryscript": 161, "descriptionsimul": 161, "load_caseloadcas": 161, "homogenizationdict": 161, "damask_phasesdict": 161, "damask_post_processinglist": 161, "ve_response_datadict": 161, "damask_viz": [161, 162], "nonesingle_crystal_parameterssinglecrystalparametersnonedamask_solverdictnonedamask_numericsdictnonecalculate_yield_stress": 161, "noneremove_damask_hdf5": 161, "outputsparametertypedamask_logdictdamask_post_processing_result": 161, "ve_responsedictdamask_viz_result": 161, "damask_stdout_fil": 161, "damask_hdf5_fil": 161, "damask_geom_fil": [161, 162], "damask_parse_envinput": 161, "damask_geom_fileinput": 161, "volume_elementscript": 161, "write_geom": 161, "damask_load_fil": [161, 162], "damask_load_fileinput": 161, "load_cas": [161, 162], "damask_solverscript": 161, "write_load": 161, "load_casedamask_solvercommand": 161, "damask_material_fil": [161, 162], "damask_material_fileinput": 161, "homogen": [161, 162], "damask_phas": [161, 162], "single_crystal_parametersscript": 161, "write_materi": 161, "damask_phasessingle_crystal_parametersvolume_elementhomogenizationcommand": 161, "3rule": 161, "damask_numerics_fil": 161, "not_equal_to": 161, "damask_numerics_fileinput": 161, "damask_numericsscript": 161, "write_numer": 161, "damask_numericscommand": 161, "4rule": 161, "damask_envcommand": 161, "geom": [161, 162], "vtiout": 161, "logerr": 161, "log5rul": 161, "damask_log": 161, "damask_parse_envoutput": 161, "damask_logoutput": 161, "damask_stdout_filescript": 161, "read_log": 161, "damask_logcommand": 161, "6rule": 161, "damask_post_processing_result": 161, "damask_post_processing_resultoutput": 161, "damask_hdf5_filescript": 161, "process_damask_hdf5": 161, "damask_post_processingscript": 161, "damask_post_processing_resultcommand": 161, "7rule": 161, "ve_responseoutput": 161, "extract_damask_hdf5": 161, "ve_response_datascript": 161, "ve_responsecommand": 161, "8rule": 161, "damask_viz_result": 161, "damask_viz_resultoutput": 161, "viz_damask_hdf5": 161, "damask_vizscript": 161, "ve_responsedamask_viz_resultcommand": 161, "9rule": 161, "calculate_yield_stress": [161, 162], "yield_stressoutput": 161, "get_yield_stress": 161, "calculate_yield_stressremove_damask_hdf5script": 161, "ve_responseyield_stresscommand": 161, "concurr": 161, "nonesingle_crystal_parameterssinglecrystalparametersnonedamask_solverdictnonedamask_numericsdictnoneoutputsparametertypeve_responsedictact": 161, "damask_solv": 161, "high_concurr": 161, "write_input_fil": 161, "load_casehomogenizationdamask_phasessingle_crystal_parametersvolume_elementdamask_solverdamask_numericscommand": 161, "log2rul": 161, "process_hdf5": 161, "damask_vizve_response_datadamask_post_processingscript": 161, "x_0": [161, 162], "stddev": [161, 162], "y_star": [161, 162], "system_analysis_toy_model_da_coars": 161, "x_0y_starxstddevscript": 161, "system_analysis_toy_model_da_fin": 161, "target_pfdimensionxscript": 161, "inputsparametertypedefaultlambda_": 161, "noneall_g": 161, "noneoutputsparametertypelambda_": 161, "all_gall_xall_acceptscript": 161, "all_xall_glambda_all_acceptcommand": 161, "descriptionvisualis": 161, "pathstr": 161, "vti": [161, 162], "volume_elementpathcommand": 161, "ipf_reference_direct": 161, "use_contoursbool": 161, "plot_ipf_kei": 161, "plot_inverse_pole_figur": 161, "plot_inverse_pole_figuresscript": 161, "compileipf_reference_directionsplot_ipf_keycrystal_symmetryuse_contourscommand": 161, "pole_figure_directionslist": 161, "ipf_reference_directionstr": 161, "colourbar_limitslist": 161, "2noneuse_one_colourbarbool": 161, "plot_pole_figur": 161, "plot_pole_figuresscript": 161, "compilecolourbar_limitspole_figure_directionsuse_one_colourbarplot_ipf_keycrystal_symmetryipf_reference_directionuse_contourscommand": 161, "demonstr": [162, 163], "somewher": 162, "mf": [162, 165, 168, 175, 176, 180], "copy_demo_workflow": 162, "dst": 162, "ebsd": 162, "extrud": 162, "tension": 162, "load_microstructure_ebsd": 162, "demo_data_fil": 162, "defdap_small_dataset": 162, "scaling_factor": 162, "ebsd_data": 162, "flip_vert": 162, "8": [162, 165], "30": [162, 167], "generate_volume_element_extrus": 162, "depth": 162, "image_ax": 162, "homog_label": 162, "ti": 162, "visualise_ve_vtk": 162, "modify_ve_add_buffer_zon": 162, "buffer_s": 162, "phase_id": 162, "ti_iso": 162, "air": 162, "simulate_ve_loading_damask": [162, 163, 180], "0e": 162, "n_constitu": 162, "hp": 162, "587": 162, "f_p": 162, "p": [162, 180], "elast": 162, "hook": 162, "c_11": 162, "0e9": 162, "c_12": 162, "90": [162, 180], "c_13": 162, "66": 162, "c_33": 162, "181": 162, "7e9": 162, "c_44": 162, "46": 162, "5e9": 162, "phenopowerlaw": 162, "gamma_sl": 162, "n_sl": 162, "12": [162, 165, 180], "basal": 162, "prism": 162, "pyr": 162, "20": [162, 165], "a_sl": 162, "dot_gamma_0_sl": 162, "001": 162, "xi_0_sl": 162, "349": 162, "150": 162, "1107": 162, "zambaldi": 162, "xi_inf_sl": 162, "568": 162, "7": 162, "3420": 162, "h_0_sl": 162, "sl": 162, "15": [162, 165], "e6": 162, "h_sl": 162, "entri": [162, 163], "cf": 162, "175": 162, "4e9": 162, "42": 162, "55e9": 162, "isotrop": 162, "1e8": 162, "1e6": 162, "49": 162, "5e6": 162, "xi": 162, "gamma": 162, "xi_0": 162, "3e6": 162, "xi_inf": 162, "6e6": 162, "dot_gamma_0": 162, "h_0": 162, "dilat": 162, "damask_post_process": 162, "ve_response_data": 162, "averag": 162, "quantiti": 162, "sim": 162, "field_nam": 162, "sigma": 162, "phase_nam": 162, "out_nam": 162, "vol_avg_stress": [162, 180], "mean_along_ax": 162, "epsilon_u": 162, "vol_avg_strain": 162, "spatial": 162, "probabl": [162, 165], "u_n": 162, "itmin": 162, "itmax": 162, "100": [162, 163, 169, 172], "fwbw_differ": 162, "dic": 162, "load_microstructure_ebsd_d": 162, "transform_typ": 162, "dic_data": 162, "28": 162, "328e": 162, "micron": 162, "452": 162, "322": 162, "200": [162, 163, 172], "417": 162, "159": 162, "144": 162, "352": 162, "269": 162, "102": [162, 171, 172], "33": 162, "500": 162, "48": 162, "295": 162, "245": 162, "176": 162, "437": 162, "61": 162, "382": 162, "391": 162, "398": 162, "240": 162, "208": 162, "780": 162, "606": 162, "374": 162, "816": 162, "285": 162, "385": 162, "612": 162, "543": 162, "186": 162, "218": 162, "839": 162, "149": 162, "516": 162, "519": 162, "335": 162, "856": 162, "145": 162, "794": 162, "686": 162, "743": 162, "424": 162, "470": 162, "textur": [162, 180], "kesten": 162, "h": 162, "pirgazi": 162, "2016": 162, "metal": 162, "alloi": 162, "technologi": 162, "13": 162, "1303": 162, "1315": 162, "doi": 162, "1080": 162, "02670836": 162, "1231746": 162, "sample_texture_from_model_odf_mtex": [162, 180], "crystal_symmetri": 162, "specimen_symmetri": 162, "num_orient": 162, "2000": 162, "odf_compon": [162, 180], "unimod": 162, "component_fract": 162, "halfwidth": 162, "modal_orientation_eul": [162, 180], "35": [162, 180], "45": [162, 180], "copper": [162, 180], "59": [162, 180], "37": [162, 180], "63": [162, 180], "goss": [162, 180], "brass": [162, 180], "27": [162, 165], "dillamor": 162, "cube": [162, 180], "visualise_orientations_pole_figure_mtex": 162, "orientaion": 162, "pole_figure_direct": 162, "add_mis": 162, "sigma_vm": 162, "vol_avg_equivalent_stress": 162, "epsilon_v": 162, "_vm": 162, "vol_avg_equivalent_strain": 162, "vol_avg_equivalent_plastic_strain": 162, "ipfcolor_": 162, "numerics_exampl": 162, "experiment": 162, "curv": 162, "levenberg": 162, "marquardt": 162, "generate_microstructure_seeds_from_random": 162, "ve_siz": 162, "num_grain": 162, "generate_volume_element_from_voronoi": [162, 180], "ve_grid_s": 162, "read_tensile_test_from_csv": 162, "csv_file_path": 162, "surfalex_tensile_test": 162, "csv_argument": 162, "skip_row": 162, "header_row": 162, "eng_strain_col_index": 162, "eng_stress_col_index": 162, "stress_unit": 162, "3500": 162, "170": 162, "400e6": 162, "30e6": 162, "95e6": 162, "106750000000": 162, "60410000000": 162, "28340000000": 162, "25": [162, 165], "atol_xi": 162, "xi_sl": 162, "05": 162, "initial_damp": 162, "microstructure_se": 162, "multiaxial_load_cas": 162, "f_e": 162, "l_p": 162, "75": 162, "31": 162, "vol_avg_plastic_strain": [162, 180], "yield_function_nam": 162, "equivalent_plastic_strain": 162, "128": 162, "256": 162, "00": 162, "sum": [162, 163, 172, 180], "esd_mean": 162, "esd_log_mean": 162, "esd_log_stddev": 162, "num_bin": 162, "bin_step_s": 162, "weight": 162, "100_000": 162, "200_000": 162, "s1": [162, 163, 172], "s2": [162, 163, 172], "rc": 162, "rd1": 162, "rd2": 162, "nd1": 162, "nd2": 162, "increas": 162, "modify_ve_grid_s": 162, "new_grid_s": 162, "crc": 162, "crc_file_path": 162, "cpr": 162, "pick": 162, "sample_orientations_from_crc_file_mtex": 162, "texture_al_crc": 162, "texture_": 162, "ebsd_reference_frame_transform": 162, "ebsd_phas": 162, "ebsd_rot": 162, "1000": 162, "use_contour": 162, "sample_orientations_from_ctf_file_mtex": 162, "ctf_file_path": 162, "sample_texture_from_crc_file_mtex": 162, "sample_texture_from_ctf_file_mtex": 162, "sample_texture_from_odf_mat_file_mtex": 162, "odf_mat_file_path": 162, "fraction": 162, "modal_orientation_hkl": 162, "modal_orientation_uvw": 162, "hex": 162, "sample_texture_random_mtex": 162, "surfac": [162, 177, 179], "aluminium": 162, "strong": 162, "1024": 162, "64": 162, "scale_morphologi": 162, "80": 162, "400": 162, "0002": 162, "17": [162, 165], "107": 162, "3e": 162, "9": 162, "9e": 162, "499": 162, "912": 162, "2e": 162, "60c": 162, "138": 162, "300": [162, 172, 180], "wip": 162, "strategi": 162, "minut": 162, "meta_task_schema": [162, 172], "system_analysi": [162, 172], "markov_chain_st": 162, "inner": 162, "num_stat": 162, "p_0": 162, "outer": [162, 163], "meta_task": [162, 172], "generate_volume_element_from_voronoi_random_vari": 162, "yield_point": 162, "002": [162, 180], "remove_damask_hdf5": 162, "evaluate_yield_stress_limit_st": 162, "sample_direct_mc": 162, "120": 162, "collate_result": 162, "initialise_markov_chain": 162, "generate_next_st": 162, "increment_chain": 162, "mg": 162, "40": 162, "62350": 162, "troman": 162, "2011": 162, "anisotropi": 162, "hcp": 162, "polycryst": 162, "rho": 162, "1740": 162, "3e9": 162, "21": [162, 165], "wang": 162, "acta": 162, "materialia": 162, "77": 162, "2014": 162, "1016": 162, "actamat": 162, "07": 162, "048": 162, "xi_tw": 162, "n_tw": 162, "55": 162, "135": 162, "xi_0_tw": 162, "dot_gamma_0_tw": 162, "f_sat_sl": 162, "tw": 162, "h_0_tw": 162, "50": 162, "h_tw": 162, "proposal_upd": 162, "middl": 162, "num_batch": 162, "update_propos": 162, "initialise_markov_chains_ac": 162, "generate_next_state_ac": 162, "dev": 162, "system_analysis_32": 162, "system_analysis_16": 162, "inner_markov_chain": 162, "mc": 162, "outer_markov_chain": 162, "increment_chain_inn": 162, "system_analysis_toy_model": 162, "dummy_pre_processor": 162, "model_sum_x": 162, "evaluate_limit_state_normal_sum": 162, "1e": 162, "generate_next_state_c": 162, "system_analysis_da_fin": 162, "98": 162, "system_analysis_da_coars": 162, "11": 162, "14": [162, 165], "tessel": 162, "magnesium": 162, "titanium": 162, "journal": 162, "356": 162, "367": 162, "2021": 162, "1557": 162, "jmr": 162, "334": 162, "132": 162, "598": 162, "610": 162, "2017": 162, "015": 162, "127": 162, "96": 162, "shebang_arg": 163, "short": 163, "anyth": 163, "lot": 163, "smp": 163, "pe": 163, "mem512": 163, "isn": 163, "independ": 163, "act": 163, "my_schema": 163, "conductance_valu": 163, "my_task_schema": [163, 164], "my_group": 163, "whichev": 163, "solidifi": 163, "understand": 163, "groups_workflow": 163, "captur": 163, "p3": [163, 164, 169, 172], "conveni": [163, 167], "compact": 163, "easier": 163, "from_input": 163, "my_command_fil": [163, 164], "my_input_1": 163, "my_input_2": 163, "generate_input_fil": [163, 164], "advanced_workflow": 163, "too": 163, "hard": 163, "path_to_output_fil": 163, "signatur": 163, "return_paramet": 163, "command_file1": 163, "command_file2": 163, "your_processing_script": 163, "command_file_you_want_to_sav": 163, "input1": 163, "input2": 163, "the_data": 163, "rework": 163, "process_some_data": 163, "input_data": [163, 164], "parsed_output": 163, "my_input_fil": [163, 164], "process_input_fil": [163, 164], "processed_fil": [163, 164], "parse_output": 163, "def": [163, 164, 180], "processed_data": 163, "combined_data": 163, "output_data": 163, "w": [163, 164], "indent": [163, 164], "quit": 164, "inde": 164, "split": 164, "few": 164, "underneath": 164, "your_parameter_nam": 164, "similarli": 164, "your_execut": 164, "your_command_fil": 164, "abaqu": 164, "sub_script_check": 164, "while": 164, "slightli": 164, "back": 164, "my_script": 164, "output_parameter_1": 164, "output_parameter_2": 164, "other_valu": 164, "appropri": 164, "js_0_act_0_input": 164, "js_0_act_0_output": 164, "automat": 164, "keep": 164, "json_in_json_out": 164, "json_in_direct_out": 164, "mixed_in_direct_out": 164, "read_and_save_using_json": 164, "read_json_from_another_task": 164, "p4": [164, 172], "pass_mixed_from_another_task": 164, "previous": 164, "p5": [164, 172], "json_data": 164, "mixed_in_json_out": 164, "languag": 164, "inputs_json_path": 164, "outputs_hdf5_path": 164, "my_input": 164, "input_valu": 164, "tell": [164, 169, 176], "string_to_print": 164, "my_other_task_schema": 164, "theses": 164, "my_output": 164, "illustr": 164, "process_data": 164, "could": [164, 169, 172, 180], "certain": 165, "advic": 165, "often": 165, "someth": 165, "1150": 165, "read_known_submissions_fil": 165, "1122": 165, "_parse_known_submissions_lin": 165, "valueerror": 165, "enough": 165, "caus": 165, "leftov": 165, "newer": [165, 168], "fix": 165, "older": [165, 169], "typeerror": 165, "traceback": 165, "np": [165, 180], "pyplot": 165, "plt": 165, "lib": 165, "site": 165, "__dir__": 165, "sdk_app": 165, "get_app_module_dir": 165, "config_opt": 165, "configopt": 165, "directory_env_var": 165, "matflow_config_dir": 165, "default_directori": 165, "sentry_dsn": 165, "2463b288fd1a40f4bada9f5ff53f6811": 165, "o1180430": 165, "ingest": 165, "sentri": 165, "6293231": 165, "19": [165, 180], "sentry_traces_sample_r": 165, "sentry_env": 165, "__version__": 165, "default_known_configs_dir": 165, "22": 165, "24": 165, "load_builtin_template_component_data": 165, "26": 165, "unexpect": 165, "problem": 165, "constrain": 165, "whatev": 165, "releas": [165, 169], "0a110": 165, "0a178": 165, "0a147": 165, "shortcut": [166, 167, 177], "analys": [166, 177], "old": [166, 168, 177], "good": 167, "less": 167, "saw": 167, "workflow_fil": 167, "clarif": 167, "sometim": [167, 168, 169, 172], "behavior": 168, "my": 168, "temporarili": 168, "load_config": 168, "reload_config": 168, "consol": 168, "incompat": 168, "reset_config": 168, "had": 168, "pointer": 168, "get_config_path": 168, "clear_known_submissions_fil": 168, "declar": 169, "runnabl": 169, "extern": 169, "whilst": 169, "comparison": 169, "facilit": 169, "my_env": 169, "alpha": 169, "my_execut": 169, "sole": 169, "my_task": [169, 171], "restrict": 169, "101": [169, 171], "201": 169, "my_other_task": 169, "my_other_env": 169, "At": 169, "greatest": 169, "verbos": 169, "refin": 169, "chosen": 169, "reset": 170, "disambigu": 170, "meta": [170, 177], "customis": [170, 177], "my_loop": 171, "sinc": [171, 172], "103": 171, "unlik": 172, "constitut": 172, "compris": 172, "s0": 172, "p2b": 172, "s3": 172, "220": 172, "sake": 172, "hf": 172, "m1": 172, "metatask": 172, "wk": [172, 176, 180], "meta_task_workflow": 172, "individu": 172, "test_metatask_multi_element_sets_custom_parametris": 172, "301": 172, "fulli": 174, "alphanumer": 174, "underscor": 174, "util": 174, "check_valid_py_identifi": 174, "prefer": 174, "acronym": 174, "remot": [175, 176], "wkt": [175, 176], "host": 176, "sandbox": 176, "zenodo": 176, "1210144": 176, "defaultdict": 180, "ipython": 180, "plotli": 180, "subplot": 180, "make_subplot": 180, "graph_object": 180, "figurewidget": 180, "get_hydrostatic_tensor": 180, "hydrostat": 180, "diagon": 180, "hydro": 180, "zeros_lik": 180, "trace": 180, "axis1": 180, "axis2": 180, "get_von_mis": 180, "deviator": 180, "sqrt": 180, "axi": 180, "get_von_mises_stress": 180, "get_von_mises_strain": 180, "order_coplanar_point": 180, "anticlockwis": 180, "clockwis": 180, "coplanar": 180, "lie": 180, "opposit": 180, "linalg": 180, "norm": 180, "centroid": 180, "newaxi": 180, "cr": 180, "tripl": 180, "stp": 180, "einsum": 180, "ik": 180, "sign": 180, "ang": 180, "arctan2": 180, "ang_ord": 180, "argsort": 180, "group_elements_by_textur": 180, "err_id": 180, "rve": 180, "speed": 180, "sort": 180, "scenario": 180, "ouput": 180, "sim_elems_by_ori": 180, "elem": 180, "continu": 180, "gen_ve_elem": 180, "sample_texture_elem": 180, "modal_ori_eul": 180, "get_stress_at_yield": 180, "plastic_strain": 180, "plastic_strain_vm": 180, "yield_idx": 180, "ab": 180, "argmin": 180, "stress_at_yield": 180, "get_yield_tensor": 180, "sim_el": 180, "yield_tensor": 180, "closest": 180, "eq_stress_idx": 180, "eq_stress": 180, "plot_yield_surfac": 180, "texture_eul": 180, "nsubplot": 180, "len": 180, "ncol": 180, "nrow": 180, "ceil": 180, "fig": 180, "col": 180, "subplot_titl": 180, "vertical_spac": 180, "horizontal_spac": 180, "update_layout": 180, "height": 180, "showlegend": 180, "seaborn": 180, "title_text": 180, "layout": 180, "yaxi": 180, "scaleanchor": 180, "scaleratio": 180, "titl": 180, "\u03c3": 180, "td": 180, "xaxi": 180, "rd": 180, "text_nam": 180, "xy0": 180, "order_idx": 180, "concaten": 180, "add_scatt": 180, "min": 180, "write_imag": 180, "yield_surfac": 180, "png": 180}, "objects": {"": [[6, 0, 0, "-", "matflow"]], "matflow": [[7, 1, 1, "", "Action"], [8, 1, 1, "", "ActionEnvironment"], [9, 1, 1, "", "ActionRule"], [10, 1, 1, "", "ActionScope"], [11, 1, 1, "", "ActionScopeType"], [12, 1, 1, "", "Command"], [13, 1, 1, "", "CommandFilesList"], [14, 1, 1, "", "DirectPosix"], [15, 1, 1, "", "DirectWindows"], [16, 1, 1, "", "Element"], [17, 1, 1, "", "ElementAction"], [18, 1, 1, "", "ElementActionRun"], [19, 1, 1, "", "ElementFilter"], [20, 1, 1, "", "ElementGroup"], [21, 1, 1, "", "ElementInputFiles"], [22, 1, 1, "", "ElementInputs"], [23, 1, 1, "", "ElementIteration"], [24, 1, 1, "", "ElementOutputFiles"], [25, 1, 1, "", "ElementOutputs"], [26, 1, 1, "", "ElementParameter"], [27, 1, 1, "", "ElementPropagation"], [28, 1, 1, "", "ElementRepeats"], [29, 1, 1, "", "ElementResources"], [30, 1, 1, "", "ElementSet"], [31, 1, 1, "", "Elements"], [32, 1, 1, "", "Environment"], [33, 1, 1, "", "EnvironmentsList"], [34, 1, 1, "", "Executable"], [35, 1, 1, "", "ExecutableInstance"], [36, 1, 1, "", "ExecutablesList"], [37, 1, 1, "", "Executor"], [38, 1, 1, "", "FileNameExt"], [39, 1, 1, "", "FileNameSpec"], [40, 1, 1, "", "FileNameStem"], [41, 1, 1, "", "FileSpec"], [42, 1, 1, "", "GroupList"], [43, 1, 1, "", "InputFile"], [44, 1, 1, "", "InputFileGenerator"], [45, 1, 1, "", "InputFileGeneratorSource"], [46, 1, 1, "", "InputSource"], [47, 1, 1, "", "InputSourceType"], [48, 1, 1, "", "InputValue"], [49, 1, 1, "", "Jobscript"], [50, 1, 1, "", "JobscriptBlock"], [51, 1, 1, "", "Loop"], [52, 1, 1, "", "MetaTask"], [53, 1, 1, "", "MetaTaskSchema"], [54, 1, 1, "", "MultiPathSequence"], [55, 1, 1, "", "NumCores"], [56, 1, 1, "", "OutputFileParser"], [57, 1, 1, "", "OutputFileParserSource"], [58, 1, 1, "", "OutputLabel"], [59, 1, 1, "", "Parameter"], [60, 1, 1, "", "ParameterPath"], [61, 1, 1, "", "ParameterPropagationMode"], [62, 1, 1, "", "ParameterValue"], [63, 1, 1, "", "Parameters"], [64, 1, 1, "", "ParametersList"], [65, 1, 1, "", "QueuedScheduler"], [66, 1, 1, "", "ResourceList"], [67, 1, 1, "", "ResourceSpec"], [68, 1, 1, "", "Rule"], [69, 1, 1, "", "RunDirAppFiles"], [70, 1, 1, "", "SGEPosix"], [71, 1, 1, "", "SchemaInput"], [72, 1, 1, "", "SchemaOutput"], [73, 1, 1, "", "SchemaParameter"], [74, 1, 1, "", "SlurmPosix"], [75, 1, 1, "", "SubParameter"], [76, 1, 1, "", "Submission"], [77, 1, 1, "", "Task"], [78, 1, 1, "", "TaskInputParameters"], [79, 1, 1, "", "TaskList"], [80, 1, 1, "", "TaskObjective"], [81, 1, 1, "", "TaskOutputParameters"], [82, 1, 1, "", "TaskSchema"], [83, 1, 1, "", "TaskSchemasList"], [84, 1, 1, "", "TaskSourceType"], [85, 1, 1, "", "TaskTemplateList"], [86, 1, 1, "", "ValuePerturbation"], [87, 1, 1, "", "ValueSequence"], [88, 1, 1, "", "Workflow"], [89, 1, 1, "", "WorkflowBlueprint"], [90, 1, 1, "", "WorkflowLoop"], [91, 1, 1, "", "WorkflowLoopList"], [92, 1, 1, "", "WorkflowTask"], [93, 1, 1, "", "WorkflowTaskList"], [94, 1, 1, "", "WorkflowTemplate"], [95, 5, 1, "", "app"], [96, 6, 1, "", "cancel"], [97, 0, 0, "-", "cli"], [98, 6, 1, "", "get_OS_info"], [99, 6, 1, "", "get_known_submissions"], [100, 6, 1, "", "get_shell_info"], [101, 6, 1, "", "make_and_submit_demo_workflow"], [102, 6, 1, "", "make_and_submit_workflow"], [103, 6, 1, "", "make_demo_workflow"], [104, 6, 1, "", "make_workflow"], [105, 0, 0, "-", "param_classes"], [125, 6, 1, "", "run_hpcflow_tests"], [126, 6, 1, "", "run_tests"], [127, 6, 1, "", "show"], [128, 6, 1, "", "show_legend"], [129, 6, 1, "", "submit_workflow"], [130, 0, 0, "-", "tests"], [153, 7, 1, "cmdoption-matflow-config-dir", "--config-dir"], [153, 7, 1, "cmdoption-matflow-config-key", "--config-key"], [153, 7, 1, "cmdoption-matflow-help", "--help"], [153, 7, 1, "cmdoption-matflow-hpcflow-version", "--hpcflow-version"], [153, 7, 1, "cmdoption-matflow-run-time-info", "--run-time-info"], [153, 7, 1, "cmdoption-matflow-std-stream", "--std-stream"], [153, 7, 1, "cmdoption-matflow-timeit", "--timeit"], [153, 7, 1, "cmdoption-matflow-timeit-file", "--timeit-file"], [153, 7, 1, "cmdoption-matflow-version", "--version"], [153, 7, 1, "cmdoption-matflow-with-config", "--with-config"]], "matflow.Action": [[7, 2, 1, "", "abortable"], [7, 2, 1, "", "clean_up"], [7, 2, 1, "", "commands"], [7, 3, 1, "", "compose_source"], [7, 3, 1, "", "env_spec_from_hashable"], [7, 3, 1, "", "env_spec_to_hashable"], [7, 2, 1, "", "environments"], [7, 3, 1, "", "expand"], [7, 3, 1, "", "from_json_like"], [7, 3, 1, "", "generate_data_index"], [7, 3, 1, "", "get_block_act_idx_shell_vars"], [7, 3, 1, "", "get_command_file_labels"], [7, 3, 1, "", "get_command_input_types"], [7, 3, 1, "", "get_command_output_types"], [7, 3, 1, "", "get_command_parameter_types"], [7, 3, 1, "", "get_commands_action_env"], [7, 3, 1, "", "get_commands_file_hash"], [7, 3, 1, "", "get_environment"], [7, 3, 1, "", "get_environment_name"], [7, 3, 1, "", "get_environment_spec"], [7, 3, 1, "", "get_input_file_generator_action_env"], [7, 3, 1, "", "get_input_file_labels"], [7, 3, 1, "", "get_input_types"], [7, 3, 1, "", "get_output_file_labels"], [7, 3, 1, "", "get_output_file_parser_action_env"], [7, 3, 1, "", "get_output_types"], [7, 3, 1, "", "get_param_dump_file_path_HDF5"], [7, 3, 1, "", "get_param_dump_file_path_JSON"], [7, 3, 1, "", "get_param_load_file_path_HDF5"], [7, 3, 1, "", "get_param_load_file_path_JSON"], [7, 3, 1, "", "get_parameter_dependence"], [7, 3, 1, "", "get_parameter_names"], [7, 3, 1, "", "get_possible_scopes"], [7, 3, 1, "", "get_precise_scope"], [7, 3, 1, "", "get_required_executables"], [7, 3, 1, "", "get_script_artifact_name"], [7, 3, 1, "", "get_script_determinant_hash"], [7, 3, 1, "", "get_script_determinants"], [7, 3, 1, "", "get_script_input_output_file_command_args"], [7, 3, 1, "", "get_script_input_output_file_paths"], [7, 3, 1, "", "get_script_name"], [7, 3, 1, "", "get_snippet_script_path"], [7, 3, 1, "", "get_snippet_script_str"], [7, 2, 1, "", "input_file_generators"], [7, 2, 1, "", "input_files"], [7, 4, 1, "", "is_IFG"], [7, 4, 1, "", "is_OFP"], [7, 3, 1, "", "is_input_type_required"], [7, 3, 1, "", "is_snippet_script"], [7, 2, 1, "", "output_file_parsers"], [7, 2, 1, "", "output_files"], [7, 3, 1, "", "process_script_data_formats"], [7, 2, 1, "", "rules"], [7, 2, 1, "", "save_files"], [7, 2, 1, "", "script"], [7, 2, 1, "", "script_data_files_use_opt"], [7, 2, 1, "", "script_data_in"], [7, 4, 1, "", "script_data_in_grouped"], [7, 4, 1, "", "script_data_in_has_direct"], [7, 4, 1, "", "script_data_in_has_files"], [7, 2, 1, "", "script_data_out"], [7, 4, 1, "", "script_data_out_grouped"], [7, 4, 1, "", "script_data_out_has_direct"], [7, 4, 1, "", "script_data_out_has_files"], [7, 2, 1, "", "script_exe"], [7, 4, 1, "", "script_is_python_snippet"], [7, 2, 1, "", "script_pass_env_spec"], [7, 4, 1, "", "task_schema"], [7, 3, 1, "", "test_rules"], [7, 3, 1, "", "to_dict"], [7, 3, 1, "", "to_json_like"]], "matflow.ActionEnvironment": [[8, 2, 1, "", "environment"], [8, 3, 1, "", "from_json_like"], [8, 2, 1, "", "scope"], [8, 3, 1, "", "to_dict"], [8, 3, 1, "", "to_json_like"]], "matflow.ActionRule": [[9, 2, 1, "", "action"], [9, 3, 1, "", "check_exists"], [9, 3, 1, "", "check_missing"], [9, 2, 1, "", "command"], [9, 3, 1, "", "from_json_like"], [9, 2, 1, "", "rule"], [9, 3, 1, "", "test"], [9, 3, 1, "", "to_dict"], [9, 3, 1, "", "to_json_like"]], "matflow.ActionScope": [[10, 3, 1, "", "any"], [10, 3, 1, "", "from_json_like"], [10, 3, 1, "", "input_file_generator"], [10, 2, 1, "", "kwargs"], [10, 3, 1, "", "main"], [10, 3, 1, "", "output_file_parser"], [10, 3, 1, "", "processing"], [10, 3, 1, "", "to_dict"], [10, 3, 1, "", "to_json_like"], [10, 3, 1, "", "to_string"], [10, 2, 1, "", "typ"]], "matflow.ActionScopeType": [[11, 2, 1, "", "ANY"], [11, 2, 1, "", "INPUT_FILE_GENERATOR"], [11, 2, 1, "", "MAIN"], [11, 2, 1, "", "OUTPUT_FILE_PARSER"], [11, 2, 1, "", "PROCESSING"]], "matflow.Command": [[12, 2, 1, "", "action"], [12, 2, 1, "", "arguments"], [12, 2, 1, "", "command"], [12, 2, 1, "", "executable"], [12, 3, 1, "", "from_json_like"], [12, 3, 1, "", "get_command_line"], [12, 3, 1, "", "get_output_types"], [12, 3, 1, "", "get_required_executables"], [12, 3, 1, "", "process_std_stream"], [12, 2, 1, "", "rules"], [12, 2, 1, "", "stderr"], [12, 2, 1, "", "stdin"], [12, 2, 1, "", "stdout"], [12, 3, 1, "", "to_dict"], [12, 3, 1, "", "to_json_like"], [12, 2, 1, "", "variables"]], "matflow.CommandFilesList": [[13, 3, 1, "", "add_object"], [13, 3, 1, "", "add_objects"], [13, 3, 1, "", "from_json_like"], [13, 3, 1, "", "get"], [13, 3, 1, "", "get_all"], [13, 3, 1, "", "list_attrs"], [13, 3, 1, "", "to_dict"], [13, 3, 1, "", "to_json_like"]], "matflow.DirectPosix": [[14, 3, 1, "", "cancel_jobs"], [14, 3, 1, "", "get_job_state_info"], [14, 3, 1, "", "get_std_out_err_filename"], [14, 3, 1, "", "get_stderr_filename"], [14, 3, 1, "", "get_stdout_filename"], [14, 3, 1, "", "get_submit_command"], [14, 3, 1, "", "get_version_info"], [14, 3, 1, "", "is_jobscript_active"], [14, 3, 1, "", "is_num_cores_supported"], [14, 3, 1, "", "parse_submission_output"], [14, 3, 1, "", "process_resources"], [14, 4, 1, "", "unique_properties"], [14, 3, 1, "", "wait_for_jobscripts"]], "matflow.DirectWindows": [[15, 3, 1, "", "cancel_jobs"], [15, 3, 1, "", "get_job_state_info"], [15, 3, 1, "", "get_std_out_err_filename"], [15, 3, 1, "", "get_stderr_filename"], [15, 3, 1, "", "get_stdout_filename"], [15, 3, 1, "", "get_submit_command"], [15, 3, 1, "", "get_version_info"], [15, 3, 1, "", "is_jobscript_active"], [15, 3, 1, "", "is_num_cores_supported"], [15, 3, 1, "", "parse_submission_output"], [15, 3, 1, "", "process_resources"], [15, 4, 1, "", "unique_properties"], [15, 3, 1, "", "wait_for_jobscripts"]], "matflow.Element": [[16, 4, 1, "", "action_runs"], [16, 4, 1, "", "actions"], [16, 4, 1, "", "dir_name"], [16, 4, 1, "", "element_set"], [16, 4, 1, "", "element_set_idx"], [16, 3, 1, "", "get"], [16, 3, 1, "", "get_EAR_dependencies"], [16, 3, 1, "", "get_data_idx"], [16, 3, 1, "", "get_dependent_EARs"], [16, 3, 1, "", "get_dependent_element_iterations"], [16, 3, 1, "", "get_dependent_elements"], [16, 3, 1, "", "get_dependent_elements_recursively"], [16, 3, 1, "", "get_dependent_tasks"], [16, 3, 1, "", "get_element_dependencies"], [16, 3, 1, "", "get_element_iteration_dependencies"], [16, 3, 1, "", "get_input_dependencies"], [16, 3, 1, "", "get_parameter_sources"], [16, 3, 1, "", "get_sequence_value"], [16, 3, 1, "", "get_task_dependencies"], [16, 4, 1, "", "id_"], [16, 4, 1, "", "index"], [16, 4, 1, "", "input_files"], [16, 4, 1, "", "input_source_idx"], [16, 4, 1, "", "input_sources"], [16, 4, 1, "", "inputs"], [16, 4, 1, "", "is_pending"], [16, 4, 1, "", "iteration_IDs"], [16, 4, 1, "", "iterations"], [16, 4, 1, "", "latest_iteration"], [16, 4, 1, "", "latest_iteration_non_skipped"], [16, 4, 1, "", "output_files"], [16, 4, 1, "", "outputs"], [16, 4, 1, "", "schema_parameters"], [16, 4, 1, "", "sequence_idx"], [16, 4, 1, "", "task"], [16, 3, 1, "", "to_element_set_data"], [16, 4, 1, "", "workflow"]], "matflow.ElementAction": [[17, 4, 1, "", "action"], [17, 4, 1, "", "action_idx"], [17, 4, 1, "", "element"], [17, 4, 1, "", "element_iteration"], [17, 3, 1, "", "get"], [17, 3, 1, "", "get_data_idx"], [17, 3, 1, "", "get_parameter_names"], [17, 3, 1, "", "get_parameter_sources"], [17, 4, 1, "", "input_files"], [17, 4, 1, "", "inputs"], [17, 4, 1, "", "num_runs"], [17, 4, 1, "", "output_files"], [17, 4, 1, "", "outputs"], [17, 4, 1, "", "runs"], [17, 4, 1, "", "task"]], "matflow.ElementActionRun": [[18, 4, 1, "", "action"], [18, 4, 1, "", "commands_file_ID"], [18, 4, 1, "", "commands_idx"], [18, 3, 1, "", "compose_commands"], [18, 4, 1, "", "data_idx"], [18, 4, 1, "", "dir_diff"], [18, 4, 1, "", "element"], [18, 4, 1, "", "element_action"], [18, 4, 1, "", "element_iteration"], [18, 4, 1, "", "end_time"], [18, 4, 1, "", "env_spec"], [18, 4, 1, "", "env_spec_hashable"], [18, 4, 1, "", "exit_code"], [18, 3, 1, "", "get"], [18, 3, 1, "", "get_EAR_dependencies"], [18, 3, 1, "", "get_IFG_input_values"], [18, 3, 1, "", "get_OFP_inputs"], [18, 3, 1, "", "get_OFP_output_files"], [18, 3, 1, "", "get_OFP_outputs"], [18, 3, 1, "", "get_all_previous_iteration_runs"], [18, 3, 1, "", "get_app_log_path"], [18, 3, 1, "", "get_app_std_path"], [18, 3, 1, "", "get_commands_file_hash"], [18, 3, 1, "", "get_data_idx"], [18, 3, 1, "", "get_dependent_EARs"], [18, 3, 1, "", "get_directory"], [18, 3, 1, "", "get_environment"], [18, 3, 1, "", "get_environment_spec"], [18, 3, 1, "", "get_input_dependencies"], [18, 3, 1, "", "get_input_values"], [18, 3, 1, "", "get_input_values_direct"], [18, 3, 1, "", "get_parameter_names"], [18, 3, 1, "", "get_parameter_sources"], [18, 3, 1, "", "get_py_script_func_kwargs"], [18, 3, 1, "", "get_resources"], [18, 3, 1, "", "get_script_artifact_name"], [18, 4, 1, "", "id_"], [18, 4, 1, "", "index"], [18, 4, 1, "", "input_files"], [18, 4, 1, "", "inputs"], [18, 4, 1, "", "is_pending"], [18, 4, 1, "", "is_snippet_script"], [18, 4, 1, "", "metadata"], [18, 4, 1, "", "output_files"], [18, 4, 1, "", "outputs"], [18, 4, 1, "", "port_number"], [18, 3, 1, "", "raise_on_failure_threshold"], [18, 4, 1, "", "resources"], [18, 4, 1, "", "run_hostname"], [18, 4, 1, "", "skip"], [18, 4, 1, "", "skip_reason"], [18, 4, 1, "", "snapshot_end"], [18, 4, 1, "", "snapshot_start"], [18, 4, 1, "", "start_time"], [18, 4, 1, "", "status"], [18, 4, 1, "", "submission_idx"], [18, 4, 1, "", "success"], [18, 4, 1, "", "task"], [18, 3, 1, "", "try_write_commands"], [18, 4, 1, "", "workflow"], [18, 3, 1, "", "write_script_input_files"]], "matflow.ElementFilter": [[19, 3, 1, "", "filter"], [19, 3, 1, "", "from_json_like"], [19, 2, 1, "", "rules"], [19, 3, 1, "", "to_dict"], [19, 3, 1, "", "to_json_like"]], "matflow.ElementGroup": [[20, 3, 1, "", "from_json_like"], [20, 2, 1, "", "group_by_distinct"], [20, 2, 1, "", "name"], [20, 3, 1, "", "to_dict"], [20, 3, 1, "", "to_json_like"], [20, 2, 1, "", "where"]], "matflow.ElementInputFiles": [[21, 4, 1, "", "prefixed_names_unlabelled"], [21, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementInputs": [[22, 4, 1, "", "prefixed_names_unlabelled"], [22, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementIteration": [[23, 4, 1, "", "EAR_IDs"], [23, 4, 1, "", "EAR_IDs_flat"], [23, 4, 1, "", "EARs_initialised"], [23, 4, 1, "", "action_runs"], [23, 4, 1, "", "actions"], [23, 4, 1, "", "data_idx"], [23, 4, 1, "", "element"], [23, 3, 1, "", "get"], [23, 3, 1, "", "get_EAR_dependencies"], [23, 3, 1, "", "get_data_idx"], [23, 3, 1, "", "get_dependent_EARs"], [23, 3, 1, "", "get_dependent_element_iterations"], [23, 3, 1, "", "get_dependent_elements"], [23, 3, 1, "", "get_dependent_tasks"], [23, 3, 1, "", "get_element_dependencies"], [23, 3, 1, "", "get_element_iteration_dependencies"], [23, 3, 1, "", "get_input_dependencies"], [23, 3, 1, "", "get_parameter_names"], [23, 3, 1, "", "get_parameter_sources"], [23, 3, 1, "", "get_resources"], [23, 3, 1, "", "get_resources_obj"], [23, 3, 1, "", "get_task_dependencies"], [23, 3, 1, "", "get_template_resources"], [23, 4, 1, "", "id_"], [23, 4, 1, "", "index"], [23, 4, 1, "", "input_files"], [23, 4, 1, "", "inputs"], [23, 4, 1, "", "is_pending"], [23, 4, 1, "", "loop_idx"], [23, 4, 1, "", "loop_skipped"], [23, 4, 1, "", "output_files"], [23, 4, 1, "", "outputs"], [23, 4, 1, "", "schema_parameters"], [23, 4, 1, "", "task"], [23, 4, 1, "", "workflow"]], "matflow.ElementOutputFiles": [[24, 4, 1, "", "prefixed_names_unlabelled"], [24, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementOutputs": [[25, 4, 1, "", "prefixed_names_unlabelled"], [25, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementParameter": [[26, 2, 1, "", "app"], [26, 4, 1, "", "data_idx"], [26, 4, 1, "", "data_idx_is_set"], [26, 2, 1, "", "element"], [26, 3, 1, "", "get_size"], [26, 4, 1, "", "is_set"], [26, 2, 1, "", "parent"], [26, 2, 1, "", "path"], [26, 2, 1, "", "task"], [26, 4, 1, "", "value"]], "matflow.ElementPropagation": [[27, 4, 1, "", "element_set"], [27, 2, 1, "", "input_sources"], [27, 2, 1, "", "nesting_order"], [27, 2, 1, "", "task"]], "matflow.ElementRepeats": [[28, 2, 1, "", "number"], [28, 2, 1, "", "where"]], "matflow.ElementResources": [[29, 2, 1, "", "SGE_parallel_env"], [29, 4, 1, "", "SLURM_is_parallel"], [29, 2, 1, "", "SLURM_num_cpus_per_task"], [29, 2, 1, "", "SLURM_num_nodes"], [29, 2, 1, "", "SLURM_num_tasks"], [29, 2, 1, "", "SLURM_num_tasks_per_node"], [29, 2, 1, "", "SLURM_partition"], [29, 2, 1, "", "allow_failed_dependencies"], [29, 2, 1, "", "combine_jobscript_std"], [29, 2, 1, "", "combine_scripts"], [29, 2, 1, "", "environments"], [29, 3, 1, "", "from_json_like"], [29, 3, 1, "", "get_default_os_name"], [29, 3, 1, "", "get_default_scheduler"], [29, 3, 1, "", "get_default_shell"], [29, 3, 1, "", "get_env_instance_filterable_attributes"], [29, 3, 1, "", "get_jobscript_hash"], [29, 4, 1, "", "is_parallel"], [29, 2, 1, "", "max_array_items"], [29, 2, 1, "", "num_cores"], [29, 2, 1, "", "num_cores_per_node"], [29, 2, 1, "", "num_nodes"], [29, 2, 1, "", "num_threads"], [29, 2, 1, "", "os_name"], [29, 2, 1, "", "parallel_mode"], [29, 2, 1, "", "resources_id"], [29, 2, 1, "", "scheduler"], [29, 2, 1, "", "scheduler_args"], [29, 2, 1, "", "scratch"], [29, 3, 1, "", "set_defaults"], [29, 2, 1, "", "shell"], [29, 2, 1, "", "shell_args"], [29, 2, 1, "", "skip_downstream_on_failure"], [29, 2, 1, "", "time_limit"], [29, 3, 1, "", "to_dict"], [29, 3, 1, "", "to_json_like"], [29, 2, 1, "", "use_job_array"], [29, 3, 1, "", "validate_against_machine"], [29, 2, 1, "", "write_app_logs"]], "matflow.ElementSet": [[30, 2, 1, "", "allow_non_coincident_task_sources"], [30, 4, 1, "", "defined_input_types"], [30, 4, 1, "", "elem_iter_IDs"], [30, 4, 1, "", "element_iterations"], [30, 4, 1, "", "element_local_idx_range"], [30, 4, 1, "", "elements"], [30, 3, 1, "", "ensure_element_sets"], [30, 2, 1, "", "env_preset"], [30, 2, 1, "", "environments"], [30, 3, 1, "", "from_json_like"], [30, 3, 1, "", "get_defined_parameter_types"], [30, 3, 1, "", "get_defined_sub_parameter_types"], [30, 3, 1, "", "get_locally_defined_inputs"], [30, 3, 1, "", "get_sequence_from_path"], [30, 3, 1, "", "get_task_dependencies"], [30, 2, 1, "", "groups"], [30, 4, 1, "", "index"], [30, 2, 1, "", "input_files"], [30, 2, 1, "", "input_sources"], [30, 4, 1, "", "input_types"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "is_creation"], [30, 3, 1, "", "is_input_type_provided"], [30, 2, 1, "", "multi_path_sequences"], [30, 2, 1, "", "nesting_order"], [30, 3, 1, "", "prepare_persistent_copy"], [30, 2, 1, "", "repeats"], [30, 2, 1, "", "resources"], [30, 2, 1, "", "sequences"], [30, 2, 1, "", "sourceable_elem_iters"], [30, 4, 1, "", "task"], [30, 4, 1, "", "task_template"], [30, 3, 1, "", "to_dict"], [30, 3, 1, "", "to_json_like"], [30, 4, 1, "", "undefined_input_types"]], "matflow.Elements": [[31, 4, 1, "", "task"]], "matflow.Environment": [[32, 2, 1, "", "doc"], [32, 4, 1, "", "documentation"], [32, 2, 1, "", "executables"], [32, 3, 1, "", "from_json_like"], [32, 2, 1, "", "name"], [32, 2, 1, "", "setup"], [32, 2, 1, "", "specifiers"], [32, 3, 1, "", "to_dict"], [32, 3, 1, "", "to_json_like"]], "matflow.EnvironmentsList": [[33, 3, 1, "", "add_object"], [33, 3, 1, "", "add_objects"], [33, 3, 1, "", "from_json_like"], [33, 3, 1, "", "get"], [33, 3, 1, "", "get_all"], [33, 3, 1, "", "list_attrs"], [33, 3, 1, "", "to_dict"], [33, 3, 1, "", "to_json_like"]], "matflow.Executable": [[34, 4, 1, "", "environment"], [34, 3, 1, "", "filter_instances"], [34, 3, 1, "", "from_json_like"], [34, 2, 1, "", "instances"], [34, 2, 1, "", "label"], [34, 3, 1, "", "to_dict"], [34, 3, 1, "", "to_json_like"]], "matflow.ExecutableInstance": [[35, 2, 1, "", "command"], [35, 3, 1, "", "from_json_like"], [35, 3, 1, "", "from_spec"], [35, 2, 1, "", "num_cores"], [35, 2, 1, "", "parallel_mode"], [35, 3, 1, "", "to_dict"], [35, 3, 1, "", "to_json_like"]], "matflow.ExecutablesList": [[36, 3, 1, "", "add_object"], [36, 3, 1, "", "add_objects"], [36, 2, 1, "", "environment"], [36, 3, 1, "", "from_json_like"], [36, 3, 1, "", "get"], [36, 3, 1, "", "get_all"], [36, 3, 1, "", "list_attrs"], [36, 3, 1, "", "to_dict"], [36, 3, 1, "", "to_json_like"]], "matflow.Executor": [[37, 4, 1, "", "q"], [37, 3, 1, "", "run"], [37, 3, 1, "", "send_abort"], [37, 3, 1, "", "start_zmq_server"], [37, 3, 1, "", "stop_zmq_server"], [37, 4, 1, "", "zmq_context"]], "matflow.FileNameExt": [[38, 2, 1, "", "file_name"], [38, 3, 1, "", "from_json_like"], [38, 3, 1, "", "to_dict"], [38, 3, 1, "", "to_json_like"], [38, 3, 1, "", "value"]], "matflow.FileNameSpec": [[39, 2, 1, "", "args"], [39, 4, 1, "", "ext"], [39, 3, 1, "", "from_json_like"], [39, 2, 1, "", "is_regex"], [39, 2, 1, "", "name"], [39, 4, 1, "", "stem"], [39, 3, 1, "", "to_dict"], [39, 3, 1, "", "to_json_like"], [39, 3, 1, "", "value"]], "matflow.FileNameStem": [[40, 2, 1, "", "file_name"], [40, 3, 1, "", "from_json_like"], [40, 3, 1, "", "to_dict"], [40, 3, 1, "", "to_json_like"], [40, 3, 1, "", "value"]], "matflow.FileSpec": [[41, 2, 1, "", "doc"], [41, 4, 1, "", "documentation"], [41, 4, 1, "", "ext"], [41, 3, 1, "", "from_json_like"], [41, 2, 1, "", "label"], [41, 2, 1, "", "name"], [41, 4, 1, "", "stem"], [41, 3, 1, "", "to_dict"], [41, 3, 1, "", "to_json_like"], [41, 3, 1, "", "value"]], "matflow.GroupList": [[42, 3, 1, "", "add_object"], [42, 3, 1, "", "add_objects"], [42, 3, 1, "", "from_json_like"], [42, 3, 1, "", "get"], [42, 3, 1, "", "get_all"], [42, 3, 1, "", "list_attrs"], [42, 3, 1, "", "to_dict"], [42, 3, 1, "", "to_json_like"]], "matflow.InputFile": [[43, 4, 1, "", "contents"], [43, 4, 1, "", "extension"], [43, 2, 1, "", "file"], [43, 3, 1, "", "from_json_like"], [43, 3, 1, "", "make_persistent"], [43, 4, 1, "", "normalised_files_path"], [43, 4, 1, "", "normalised_path"], [43, 4, 1, "", "path"], [43, 3, 1, "", "read_contents"], [43, 4, 1, "", "store_contents"], [43, 3, 1, "", "to_dict"], [43, 3, 1, "", "to_json_like"], [43, 4, 1, "", "workflow"]], "matflow.InputFileGenerator": [[44, 2, 1, "", "abortable"], [44, 2, 1, "", "environment"], [44, 3, 1, "", "from_json_like"], [44, 3, 1, "", "get_action_rules"], [44, 2, 1, "", "input_file"], [44, 2, 1, "", "inputs"], [44, 2, 1, "", "requires_dir"], [44, 2, 1, "", "rules"], [44, 2, 1, "", "script"], [44, 2, 1, "", "script_pass_env_spec"], [44, 3, 1, "", "to_dict"], [44, 3, 1, "", "to_json_like"]], "matflow.InputFileGeneratorSource": [[45, 4, 1, "", "contents"], [45, 4, 1, "", "extension"], [45, 2, 1, "", "file"], [45, 3, 1, "", "from_json_like"], [45, 2, 1, "", "generator"], [45, 3, 1, "", "make_persistent"], [45, 4, 1, "", "normalised_path"], [45, 4, 1, "", "path"], [45, 3, 1, "", "read_contents"], [45, 4, 1, "", "store_contents"], [45, 3, 1, "", "to_dict"], [45, 3, 1, "", "to_json_like"], [45, 4, 1, "", "workflow"]], "matflow.InputSource": [[46, 3, 1, "", "default"], [46, 2, 1, "", "element_iters"], [46, 3, 1, "", "from_json_like"], [46, 3, 1, "", "from_string"], [46, 3, 1, "", "get_task"], [46, 3, 1, "", "import_"], [46, 2, 1, "", "import_ref"], [46, 3, 1, "", "is_in"], [46, 3, 1, "", "local"], [46, 2, 1, "", "path"], [46, 2, 1, "", "source_type"], [46, 3, 1, "", "task"], [46, 2, 1, "", "task_ref"], [46, 2, 1, "", "task_source_type"], [46, 3, 1, "", "to_dict"], [46, 3, 1, "", "to_json_like"], [46, 3, 1, "", "to_string"], [46, 2, 1, "", "where"]], "matflow.InputSourceType": [[47, 2, 1, "", "DEFAULT"], [47, 2, 1, "", "IMPORT"], [47, 2, 1, "", "LOCAL"], [47, 2, 1, "", "TASK"]], "matflow.InputValue": [[48, 3, 1, "", "from_json_like"], [48, 4, 1, "", "is_sub_value"], [48, 2, 1, "", "label"], [48, 4, 1, "", "labelled_type"], [48, 3, 1, "", "make_persistent"], [48, 4, 1, "", "normalised_inputs_path"], [48, 4, 1, "", "normalised_path"], [48, 2, 1, "", "parameter"], [48, 2, 1, "", "path"], [48, 3, 1, "", "to_dict"], [48, 3, 1, "", "to_json_like"], [48, 4, 1, "", "value"], [48, 2, 1, "", "value_class_method"], [48, 4, 1, "", "workflow"]], "matflow.Jobscript": [[49, 4, 1, "", "EAR_ID_file_name"], [49, 4, 1, "", "EAR_ID_file_path"], [49, 4, 1, "", "all_EAR_IDs"], [49, 4, 1, "", "all_EARs"], [49, 4, 1, "", "at_submit_metadata"], [49, 4, 1, "", "blocks"], [49, 4, 1, "", "combined_script_indices_file_name"], [49, 4, 1, "", "combined_script_indices_file_path"], [49, 3, 1, "", "compose_combined_script"], [49, 3, 1, "", "compose_jobscript"], [49, 4, 1, "", "dependencies"], [49, 4, 1, "", "direct_std_out_err_path"], [49, 4, 1, "", "direct_stderr_path"], [49, 4, 1, "", "direct_stdout_path"], [49, 4, 1, "", "direct_win_pid_file_name"], [49, 4, 1, "", "direct_win_pid_file_path"], [49, 4, 1, "", "end_time"], [49, 3, 1, "", "from_json_like"], [49, 3, 1, "", "get_active_states"], [49, 3, 1, "", "get_app_std_path"], [49, 3, 1, "", "get_commands_file_name"], [49, 3, 1, "", "get_std_out_err_path"], [49, 3, 1, "", "get_stderr"], [49, 3, 1, "", "get_stderr_path"], [49, 3, 1, "", "get_stdout"], [49, 3, 1, "", "get_stdout_path"], [49, 4, 1, "", "index"], [49, 4, 1, "", "is_array"], [49, 4, 1, "", "is_scheduled"], [49, 4, 1, "", "is_submitted"], [49, 4, 1, "", "jobscript_functions_name"], [49, 4, 1, "", "jobscript_functions_path"], [49, 4, 1, "", "jobscript_name"], [49, 4, 1, "", "jobscript_path"], [49, 4, 1, "", "os_name"], [49, 3, 1, "", "print_stderr"], [49, 3, 1, "", "print_stdout"], [49, 4, 1, "", "process_ID"], [49, 4, 1, "", "resources"], [49, 4, 1, "", "scheduler"], [49, 4, 1, "", "scheduler_job_ID"], [49, 4, 1, "", "scheduler_js_ref"], [49, 4, 1, "", "scheduler_name"], [49, 4, 1, "", "shell"], [49, 4, 1, "", "shell_idx"], [49, 4, 1, "", "shell_name"], [49, 4, 1, "", "start_time"], [49, 4, 1, "", "std_path"], [49, 4, 1, "", "submission"], [49, 3, 1, "", "submit"], [49, 4, 1, "", "submit_cmdline"], [49, 4, 1, "", "submit_hostname"], [49, 4, 1, "", "submit_machine"], [49, 4, 1, "", "submit_time"], [49, 3, 1, "", "to_dict"], [49, 3, 1, "", "to_json_like"], [49, 4, 1, "", "version_info"], [49, 4, 1, "", "workflow"], [49, 4, 1, "", "workflow_app_alias"], [49, 3, 1, "", "write_jobscript"], [49, 3, 1, "", "write_script_indices_file"]], "matflow.JobscriptBlock": [[50, 4, 1, "", "EAR_ID"], [50, 4, 1, "", "all_EARs"], [50, 4, 1, "", "dependencies"], [50, 3, 1, "", "from_json_like"], [50, 3, 1, "", "get_task_loop_idx_array"], [50, 4, 1, "", "index"], [50, 4, 1, "", "num_actions"], [50, 4, 1, "", "num_elements"], [50, 4, 1, "", "submission"], [50, 4, 1, "", "task_actions"], [50, 4, 1, "", "task_elements"], [50, 4, 1, "", "task_insert_IDs"], [50, 4, 1, "", "task_loop_idx"], [50, 3, 1, "", "to_dict"], [50, 3, 1, "", "to_json_like"], [50, 4, 1, "", "workflow"], [50, 3, 1, "", "write_EAR_ID_file"]], "matflow.Loop": [[51, 3, 1, "", "from_json_like"], [51, 4, 1, "", "name"], [51, 4, 1, "", "non_iterable_parameters"], [51, 4, 1, "", "num_iterations"], [51, 4, 1, "", "task_insert_IDs"], [51, 4, 1, "", "task_objects"], [51, 4, 1, "", "termination"], [51, 4, 1, "", "termination_task"], [51, 4, 1, "", "termination_task_insert_ID"], [51, 3, 1, "", "to_dict"], [51, 3, 1, "", "to_json_like"], [51, 4, 1, "", "workflow_template"]], "matflow.MetaTask": [[52, 3, 1, "", "from_json_like"], [52, 3, 1, "", "to_dict"], [52, 3, 1, "", "to_json_like"]], "matflow.MetaTaskSchema": [[53, 2, 1, "", "actions"], [53, 3, 1, "", "basic_info"], [53, 2, 1, "", "doc"], [53, 2, 1, "", "environment_presets"], [53, 3, 1, "", "from_json_like"], [53, 3, 1, "", "get_by_key"], [53, 3, 1, "", "get_info_html"], [53, 3, 1, "", "get_key"], [53, 3, 1, "", "get_parameter_dependence"], [53, 3, 1, "", "ignore_invalid_actions"], [53, 2, 1, "", "implementation"], [53, 3, 1, "", "info"], [53, 4, 1, "", "input_types"], [53, 2, 1, "", "inputs"], [53, 3, 1, "", "make_persistent"], [53, 2, 1, "", "method"], [53, 4, 1, "", "multi_input_types"], [53, 4, 1, "", "name"], [53, 2, 1, "", "objective"], [53, 4, 1, "", "output_types"], [53, 2, 1, "", "outputs"], [53, 2, 1, "", "parameter_class_modules"], [53, 4, 1, "", "provides_parameters"], [53, 4, 1, "", "task_template"], [53, 3, 1, "", "to_dict"], [53, 3, 1, "", "to_json_like"], [53, 2, 1, "", "version"], [53, 2, 1, "", "web_doc"]], "matflow.MultiPathSequence": [[54, 3, 1, "", "from_json_like"], [54, 3, 1, "", "from_latin_hypercube"], [54, 4, 1, "", "sequence_indices"], [54, 4, 1, "", "sequences"], [54, 3, 1, "", "to_dict"], [54, 3, 1, "", "to_json_like"], [54, 4, 1, "", "values"]], "matflow.NumCores": [[55, 3, 1, "", "from_json_like"], [55, 2, 1, "", "start"], [55, 2, 1, "", "step"], [55, 2, 1, "", "stop"], [55, 3, 1, "", "to_dict"], [55, 3, 1, "", "to_json_like"]], "matflow.OutputFileParser": [[56, 2, 1, "", "abortable"], [56, 2, 1, "", "clean_up"], [56, 2, 1, "", "environment"], [56, 3, 1, "", "from_json_like"], [56, 3, 1, "", "get_action_rules"], [56, 2, 1, "", "inputs"], [56, 2, 1, "", "options"], [56, 2, 1, "", "output"], [56, 2, 1, "", "output_files"], [56, 2, 1, "", "outputs"], [56, 2, 1, "", "requires_dir"], [56, 2, 1, "", "rules"], [56, 2, 1, "", "save_files"], [56, 2, 1, "", "script"], [56, 2, 1, "", "script_pass_env_spec"], [56, 3, 1, "", "to_dict"], [56, 3, 1, "", "to_json_like"]], "matflow.OutputFileParserSource": [[57, 4, 1, "", "contents"], [57, 4, 1, "", "extension"], [57, 2, 1, "", "file"], [57, 3, 1, "", "from_json_like"], [57, 3, 1, "", "make_persistent"], [57, 4, 1, "", "normalised_path"], [57, 2, 1, "", "parser"], [57, 4, 1, "", "path"], [57, 3, 1, "", "read_contents"], [57, 4, 1, "", "store_contents"], [57, 3, 1, "", "to_dict"], [57, 3, 1, "", "to_json_like"], [57, 4, 1, "", "workflow"]], "matflow.OutputLabel": [[58, 3, 1, "", "from_json_like"], [58, 2, 1, "", "label"], [58, 2, 1, "", "parameter"], [58, 3, 1, "", "to_dict"], [58, 3, 1, "", "to_json_like"], [58, 2, 1, "", "where"]], "matflow.Parameter": [[59, 3, 1, "", "from_json_like"], [59, 2, 1, "", "is_file"], [59, 2, 1, "", "sub_parameters"], [59, 3, 1, "", "to_dict"], [59, 3, 1, "", "to_json_like"], [59, 2, 1, "", "typ"], [59, 4, 1, "", "url_slug"]], "matflow.ParameterPath": [[60, 3, 1, "", "from_json_like"], [60, 2, 1, "", "path"], [60, 2, 1, "", "task"], [60, 3, 1, "", "to_dict"], [60, 3, 1, "", "to_json_like"]], "matflow.ParameterPropagationMode": [[61, 2, 1, "", "EXPLICIT"], [61, 2, 1, "", "IMPLICIT"], [61, 2, 1, "", "NEVER"]], "matflow.ParameterValue": [[62, 3, 1, "", "dump_element_group_to_HDF5_group"], [62, 3, 1, "", "dump_to_HDF5_group"], [62, 3, 1, "", "prepare_JSON_dump"], [62, 3, 1, "", "save_from_HDF5_group"], [62, 3, 1, "", "save_from_JSON"], [62, 3, 1, "", "to_dict"]], "matflow.Parameters": [[63, 2, 1, "", "default"], [63, 2, 1, "", "path"], [63, 2, 1, "", "raise_on_missing"], [63, 2, 1, "", "raise_on_unset"], [63, 2, 1, "", "return_element_parameters"], [63, 2, 1, "", "task"]], "matflow.ParametersList": [[64, 3, 1, "", "add_object"], [64, 3, 1, "", "add_objects"], [64, 3, 1, "", "from_json_like"], [64, 3, 1, "", "get"], [64, 3, 1, "", "get_all"], [64, 3, 1, "", "list_attrs"], [64, 3, 1, "", "to_dict"], [64, 3, 1, "", "to_json_like"]], "matflow.QueuedScheduler": [[65, 2, 1, "", "DEFAULT_ARRAY_ITEM_VAR"], [65, 2, 1, "", "DEFAULT_ARRAY_SWITCH"], [65, 2, 1, "", "DEFAULT_DEL_CMD"], [65, 2, 1, "", "DEFAULT_JS_CMD"], [65, 2, 1, "", "DEFAULT_LOGIN_NODES_CMD"], [65, 2, 1, "", "DEFAULT_LOGIN_NODE_MATCH"], [65, 2, 1, "", "DEFAULT_SHOW_CMD"], [65, 2, 1, "", "DEFAULT_SUBMIT_CMD"], [65, 3, 1, "", "cancel_jobs"], [65, 3, 1, "", "format_directives"], [65, 3, 1, "", "format_switch"], [65, 3, 1, "", "get_job_state_info"], [65, 3, 1, "", "get_std_out_err_filename"], [65, 3, 1, "", "get_stderr_filename"], [65, 3, 1, "", "get_stdout_filename"], [65, 3, 1, "", "get_submit_command"], [65, 3, 1, "", "get_version_info"], [65, 3, 1, "", "is_jobscript_active"], [65, 3, 1, "", "is_num_cores_supported"], [65, 3, 1, "", "parse_submission_output"], [65, 3, 1, "", "process_resources"], [65, 4, 1, "", "unique_properties"], [65, 3, 1, "", "wait_for_jobscripts"]], "matflow.ResourceList": [[66, 3, 1, "", "add_object"], [66, 4, 1, "", "element_set"], [66, 3, 1, "", "from_json_like"], [66, 3, 1, "", "get"], [66, 3, 1, "", "get_all"], [66, 3, 1, "", "get_scopes"], [66, 3, 1, "", "merge_one"], [66, 3, 1, "", "merge_other"], [66, 3, 1, "", "normalise"], [66, 3, 1, "", "to_dict"], [66, 3, 1, "", "to_json_like"], [66, 4, 1, "", "workflow_template"]], "matflow.ResourceSpec": [[67, 2, 1, "", "ALLOWED_PARAMETERS"], [67, 4, 1, "", "SGE_parallel_env"], [67, 4, 1, "", "SLURM_num_cpus_per_task"], [67, 4, 1, "", "SLURM_num_nodes"], [67, 4, 1, "", "SLURM_num_tasks"], [67, 4, 1, "", "SLURM_num_tasks_per_node"], [67, 4, 1, "", "SLURM_partition"], [67, 4, 1, "", "combine_jobscript_std"], [67, 4, 1, "", "combine_scripts"], [67, 3, 1, "", "copy_non_persistent"], [67, 4, 1, "", "element_set"], [67, 4, 1, "", "environments"], [67, 3, 1, "", "from_json_like"], [67, 3, 1, "", "make_persistent"], [67, 4, 1, "", "max_array_items"], [67, 4, 1, "", "normalised_path"], [67, 4, 1, "", "normalised_resources_path"], [67, 4, 1, "", "num_cores"], [67, 4, 1, "", "num_cores_per_node"], [67, 4, 1, "", "num_nodes"], [67, 4, 1, "", "num_threads"], [67, 4, 1, "", "os_name"], [67, 4, 1, "", "parallel_mode"], [67, 4, 1, "", "resources_id"], [67, 4, 1, "", "scheduler"], [67, 4, 1, "", "scheduler_args"], [67, 2, 1, "", "scope"], [67, 4, 1, "", "scratch"], [67, 4, 1, "", "shell"], [67, 4, 1, "", "shell_args"], [67, 4, 1, "", "skip_downstream_on_failure"], [67, 4, 1, "", "time_limit"], [67, 3, 1, "", "to_dict"], [67, 3, 1, "", "to_json_like"], [67, 4, 1, "", "use_job_array"], [67, 4, 1, "", "workflow"], [67, 4, 1, "", "workflow_template"], [67, 4, 1, "", "write_app_logs"]], "matflow.Rule": [[68, 2, 1, "", "cast"], [68, 2, 1, "", "check_exists"], [68, 2, 1, "", "check_missing"], [68, 2, 1, "", "condition"], [68, 2, 1, "", "doc"], [68, 3, 1, "", "from_json_like"], [68, 2, 1, "", "path"], [68, 3, 1, "", "test"], [68, 3, 1, "", "to_dict"], [68, 3, 1, "", "to_json_like"]], "matflow.RunDirAppFiles": [[69, 3, 1, "", "get_commands_file_name"], [69, 3, 1, "", "get_run_file_prefix"], [69, 3, 1, "", "get_run_param_dump_file_prefix"], [69, 3, 1, "", "get_run_param_load_file_prefix"], [69, 3, 1, "", "take_snapshot"]], "matflow.SGEPosix": [[70, 2, 1, "", "DEFAULT_ARRAY_ITEM_VAR"], [70, 2, 1, "", "DEFAULT_ARRAY_SWITCH"], [70, 2, 1, "", "DEFAULT_CWD_SWITCH"], [70, 2, 1, "", "DEFAULT_DEL_CMD"], [70, 2, 1, "", "DEFAULT_JS_CMD"], [70, 2, 1, "", "DEFAULT_LOGIN_NODES_CMD"], [70, 2, 1, "", "DEFAULT_LOGIN_NODE_MATCH"], [70, 2, 1, "", "DEFAULT_SHOW_CMD"], [70, 2, 1, "", "DEFAULT_SUBMIT_CMD"], [70, 3, 1, "", "cancel_jobs"], [70, 3, 1, "", "format_directives"], [70, 3, 1, "", "format_switch"], [70, 3, 1, "", "get_job_state_info"], [70, 3, 1, "", "get_job_statuses"], [70, 3, 1, "", "get_login_nodes"], [70, 3, 1, "", "get_std_out_err_filename"], [70, 3, 1, "", "get_stderr_filename"], [70, 3, 1, "", "get_stdout_filename"], [70, 3, 1, "", "get_submit_command"], [70, 3, 1, "", "get_version_info"], [70, 3, 1, "", "is_jobscript_active"], [70, 3, 1, "", "is_num_cores_supported"], [70, 3, 1, "", "parse_submission_output"], [70, 3, 1, "", "process_resources"], [70, 2, 1, "", "state_lookup"], [70, 4, 1, "", "unique_properties"], [70, 3, 1, "", "wait_for_jobscripts"]], "matflow.SchemaInput": [[71, 4, 1, "", "all_labelled_types"], [71, 4, 1, "", "default_value"], [71, 3, 1, "", "from_json_like"], [71, 4, 1, "", "input_or_output"], [71, 3, 1, "", "labelled_info"], [71, 2, 1, "", "labels"], [71, 2, 1, "", "multiple"], [71, 2, 1, "", "parameter"], [71, 4, 1, "", "single_label"], [71, 4, 1, "", "single_labelled_data"], [71, 4, 1, "", "single_labelled_type"], [71, 4, 1, "", "task_schema"], [71, 3, 1, "", "to_dict"], [71, 3, 1, "", "to_json_like"], [71, 4, 1, "", "typ"]], "matflow.SchemaOutput": [[72, 3, 1, "", "from_json_like"], [72, 4, 1, "", "input_or_output"], [72, 2, 1, "", "parameter"], [72, 2, 1, "", "propagation_mode"], [72, 3, 1, "", "to_dict"], [72, 3, 1, "", "to_json_like"], [72, 4, 1, "", "typ"]], "matflow.SchemaParameter": [[73, 3, 1, "", "from_json_like"], [73, 3, 1, "", "to_dict"], [73, 3, 1, "", "to_json_like"], [73, 4, 1, "", "typ"]], "matflow.SlurmPosix": [[74, 2, 1, "", "DEFAULT_ARRAY_ITEM_VAR"], [74, 2, 1, "", "DEFAULT_ARRAY_SWITCH"], [74, 2, 1, "", "DEFAULT_DEL_CMD"], [74, 2, 1, "", "DEFAULT_JS_CMD"], [74, 2, 1, "", "DEFAULT_LOGIN_NODES_CMD"], [74, 2, 1, "", "DEFAULT_LOGIN_NODE_MATCH"], [74, 2, 1, "", "DEFAULT_SHOW_CMD"], [74, 2, 1, "", "DEFAULT_SUBMIT_CMD"], [74, 2, 1, "", "INTER_STATE_QUERY_DELAY"], [74, 2, 1, "", "NUM_STATE_QUERY_TRIES"], [74, 3, 1, "", "cancel_jobs"], [74, 3, 1, "", "format_directives"], [74, 3, 1, "", "format_switch"], [74, 3, 1, "", "get_job_state_info"], [74, 3, 1, "", "get_std_out_err_filename"], [74, 3, 1, "", "get_stderr_filename"], [74, 3, 1, "", "get_stdout_filename"], [74, 3, 1, "", "get_submit_command"], [74, 3, 1, "", "get_version_info"], [74, 3, 1, "", "is_jobscript_active"], [74, 3, 1, "", "is_num_cores_supported"], [74, 3, 1, "", "parse_submission_output"], [74, 3, 1, "", "process_resources"], [74, 2, 1, "", "state_lookup"], [74, 4, 1, "", "unique_properties"], [74, 3, 1, "", "wait_for_jobscripts"]], "matflow.SubParameter": [[75, 2, 1, "", "address"], [75, 2, 1, "", "parameter"]], "matflow.Submission": [[76, 2, 1, "", "APP_STD_DIR_NAME"], [76, 2, 1, "", "COMMANDS_DIR_NAME"], [76, 4, 1, "", "EARs_by_elements"], [76, 2, 1, "", "JS_DIR_NAME"], [76, 2, 1, "", "JS_FUNCS_DIR_NAME"], [76, 2, 1, "", "JS_RUN_IDS_DIR_NAME"], [76, 2, 1, "", "JS_SCRIPT_INDICES_DIR_NAME"], [76, 2, 1, "", "JS_STD_DIR_NAME"], [76, 2, 1, "", "JS_WIN_PIDS_DIR_NAME"], [76, 4, 1, "", "JS_parallelism"], [76, 2, 1, "", "LOG_DIR_NAME"], [76, 2, 1, "", "SCRIPTS_DIR_NAME"], [76, 2, 1, "", "TMP_DIR_NAME"], [76, 2, 1, "", "WORKFLOW_APP_ALIAS"], [76, 4, 1, "", "all_EAR_IDs"], [76, 4, 1, "", "all_EARs"], [76, 4, 1, "", "all_EARs_IDs_by_jobscript"], [76, 4, 1, "", "all_EARs_by_jobscript"], [76, 4, 1, "", "app_log_path"], [76, 4, 1, "", "app_std_path"], [76, 4, 1, "", "at_submit_metadata"], [76, 3, 1, "", "cancel"], [76, 4, 1, "", "commands_path"], [76, 4, 1, "", "end_time"], [76, 4, 1, "", "environments"], [76, 3, 1, "", "from_json_like"], [76, 3, 1, "", "get_active_jobscripts"], [76, 3, 1, "", "get_app_log_file_name"], [76, 3, 1, "", "get_app_log_file_path"], [76, 3, 1, "", "get_app_log_path"], [76, 3, 1, "", "get_app_std_path"], [76, 3, 1, "", "get_commands_path"], [76, 3, 1, "", "get_end_time"], [76, 3, 1, "", "get_jobscript_functions_name"], [76, 3, 1, "", "get_jobscript_functions_path"], [76, 3, 1, "", "get_js_funcs_path"], [76, 3, 1, "", "get_js_path"], [76, 3, 1, "", "get_js_run_ids_path"], [76, 3, 1, "", "get_js_script_indices_path"], [76, 3, 1, "", "get_js_std_path"], [76, 3, 1, "", "get_js_win_pids_path"], [76, 3, 1, "", "get_path"], [76, 3, 1, "", "get_process_IDs"], [76, 3, 1, "", "get_scheduler_job_IDs"], [76, 3, 1, "", "get_scripts_path"], [76, 3, 1, "", "get_start_time"], [76, 3, 1, "", "get_tmp_path"], [76, 3, 1, "", "get_unique_schedulers"], [76, 3, 1, "", "get_unique_schedulers_of_jobscripts"], [76, 3, 1, "", "get_unique_shells"], [76, 4, 1, "", "index"], [76, 4, 1, "", "is_scheduled"], [76, 4, 1, "", "jobscript_indices"], [76, 4, 1, "", "jobscripts"], [76, 4, 1, "", "js_funcs_path"], [76, 4, 1, "", "js_path"], [76, 4, 1, "", "js_run_ids_path"], [76, 4, 1, "", "js_script_indices_path"], [76, 4, 1, "", "js_std_path"], [76, 4, 1, "", "js_win_pids_path"], [76, 3, 1, "", "list_jobscripts"], [76, 3, 1, "", "list_task_jobscripts"], [76, 4, 1, "", "needs_app_log_dir"], [76, 4, 1, "", "needs_script_indices_dir"], [76, 4, 1, "", "needs_submit"], [76, 4, 1, "", "needs_win_pids_dir"], [76, 4, 1, "", "outstanding_jobscripts"], [76, 4, 1, "", "path"], [76, 4, 1, "", "scripts_path"], [76, 4, 1, "", "start_time"], [76, 4, 1, "", "status"], [76, 4, 1, "", "submission_parts"], [76, 3, 1, "", "submit"], [76, 4, 1, "", "submitted_jobscripts"], [76, 4, 1, "", "tmp_path"], [76, 3, 1, "", "to_dict"], [76, 3, 1, "", "to_json_like"], [76, 4, 1, "", "workflow"]], "matflow.Task": [[77, 3, 1, "", "add_group"], [77, 3, 1, "", "all_schema_actions"], [77, 4, 1, "", "all_schema_input_normalised_paths"], [77, 4, 1, "", "all_schema_input_types"], [77, 4, 1, "", "all_schema_inputs"], [77, 4, 1, "", "all_schema_output_types"], [77, 4, 1, "", "all_schema_outputs"], [77, 4, 1, "", "all_sourced_normalised_paths"], [77, 4, 1, "", "defined_input_types"], [77, 4, 1, "", "dir_name"], [77, 4, 1, "", "element_sets"], [77, 3, 1, "", "from_json_like"], [77, 3, 1, "", "get_available_task_input_sources"], [77, 3, 1, "", "get_input_statuses"], [77, 3, 1, "", "get_param_provided_element_sets"], [77, 3, 1, "", "get_schema_action"], [77, 3, 1, "", "get_task_unique_names"], [77, 4, 1, "", "index"], [77, 4, 1, "", "insert_ID"], [77, 3, 1, "", "is_input_type_required"], [77, 2, 1, "", "merge_envs"], [77, 4, 1, "", "name"], [77, 4, 1, "", "non_universal_input_types"], [77, 4, 1, "", "num_all_schema_actions"], [77, 4, 1, "", "num_element_sets"], [77, 4, 1, "", "objective"], [77, 4, 1, "", "output_labels"], [77, 3, 1, "", "prepare_element_resolution"], [77, 3, 1, "", "provides_parameters"], [77, 4, 1, "", "schema"], [77, 4, 1, "", "schemas"], [77, 3, 1, "", "set_sequence_parameters"], [77, 3, 1, "", "to_dict"], [77, 3, 1, "", "to_json_like"], [77, 3, 1, "", "to_persistent"], [77, 4, 1, "", "undefined_input_types"], [77, 4, 1, "", "undefined_inputs"], [77, 4, 1, "", "universal_input_types"], [77, 2, 1, "", "workflow_template"]], "matflow.TaskInputParameters": [[78, 2, 1, "", "task"]], "matflow.TaskList": [[79, 3, 1, "", "add_object"], [79, 3, 1, "", "add_objects"], [79, 3, 1, "", "from_json_like"], [79, 3, 1, "", "get"], [79, 3, 1, "", "get_all"], [79, 3, 1, "", "list_attrs"], [79, 3, 1, "", "to_dict"], [79, 3, 1, "", "to_json_like"]], "matflow.TaskObjective": [[80, 3, 1, "", "from_json_like"], [80, 2, 1, "", "name"], [80, 3, 1, "", "to_dict"], [80, 3, 1, "", "to_json_like"]], "matflow.TaskOutputParameters": [[81, 2, 1, "", "task"]], "matflow.TaskSchema": [[82, 2, 1, "", "actions"], [82, 3, 1, "", "basic_info"], [82, 2, 1, "", "doc"], [82, 2, 1, "", "environment_presets"], [82, 3, 1, "", "from_json_like"], [82, 3, 1, "", "get_by_key"], [82, 3, 1, "", "get_info_html"], [82, 3, 1, "", "get_key"], [82, 3, 1, "", "get_parameter_dependence"], [82, 3, 1, "", "ignore_invalid_actions"], [82, 2, 1, "", "implementation"], [82, 3, 1, "", "info"], [82, 4, 1, "", "input_types"], [82, 2, 1, "", "inputs"], [82, 3, 1, "", "make_persistent"], [82, 2, 1, "", "method"], [82, 4, 1, "", "multi_input_types"], [82, 4, 1, "", "name"], [82, 2, 1, "", "objective"], [82, 4, 1, "", "output_types"], [82, 2, 1, "", "outputs"], [82, 2, 1, "", "parameter_class_modules"], [82, 4, 1, "", "provides_parameters"], [82, 4, 1, "", "task_template"], [82, 3, 1, "", "to_dict"], [82, 3, 1, "", "to_json_like"], [82, 2, 1, "", "version"], [82, 2, 1, "", "web_doc"]], "matflow.TaskSchemasList": [[83, 3, 1, "", "add_object"], [83, 3, 1, "", "add_objects"], [83, 3, 1, "", "from_json_like"], [83, 3, 1, "", "get"], [83, 3, 1, "", "get_all"], [83, 3, 1, "", "list_attrs"], [83, 3, 1, "", "to_dict"], [83, 3, 1, "", "to_json_like"]], "matflow.TaskSourceType": [[84, 2, 1, "", "ANY"], [84, 2, 1, "", "INPUT"], [84, 2, 1, "", "OUTPUT"], [84, 3, 1, "", "names"]], "matflow.TaskTemplateList": [[85, 3, 1, "", "add_object"], [85, 3, 1, "", "add_objects"], [85, 3, 1, "", "from_json_like"], [85, 3, 1, "", "get"], [85, 3, 1, "", "get_all"], [85, 3, 1, "", "list_attrs"], [85, 3, 1, "", "to_dict"], [85, 3, 1, "", "to_json_like"]], "matflow.ValuePerturbation": [[86, 2, 1, "", "additive_factor"], [86, 3, 1, "", "from_json_like"], [86, 3, 1, "", "from_spec"], [86, 3, 1, "", "make_persistent"], [86, 2, 1, "", "multiplicative_factor"], [86, 2, 1, "", "name"], [86, 4, 1, "", "normalised_path"], [86, 2, 1, "", "path"], [86, 3, 1, "", "to_dict"], [86, 3, 1, "", "to_json_like"], [86, 4, 1, "", "value"], [86, 4, 1, "", "workflow"]], "matflow.ValueSequence": [[87, 3, 1, "", "from_file"], [87, 3, 1, "", "from_geometric_space"], [87, 3, 1, "", "from_json_like"], [87, 3, 1, "", "from_linear_space"], [87, 3, 1, "", "from_log_space"], [87, 3, 1, "", "from_random_uniform"], [87, 3, 1, "", "from_range"], [87, 3, 1, "", "from_rectangle"], [87, 4, 1, "", "input_path"], [87, 4, 1, "", "input_type"], [87, 4, 1, "", "is_sub_value"], [87, 2, 1, "", "label"], [87, 4, 1, "", "labelled_type"], [87, 3, 1, "", "make_persistent"], [87, 2, 1, "", "nesting_order"], [87, 4, 1, "", "normalised_inputs_path"], [87, 4, 1, "", "normalised_path"], [87, 4, 1, "", "parameter"], [87, 2, 1, "", "path"], [87, 4, 1, "", "path_split"], [87, 4, 1, "", "path_type"], [87, 4, 1, "", "resource_scope"], [87, 3, 1, "", "to_dict"], [87, 3, 1, "", "to_json_like"], [87, 2, 1, "", "value_class_method"], [87, 4, 1, "", "values"], [87, 4, 1, "", "workflow"]], "matflow.Workflow": [[88, 3, 1, "", "abort_run"], [88, 3, 1, "", "add_loop"], [88, 3, 1, "", "add_submission"], [88, 3, 1, "", "add_task"], [88, 3, 1, "", "add_task_after"], [88, 3, 1, "", "add_task_before"], [88, 4, 1, "", "artifacts_path"], [88, 3, 1, "", "batch_update"], [88, 3, 1, "", "cached_merged_parameters"], [88, 3, 1, "", "cancel"], [88, 3, 1, "", "check_parameters_exist"], [88, 3, 1, "", "copy"], [88, 4, 1, "", "creation_info"], [88, 3, 1, "", "delete"], [88, 3, 1, "", "elements"], [88, 3, 1, "", "ensure_commands_file"], [88, 3, 1, "", "execute_combined_runs"], [88, 3, 1, "", "execute_run"], [88, 4, 1, "", "execution_path"], [88, 3, 1, "", "from_JSON_file"], [88, 3, 1, "", "from_JSON_string"], [88, 3, 1, "", "from_YAML_file"], [88, 3, 1, "", "from_YAML_string"], [88, 3, 1, "", "from_file"], [88, 3, 1, "", "from_template"], [88, 3, 1, "", "from_template_data"], [88, 3, 1, "", "get_EAR_IDs_of_tasks"], [88, 3, 1, "", "get_EAR_skipped"], [88, 3, 1, "", "get_EARs_from_IDs"], [88, 3, 1, "", "get_EARs_of_tasks"], [88, 3, 1, "", "get_all_EARs"], [88, 3, 1, "", "get_all_element_iterations"], [88, 3, 1, "", "get_all_elements"], [88, 3, 1, "", "get_all_parameter_data"], [88, 3, 1, "", "get_all_parameter_sources"], [88, 3, 1, "", "get_all_parameters"], [88, 3, 1, "", "get_all_submission_run_IDs"], [88, 3, 1, "", "get_element_IDs_from_EAR_IDs"], [88, 3, 1, "", "get_element_iteration_IDs_from_EAR_IDs"], [88, 3, 1, "", "get_element_iterations_from_IDs"], [88, 3, 1, "", "get_element_iterations_of_tasks"], [88, 3, 1, "", "get_elements_from_IDs"], [88, 3, 1, "", "get_iteration_task_pathway"], [88, 3, 1, "", "get_parameter"], [88, 3, 1, "", "get_parameter_data"], [88, 3, 1, "", "get_parameter_set_statuses"], [88, 3, 1, "", "get_parameter_source"], [88, 3, 1, "", "get_parameter_sources"], [88, 3, 1, "", "get_parameters"], [88, 3, 1, "", "get_process_IDs"], [88, 3, 1, "", "get_run_directories"], [88, 3, 1, "", "get_running_elements"], [88, 3, 1, "", "get_running_runs"], [88, 3, 1, "", "get_scheduler_job_IDs"], [88, 3, 1, "", "get_store_EARs"], [88, 3, 1, "", "get_store_element_iterations"], [88, 3, 1, "", "get_store_elements"], [88, 3, 1, "", "get_store_tasks"], [88, 3, 1, "", "get_task_IDs_from_element_IDs"], [88, 3, 1, "", "get_task_elements"], [88, 3, 1, "", "get_task_unique_names"], [88, 3, 1, "", "get_text_file"], [88, 4, 1, "", "id_"], [88, 4, 1, "", "input_files_path"], [88, 3, 1, "", "is_parameter_set"], [88, 3, 1, "", "list_jobscripts"], [88, 3, 1, "", "list_task_jobscripts"], [88, 4, 1, "", "loops"], [88, 4, 1, "", "name"], [88, 4, 1, "", "num_EARs"], [88, 4, 1, "", "num_added_tasks"], [88, 4, 1, "", "num_element_iterations"], [88, 4, 1, "", "num_elements"], [88, 4, 1, "", "num_loops"], [88, 4, 1, "", "num_submissions"], [88, 4, 1, "", "num_tasks"], [88, 3, 1, "", "process_shell_parameter_output"], [88, 3, 1, "", "rechunk"], [88, 3, 1, "", "rechunk_parameter_base"], [88, 3, 1, "", "rechunk_runs"], [88, 3, 1, "", "reload"], [88, 3, 1, "", "resolve_jobscripts"], [88, 3, 1, "", "save_parameter"], [88, 3, 1, "", "set_EAR_end"], [88, 3, 1, "", "set_EAR_skip"], [88, 3, 1, "", "set_EAR_start"], [88, 3, 1, "", "set_EARs_initialised"], [88, 3, 1, "", "set_multi_run_ends"], [88, 3, 1, "", "set_multi_run_starts"], [88, 3, 1, "", "set_parameter_value"], [88, 3, 1, "", "set_parameter_values"], [88, 3, 1, "", "show_all_EAR_statuses"], [88, 4, 1, "", "store_format"], [88, 4, 1, "", "submissions"], [88, 4, 1, "", "submissions_path"], [88, 3, 1, "", "submit"], [88, 4, 1, "", "task_artifacts_path"], [88, 4, 1, "", "tasks"], [88, 4, 1, "", "template"], [88, 4, 1, "", "template_components"], [88, 3, 1, "", "temporary_rename"], [88, 4, 1, "", "ts_fmt"], [88, 4, 1, "", "ts_name_fmt"], [88, 3, 1, "", "unzip"], [88, 4, 1, "", "url"], [88, 3, 1, "", "wait"], [88, 3, 1, "", "zip"]], "matflow.WorkflowBlueprint": [[89, 2, 1, "", "workflow_template"]], "matflow.WorkflowLoop": [[90, 3, 1, "", "add_iteration"], [90, 4, 1, "", "downstream_tasks"], [90, 3, 1, "", "get_child_loops"], [90, 3, 1, "", "get_element_IDs"], [90, 3, 1, "", "get_elements"], [90, 3, 1, "", "get_parent_loops"], [90, 4, 1, "", "index"], [90, 4, 1, "", "iterable_parameters"], [90, 4, 1, "", "name"], [90, 3, 1, "", "new_empty_loop"], [90, 4, 1, "", "num_added_iterations"], [90, 4, 1, "", "num_iterations"], [90, 4, 1, "", "output_parameters"], [90, 4, 1, "", "parents"], [90, 3, 1, "", "skip_downstream_iterations"], [90, 4, 1, "", "task_indices"], [90, 4, 1, "", "task_insert_IDs"], [90, 4, 1, "", "task_objects"], [90, 4, 1, "", "template"], [90, 3, 1, "", "test_termination"], [90, 4, 1, "", "upstream_tasks"], [90, 4, 1, "", "workflow"]], "matflow.WorkflowLoopList": [[91, 3, 1, "", "add_object"], [91, 3, 1, "", "add_objects"], [91, 3, 1, "", "from_json_like"], [91, 3, 1, "", "get"], [91, 3, 1, "", "get_all"], [91, 3, 1, "", "list_attrs"], [91, 3, 1, "", "to_dict"], [91, 3, 1, "", "to_json_like"]], "matflow.WorkflowTask": [[92, 3, 1, "", "add_elements"], [92, 4, 1, "", "dir_name"], [92, 4, 1, "", "downstream_tasks"], [92, 4, 1, "", "element_IDs"], [92, 4, 1, "", "elements"], [92, 3, 1, "", "ensure_input_sources"], [92, 3, 1, "", "generate_new_elements"], [92, 3, 1, "", "get"], [92, 3, 1, "", "get_all_element_iterations"], [92, 3, 1, "", "get_dependent_elements"], [92, 3, 1, "", "get_dependent_tasks"], [92, 3, 1, "", "get_dir_name"], [92, 3, 1, "", "get_element_dependencies"], [92, 3, 1, "", "get_task_dependencies"], [92, 4, 1, "", "index"], [92, 3, 1, "", "initialise_EARs"], [92, 4, 1, "", "inputs"], [92, 4, 1, "", "insert_ID"], [92, 4, 1, "", "name"], [92, 3, 1, "", "new_empty_task"], [92, 4, 1, "", "num_actions"], [92, 4, 1, "", "num_element_sets"], [92, 4, 1, "", "num_elements"], [92, 4, 1, "", "outputs"], [92, 3, 1, "", "resolve_element_data_indices"], [92, 4, 1, "", "template"], [92, 4, 1, "", "unique_name"], [92, 4, 1, "", "upstream_tasks"], [92, 4, 1, "", "workflow"]], "matflow.WorkflowTaskList": [[93, 3, 1, "", "add_object"], [93, 3, 1, "", "add_objects"], [93, 3, 1, "", "from_json_like"], [93, 3, 1, "", "get"], [93, 3, 1, "", "get_all"], [93, 3, 1, "", "list_attrs"], [93, 3, 1, "", "to_dict"], [93, 3, 1, "", "to_json_like"]], "matflow.WorkflowTemplate": [[94, 2, 1, "", "config"], [94, 2, 1, "", "doc"], [94, 2, 1, "", "env_presets"], [94, 2, 1, "", "environments"], [94, 3, 1, "", "from_JSON_file"], [94, 3, 1, "", "from_JSON_string"], [94, 3, 1, "", "from_YAML_file"], [94, 3, 1, "", "from_YAML_string"], [94, 3, 1, "", "from_file"], [94, 3, 1, "", "from_json_like"], [94, 2, 1, "", "loops"], [94, 2, 1, "", "merge_envs"], [94, 2, 1, "", "merge_resources"], [94, 2, 1, "", "name"], [94, 2, 1, "", "resources"], [94, 2, 1, "", "source_file"], [94, 2, 1, "", "store_kwargs"], [94, 2, 1, "", "tasks"], [94, 3, 1, "", "to_dict"], [94, 3, 1, "", "to_json_like"], [94, 2, 1, "", "workflow"]], "matflow.param_classes": [[106, 0, 0, "-", "load"], [110, 0, 0, "-", "orientations"], [118, 0, 0, "-", "seeds"], [120, 0, 0, "-", "single_crystal_parameters"], [123, 0, 0, "-", "utils"]], "matflow.param_classes.load": [[107, 1, 1, "", "LoadCase"], [108, 1, 1, "", "LoadStep"], [109, 1, 1, "", "StrainRateMode"]], "matflow.param_classes.load.LoadCase": [[107, 3, 1, "", "biaxial"], [107, 3, 1, "", "create_damask_loading_plan"], [107, 3, 1, "", "dump_element_group_to_HDF5_group"], [107, 3, 1, "", "dump_to_HDF5_group"], [107, 3, 1, "", "example_uniaxial"], [107, 3, 1, "", "multistep"], [107, 4, 1, "", "num_steps"], [107, 3, 1, "", "planar_2D"], [107, 3, 1, "", "plane_strain"], [107, 3, 1, "", "prepare_JSON_dump"], [107, 3, 1, "", "random_2D"], [107, 3, 1, "", "random_3D"], [107, 3, 1, "", "save_from_HDF5_group"], [107, 3, 1, "", "save_from_JSON"], [107, 2, 1, "", "steps"], [107, 3, 1, "", "to_dict"], [107, 4, 1, "", "type"], [107, 4, 1, "", "types"], [107, 3, 1, "", "uniaxial"], [107, 3, 1, "", "uniaxial_cyclic"]], "matflow.param_classes.load.LoadStep": [[108, 3, 1, "", "biaxial"], [108, 2, 1, "", "direction"], [108, 3, 1, "", "dump_element_group_to_HDF5_group"], [108, 2, 1, "", "dump_frequency"], [108, 3, 1, "", "dump_to_HDF5_group"], [108, 3, 1, "", "example_uniaxial"], [108, 4, 1, "", "method_args"], [108, 4, 1, "", "method_name"], [108, 2, 1, "", "normal_direction"], [108, 2, 1, "", "num_increments"], [108, 3, 1, "", "planar_2D"], [108, 3, 1, "", "plane_strain"], [108, 3, 1, "", "prepare_JSON_dump"], [108, 3, 1, "", "random_2D"], [108, 3, 1, "", "random_3D"], [108, 3, 1, "", "save_from_HDF5_group"], [108, 3, 1, "", "save_from_JSON"], [108, 4, 1, "", "strain_like_tensor"], [108, 2, 1, "", "stress"], [108, 2, 1, "", "target_def_grad"], [108, 2, 1, "", "target_def_grad_rate"], [108, 2, 1, "", "target_vel_grad"], [108, 3, 1, "", "to_dict"], [108, 2, 1, "", "total_time"], [108, 4, 1, "", "type"], [108, 3, 1, "", "uniaxial"], [108, 3, 1, "", "uniaxial_cyclic"]], "matflow.param_classes.load.StrainRateMode": [[109, 2, 1, "", "DEF_GRAD_RATE"], [109, 2, 1, "", "VEL_GRAD"], [109, 2, 1, "", "VEL_GRAD_APPROX"], [109, 2, 1, "", "symbol"], [109, 4, 1, "", "value"]], "matflow.param_classes.orientations": [[111, 1, 1, "", "EulerDefinition"], [112, 1, 1, "", "LatticeDirection"], [113, 1, 1, "", "OrientationRepresentation"], [114, 1, 1, "", "OrientationRepresentationType"], [115, 1, 1, "", "Orientations"], [116, 1, 1, "", "QuatOrder"], [117, 1, 1, "", "UnitCellAlignment"]], "matflow.param_classes.orientations.EulerDefinition": [[111, 2, 1, "", "BUNGE"], [111, 2, 1, "", "rotation_order"], [111, 4, 1, "", "value"]], "matflow.param_classes.orientations.LatticeDirection": [[112, 2, 1, "", "A"], [112, 2, 1, "", "A_STAR"], [112, 2, 1, "", "B"], [112, 2, 1, "", "B_STAR"], [112, 2, 1, "", "C"], [112, 2, 1, "", "C_STAR"]], "matflow.param_classes.orientations.OrientationRepresentation": [[113, 3, 1, "", "dump_element_group_to_HDF5_group"], [113, 3, 1, "", "dump_to_HDF5_group"], [113, 3, 1, "", "euler"], [113, 2, 1, "", "euler_definition"], [113, 2, 1, "", "euler_is_degrees"], [113, 3, 1, "", "prepare_JSON_dump"], [113, 2, 1, "", "quat_order"], [113, 3, 1, "", "quaternion"], [113, 3, 1, "", "save_from_HDF5_group"], [113, 3, 1, "", "save_from_JSON"], [113, 3, 1, "", "to_dict"], [113, 2, 1, "", "type"]], "matflow.param_classes.orientations.OrientationRepresentationType": [[114, 2, 1, "", "EULER"], [114, 2, 1, "", "QUATERNION"]], "matflow.param_classes.orientations.Orientations": [[115, 2, 1, "", "data"], [115, 3, 1, "", "dump_element_group_to_HDF5_group"], [115, 3, 1, "", "dump_to_HDF5_group"], [115, 3, 1, "", "from_JSON_like"], [115, 3, 1, "", "from_file"], [115, 3, 1, "", "from_random"], [115, 3, 1, "", "prepare_JSON_dump"], [115, 3, 1, "", "quat_sample_random"], [115, 2, 1, "", "representation"], [115, 3, 1, "", "save_from_HDF5_group"], [115, 3, 1, "", "save_from_JSON"], [115, 3, 1, "", "to_dict"], [115, 2, 1, "", "unit_cell_alignment"]], "matflow.param_classes.orientations.QuatOrder": [[116, 2, 1, "", "SCALAR_VECTOR"], [116, 2, 1, "", "VECTOR_SCALAR"]], "matflow.param_classes.orientations.UnitCellAlignment": [[117, 3, 1, "", "dump_element_group_to_HDF5_group"], [117, 3, 1, "", "dump_to_HDF5_group"], [117, 3, 1, "", "from_hex_convention_DAMASK"], [117, 3, 1, "", "from_hex_convention_MTEX"], [117, 3, 1, "", "prepare_JSON_dump"], [117, 3, 1, "", "save_from_HDF5_group"], [117, 3, 1, "", "save_from_JSON"], [117, 3, 1, "", "to_dict"], [117, 2, 1, "", "x"], [117, 2, 1, "", "y"], [117, 2, 1, "", "z"]], "matflow.param_classes.seeds": [[119, 1, 1, "", "MicrostructureSeeds"]], "matflow.param_classes.seeds.MicrostructureSeeds": [[119, 2, 1, "", "box_size"], [119, 3, 1, "", "dump_element_group_to_HDF5_group"], [119, 3, 1, "", "dump_to_HDF5_group"], [119, 3, 1, "", "from_JSON_like"], [119, 3, 1, "", "from_file"], [119, 3, 1, "", "from_random"], [119, 4, 1, "", "num_seeds"], [119, 2, 1, "", "orientations"], [119, 2, 1, "", "phase_label"], [119, 2, 1, "", "position"], [119, 3, 1, "", "prepare_JSON_dump"], [119, 2, 1, "", "random_seed"], [119, 3, 1, "", "save_from_HDF5_group"], [119, 3, 1, "", "save_from_JSON"], [119, 3, 1, "", "show"], [119, 3, 1, "", "to_dict"]], "matflow.param_classes.single_crystal_parameters": [[121, 1, 1, "", "Perturbation"], [122, 1, 1, "", "SingleCrystalParameters"]], "matflow.param_classes.single_crystal_parameters.Perturbation": [[121, 3, 1, "", "clear"], [121, 3, 1, "", "copy"], [121, 3, 1, "", "fromkeys"], [121, 3, 1, "", "get"], [121, 3, 1, "", "items"], [121, 3, 1, "", "keys"], [121, 2, 1, "", "multiplicative"], [121, 2, 1, "", "path"], [121, 3, 1, "", "pop"], [121, 3, 1, "", "popitem"], [121, 3, 1, "", "setdefault"], [121, 3, 1, "", "update"], [121, 3, 1, "", "values"]], "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters": [[122, 3, 1, "", "as_base"], [122, 4, 1, "", "base"], [122, 3, 1, "", "dump_element_group_to_HDF5_group"], [122, 3, 1, "", "dump_to_HDF5_group"], [122, 4, 1, "", "perturbations"], [122, 4, 1, "", "phases"], [122, 3, 1, "", "prepare_JSON_dump"], [122, 3, 1, "", "save_from_HDF5_group"], [122, 3, 1, "", "save_from_JSON"], [122, 3, 1, "", "to_dict"]], "matflow.param_classes.utils": [[124, 6, 1, "", "masked_array_from_list"]], "matflow.tests": [[131, 0, 0, "-", "conftest"], [142, 0, 0, "-", "data"], [143, 0, 0, "-", "test_cli"], [146, 0, 0, "-", "test_utils"], [151, 0, 0, "-", "utils"]], "matflow.tests.conftest": [[132, 6, 1, "", "load_case_1"], [133, 6, 1, "", "new_null_config"], [134, 6, 1, "", "null_config"], [135, 6, 1, "", "orientations_1"], [136, 6, 1, "", "orientations_2"], [137, 6, 1, "", "pytest_addoption"], [138, 6, 1, "", "pytest_collection_modifyitems"], [139, 6, 1, "", "pytest_configure"], [140, 6, 1, "", "pytest_unconfigure"], [141, 6, 1, "", "seeds_1"]], "matflow.tests.test_cli": [[144, 6, 1, "", "test_hpcflow_version"], [145, 6, 1, "", "test_version"]], "matflow.tests.test_utils": [[147, 6, 1, "", "test_masked_array_from_list_1D"], [148, 6, 1, "", "test_masked_array_from_list_1D_masked"], [149, 6, 1, "", "test_masked_array_from_list_2D"], [150, 6, 1, "", "test_masked_array_from_list_2D_masked"]], "matflow-cancel": [[153, 7, 1, "cmdoption-matflow-cancel-status", "--no-status"], [153, 7, 1, "cmdoption-matflow-cancel-r", "--ref-type"], [153, 7, 1, "cmdoption-matflow-cancel-status", "--status"], [153, 7, 1, "cmdoption-matflow-cancel-r", "-r"], [153, 7, 1, "cmdoption-matflow-cancel-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-config-add-scheduler": [[153, 7, 1, "cmdoption-matflow-config-add-scheduler-defaults", "--defaults"], [153, 7, 1, "cmdoption-matflow-config-add-scheduler-arg-NAME", "NAME"]], "matflow-config-add-shell-wsl": [[153, 7, 1, "cmdoption-matflow-config-add-shell-wsl-defaults", "--defaults"]], "matflow-config-add-shell": [[153, 7, 1, "cmdoption-matflow-config-add-shell-defaults", "--defaults"], [153, 7, 1, "cmdoption-matflow-config-add-shell-arg-NAME", "NAME"]], "matflow-config-append": [[153, 7, 1, "cmdoption-matflow-config-append-json", "--json"], [153, 7, 1, "cmdoption-matflow-config-append-arg-NAME", "NAME"], [153, 7, 1, "cmdoption-matflow-config-append-arg-VALUE", "VALUE"]], "matflow-config-get": [[153, 7, 1, "cmdoption-matflow-config-get-all", "--all"], [153, 7, 1, "cmdoption-matflow-config-get-file", "--file"], [153, 7, 1, "cmdoption-matflow-config-get-metadata", "--metadata"], [153, 7, 1, "cmdoption-matflow-config-get-arg-NAME", "NAME"]], "matflow-config-import": [[153, 7, 1, "cmdoption-matflow-config-import-new", "--new"], [153, 7, 1, "cmdoption-matflow-config-import-rename", "--no-rename"], [153, 7, 1, "cmdoption-matflow-config-import-rename", "--rename"], [153, 7, 1, "cmdoption-matflow-config-import-arg-FILE_PATH", "FILE_PATH"]], "matflow-config-init": [[153, 7, 1, "cmdoption-matflow-config-init-path", "--path"], [153, 7, 1, "cmdoption-matflow-config-init-arg-KNOWN_NAME", "KNOWN_NAME"]], "matflow-config-open": [[153, 7, 1, "cmdoption-matflow-config-open-path", "--path"]], "matflow-config-pop": [[153, 7, 1, "cmdoption-matflow-config-pop-arg-INDEX", "INDEX"], [153, 7, 1, "cmdoption-matflow-config-pop-arg-NAME", "NAME"]], "matflow-config-prepend": [[153, 7, 1, "cmdoption-matflow-config-prepend-json", "--json"], [153, 7, 1, "cmdoption-matflow-config-prepend-arg-NAME", "NAME"], [153, 7, 1, "cmdoption-matflow-config-prepend-arg-VALUE", "VALUE"]], "matflow-config-set-github-demo-data-dir": [[153, 7, 1, "cmdoption-matflow-config-set-github-demo-data-dir-arg-SHA", "SHA"]], "matflow-config-set": [[153, 7, 1, "cmdoption-matflow-config-set-json", "--json"], [153, 7, 1, "cmdoption-matflow-config-set-arg-NAME", "NAME"], [153, 7, 1, "cmdoption-matflow-config-set-arg-VALUE", "VALUE"]], "matflow-config-unset": [[153, 7, 1, "cmdoption-matflow-config-unset-arg-NAME", "NAME"]], "matflow-config-update": [[153, 7, 1, "cmdoption-matflow-config-update-json", "--json"], [153, 7, 1, "cmdoption-matflow-config-update-arg-NAME", "NAME"], [153, 7, 1, "cmdoption-matflow-config-update-arg-VALUE", "VALUE"]], "matflow-config": [[153, 7, 1, "cmdoption-matflow-config-no-callback", "--no-callback"]], "matflow-configure-env": [[153, 7, 1, "cmdoption-matflow-configure-env-env-source-file", "--env-source-file"], [153, 7, 1, "cmdoption-matflow-configure-env-setup", "--setup"], [153, 7, 1, "cmdoption-matflow-configure-env-use-current-env", "--use-current-env"], [153, 7, 1, "cmdoption-matflow-configure-env-arg-NAME", "NAME"]], "matflow-demo-data-cache": [[153, 7, 1, "cmdoption-matflow-demo-data-cache-all", "--all"], [153, 7, 1, "cmdoption-matflow-demo-data-cache-arg-FILE_NAME", "FILE_NAME"]], "matflow-demo-data-copy": [[153, 7, 1, "cmdoption-matflow-demo-data-copy-arg-DESTINATION", "DESTINATION"], [153, 7, 1, "cmdoption-matflow-demo-data-copy-arg-FILE_NAME", "FILE_NAME"]], "matflow-demo-data": [[153, 7, 1, "cmdoption-matflow-demo-data-l", "--list"], [153, 7, 1, "cmdoption-matflow-demo-data-l", "-l"]], "matflow-demo-software-doSomething": [[153, 7, 1, "cmdoption-matflow-demo-software-doSomething-i1", "--infile1"], [153, 7, 1, "cmdoption-matflow-demo-software-doSomething-i2", "--infile2"], [153, 7, 1, "cmdoption-matflow-demo-software-doSomething-o", "--out"], [153, 7, 1, "cmdoption-matflow-demo-software-doSomething-v", "--value"], [153, 7, 1, "cmdoption-matflow-demo-software-doSomething-i1", "-i1"], [153, 7, 1, "cmdoption-matflow-demo-software-doSomething-i2", "-i2"], [153, 7, 1, "cmdoption-matflow-demo-software-doSomething-o", "-o"], [153, 7, 1, "cmdoption-matflow-demo-software-doSomething-v", "-v"]], "matflow-demo-workflow-copy": [[153, 7, 1, "cmdoption-matflow-demo-workflow-copy-doc", "--doc"], [153, 7, 1, "cmdoption-matflow-demo-workflow-copy-doc", "--no-doc"], [153, 7, 1, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION", "DESTINATION"], [153, 7, 1, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-go": [[153, 7, 1, "cmdoption-matflow-demo-workflow-go-add-to-known", "--add-to-known"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-cancel", "--cancel"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-format", "--format"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-js-parallelism", "--js-parallelism"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-name", "--name"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-add-to-known", "--no-add-to-known"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-status", "--no-status"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-overwrite", "--overwrite"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-path", "--path"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-print-idx", "--print-idx"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-status", "--status"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-store", "--store"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-tasks", "--tasks"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-ts-fmt", "--ts-fmt"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-ts-name-fmt", "--ts-name-fmt"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-v", "--var"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-wait", "--wait"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-v", "-v"], [153, 7, 1, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-make": [[153, 7, 1, "cmdoption-matflow-demo-workflow-make-add-submission", "--add-submission"], [153, 7, 1, "cmdoption-matflow-demo-workflow-make-format", "--format"], [153, 7, 1, "cmdoption-matflow-demo-workflow-make-name", "--name"], [153, 7, 1, "cmdoption-matflow-demo-workflow-make-status", "--no-status"], [153, 7, 1, "cmdoption-matflow-demo-workflow-make-overwrite", "--overwrite"], [153, 7, 1, "cmdoption-matflow-demo-workflow-make-path", "--path"], [153, 7, 1, "cmdoption-matflow-demo-workflow-make-status", "--status"], [153, 7, 1, "cmdoption-matflow-demo-workflow-make-store", "--store"], [153, 7, 1, "cmdoption-matflow-demo-workflow-make-ts-fmt", "--ts-fmt"], [153, 7, 1, "cmdoption-matflow-demo-workflow-make-ts-name-fmt", "--ts-name-fmt"], [153, 7, 1, "cmdoption-matflow-demo-workflow-make-v", "--var"], [153, 7, 1, "cmdoption-matflow-demo-workflow-make-v", "-v"], [153, 7, 1, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-show": [[153, 7, 1, "cmdoption-matflow-demo-workflow-show-doc", "--doc"], [153, 7, 1, "cmdoption-matflow-demo-workflow-show-doc", "--no-doc"], [153, 7, 1, "cmdoption-matflow-demo-workflow-show-syntax", "--no-syntax"], [153, 7, 1, "cmdoption-matflow-demo-workflow-show-syntax", "--syntax"], [153, 7, 1, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow": [[153, 7, 1, "cmdoption-matflow-demo-workflow-l", "--list"], [153, 7, 1, "cmdoption-matflow-demo-workflow-l", "-l"]], "matflow-go": [[153, 7, 1, "cmdoption-matflow-go-add-to-known", "--add-to-known"], [153, 7, 1, "cmdoption-matflow-go-cancel", "--cancel"], [153, 7, 1, "cmdoption-matflow-go-format", "--format"], [153, 7, 1, "cmdoption-matflow-go-js-parallelism", "--js-parallelism"], [153, 7, 1, "cmdoption-matflow-go-name", "--name"], [153, 7, 1, "cmdoption-matflow-go-add-to-known", "--no-add-to-known"], [153, 7, 1, "cmdoption-matflow-go-status", "--no-status"], [153, 7, 1, "cmdoption-matflow-go-overwrite", "--overwrite"], [153, 7, 1, "cmdoption-matflow-go-path", "--path"], [153, 7, 1, "cmdoption-matflow-go-print-idx", "--print-idx"], [153, 7, 1, "cmdoption-matflow-go-status", "--status"], [153, 7, 1, "cmdoption-matflow-go-store", "--store"], [153, 7, 1, "cmdoption-matflow-go-string", "--string"], [153, 7, 1, "cmdoption-matflow-go-tasks", "--tasks"], [153, 7, 1, "cmdoption-matflow-go-ts-fmt", "--ts-fmt"], [153, 7, 1, "cmdoption-matflow-go-ts-name-fmt", "--ts-name-fmt"], [153, 7, 1, "cmdoption-matflow-go-v", "--var"], [153, 7, 1, "cmdoption-matflow-go-wait", "--wait"], [153, 7, 1, "cmdoption-matflow-go-v", "-v"], [153, 7, 1, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR", "TEMPLATE_FILE_OR_STR"]], "matflow-helper-pid": [[153, 7, 1, "cmdoption-matflow-helper-pid-f", "--file"], [153, 7, 1, "cmdoption-matflow-helper-pid-f", "-f"]], "matflow-helper-restart": [[153, 7, 1, "cmdoption-matflow-helper-restart-timeout", "--timeout"], [153, 7, 1, "cmdoption-matflow-helper-restart-timeout-check-interval", "--timeout-check-interval"], [153, 7, 1, "cmdoption-matflow-helper-restart-watch-interval", "--watch-interval"]], "matflow-helper-run": [[153, 7, 1, "cmdoption-matflow-helper-run-timeout", "--timeout"], [153, 7, 1, "cmdoption-matflow-helper-run-timeout-check-interval", "--timeout-check-interval"], [153, 7, 1, "cmdoption-matflow-helper-run-watch-interval", "--watch-interval"]], "matflow-helper-start": [[153, 7, 1, "cmdoption-matflow-helper-start-timeout", "--timeout"], [153, 7, 1, "cmdoption-matflow-helper-start-timeout-check-interval", "--timeout-check-interval"], [153, 7, 1, "cmdoption-matflow-helper-start-watch-interval", "--watch-interval"]], "matflow-internal-noop": [[153, 7, 1, "cmdoption-matflow-internal-noop-click-exit-code", "--click-exit-code"], [153, 7, 1, "cmdoption-matflow-internal-noop-raise", "--raise"], [153, 7, 1, "cmdoption-matflow-internal-noop-sleep", "--sleep"]], "matflow-internal-workflow-PATH-execute-combined-runs": [[153, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-combined-runs-arg-JOBSCRIPT_IDX", "JOBSCRIPT_IDX"], [153, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-combined-runs-arg-SUBMISSION_IDX", "SUBMISSION_IDX"]], "matflow-internal-workflow-PATH-execute-run": [[153, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-BLOCK_ACTION_IDX", "BLOCK_ACTION_IDX"], [153, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-BLOCK_IDX", "BLOCK_IDX"], [153, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-JOBSCRIPT_IDX", "JOBSCRIPT_IDX"], [153, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-RUN_ID", "RUN_ID"], [153, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-SUBMISSION_IDX", "SUBMISSION_IDX"]], "matflow-internal-workflow-PATH-save-parameter": [[153, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-stderr", "--stderr"], [153, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-CMD_IDX", "CMD_IDX"], [153, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID", "EAR_ID"], [153, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME", "NAME"], [153, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE", "VALUE"]], "matflow-internal-workflow": [[153, 7, 1, "cmdoption-matflow-internal-workflow-arg-PATH", "PATH"]], "matflow-make": [[153, 7, 1, "cmdoption-matflow-make-add-submission", "--add-submission"], [153, 7, 1, "cmdoption-matflow-make-format", "--format"], [153, 7, 1, "cmdoption-matflow-make-name", "--name"], [153, 7, 1, "cmdoption-matflow-make-status", "--no-status"], [153, 7, 1, "cmdoption-matflow-make-overwrite", "--overwrite"], [153, 7, 1, "cmdoption-matflow-make-path", "--path"], [153, 7, 1, "cmdoption-matflow-make-status", "--status"], [153, 7, 1, "cmdoption-matflow-make-store", "--store"], [153, 7, 1, "cmdoption-matflow-make-string", "--string"], [153, 7, 1, "cmdoption-matflow-make-ts-fmt", "--ts-fmt"], [153, 7, 1, "cmdoption-matflow-make-ts-name-fmt", "--ts-name-fmt"], [153, 7, 1, "cmdoption-matflow-make-v", "--var"], [153, 7, 1, "cmdoption-matflow-make-v", "-v"], [153, 7, 1, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR", "TEMPLATE_FILE_OR_STR"]], "matflow-manage-clear-cache": [[153, 7, 1, "cmdoption-matflow-manage-clear-cache-hostname", "--hostname"]], "matflow-manage-get-config-path": [[153, 7, 1, "cmdoption-matflow-manage-get-config-path-config-dir", "--config-dir"]], "matflow-manage-reset-config": [[153, 7, 1, "cmdoption-matflow-manage-reset-config-config-dir", "--config-dir"]], "matflow-open-config": [[153, 7, 1, "cmdoption-matflow-open-config-path", "--path"]], "matflow-open-demo-data-cache-dir": [[153, 7, 1, "cmdoption-matflow-open-demo-data-cache-dir-path", "--path"]], "matflow-open-env-source": [[153, 7, 1, "cmdoption-matflow-open-env-source-name", "--name"], [153, 7, 1, "cmdoption-matflow-open-env-source-path", "--path"]], "matflow-open-known-subs": [[153, 7, 1, "cmdoption-matflow-open-known-subs-path", "--path"]], "matflow-open-log": [[153, 7, 1, "cmdoption-matflow-open-log-path", "--path"]], "matflow-open-user-cache-dir": [[153, 7, 1, "cmdoption-matflow-open-user-cache-dir-path", "--path"]], "matflow-open-user-cache-hostname-dir": [[153, 7, 1, "cmdoption-matflow-open-user-cache-hostname-dir-path", "--path"]], "matflow-open-user-data-dir": [[153, 7, 1, "cmdoption-matflow-open-user-data-dir-path", "--path"]], "matflow-open-user-data-hostname-dir": [[153, 7, 1, "cmdoption-matflow-open-user-data-hostname-dir-path", "--path"]], "matflow-open-user-runtime-dir": [[153, 7, 1, "cmdoption-matflow-open-user-runtime-dir-path", "--path"]], "matflow-open-workflow": [[153, 7, 1, "cmdoption-matflow-open-workflow-path", "--path"], [153, 7, 1, "cmdoption-matflow-open-workflow-r", "--ref-type"], [153, 7, 1, "cmdoption-matflow-open-workflow-r", "-r"], [153, 7, 1, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-rechunk": [[153, 7, 1, "cmdoption-matflow-rechunk-backup", "--backup"], [153, 7, 1, "cmdoption-matflow-rechunk-chunk-size", "--chunk-size"], [153, 7, 1, "cmdoption-matflow-rechunk-backup", "--no-backup"], [153, 7, 1, "cmdoption-matflow-rechunk-status", "--no-status"], [153, 7, 1, "cmdoption-matflow-rechunk-r", "--ref-type"], [153, 7, 1, "cmdoption-matflow-rechunk-status", "--status"], [153, 7, 1, "cmdoption-matflow-rechunk-r", "-r"], [153, 7, 1, "cmdoption-matflow-rechunk-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-show": [[153, 7, 1, "cmdoption-matflow-show-f", "--full"], [153, 7, 1, "cmdoption-matflow-show-legend", "--legend"], [153, 7, 1, "cmdoption-matflow-show-r", "--max-recent"], [153, 7, 1, "cmdoption-matflow-show-no-update", "--no-update"], [153, 7, 1, "cmdoption-matflow-show-f", "-f"], [153, 7, 1, "cmdoption-matflow-show-r", "-r"]], "matflow-submission-get-known": [[153, 7, 1, "cmdoption-matflow-submission-get-known-json", "--json"]], "matflow-submission-scheduler": [[153, 7, 1, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME", "SCHEDULER_NAME"]], "matflow-submission-shell-info": [[153, 7, 1, "cmdoption-matflow-submission-shell-info-exclude-os", "--exclude-os"], [153, 7, 1, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME", "SHELL_NAME"]], "matflow-submission": [[153, 7, 1, "cmdoption-matflow-submission-os-info", "--os-info"]], "matflow-test-hpcflow": [[153, 7, 1, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS", "PY_TEST_ARGS"]], "matflow-test": [[153, 7, 1, "cmdoption-matflow-test-arg-PY_TEST_ARGS", "PY_TEST_ARGS"]], "matflow-unzip": [[153, 7, 1, "cmdoption-matflow-unzip-log", "--log"], [153, 7, 1, "cmdoption-matflow-unzip-path", "--path"], [153, 7, 1, "cmdoption-matflow-unzip-arg-WORKFLOW_PATH", "WORKFLOW_PATH"]], "matflow-workflow-WORKFLOW_REF-abort-run": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element", "--element"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission", "--submission"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task", "--task"]], "matflow-workflow-WORKFLOW_REF-add-submission": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-force-array", "--force-array"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-js-parallelism", "--js-parallelism"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-status", "--no-status"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-status", "--status"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-tasks", "--tasks"]], "matflow-workflow-WORKFLOW_REF-get-param-source": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-get-param": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-is-param-set": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-list-jobscripts": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-jobscripts", "--jobscripts"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-max-js", "--max-js"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-sub-idx", "--sub-idx"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-width", "--width"]], "matflow-workflow-WORKFLOW_REF-list-task-jobscripts": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-max-js", "--max-js"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-sub-idx", "--sub-idx"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-task-names", "--task-names"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-width", "--width"]], "matflow-workflow-WORKFLOW_REF-rechunk-parameter-base": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup", "--backup"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-chunk-size", "--chunk-size"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup", "--no-backup"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status", "--no-status"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status", "--status"]], "matflow-workflow-WORKFLOW_REF-rechunk-runs": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup", "--backup"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-chunk-size", "--chunk-size"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup", "--no-backup"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status", "--no-status"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status", "--status"]], "matflow-workflow-WORKFLOW_REF-rechunk": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup", "--backup"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-chunk-size", "--chunk-size"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup", "--no-backup"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status", "--no-status"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status", "--status"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stderr": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stderr-array-idx", "--array-idx"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stdout": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stdout-array-idx", "--array-idx"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX", "JS_IDX"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-jobscripts", "--jobscripts"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-max-js", "--max-js"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-width", "--width"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-max-js", "--max-js"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-task-names", "--task-names"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-width", "--width"]], "matflow-workflow-WORKFLOW_REF-sub": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX", "SUB_IDX"]], "matflow-workflow-WORKFLOW_REF-submit": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known", "--add-to-known"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-cancel", "--cancel"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism", "--js-parallelism"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known", "--no-add-to-known"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status", "--no-status"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-print-idx", "--print-idx"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status", "--status"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-tasks", "--tasks"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait", "--wait"]], "matflow-workflow-WORKFLOW_REF-unzip": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-log", "--log"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-path", "--path"]], "matflow-workflow-WORKFLOW_REF-wait": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j", "--jobscripts"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j", "-j"]], "matflow-workflow-WORKFLOW_REF-zip": [[153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-execute", "--include-execute"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-rechunk-backups", "--include-rechunk-backups"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log", "--log"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-overwrite", "--overwrite"], [153, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-path", "--path"]], "matflow-workflow": [[153, 7, 1, "cmdoption-matflow-workflow-r", "--ref-type"], [153, 7, 1, "cmdoption-matflow-workflow-r", "-r"], [153, 7, 1, "cmdoption-matflow-workflow-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-zip": [[153, 7, 1, "cmdoption-matflow-zip-include-execute", "--include-execute"], [153, 7, 1, "cmdoption-matflow-zip-include-rechunk-backups", "--include-rechunk-backups"], [153, 7, 1, "cmdoption-matflow-zip-log", "--log"], [153, 7, 1, "cmdoption-matflow-zip-overwrite", "--overwrite"], [153, 7, 1, "cmdoption-matflow-zip-path", "--path"], [153, 7, 1, "cmdoption-matflow-zip-r", "--ref-type"], [153, 7, 1, "cmdoption-matflow-zip-r", "-r"], [153, 7, 1, "cmdoption-matflow-zip-arg-WORKFLOW_REF", "WORKFLOW_REF"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:data", "6": "py:function", "7": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"], "7": ["std", "cmdoption", "program option"]}, "titleterms": {"altern": [0, 5], "instal": [0, 1, 5], "method": [0, 5], "matflow": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 164, 169], "cli": [0, 1, 97, 155], "what": 0, "doe": 0, "thi": 0, "script": [0, 169], "do": 0, "download": 0, "binari": 0, "advanc": [0, 163], "contribut": 1, "recommend": 1, "read": 1, "develop": [1, 3], "clone": 1, "repo": 1, "check": [1, 167], "out": 1, "hpcflow": [1, 153, 155], "python": [1, 152, 172], "depend": 1, "poetri": 1, "troubleshoot": 1, "work": 1, "from": [1, 176], "sourc": [1, 153], "link": 1, "local": 1, "environ": [2, 5, 32, 155, 159, 169], "matlab_env": [2, 159], "exampl": [2, 164, 172], "definit": 2, "window": 2, "linux": 2, "maco": 2, "dream_3d_env": [2, 159], "defdap_env": [2, 159], "damask_pars": 2, "damask": [2, 155, 180], "welcom": 4, "": 4, "document": 4, "content": 4, "indic": 4, "tabl": 4, "us": [5, 169, 172], "pip": 5, "releas": 5, "note": 5, "configur": [5, 153, 154, 168], "action": [7, 169], "actionenviron": 8, "actionrul": 9, "paramet": [9, 46, 59, 63, 80, 88, 153, 160, 174], "actionscop": 10, "actionscopetyp": 11, "command": [12, 153, 155, 158], "commandfileslist": 13, "directposix": 14, "directwindow": 15, "element": [16, 31], "elementact": 17, "elementactionrun": 18, "elementfilt": 19, "elementgroup": 20, "elementinputfil": 21, "elementinput": 22, "elementiter": 23, "elementoutputfil": 24, "elementoutput": 25, "elementparamet": 26, "elementpropag": 27, "elementrepeat": 28, "elementresourc": 29, "elementset": 30, "environmentslist": 33, "execut": [34, 153], "executableinst": 35, "executableslist": 36, "executor": 37, "filenameext": 38, "filenamespec": 39, "filenamestem": 40, "filespec": 41, "grouplist": 42, "inputfil": 43, "inputfilegener": 44, "inputfilegeneratorsourc": 45, "inputsourc": 46, "inputsourcetyp": 47, "inputvalu": 48, "jobscript": [49, 153], "jobscriptblock": 50, "loop": [51, 171], "metatask": 52, "metataskschema": 53, "multipathsequ": 54, "numcor": 55, "outputfilepars": 56, "outputfileparsersourc": 57, "outputlabel": 58, "parameterpath": 60, "parameterpropagationmod": 61, "parametervalu": 62, "parameterslist": 64, "queuedschedul": 65, "resourcelist": 66, "resourcespec": 67, "todo": [67, 74], "rule": 68, "rundirappfil": 69, "sgeposix": 70, "schemainput": 71, "schemaoutput": 72, "schemaparamet": 73, "slurmposix": 74, "subparamet": 75, "submiss": [76, 153, 168], "task": [77, 153, 155, 161, 163, 164, 169, 172, 173, 174], "taskinputparamet": 78, "tasklist": 79, "taskobject": 80, "taskoutputparamet": 81, "taskschema": 82, "taskschemaslist": 83, "tasksourcetyp": 84, "tasktemplatelist": 85, "valueperturb": 86, "valuesequ": 87, "workflow": [88, 153, 155, 162, 163, 164, 165, 167, 169, 171, 175, 176], "workflowblueprint": 89, "workflowloop": 90, "workflowlooplist": 91, "workflowtask": 92, "workflowtasklist": 93, "workflowtempl": 94, "app": 95, "cancel": [96, 153, 167], "get_os_info": 98, "get_known_submiss": 99, "get_shell_info": 100, "make_and_submit_demo_workflow": 101, "make_and_submit_workflow": 102, "make_demo_workflow": 103, "make_workflow": 104, "param_class": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "load": [106, 107, 108, 109, 153, 175, 176, 180], "loadcas": [107, 155], "loadstep": 108, "strainratemod": 109, "orient": [110, 111, 112, 113, 114, 115, 116, 117, 160], "eulerdefinit": 111, "latticedirect": 112, "orientationrepresent": 113, "orientationrepresentationtyp": 114, "quatord": 116, "unitcellalign": 117, "seed": [118, 119], "microstructurese": 119, "single_crystal_paramet": [120, 121, 122, 160], "perturb": 121, "singlecrystalparamet": 122, "util": [123, 124, 151, 180], "masked_array_from_list": 124, "run_hpcflow_test": 125, "run_test": 126, "show": [127, 153, 173], "show_legend": 128, "submit_workflow": 129, "test": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153], "conftest": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "load_case_1": 132, "new_null_config": 133, "null_config": 134, "orientations_1": 135, "orientations_2": 136, "pytest_addopt": 137, "pytest_collection_modifyitem": 138, "pytest_configur": 139, "pytest_unconfigur": 140, "seeds_1": 141, "data": [142, 153], "test_cli": [143, 144, 145], "test_hpcflow_vers": 144, "test_vers": 145, "test_util": [146, 147, 148, 149, 150], "test_masked_array_from_list_1d": 147, "test_masked_array_from_list_1d_mask": 148, "test_masked_array_from_list_2d": 149, "test_masked_array_from_list_2d_mask": 150, "api": [152, 155, 172], "line": 153, "interfac": 153, "config": [153, 154, 168], "add": 153, "schedul": 153, "shell": 153, "wsl": 153, "append": 153, "get": [153, 166, 168], "import": 153, "init": 153, "list": 153, "file": [153, 154, 155, 158, 163, 164, 168], "open": 153, "pop": 153, "prepend": 153, "set": [153, 168], "github": 153, "demo": [153, 162, 167], "dir": 153, "unset": 153, "updat": 153, "env": 153, "cach": 153, "copi": 153, "softwar": [153, 169], "dosometh": 153, "go": 153, "make": 153, "helper": 153, "clear": [153, 168], "log": 153, "path": [153, 160, 169], "pid": 153, "restart": 153, "run": 153, "start": [153, 166], "stop": 153, "uptim": 153, "watch": 153, "intern": 153, "invoc": 153, "cmd": 153, "noop": 153, "combin": 153, "save": 153, "manag": 153, "known": [153, 168], "sub": 153, "temp": 153, "reset": [153, 168], "user": [153, 177], "hostnam": 153, "runtim": 153, "rechunk": 153, "login": 153, "node": 153, "info": 153, "tc": 153, "unzip": 153, "abort": 153, "all": 153, "param": 153, "process": [153, 180], "id": 153, "job": 153, "i": 153, "base": 153, "statu": [153, 167], "activ": 153, "j": 153, "dep": 153, "re": 153, "stderr": 153, "stdout": 153, "need": 153, "submit": [153, 165, 167], "outstand": 153, "wait": 153, "zip": 153, "default": [154, 168], "valid": 154, "schema": [154, 155, 161, 163, 164, 169, 173, 174], "glossari": 155, "cluster": 155, "pars": 155, "defdap": 155, "virtual": 155, "formabl": 155, "hpc": 155, "templat": [155, 157, 169, 174, 175, 176], "refer": 156, "compon": [157, 164, 174], "damask_geom_fil": 158, "damask_load_fil": 158, "damask_material_fil": 158, "damask_numerics_fil": 158, "damask_stdout_fil": 158, "damask_stderr_fil": 158, "damask_hdf5_fil": 158, "damask_viz_fil": 158, "mtex_pole_figur": 158, "mtex_inverse_pole_figur": 158, "mtex_ipf_kei": 158, "dream_3d_pipelin": 158, "dream_3d_hdf5_fil": 158, "dream_3d_xdmf_fil": 158, "null_env": 159, "python_env": 159, "damask_env": 159, "damask_parse_env": 159, "formable_env": 159, "crc_file_path": 160, "csv_argument": 160, "csv_file_path": 160, "ctf_file_path": 160, "dic": 160, "ebsd": 160, "ebsd_phas": 160, "ebsd_reference_frame_transform": 160, "ebsd_rot": 160, "ipf_reference_direct": 160, "odf_compon": 160, "odf_mat_file_path": 160, "ve_grid_s": 160, "ve_respons": 160, "ve_response_data": 160, "ve_siz": 160, "buffer_s": 160, "colourbar_limit": 160, "compil": 160, "crystal_symmetri": 160, "damask_log": 160, "damask_numer": [160, 162], "damask_phas": 160, "damask_post_process": 160, "damask_post_processing_result": 160, "damask_solv": 160, "damask_viz": 160, "damask_viz_result": 160, "depth": 160, "dump_path": 160, "eng_strain_col_index": 160, "eng_stress_col_index": 160, "find_grains_algorithm": 160, "fit_yield_fixed_paramet": 160, "fit_yield_initial_paramet": 160, "fit_yield_opt_paramet": 160, "fitted_yield_funct": 160, "grid_siz": 160, "homog_label": 160, "homogen": 160, "image_ax": 160, "initial_damp": 160, "levenberg_marquardt_fitt": 160, "load_cas": 160, "microstructure_imag": 160, "microstructure_se": 160, "new_grid_s": 160, "num_grain": 160, "num_orient": 160, "order": 160, "origin": 160, "period": 160, "phase_id": 160, "phase_label": 160, "phase_label_map": 160, "phase_statist": 160, "plastic_rang": 160, "pole_figure_direct": 160, "precipit": 160, "resolut": 160, "root_path": 160, "scale_morphologi": 160, "scale_update_s": 160, "scaling_factor": 160, "size": 160, "specimen_symmetri": 160, "stress_unit": 160, "tensile_test": 160, "transform_typ": 160, "true_strain_col_index": 160, "true_stress_col_index": 160, "use_contour": 160, "use_one_colourbar": 160, "volume_el": 160, "yield_function_nam": 160, "yield_point": 160, "yield_point_criteria": 160, "collate_result": 161, "define_load_cas": 161, "define_microstructure_se": 161, "define_orient": 161, "dummy_pre_processor": 161, "dump_all_yield_stress": 161, "evaluate_limit_state_normal_sum": 161, "evaluate_yield_stress_limit_st": 161, "fit_single_crystal_paramet": [161, 162], "fit_yield_funct": 161, "generate_microstructure_se": 161, "generate_microstructure_seeds_from_random": 161, "generate_next_st": 161, "generate_next_state_c": 161, "generate_next_state_ac": 161, "generate_orient": 161, "generate_rv": 161, "generate_rve_from_damask_input_fil": 161, "generate_volume_el": 161, "generate_volume_element_from_voronoi": 161, "generate_volume_element_from_statist": [161, 162], "generate_volume_element_extrus": 161, "generate_volume_element_from_voronoi_random_vari": 161, "increment_chain": 161, "increment_chain_inn": 161, "initialise_markov_chain": 161, "initialise_markov_chains_ac": 161, "load_microstructur": 161, "load_microstructure_ebsd_d": 161, "load_microstructure_ebsd": 161, "model_sum_x": 161, "modify_v": 161, "modify_ve_add_buffer_zon": 161, "modify_ve_grid_s": 161, "read_tensile_test": 161, "read_tensile_test_from_csv": 161, "sample_direct_mc": 161, "sample_orient": 161, "sample_orientations_from_ctf_file_mtex": 161, "sample_orientations_from_crc_file_mtex": 161, "sample_textur": 161, "sample_texture_from_ctf_file_mtex": 161, "sample_texture_from_crc_file_mtex": 161, "sample_texture_from_odf_mat_file_mtex": 161, "sample_texture_from_model_odf_mtex": 161, "sample_texture_random_mtex": 161, "simulate_ve_load": 161, "simulate_ve_loading_damask": 161, "simulate_ve_loading_damask_hc": 161, "system_analysi": 161, "system_analysis_16": 161, "system_analysis_32": 161, "system_analysis_da_coars": 161, "system_analysis_da_fin": 161, "system_analysis_toy_model": 161, "update_propos": 161, "visualise_v": 161, "visualise_ve_vtk": 161, "visualise_multi_orient": 161, "visualise_multi_orientations_inverse_pole_figure_mtex": 161, "visualise_orient": 161, "visualise_orientations_pole_figure_mtex": 161, "visualise_orientations_inverse_pole_figure_mtex": 161, "rve_extrusion_ebsd": 162, "yaml": 162, "rve_extrusion_ebsd_d": 162, "cubic_textur": 162, "damask_input_fil": 162, "fit_yield_func": 162, "modify_volume_element_grid_s": 162, "read_tensile_test_csv": 162, "sample_orientations_crc_fil": 162, "sample_orientations_ctf_fil": 162, "sample_texture_crc_fil": 162, "sample_texture_ctf_fil": 162, "sample_texture_odf_mat": 162, "sample_texture_model_odf": 162, "sample_texture_random": 162, "simulate_yield_surface_2d": 162, "simulate_yield_surface_2d_brass": 162, "subset_simulation_damask_": 162, "subset_simulation_damask_mg": 162, "subset_simulation_damask_mg_ac": 162, "subset_simulation_damask_mg_two_level": 162, "subset_simulation_toy_model": 162, "subset_simulation_toy_model_ac": 162, "subset_simulation_toy_model_acs_extern": 162, "subset_simulation_toy_model_c": 162, "subset_simulation_toy_model_delayed_accept": 162, "subset_simulation_toy_model_extern": 162, "subset_simulation_toy_model_two_level": 162, "subset_simulation_toy_model_two_level_extern": 162, "tension_damask_": 162, "tension_damask_al_n_repeat": 162, "tension_damask_mg": 162, "tension_damask_ti": 162, "concept": 163, "resourc": 163, "sequenc": [163, 169, 171], "group": 163, "shortcut": 163, "input": 163, "gener": [163, 176], "output": 163, "parser": 163, "write": 164, "custom": 164, "requir": 164, "kei": 164, "option": 164, "syntax": 164, "pass": [164, 169], "variabl": 164, "around": 164, "common": 165, "error": 165, "analys": 165, "an": 165, "old": 165, "how": [168, 169, 170, 173, 174, 175, 176], "tos": [168, 169, 173, 175, 176], "item": 168, "valu": 168, "multipl": 169, "version": 169, "same": 169, "disambigu": 169, "between": 169, "name": [169, 174], "specifi": 169, "within": 169, "defin": 169, "preset": 169, "select": 169, "To": 170, "guid": [170, 177], "versu": 171, "A": 171, "basic": 171, "meta": 172, "simpl": 172, "customis": 172, "parametris": 172, "inform": 173, "about": 173, "persist": 176, "tutori": 178, "jupyt": 179, "notebook": 179, "simul": 180, "yield": 180, "surfac": 180, "function": 180, "plot": 180}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Alternative installation methods": [[0, "alternative-installation-methods"], [5, "alternative-installation-methods"]], "MatFlow CLI": [[0, "matflow-cli"]], "What does this script do?": [[0, null]], "Download CLI binaries (advanced)": [[0, "download-cli-binaries-advanced"]], "Contribute": [[1, "contribute"]], "Recommended reads": [[1, "recommended-reads"]], "Installation for development": [[1, "installation-for-development"]], "Clone repo": [[1, "clone-repo"]], "Checking out hpcflow": [[1, "checking-out-hpcflow"]], "Checking out matflow": [[1, "checking-out-matflow"]], "Install python dependencies with poetry": [[1, "install-python-dependencies-with-poetry"]], "Troubleshooting": [[1, "troubleshooting"]], "Working from the source": [[1, "working-from-the-source"]], "Working with hpcflow": [[1, "working-with-hpcflow"]], "Working with matflow": [[1, "working-with-matflow"]], "link to local hpcflow": [[1, "link-to-local-hpcflow"]], "CLI": [[1, "cli"], [155, "cli"]], "Environments": [[2, "environments"], [5, "environments"], [159, "environments"]], "matlab_env": [[2, "matlab-env"], [159, "matlab-env"]], "Example environment definition - Windows": [[2, "example-environment-definition-windows"], [2, "id2"]], "Example environment definition - Linux/MacOS": [[2, "example-environment-definition-linux-macos"], [2, "id1"]], "dream_3D_env": [[2, "dream-3d-env"], [159, "dream-3d-env"]], "defdap_env": [[2, "defdap-env"], [159, "defdap-env"]], "damask_parse": [[2, "damask-parse"]], "Example environment definition": [[2, "example-environment-definition"], [2, "id3"]], "damask": [[2, "damask"]], "Development": [[3, "development"]], "Welcome to MatFlow\u2019s documentation!": [[4, "welcome-to-matflow-s-documentation"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "Installation": [[5, "installation"]], "Using pip": [[5, "using-pip"]], "Release notes": [[5, "release-notes"]], "Configuration": [[5, "configuration"]], "matflow": [[6, "matflow"], [153, "matflow"]], "matflow.Action": [[7, "matflow-action"]], "matflow.ActionEnvironment": [[8, "matflow-actionenvironment"]], "matflow.ActionRule": [[9, "matflow-actionrule"]], "Parameter": [[9, "parameter"], [9, "id1"], [9, "id2"], [46, "parameter"], [80, "parameter"], [88, "parameter"], [88, "id1"]], "matflow.ActionScope": [[10, "matflow-actionscope"]], "matflow.ActionScopeType": [[11, "matflow-actionscopetype"]], "matflow.Command": [[12, "matflow-command"]], "matflow.CommandFilesList": [[13, "matflow-commandfileslist"]], "matflow.DirectPosix": [[14, "matflow-directposix"]], "matflow.DirectWindows": [[15, "matflow-directwindows"]], "matflow.Element": [[16, "matflow-element"]], "matflow.ElementAction": [[17, "matflow-elementaction"]], "matflow.ElementActionRun": [[18, "matflow-elementactionrun"]], "matflow.ElementFilter": [[19, "matflow-elementfilter"]], "matflow.ElementGroup": [[20, "matflow-elementgroup"]], "matflow.ElementInputFiles": [[21, "matflow-elementinputfiles"]], "matflow.ElementInputs": [[22, "matflow-elementinputs"]], "matflow.ElementIteration": [[23, "matflow-elementiteration"]], "matflow.ElementOutputFiles": [[24, "matflow-elementoutputfiles"]], "matflow.ElementOutputs": [[25, "matflow-elementoutputs"]], "matflow.ElementParameter": [[26, "matflow-elementparameter"]], "matflow.ElementPropagation": [[27, "matflow-elementpropagation"]], "matflow.ElementRepeats": [[28, "matflow-elementrepeats"]], "matflow.ElementResources": [[29, "matflow-elementresources"]], "matflow.ElementSet": [[30, "matflow-elementset"]], "matflow.Elements": [[31, "matflow-elements"]], "matflow.Environment": [[32, "matflow-environment"]], "matflow.EnvironmentsList": [[33, "matflow-environmentslist"]], "matflow.Executable": [[34, "matflow-executable"]], "matflow.ExecutableInstance": [[35, "matflow-executableinstance"]], "matflow.ExecutablesList": [[36, "matflow-executableslist"]], "matflow.Executor": [[37, "matflow-executor"]], "matflow.FileNameExt": [[38, "matflow-filenameext"]], "matflow.FileNameSpec": [[39, "matflow-filenamespec"]], "matflow.FileNameStem": [[40, "matflow-filenamestem"]], "matflow.FileSpec": [[41, "matflow-filespec"]], "matflow.GroupList": [[42, "matflow-grouplist"]], "matflow.InputFile": [[43, "matflow-inputfile"]], "matflow.InputFileGenerator": [[44, "matflow-inputfilegenerator"]], "matflow.InputFileGeneratorSource": [[45, "matflow-inputfilegeneratorsource"]], "matflow.InputSource": [[46, "matflow-inputsource"]], "matflow.InputSourceType": [[47, "matflow-inputsourcetype"]], "matflow.InputValue": [[48, "matflow-inputvalue"]], "matflow.Jobscript": [[49, "matflow-jobscript"]], "matflow.JobscriptBlock": [[50, "matflow-jobscriptblock"]], "matflow.Loop": [[51, "matflow-loop"]], "matflow.MetaTask": [[52, "matflow-metatask"]], "matflow.MetaTaskSchema": [[53, "matflow-metataskschema"]], "matflow.MultiPathSequence": [[54, "matflow-multipathsequence"]], "matflow.NumCores": [[55, "matflow-numcores"]], "matflow.OutputFileParser": [[56, "matflow-outputfileparser"]], "matflow.OutputFileParserSource": [[57, "matflow-outputfileparsersource"]], "matflow.OutputLabel": [[58, "matflow-outputlabel"]], "matflow.Parameter": [[59, "matflow-parameter"]], "matflow.ParameterPath": [[60, "matflow-parameterpath"]], "matflow.ParameterPropagationMode": [[61, "matflow-parameterpropagationmode"]], "matflow.ParameterValue": [[62, "matflow-parametervalue"]], "matflow.Parameters": [[63, "matflow-parameters"]], "matflow.ParametersList": [[64, "matflow-parameterslist"]], "matflow.QueuedScheduler": [[65, "matflow-queuedscheduler"]], "matflow.ResourceList": [[66, "matflow-resourcelist"]], "matflow.ResourceSpec": [[67, "matflow-resourcespec"]], "Todo": [[67, "id1"], [74, "id1"]], "matflow.Rule": [[68, "matflow-rule"]], "matflow.RunDirAppFiles": [[69, "matflow-rundirappfiles"]], "matflow.SGEPosix": [[70, "matflow-sgeposix"]], "matflow.SchemaInput": [[71, "matflow-schemainput"]], "matflow.SchemaOutput": [[72, "matflow-schemaoutput"]], "matflow.SchemaParameter": [[73, "matflow-schemaparameter"]], "matflow.SlurmPosix": [[74, "matflow-slurmposix"]], "matflow.SubParameter": [[75, "matflow-subparameter"]], "matflow.Submission": [[76, "matflow-submission"]], "matflow.Task": [[77, "matflow-task"]], "matflow.TaskInputParameters": [[78, "matflow-taskinputparameters"]], "matflow.TaskList": [[79, "matflow-tasklist"]], "matflow.TaskObjective": [[80, "matflow-taskobjective"]], "matflow.TaskOutputParameters": [[81, "matflow-taskoutputparameters"]], "matflow.TaskSchema": [[82, "matflow-taskschema"]], "matflow.TaskSchemasList": [[83, "matflow-taskschemaslist"]], "matflow.TaskSourceType": [[84, "matflow-tasksourcetype"]], "matflow.TaskTemplateList": [[85, "matflow-tasktemplatelist"]], "matflow.ValuePerturbation": [[86, "matflow-valueperturbation"]], "matflow.ValueSequence": [[87, "matflow-valuesequence"]], "matflow.Workflow": [[88, "matflow-workflow"]], "matflow.WorkflowBlueprint": [[89, "matflow-workflowblueprint"]], "matflow.WorkflowLoop": [[90, "matflow-workflowloop"]], "matflow.WorkflowLoopList": [[91, "matflow-workflowlooplist"]], "matflow.WorkflowTask": [[92, "matflow-workflowtask"]], "matflow.WorkflowTaskList": [[93, "matflow-workflowtasklist"]], "matflow.WorkflowTemplate": [[94, "matflow-workflowtemplate"]], "matflow.app": [[95, "matflow-app"]], "matflow.cancel": [[96, "matflow-cancel"]], "matflow.cli": [[97, "matflow-cli"]], "matflow.get_OS_info": [[98, "matflow-get-os-info"]], "matflow.get_known_submissions": [[99, "matflow-get-known-submissions"]], "matflow.get_shell_info": [[100, "matflow-get-shell-info"]], "matflow.make_and_submit_demo_workflow": [[101, "matflow-make-and-submit-demo-workflow"]], "matflow.make_and_submit_workflow": [[102, "matflow-make-and-submit-workflow"]], "matflow.make_demo_workflow": [[103, "matflow-make-demo-workflow"]], "matflow.make_workflow": [[104, "matflow-make-workflow"]], "matflow.param_classes": [[105, "matflow-param-classes"]], "matflow.param_classes.load": [[106, "matflow-param-classes-load"]], "matflow.param_classes.load.LoadCase": [[107, "matflow-param-classes-load-loadcase"]], "matflow.param_classes.load.LoadStep": [[108, "matflow-param-classes-load-loadstep"]], "matflow.param_classes.load.StrainRateMode": [[109, "matflow-param-classes-load-strainratemode"]], "matflow.param_classes.orientations": [[110, "matflow-param-classes-orientations"]], "matflow.param_classes.orientations.EulerDefinition": [[111, "matflow-param-classes-orientations-eulerdefinition"]], "matflow.param_classes.orientations.LatticeDirection": [[112, "matflow-param-classes-orientations-latticedirection"]], "matflow.param_classes.orientations.OrientationRepresentation": [[113, "matflow-param-classes-orientations-orientationrepresentation"]], "matflow.param_classes.orientations.OrientationRepresentationType": [[114, "matflow-param-classes-orientations-orientationrepresentationtype"]], "matflow.param_classes.orientations.Orientations": [[115, "matflow-param-classes-orientations-orientations"]], "matflow.param_classes.orientations.QuatOrder": [[116, "matflow-param-classes-orientations-quatorder"]], "matflow.param_classes.orientations.UnitCellAlignment": [[117, "matflow-param-classes-orientations-unitcellalignment"]], "matflow.param_classes.seeds": [[118, "matflow-param-classes-seeds"]], "matflow.param_classes.seeds.MicrostructureSeeds": [[119, "matflow-param-classes-seeds-microstructureseeds"]], "matflow.param_classes.single_crystal_parameters": [[120, "matflow-param-classes-single-crystal-parameters"]], "matflow.param_classes.single_crystal_parameters.Perturbation": [[121, "matflow-param-classes-single-crystal-parameters-perturbation"]], "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters": [[122, "matflow-param-classes-single-crystal-parameters-singlecrystalparameters"]], "matflow.param_classes.utils": [[123, "matflow-param-classes-utils"]], "matflow.param_classes.utils.masked_array_from_list": [[124, "matflow-param-classes-utils-masked-array-from-list"]], "matflow.run_hpcflow_tests": [[125, "matflow-run-hpcflow-tests"]], "matflow.run_tests": [[126, "matflow-run-tests"]], "matflow.show": [[127, "matflow-show"]], "matflow.show_legend": [[128, "matflow-show-legend"]], "matflow.submit_workflow": [[129, "matflow-submit-workflow"]], "matflow.tests": [[130, "matflow-tests"]], "matflow.tests.conftest": [[131, "matflow-tests-conftest"]], "matflow.tests.conftest.load_case_1": [[132, "matflow-tests-conftest-load-case-1"]], "matflow.tests.conftest.new_null_config": [[133, "matflow-tests-conftest-new-null-config"]], "matflow.tests.conftest.null_config": [[134, "matflow-tests-conftest-null-config"]], "matflow.tests.conftest.orientations_1": [[135, "matflow-tests-conftest-orientations-1"]], "matflow.tests.conftest.orientations_2": [[136, "matflow-tests-conftest-orientations-2"]], "matflow.tests.conftest.pytest_addoption": [[137, "matflow-tests-conftest-pytest-addoption"]], "matflow.tests.conftest.pytest_collection_modifyitems": [[138, "matflow-tests-conftest-pytest-collection-modifyitems"]], "matflow.tests.conftest.pytest_configure": [[139, "matflow-tests-conftest-pytest-configure"]], "matflow.tests.conftest.pytest_unconfigure": [[140, "matflow-tests-conftest-pytest-unconfigure"]], "matflow.tests.conftest.seeds_1": [[141, "matflow-tests-conftest-seeds-1"]], "matflow.tests.data": [[142, "matflow-tests-data"]], "matflow.tests.test_cli": [[143, "matflow-tests-test-cli"]], "matflow.tests.test_cli.test_hpcflow_version": [[144, "matflow-tests-test-cli-test-hpcflow-version"]], "matflow.tests.test_cli.test_version": [[145, "matflow-tests-test-cli-test-version"]], "matflow.tests.test_utils": [[146, "matflow-tests-test-utils"]], "matflow.tests.test_utils.test_masked_array_from_list_1D": [[147, "matflow-tests-test-utils-test-masked-array-from-list-1d"]], "matflow.tests.test_utils.test_masked_array_from_list_1D_masked": [[148, "matflow-tests-test-utils-test-masked-array-from-list-1d-masked"]], "matflow.tests.test_utils.test_masked_array_from_list_2D": [[149, "matflow-tests-test-utils-test-masked-array-from-list-2d"]], "matflow.tests.test_utils.test_masked_array_from_list_2D_masked": [[150, "matflow-tests-test-utils-test-masked-array-from-list-2d-masked"]], "matflow.tests.utils": [[151, "matflow-tests-utils"]], "Python API": [[152, "python-api"]], "Command-line interface": [[153, "command-line-interface"]], "cancel": [[153, "matflow-cancel"]], "config": [[153, "matflow-config"], [153, "matflow-open-config"]], "add-scheduler": [[153, "matflow-config-add-scheduler"]], "add-shell": [[153, "matflow-config-add-shell"]], "add-shell-wsl": [[153, "matflow-config-add-shell-wsl"]], "append": [[153, "matflow-config-append"]], "get": [[153, "matflow-config-get"]], "import": [[153, "matflow-config-import"]], "init": [[153, "matflow-config-init"]], "list": [[153, "matflow-config-list"]], "load-data-files": [[153, "matflow-config-load-data-files"]], "open": [[153, "matflow-config-open"], [153, "matflow-open"]], "pop": [[153, "matflow-config-pop"]], "prepend": [[153, "matflow-config-prepend"]], "set": [[153, "matflow-config-set"]], "set-github-demo-data-dir": [[153, "matflow-config-set-github-demo-data-dir"]], "unset": [[153, "matflow-config-unset"]], "update": [[153, "matflow-config-update"]], "configure-env": [[153, "matflow-configure-env"]], "demo-data": [[153, "matflow-demo-data"]], "cache": [[153, "matflow-demo-data-cache"]], "copy": [[153, "matflow-demo-data-copy"], [153, "matflow-demo-workflow-copy"]], "demo-software": [[153, "matflow-demo-software"]], "doSomething": [[153, "matflow-demo-software-dosomething"]], "demo-workflow": [[153, "matflow-demo-workflow"]], "go": [[153, "matflow-demo-workflow-go"], [153, "matflow-go"]], "make": [[153, "matflow-demo-workflow-make"], [153, "matflow-make"]], "show": [[153, "matflow-demo-workflow-show"], [153, "matflow-show"], [153, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-show"]], "helper": [[153, "matflow-helper"]], "clear": [[153, "matflow-helper-clear"]], "log-path": [[153, "matflow-helper-log-path"]], "pid": [[153, "matflow-helper-pid"]], "restart": [[153, "matflow-helper-restart"]], "run": [[153, "matflow-helper-run"]], "start": [[153, "matflow-helper-start"]], "stop": [[153, "matflow-helper-stop"]], "uptime": [[153, "matflow-helper-uptime"]], "watch-list": [[153, "matflow-helper-watch-list"]], "watch-list-path": [[153, "matflow-helper-watch-list-path"]], "internal": [[153, "matflow-internal"]], "get-invoc-cmd": [[153, "matflow-internal-get-invoc-cmd"]], "noop": [[153, "matflow-internal-noop"]], "workflow": [[153, "matflow-internal-workflow"], [153, "matflow-open-workflow"], [153, "matflow-workflow"]], "execute-combined-runs": [[153, "matflow-internal-workflow-path-execute-combined-runs"]], "execute-run": [[153, "matflow-internal-workflow-path-execute-run"]], "save-parameter": [[153, "matflow-internal-workflow-path-save-parameter"]], "manage": [[153, "matflow-manage"]], "clear-cache": [[153, "matflow-manage-clear-cache"]], "clear-demo-data-cache": [[153, "matflow-manage-clear-demo-data-cache"]], "clear-known-subs": [[153, "matflow-manage-clear-known-subs"]], "clear-temp-dir": [[153, "matflow-manage-clear-temp-dir"]], "get-config-path": [[153, "matflow-manage-get-config-path"]], "reset-config": [[153, "matflow-manage-reset-config"]], "demo-data-cache-dir": [[153, "matflow-open-demo-data-cache-dir"]], "env-source": [[153, "matflow-open-env-source"]], "known-subs": [[153, "matflow-open-known-subs"]], "log": [[153, "matflow-open-log"]], "user-cache-dir": [[153, "matflow-open-user-cache-dir"]], "user-cache-hostname-dir": [[153, "matflow-open-user-cache-hostname-dir"]], "user-data-dir": [[153, "matflow-open-user-data-dir"]], "user-data-hostname-dir": [[153, "matflow-open-user-data-hostname-dir"]], "user-runtime-dir": [[153, "matflow-open-user-runtime-dir"]], "rechunk": [[153, "matflow-rechunk"], [153, "matflow-workflow-workflow-ref-rechunk"]], "submission": [[153, "matflow-submission"]], "get-known": [[153, "matflow-submission-get-known"]], "scheduler": [[153, "matflow-submission-scheduler"]], "get-login-nodes": [[153, "matflow-submission-scheduler-scheduler-name-get-login-nodes"]], "shell-info": [[153, "matflow-submission-shell-info"]], "tc": [[153, "matflow-tc"]], "test": [[153, "matflow-test"]], "test-hpcflow": [[153, "matflow-test-hpcflow"]], "unzip": [[153, "matflow-unzip"], [153, "matflow-workflow-workflow-ref-unzip"]], "abort-run": [[153, "matflow-workflow-workflow-ref-abort-run"]], "add-submission": [[153, "matflow-workflow-workflow-ref-add-submission"]], "get-all-params": [[153, "matflow-workflow-workflow-ref-get-all-params"]], "get-param": [[153, "matflow-workflow-workflow-ref-get-param"]], "get-param-source": [[153, "matflow-workflow-workflow-ref-get-param-source"]], "get-process-ids": [[153, "matflow-workflow-workflow-ref-get-process-ids"], [153, "matflow-workflow-workflow-ref-sub-sub-idx-get-process-ids"]], "get-scheduler-job-ids": [[153, "matflow-workflow-workflow-ref-get-scheduler-job-ids"], [153, "matflow-workflow-workflow-ref-sub-sub-idx-get-scheduler-job-ids"]], "is-param-set": [[153, "matflow-workflow-workflow-ref-is-param-set"]], "list-jobscripts": [[153, "matflow-workflow-workflow-ref-list-jobscripts"], [153, "matflow-workflow-workflow-ref-sub-sub-idx-list-jobscripts"]], "list-task-jobscripts": [[153, "matflow-workflow-workflow-ref-list-task-jobscripts"], [153, "matflow-workflow-workflow-ref-sub-sub-idx-list-task-jobscripts"]], "rechunk-parameter-base": [[153, "matflow-workflow-workflow-ref-rechunk-parameter-base"]], "rechunk-runs": [[153, "matflow-workflow-workflow-ref-rechunk-runs"]], "show-all-status": [[153, "matflow-workflow-workflow-ref-show-all-status"]], "sub": [[153, "matflow-workflow-workflow-ref-sub"]], "get-active-jobscripts": [[153, "matflow-workflow-workflow-ref-sub-sub-idx-get-active-jobscripts"]], "js": [[153, "matflow-workflow-workflow-ref-sub-sub-idx-js"]], "deps": [[153, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-deps"]], "path": [[153, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-path"], [160, "path"]], "res": [[153, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-res"]], "stderr": [[153, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-stderr"]], "stdout": [[153, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-stdout"]], "needs-submit": [[153, "matflow-workflow-workflow-ref-sub-sub-idx-needs-submit"]], "outstanding-js": [[153, "matflow-workflow-workflow-ref-sub-sub-idx-outstanding-js"]], "status": [[153, "matflow-workflow-workflow-ref-sub-sub-idx-status"]], "submitted-js": [[153, "matflow-workflow-workflow-ref-sub-sub-idx-submitted-js"]], "submit": [[153, "matflow-workflow-workflow-ref-submit"]], "wait": [[153, "matflow-workflow-workflow-ref-wait"]], "zip": [[153, "matflow-workflow-workflow-ref-zip"], [153, "matflow-zip"]], "Configuration file": [[154, "configuration-file"]], "Default config file": [[154, "default-config-file"]], "Validation schema": [[154, "validation-schema"]], "Glossary": [[155, "glossary"]], "API": [[155, "api"]], "Command files": [[155, "command-files"], [158, "command-files"]], "cluster": [[155, "cluster"]], "DAMASK": [[155, "damask"]], "DAMASK-parse": [[155, "damask-parse"]], "defdap": [[155, "defdap"]], "Environment/virtual environment": [[155, "environment-virtual-environment"]], "formable": [[155, "formable"]], "HPC": [[155, "hpc"]], "HPCFlow": [[155, "hpcflow"]], "loadcase": [[155, "loadcase"]], "MatFlow": [[155, "matflow"]], "Tasks": [[155, "tasks"]], "Task schema": [[155, "task-schema"]], "Workflow": [[155, "workflow"]], "Workflow template": [[155, "workflow-template"]], "Reference": [[156, "reference"]], "Template components": [[157, "template-components"], [174, "template-components"]], "damask_geom_file": [[158, "damask-geom-file"]], "damask_load_file": [[158, "damask-load-file"]], "damask_material_file": [[158, "damask-material-file"]], "damask_numerics_file": [[158, "damask-numerics-file"]], "damask_stdout_file": [[158, "damask-stdout-file"]], "damask_stderr_file": [[158, "damask-stderr-file"]], "damask_hdf5_file": [[158, "damask-hdf5-file"]], "damask_viz_files": [[158, "damask-viz-files"]], "mtex_pole_figures": [[158, "mtex-pole-figures"]], "mtex_inverse_pole_figures": [[158, "mtex-inverse-pole-figures"]], "mtex_IPF_key": [[158, "mtex-ipf-key"]], "dream_3D_pipeline": [[158, "dream-3d-pipeline"]], "dream_3D_hdf5_file": [[158, "dream-3d-hdf5-file"]], "dream_3D_XDMF_file": [[158, "dream-3d-xdmf-file"]], "null_env": [[159, "null-env"]], "python_env": [[159, "python-env"]], "damask_env": [[159, "damask-env"]], "damask_parse_env": [[159, "damask-parse-env"]], "formable_env": [[159, "formable-env"]], "Parameters": [[160, "parameters"]], "CRC_file_path": [[160, "crc-file-path"]], "CSV_arguments": [[160, "csv-arguments"]], "CSV_file_path": [[160, "csv-file-path"]], "CTF_file_path": [[160, "ctf-file-path"]], "DIC": [[160, "dic"]], "EBSD": [[160, "ebsd"]], "EBSD_phase": [[160, "ebsd-phase"]], "EBSD_reference_frame_transformation": [[160, "ebsd-reference-frame-transformation"]], "EBSD_rotation": [[160, "ebsd-rotation"]], "IPF_reference_direction": [[160, "ipf-reference-direction"]], "ODF_components": [[160, "odf-components"]], "ODF_mat_file_path": [[160, "odf-mat-file-path"]], "VE_grid_size": [[160, "ve-grid-size"]], "VE_response": [[160, "ve-response"]], "VE_response_data": [[160, "ve-response-data"]], "VE_size": [[160, "ve-size"]], "buffer_sizes": [[160, "buffer-sizes"]], "colourbar_limits": [[160, "colourbar-limits"]], "compile": [[160, "compile"]], "crystal_symmetry": [[160, "crystal-symmetry"]], "damask_log": [[160, "damask-log"]], "damask_numerics": [[160, "damask-numerics"], [162, "damask-numerics"]], "damask_phases": [[160, "damask-phases"]], "damask_post_processing": [[160, "damask-post-processing"]], "damask_post_processing_result": [[160, "damask-post-processing-result"]], "damask_solver": [[160, "damask-solver"]], "damask_viz": [[160, "damask-viz"]], "damask_viz_result": [[160, "damask-viz-result"]], "depth": [[160, "depth"]], "dump_path": [[160, "dump-path"]], "eng_strain_col_index": [[160, "eng-strain-col-index"]], "eng_stress_col_index": [[160, "eng-stress-col-index"]], "find_grains_algorithm": [[160, "find-grains-algorithm"]], "fit_yield_fixed_parameters": [[160, "fit-yield-fixed-parameters"]], "fit_yield_initial_parameters": [[160, "fit-yield-initial-parameters"]], "fit_yield_opt_parameters": [[160, "fit-yield-opt-parameters"]], "fitted_yield_functions": [[160, "fitted-yield-functions"]], "grid_size": [[160, "grid-size"]], "homog_label": [[160, "homog-label"]], "homogenization": [[160, "homogenization"]], "image_axes": [[160, "image-axes"]], "initial_damping": [[160, "initial-damping"]], "levenberg_marquardt_fitter": [[160, "levenberg-marquardt-fitter"]], "load_case": [[160, "load-case"]], "microstructure_image": [[160, "microstructure-image"]], "microstructure_seeds": [[160, "microstructure-seeds"]], "new_grid_size": [[160, "new-grid-size"]], "num_grains": [[160, "num-grains"]], "num_orientations": [[160, "num-orientations"]], "order": [[160, "order"]], "orientations": [[160, "orientations"]], "origin": [[160, "origin"]], "periodic": [[160, "periodic"]], "phase_ids": [[160, "phase-ids"]], "phase_label": [[160, "phase-label"]], "phase_label_mapping": [[160, "phase-label-mapping"]], "phase_labels": [[160, "phase-labels"]], "phase_statistics": [[160, "phase-statistics"]], "plastic_range": [[160, "plastic-range"]], "pole_figure_directions": [[160, "pole-figure-directions"]], "precipitates": [[160, "precipitates"]], "resolution": [[160, "resolution"]], "root_path": [[160, "root-path"]], "scale_morphology": [[160, "scale-morphology"]], "scale_update_size": [[160, "scale-update-size"]], "scaling_factor": [[160, "scaling-factor"]], "single_crystal_parameters": [[160, "single-crystal-parameters"]], "size": [[160, "size"]], "specimen_symmetry": [[160, "specimen-symmetry"]], "stress_units": [[160, "stress-units"]], "tensile_test": [[160, "tensile-test"]], "transform_type": [[160, "transform-type"]], "true_strain_col_index": [[160, "true-strain-col-index"]], "true_stress_col_index": [[160, "true-stress-col-index"]], "use_contours": [[160, "use-contours"]], "use_one_colourbar": [[160, "use-one-colourbar"]], "volume_element": [[160, "volume-element"]], "yield_function_name": [[160, "yield-function-name"]], "yield_point": [[160, "yield-point"]], "yield_point_criteria": [[160, "yield-point-criteria"]], "Task schemas": [[161, "task-schemas"]], "collate_results": [[161, "collate-results"]], "define_load_case": [[161, "define-load-case"]], "define_microstructure_seeds": [[161, "define-microstructure-seeds"]], "define_orientations": [[161, "define-orientations"]], "dummy_pre_processor": [[161, "dummy-pre-processor"]], "dump_all_yield_stresses": [[161, "dump-all-yield-stresses"]], "evaluate_limit_state_normal_sum": [[161, "evaluate-limit-state-normal-sum"]], "evaluate_yield_stress_limit_state": [[161, "evaluate-yield-stress-limit-state"]], "fit_single_crystal_parameters": [[161, "fit-single-crystal-parameters"], [162, "fit-single-crystal-parameters"]], "fit_yield_function": [[161, "fit-yield-function"]], "generate_microstructure_seeds": [[161, "generate-microstructure-seeds"]], "generate_microstructure_seeds_from_random": [[161, "generate-microstructure-seeds-from-random"]], "generate_next_state": [[161, "generate-next-state"]], "generate_next_state_CS": [[161, "generate-next-state-cs"]], "generate_next_state_ACS": [[161, "generate-next-state-acs"]], "generate_orientations": [[161, "generate-orientations"]], "generate_rve": [[161, "generate-rve"]], "generate_rve_from_damask_input_files": [[161, "generate-rve-from-damask-input-files"]], "generate_volume_element": [[161, "generate-volume-element"]], "generate_volume_element_from_voronoi": [[161, "generate-volume-element-from-voronoi"]], "generate_volume_element_from_statistics": [[161, "generate-volume-element-from-statistics"], [162, "generate-volume-element-from-statistics"]], "generate_volume_element_extrusion": [[161, "generate-volume-element-extrusion"]], "generate_volume_element_from_voronoi_random_variates": [[161, "generate-volume-element-from-voronoi-random-variates"]], "increment_chain": [[161, "increment-chain"]], "increment_chain_inner": [[161, "increment-chain-inner"]], "initialise_markov_chains": [[161, "initialise-markov-chains"]], "initialise_markov_chains_ACS": [[161, "initialise-markov-chains-acs"]], "load_microstructure": [[161, "load-microstructure"]], "load_microstructure_EBSD_DIC": [[161, "load-microstructure-ebsd-dic"]], "load_microstructure_EBSD": [[161, "load-microstructure-ebsd"]], "model_sum_x": [[161, "model-sum-x"]], "modify_VE": [[161, "modify-ve"]], "modify_VE_add_buffer_zones": [[161, "modify-ve-add-buffer-zones"]], "modify_VE_grid_size": [[161, "modify-ve-grid-size"]], "read_tensile_test": [[161, "read-tensile-test"]], "read_tensile_test_from_CSV": [[161, "read-tensile-test-from-csv"]], "sample_direct_MC": [[161, "sample-direct-mc"]], "sample_orientations": [[161, "sample-orientations"]], "sample_orientations_from_CTF_file_mtex": [[161, "sample-orientations-from-ctf-file-mtex"]], "sample_orientations_from_CRC_file_mtex": [[161, "sample-orientations-from-crc-file-mtex"]], "sample_texture": [[161, "sample-texture"]], "sample_texture_from_CTF_file_mtex": [[161, "sample-texture-from-ctf-file-mtex"]], "sample_texture_from_CRC_file_mtex": [[161, "sample-texture-from-crc-file-mtex"]], "sample_texture_from_ODF_mat_file_mtex": [[161, "sample-texture-from-odf-mat-file-mtex"]], "sample_texture_from_model_ODF_mtex": [[161, "sample-texture-from-model-odf-mtex"]], "sample_texture_random_mtex": [[161, "sample-texture-random-mtex"]], "simulate_VE_loading": [[161, "simulate-ve-loading"]], "simulate_VE_loading_damask": [[161, "simulate-ve-loading-damask"]], "simulate_VE_loading_damask_HC": [[161, "simulate-ve-loading-damask-hc"]], "system_analysis": [[161, "system-analysis"]], "system_analysis_16": [[161, "system-analysis-16"]], "system_analysis_32": [[161, "system-analysis-32"]], "system_analysis_DA_coarse": [[161, "system-analysis-da-coarse"]], "system_analysis_DA_fine": [[161, "system-analysis-da-fine"]], "system_analysis_toy_model": [[161, "system-analysis-toy-model"]], "update_proposal": [[161, "update-proposal"]], "visualise_VE": [[161, "visualise-ve"]], "visualise_VE_VTK": [[161, "visualise-ve-vtk"]], "visualise_multi_orientations": [[161, "visualise-multi-orientations"]], "visualise_multi_orientations_inverse_pole_figure_mtex": [[161, "visualise-multi-orientations-inverse-pole-figure-mtex"]], "visualise_orientations": [[161, "visualise-orientations"]], "visualise_orientations_pole_figure_mtex": [[161, "visualise-orientations-pole-figure-mtex"]], "visualise_orientations_inverse_pole_figure_mtex": [[161, "visualise-orientations-inverse-pole-figure-mtex"]], "Demo workflows": [[162, "demo-workflows"], [167, "demo-workflows"]], "RVE_extrusion_EBSD": [[162, "rve-extrusion-ebsd"]], "RVE_extrusion_EBSD.yaml": [[162, null]], "RVE_extrusion_EBSD_DIC": [[162, "rve-extrusion-ebsd-dic"]], "RVE_extrusion_EBSD_DIC.yaml": [[162, null]], "cubic_textures": [[162, "cubic-textures"]], "cubic_textures.yaml": [[162, null]], "damask_input_files": [[162, "damask-input-files"]], "damask_input_files.yaml": [[162, null]], "damask_numerics.yaml": [[162, null]], "fit_single_crystal_parameters.yaml": [[162, null]], "fit_yield_funcs": [[162, "fit-yield-funcs"]], "fit_yield_funcs.yaml": [[162, null]], "generate_volume_element_from_statistics.yaml": [[162, null]], "modify_volume_element_grid_size": [[162, "modify-volume-element-grid-size"]], "modify_volume_element_grid_size.yaml": [[162, null]], "read_tensile_test_CSV": [[162, "read-tensile-test-csv"]], "read_tensile_test_CSV.yaml": [[162, null]], "sample_orientations_CRC_file": [[162, "sample-orientations-crc-file"]], "sample_orientations_CRC_file.yaml": [[162, null]], "sample_orientations_CTF_file": [[162, "sample-orientations-ctf-file"]], "sample_orientations_CTF_file.yaml": [[162, null]], "sample_texture_CRC_file": [[162, "sample-texture-crc-file"]], "sample_texture_CRC_file.yaml": [[162, null]], "sample_texture_CTF_file": [[162, "sample-texture-ctf-file"]], "sample_texture_CTF_file.yaml": [[162, null]], "sample_texture_ODF_mat": [[162, "sample-texture-odf-mat"]], "sample_texture_ODF_mat.yaml": [[162, null]], "sample_texture_model_ODF": [[162, "sample-texture-model-odf"]], "sample_texture_model_ODF.yaml": [[162, null]], "sample_texture_random": [[162, "sample-texture-random"]], "sample_texture_random.yaml": [[162, null]], "simulate_yield_surface_2D": [[162, "simulate-yield-surface-2d"]], "simulate_yield_surface_2D.yaml": [[162, null]], "simulate_yield_surface_2D_brass": [[162, "simulate-yield-surface-2d-brass"]], "simulate_yield_surface_2D_brass.yaml": [[162, null]], "subset_simulation_DAMASK_Al": [[162, "subset-simulation-damask-al"]], "subset_simulation_DAMASK_Al.yaml": [[162, null]], "subset_simulation_DAMASK_Mg": [[162, "subset-simulation-damask-mg"]], "subset_simulation_DAMASK_Mg.yaml": [[162, null]], "subset_simulation_DAMASK_Mg_ACS": [[162, "subset-simulation-damask-mg-acs"]], "subset_simulation_DAMASK_Mg_ACS.yaml": [[162, null]], "subset_simulation_DAMASK_Mg_two_level": [[162, "subset-simulation-damask-mg-two-level"]], "subset_simulation_DAMASK_Mg_two_level.yaml": [[162, null]], "subset_simulation_toy_model": [[162, "subset-simulation-toy-model"]], "subset_simulation_toy_model.yaml": [[162, null]], "subset_simulation_toy_model_ACS": [[162, "subset-simulation-toy-model-acs"]], "subset_simulation_toy_model_ACS.yaml": [[162, null]], "subset_simulation_toy_model_ACS_external": [[162, "subset-simulation-toy-model-acs-external"]], "subset_simulation_toy_model_ACS_external.yaml": [[162, null]], "subset_simulation_toy_model_CS": [[162, "subset-simulation-toy-model-cs"]], "subset_simulation_toy_model_CS.yaml": [[162, null]], "subset_simulation_toy_model_delayed_acceptance": [[162, "subset-simulation-toy-model-delayed-acceptance"]], "subset_simulation_toy_model_delayed_acceptance.yaml": [[162, null]], "subset_simulation_toy_model_external": [[162, "subset-simulation-toy-model-external"]], "subset_simulation_toy_model_external.yaml": [[162, null]], "subset_simulation_toy_model_two_level": [[162, "subset-simulation-toy-model-two-level"]], "subset_simulation_toy_model_two_level.yaml": [[162, null]], "subset_simulation_toy_model_two_level_external": [[162, "subset-simulation-toy-model-two-level-external"]], "subset_simulation_toy_model_two_level_external.yaml": [[162, null]], "tension_DAMASK_Al": [[162, "tension-damask-al"]], "tension_DAMASK_Al.yaml": [[162, null]], "tension_DAMASK_Al_N_repeats": [[162, "tension-damask-al-n-repeats"]], "tension_DAMASK_Al_N_repeats.yaml": [[162, null]], "tension_DAMASK_Mg": [[162, "tension-damask-mg"]], "tension_DAMASK_Mg.yaml": [[162, null]], "tension_DAMASK_Ti": [[162, "tension-damask-ti"]], "tension_DAMASK_Ti.yaml": [[162, null]], "Advanced workflow concepts": [[163, "advanced-workflow-concepts"]], "Resources": [[163, "resources"]], "Task sequences": [[163, "task-sequences"]], "Groups": [[163, "groups"]], "Task schema shortcuts": [[163, "task-schema-shortcuts"]], "Input file generators": [[163, "input-file-generators"]], "Output file parsers": [[163, "output-file-parsers"]], "Writing custom workflows": [[164, "writing-custom-workflows"]], "Workflow files": [[164, "workflow-files"]], "Components of a task schema": [[164, "components-of-a-task-schema"]], "Required keys": [[164, "required-keys"]], "Optional keys": [[164, "optional-keys"]], "Matflow syntax": [[164, "matflow-syntax"]], "Passing variables around a workflow": [[164, "passing-variables-around-a-workflow"]], "Writing a workflow": [[164, "writing-a-workflow"]], "Example workflow": [[164, "example-workflow"]], "Common errors": [[165, "common-errors"]], "Submitting a workflow": [[165, "submitting-a-workflow"]], "Analysing an old workflow": [[165, "analysing-an-old-workflow"]], "Getting started": [[166, "getting-started"]], "Submit a workflow": [[167, "submit-a-workflow"]], "Check the status of a workflow": [[167, "check-the-status-of-a-workflow"]], "Cancel a workflow": [[167, "cancel-a-workflow"]], "Configuration how-tos": [[168, "configuration-how-tos"]], "Get and set config items": [[168, "get-and-set-config-items"]], "Reset the config to default values": [[168, "reset-the-config-to-default-values"]], "Clear the known-submissions file": [[168, "clear-the-known-submissions-file"]], "Environment how-tos": [[169, "environment-how-tos"]], "Use multiple versions of the same software": [[169, "use-multiple-versions-of-the-same-software"]], "Disambiguating between matflow environments with the same name": [[169, "disambiguating-between-matflow-environments-with-the-same-name"]], "Using environment specifiers within task schemas": [[169, "using-environment-specifiers-within-task-schemas"]], "Environment specifiers within action environments": [[169, "environment-specifiers-within-action-environments"]], "Passing environment specifiers to action scripts": [[169, "passing-environment-specifiers-to-action-scripts"]], "Environment specifiers within script paths": [[169, "environment-specifiers-within-script-paths"]], "Defining environment presets": [[169, "defining-environment-presets"]], "Selecting environment specifiers within workflow templates": [[169, "selecting-environment-specifiers-within-workflow-templates"]], "Environment specifiers within sequences": [[169, "environment-specifiers-within-sequences"]], "How-To Guides": [[170, "how-to-guides"]], "Loops": [[171, "loops"]], "Loops versus sequences": [[171, null]], "A basic loop workflow": [[171, "a-basic-loop-workflow"]], "Meta-tasks": [[172, "meta-tasks"]], "Simple example": [[172, "simple-example"]], "Meta-tasks using the Python API": [[172, "meta-tasks-using-the-python-api"]], "Customising task parametrisation": [[172, "customising-task-parametrisation"]], "Task schema how-tos": [[173, "task-schema-how-tos"]], "Show information about a task schema": [[173, "show-information-about-a-task-schema"]], "How to name parameters and task schemas": [[174, "how-to-name-parameters-and-task-schemas"]], "Workflow templates how-tos": [[175, "workflow-templates-how-tos"]], "Loading workflow templates": [[175, "loading-workflow-templates"]], "Workflow how-tos": [[176, "workflow-how-tos"]], "Generating a persistent workflow from a workflow template": [[176, "generating-a-persistent-workflow-from-a-workflow-template"]], "Loading workflows": [[176, "loading-workflows"]], "User Guide": [[177, "user-guide"]], "Tutorials": [[178, "tutorials"]], "Jupyter notebooks": [[179, "jupyter-notebooks"]], "Simulating yield surfaces with DAMASK simulations": [[180, "simulating-yield-surfaces-with-damask-simulations"]], "Utility functions": [[180, "utility-functions"]], "Processing functions": [[180, "processing-functions"]], "Load and process simulations": [[180, "load-and-process-simulations"]], "Plot yield surfaces": [[180, "plot-yield-surfaces"]]}, "indexentries": {"matflow": [[6, "module-matflow"]], "module": [[6, "module-matflow"], [97, "module-matflow.cli"], [105, "module-matflow.param_classes"], [106, "module-matflow.param_classes.load"], [110, "module-matflow.param_classes.orientations"], [118, "module-matflow.param_classes.seeds"], [120, "module-matflow.param_classes.single_crystal_parameters"], [123, "module-matflow.param_classes.utils"], [130, "module-matflow.tests"], [131, "module-matflow.tests.conftest"], [142, "module-matflow.tests.data"], [143, "module-matflow.tests.test_cli"], [146, "module-matflow.tests.test_utils"], [151, "module-matflow.tests.utils"]], "action (class in matflow)": [[7, "matflow.Action"]], "abortable (matflow.action attribute)": [[7, "matflow.Action.abortable"]], "clean_up (matflow.action attribute)": [[7, "matflow.Action.clean_up"]], "commands (matflow.action attribute)": [[7, "matflow.Action.commands"]], "compose_source() (matflow.action method)": [[7, "matflow.Action.compose_source"]], "env_spec_from_hashable() (matflow.action static method)": [[7, "matflow.Action.env_spec_from_hashable"]], "env_spec_to_hashable() (matflow.action static method)": [[7, "matflow.Action.env_spec_to_hashable"]], "environments (matflow.action attribute)": [[7, "matflow.Action.environments"]], "expand() (matflow.action method)": [[7, "matflow.Action.expand"]], "from_json_like() (matflow.action class method)": [[7, "matflow.Action.from_json_like"]], "generate_data_index() (matflow.action method)": [[7, "matflow.Action.generate_data_index"]], "get_block_act_idx_shell_vars() (matflow.action class method)": [[7, "matflow.Action.get_block_act_idx_shell_vars"]], "get_command_file_labels() (matflow.action method)": [[7, "matflow.Action.get_command_file_labels"]], "get_command_input_types() (matflow.action method)": [[7, "matflow.Action.get_command_input_types"]], "get_command_output_types() (matflow.action method)": [[7, "matflow.Action.get_command_output_types"]], "get_command_parameter_types() (matflow.action method)": [[7, "matflow.Action.get_command_parameter_types"]], "get_commands_action_env() (matflow.action method)": [[7, "matflow.Action.get_commands_action_env"]], "get_commands_file_hash() (matflow.action method)": [[7, "matflow.Action.get_commands_file_hash"]], "get_environment() (matflow.action method)": [[7, "matflow.Action.get_environment"]], "get_environment_name() (matflow.action method)": [[7, "matflow.Action.get_environment_name"]], "get_environment_spec() (matflow.action method)": [[7, "matflow.Action.get_environment_spec"]], "get_input_file_generator_action_env() (matflow.action method)": [[7, "matflow.Action.get_input_file_generator_action_env"]], "get_input_file_labels() (matflow.action method)": [[7, "matflow.Action.get_input_file_labels"]], "get_input_types() (matflow.action method)": [[7, "matflow.Action.get_input_types"]], "get_output_file_labels() (matflow.action method)": [[7, "matflow.Action.get_output_file_labels"]], "get_output_file_parser_action_env() (matflow.action method)": [[7, "matflow.Action.get_output_file_parser_action_env"]], "get_output_types() (matflow.action method)": [[7, "matflow.Action.get_output_types"]], "get_param_dump_file_path_hdf5() (matflow.action method)": [[7, "matflow.Action.get_param_dump_file_path_HDF5"]], "get_param_dump_file_path_json() (matflow.action method)": [[7, "matflow.Action.get_param_dump_file_path_JSON"]], "get_param_load_file_path_hdf5() (matflow.action method)": [[7, "matflow.Action.get_param_load_file_path_HDF5"]], "get_param_load_file_path_json() (matflow.action method)": [[7, "matflow.Action.get_param_load_file_path_JSON"]], "get_parameter_dependence() (matflow.action method)": [[7, "matflow.Action.get_parameter_dependence"]], "get_parameter_names() (matflow.action method)": [[7, "matflow.Action.get_parameter_names"]], "get_possible_scopes() (matflow.action method)": [[7, "matflow.Action.get_possible_scopes"]], "get_precise_scope() (matflow.action method)": [[7, "matflow.Action.get_precise_scope"]], "get_required_executables() (matflow.action method)": [[7, "matflow.Action.get_required_executables"]], "get_script_artifact_name() (matflow.action method)": [[7, "matflow.Action.get_script_artifact_name"]], "get_script_determinant_hash() (matflow.action method)": [[7, "matflow.Action.get_script_determinant_hash"]], "get_script_determinants() (matflow.action method)": [[7, "matflow.Action.get_script_determinants"]], "get_script_input_output_file_command_args() (matflow.action method)": [[7, "matflow.Action.get_script_input_output_file_command_args"]], "get_script_input_output_file_paths() (matflow.action method)": [[7, "matflow.Action.get_script_input_output_file_paths"]], "get_script_name() (matflow.action class method)": [[7, "matflow.Action.get_script_name"]], "get_snippet_script_path() (matflow.action class method)": [[7, "matflow.Action.get_snippet_script_path"]], "get_snippet_script_str() (matflow.action class method)": [[7, "matflow.Action.get_snippet_script_str"]], "input_file_generators (matflow.action attribute)": [[7, "matflow.Action.input_file_generators"]], "input_files (matflow.action attribute)": [[7, "matflow.Action.input_files"]], "is_ifg (matflow.action property)": [[7, "matflow.Action.is_IFG"]], "is_ofp (matflow.action property)": [[7, "matflow.Action.is_OFP"]], "is_input_type_required() (matflow.action method)": [[7, "matflow.Action.is_input_type_required"]], "is_snippet_script() (matflow.action static method)": [[7, "matflow.Action.is_snippet_script"]], "output_file_parsers (matflow.action attribute)": [[7, "matflow.Action.output_file_parsers"]], "output_files (matflow.action attribute)": [[7, "matflow.Action.output_files"]], "process_script_data_formats() (matflow.action method)": [[7, "matflow.Action.process_script_data_formats"]], "rules (matflow.action attribute)": [[7, "matflow.Action.rules"]], "save_files (matflow.action attribute)": [[7, "matflow.Action.save_files"]], "script (matflow.action attribute)": [[7, "matflow.Action.script"]], "script_data_files_use_opt (matflow.action attribute)": [[7, "matflow.Action.script_data_files_use_opt"]], "script_data_in (matflow.action attribute)": [[7, "matflow.Action.script_data_in"]], "script_data_in_grouped (matflow.action property)": [[7, "matflow.Action.script_data_in_grouped"]], "script_data_in_has_direct (matflow.action property)": [[7, "matflow.Action.script_data_in_has_direct"]], "script_data_in_has_files (matflow.action property)": [[7, "matflow.Action.script_data_in_has_files"]], "script_data_out (matflow.action attribute)": [[7, "matflow.Action.script_data_out"]], "script_data_out_grouped (matflow.action property)": [[7, "matflow.Action.script_data_out_grouped"]], "script_data_out_has_direct (matflow.action property)": [[7, "matflow.Action.script_data_out_has_direct"]], "script_data_out_has_files (matflow.action property)": [[7, "matflow.Action.script_data_out_has_files"]], "script_exe (matflow.action attribute)": [[7, "matflow.Action.script_exe"]], "script_is_python_snippet (matflow.action property)": [[7, "matflow.Action.script_is_python_snippet"]], "script_pass_env_spec (matflow.action attribute)": [[7, "matflow.Action.script_pass_env_spec"]], "task_schema (matflow.action property)": [[7, "matflow.Action.task_schema"]], "test_rules() (matflow.action method)": [[7, "matflow.Action.test_rules"]], "to_dict() (matflow.action method)": [[7, "matflow.Action.to_dict"]], "to_json_like() (matflow.action method)": [[7, "matflow.Action.to_json_like"]], "actionenvironment (class in matflow)": [[8, "matflow.ActionEnvironment"]], "environment (matflow.actionenvironment attribute)": [[8, "matflow.ActionEnvironment.environment"]], "from_json_like() (matflow.actionenvironment class method)": [[8, "matflow.ActionEnvironment.from_json_like"]], "scope (matflow.actionenvironment attribute)": [[8, "matflow.ActionEnvironment.scope"]], "to_dict() (matflow.actionenvironment method)": [[8, "matflow.ActionEnvironment.to_dict"]], "to_json_like() (matflow.actionenvironment method)": [[8, "matflow.ActionEnvironment.to_json_like"]], "actionrule (class in matflow)": [[9, "matflow.ActionRule"]], "action (matflow.actionrule attribute)": [[9, "matflow.ActionRule.action"]], "check_exists() (matflow.actionrule class method)": [[9, "matflow.ActionRule.check_exists"]], "check_missing() (matflow.actionrule class method)": [[9, "matflow.ActionRule.check_missing"]], "command (matflow.actionrule attribute)": [[9, "matflow.ActionRule.command"]], "from_json_like() (matflow.actionrule class method)": [[9, "matflow.ActionRule.from_json_like"]], "rule (matflow.actionrule attribute)": [[9, "matflow.ActionRule.rule"]], "test() (matflow.actionrule method)": [[9, "matflow.ActionRule.test"]], "to_dict() (matflow.actionrule method)": [[9, "matflow.ActionRule.to_dict"]], "to_json_like() (matflow.actionrule method)": [[9, "matflow.ActionRule.to_json_like"]], "actionscope (class in matflow)": [[10, "matflow.ActionScope"]], "any() (matflow.actionscope class method)": [[10, "matflow.ActionScope.any"]], "from_json_like() (matflow.actionscope class method)": [[10, "matflow.ActionScope.from_json_like"]], "input_file_generator() (matflow.actionscope class method)": [[10, "matflow.ActionScope.input_file_generator"]], "kwargs (matflow.actionscope attribute)": [[10, "matflow.ActionScope.kwargs"]], "main() (matflow.actionscope class method)": [[10, "matflow.ActionScope.main"]], "output_file_parser() (matflow.actionscope class method)": [[10, "matflow.ActionScope.output_file_parser"]], "processing() (matflow.actionscope class method)": [[10, "matflow.ActionScope.processing"]], "to_dict() (matflow.actionscope method)": [[10, "matflow.ActionScope.to_dict"]], "to_json_like() (matflow.actionscope method)": [[10, "matflow.ActionScope.to_json_like"]], "to_string() (matflow.actionscope method)": [[10, "matflow.ActionScope.to_string"]], "typ (matflow.actionscope attribute)": [[10, "matflow.ActionScope.typ"]], "any (matflow.actionscopetype attribute)": [[11, "matflow.ActionScopeType.ANY"]], "actionscopetype (class in matflow)": [[11, "matflow.ActionScopeType"]], "input_file_generator (matflow.actionscopetype attribute)": [[11, "matflow.ActionScopeType.INPUT_FILE_GENERATOR"]], "main (matflow.actionscopetype attribute)": [[11, "matflow.ActionScopeType.MAIN"]], "output_file_parser (matflow.actionscopetype attribute)": [[11, "matflow.ActionScopeType.OUTPUT_FILE_PARSER"]], "processing (matflow.actionscopetype attribute)": [[11, "matflow.ActionScopeType.PROCESSING"]], "command (class in matflow)": [[12, "matflow.Command"]], "action (matflow.command attribute)": [[12, "matflow.Command.action"]], "arguments (matflow.command attribute)": [[12, "matflow.Command.arguments"]], "command (matflow.command attribute)": [[12, "matflow.Command.command"]], "executable (matflow.command attribute)": [[12, "matflow.Command.executable"]], "from_json_like() (matflow.command class method)": [[12, "matflow.Command.from_json_like"]], "get_command_line() (matflow.command method)": [[12, "matflow.Command.get_command_line"]], "get_output_types() (matflow.command method)": [[12, "matflow.Command.get_output_types"]], "get_required_executables() (matflow.command method)": [[12, "matflow.Command.get_required_executables"]], "process_std_stream() (matflow.command method)": [[12, "matflow.Command.process_std_stream"]], "rules (matflow.command attribute)": [[12, "matflow.Command.rules"]], "stderr (matflow.command attribute)": [[12, "matflow.Command.stderr"]], "stdin (matflow.command attribute)": [[12, "matflow.Command.stdin"]], "stdout (matflow.command attribute)": [[12, "matflow.Command.stdout"]], "to_dict() (matflow.command method)": [[12, "matflow.Command.to_dict"]], "to_json_like() (matflow.command method)": [[12, "matflow.Command.to_json_like"]], "variables (matflow.command attribute)": [[12, "matflow.Command.variables"]], "commandfileslist (class in matflow)": [[13, "matflow.CommandFilesList"]], "add_object() (matflow.commandfileslist method)": [[13, "matflow.CommandFilesList.add_object"]], "add_objects() (matflow.commandfileslist method)": [[13, "matflow.CommandFilesList.add_objects"]], "from_json_like() (matflow.commandfileslist class method)": [[13, "matflow.CommandFilesList.from_json_like"]], "get() (matflow.commandfileslist method)": [[13, "matflow.CommandFilesList.get"]], "get_all() (matflow.commandfileslist method)": [[13, "matflow.CommandFilesList.get_all"]], "list_attrs() (matflow.commandfileslist method)": [[13, "matflow.CommandFilesList.list_attrs"]], "to_dict() (matflow.commandfileslist method)": [[13, "matflow.CommandFilesList.to_dict"]], "to_json_like() (matflow.commandfileslist method)": [[13, "matflow.CommandFilesList.to_json_like"]], "directposix (class in matflow)": [[14, "matflow.DirectPosix"]], "cancel_jobs() (matflow.directposix method)": [[14, "matflow.DirectPosix.cancel_jobs"]], "get_job_state_info() (matflow.directposix method)": [[14, "matflow.DirectPosix.get_job_state_info"]], "get_std_out_err_filename() (matflow.directposix method)": [[14, "matflow.DirectPosix.get_std_out_err_filename"]], "get_stderr_filename() (matflow.directposix method)": [[14, "matflow.DirectPosix.get_stderr_filename"]], "get_stdout_filename() (matflow.directposix method)": [[14, "matflow.DirectPosix.get_stdout_filename"]], "get_submit_command() (matflow.directposix method)": [[14, "matflow.DirectPosix.get_submit_command"]], "get_version_info() (matflow.directposix method)": [[14, "matflow.DirectPosix.get_version_info"]], "is_jobscript_active() (matflow.directposix method)": [[14, "matflow.DirectPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.directposix static method)": [[14, "matflow.DirectPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.directposix method)": [[14, "matflow.DirectPosix.parse_submission_output"]], "process_resources() (matflow.directposix class method)": [[14, "matflow.DirectPosix.process_resources"]], "unique_properties (matflow.directposix property)": [[14, "matflow.DirectPosix.unique_properties"]], "wait_for_jobscripts() (matflow.directposix class method)": [[14, "matflow.DirectPosix.wait_for_jobscripts"]], "directwindows (class in matflow)": [[15, "matflow.DirectWindows"]], "cancel_jobs() (matflow.directwindows method)": [[15, "matflow.DirectWindows.cancel_jobs"]], "get_job_state_info() (matflow.directwindows method)": [[15, "matflow.DirectWindows.get_job_state_info"]], "get_std_out_err_filename() (matflow.directwindows method)": [[15, "matflow.DirectWindows.get_std_out_err_filename"]], "get_stderr_filename() (matflow.directwindows method)": [[15, "matflow.DirectWindows.get_stderr_filename"]], "get_stdout_filename() (matflow.directwindows method)": [[15, "matflow.DirectWindows.get_stdout_filename"]], "get_submit_command() (matflow.directwindows method)": [[15, "matflow.DirectWindows.get_submit_command"]], "get_version_info() (matflow.directwindows method)": [[15, "matflow.DirectWindows.get_version_info"]], "is_jobscript_active() (matflow.directwindows method)": [[15, "matflow.DirectWindows.is_jobscript_active"]], "is_num_cores_supported() (matflow.directwindows static method)": [[15, "matflow.DirectWindows.is_num_cores_supported"]], "parse_submission_output() (matflow.directwindows method)": [[15, "matflow.DirectWindows.parse_submission_output"]], "process_resources() (matflow.directwindows class method)": [[15, "matflow.DirectWindows.process_resources"]], "unique_properties (matflow.directwindows property)": [[15, "matflow.DirectWindows.unique_properties"]], "wait_for_jobscripts() (matflow.directwindows class method)": [[15, "matflow.DirectWindows.wait_for_jobscripts"]], "element (class in matflow)": [[16, "matflow.Element"]], "action_runs (matflow.element property)": [[16, "matflow.Element.action_runs"]], "actions (matflow.element property)": [[16, "matflow.Element.actions"]], "dir_name (matflow.element property)": [[16, "matflow.Element.dir_name"]], "element_set (matflow.element property)": [[16, "matflow.Element.element_set"]], "element_set_idx (matflow.element property)": [[16, "matflow.Element.element_set_idx"]], "get() (matflow.element method)": [[16, "matflow.Element.get"]], "get_ear_dependencies() (matflow.element method)": [[16, "matflow.Element.get_EAR_dependencies"]], "get_data_idx() (matflow.element method)": [[16, "matflow.Element.get_data_idx"]], "get_dependent_ears() (matflow.element method)": [[16, "matflow.Element.get_dependent_EARs"]], "get_dependent_element_iterations() (matflow.element method)": [[16, "matflow.Element.get_dependent_element_iterations"]], "get_dependent_elements() (matflow.element method)": [[16, "matflow.Element.get_dependent_elements"]], "get_dependent_elements_recursively() (matflow.element method)": [[16, "matflow.Element.get_dependent_elements_recursively"]], "get_dependent_tasks() (matflow.element method)": [[16, "matflow.Element.get_dependent_tasks"]], "get_element_dependencies() (matflow.element method)": [[16, "matflow.Element.get_element_dependencies"]], "get_element_iteration_dependencies() (matflow.element method)": [[16, "matflow.Element.get_element_iteration_dependencies"]], "get_input_dependencies() (matflow.element method)": [[16, "matflow.Element.get_input_dependencies"]], "get_parameter_sources() (matflow.element method)": [[16, "matflow.Element.get_parameter_sources"]], "get_sequence_value() (matflow.element method)": [[16, "matflow.Element.get_sequence_value"]], "get_task_dependencies() (matflow.element method)": [[16, "matflow.Element.get_task_dependencies"]], "id_ (matflow.element property)": [[16, "matflow.Element.id_"]], "index (matflow.element property)": [[16, "matflow.Element.index"]], "input_files (matflow.element property)": [[16, "matflow.Element.input_files"]], "input_source_idx (matflow.element property)": [[16, "matflow.Element.input_source_idx"]], "input_sources (matflow.element property)": [[16, "matflow.Element.input_sources"]], "inputs (matflow.element property)": [[16, "matflow.Element.inputs"]], "is_pending (matflow.element property)": [[16, "matflow.Element.is_pending"]], "iteration_ids (matflow.element property)": [[16, "matflow.Element.iteration_IDs"]], "iterations (matflow.element property)": [[16, "matflow.Element.iterations"]], "latest_iteration (matflow.element property)": [[16, "matflow.Element.latest_iteration"]], "latest_iteration_non_skipped (matflow.element property)": [[16, "matflow.Element.latest_iteration_non_skipped"]], "output_files (matflow.element property)": [[16, "matflow.Element.output_files"]], "outputs (matflow.element property)": [[16, "matflow.Element.outputs"]], "schema_parameters (matflow.element property)": [[16, "matflow.Element.schema_parameters"]], "sequence_idx (matflow.element property)": [[16, "matflow.Element.sequence_idx"]], "task (matflow.element property)": [[16, "matflow.Element.task"]], "to_element_set_data() (matflow.element method)": [[16, "matflow.Element.to_element_set_data"]], "workflow (matflow.element property)": [[16, "matflow.Element.workflow"]], "elementaction (class in matflow)": [[17, "matflow.ElementAction"]], "action (matflow.elementaction property)": [[17, "matflow.ElementAction.action"]], "action_idx (matflow.elementaction property)": [[17, "matflow.ElementAction.action_idx"]], "element (matflow.elementaction property)": [[17, "matflow.ElementAction.element"]], "element_iteration (matflow.elementaction property)": [[17, "matflow.ElementAction.element_iteration"]], "get() (matflow.elementaction method)": [[17, "matflow.ElementAction.get"]], "get_data_idx() (matflow.elementaction method)": [[17, "matflow.ElementAction.get_data_idx"]], "get_parameter_names() (matflow.elementaction method)": [[17, "matflow.ElementAction.get_parameter_names"]], "get_parameter_sources() (matflow.elementaction method)": [[17, "matflow.ElementAction.get_parameter_sources"]], "input_files (matflow.elementaction property)": [[17, "matflow.ElementAction.input_files"]], "inputs (matflow.elementaction property)": [[17, "matflow.ElementAction.inputs"]], "num_runs (matflow.elementaction property)": [[17, "matflow.ElementAction.num_runs"]], "output_files (matflow.elementaction property)": [[17, "matflow.ElementAction.output_files"]], "outputs (matflow.elementaction property)": [[17, "matflow.ElementAction.outputs"]], "runs (matflow.elementaction property)": [[17, "matflow.ElementAction.runs"]], "task (matflow.elementaction property)": [[17, "matflow.ElementAction.task"]], "elementactionrun (class in matflow)": [[18, "matflow.ElementActionRun"]], "action (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.action"]], "commands_file_id (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.commands_file_ID"]], "commands_idx (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.commands_idx"]], "compose_commands() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.compose_commands"]], "data_idx (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.data_idx"]], "dir_diff (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.dir_diff"]], "element (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.element"]], "element_action (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.element_action"]], "element_iteration (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.element_iteration"]], "end_time (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.end_time"]], "env_spec (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.env_spec"]], "env_spec_hashable (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.env_spec_hashable"]], "exit_code (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.exit_code"]], "get() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get"]], "get_ear_dependencies() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_EAR_dependencies"]], "get_ifg_input_values() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_IFG_input_values"]], "get_ofp_inputs() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_OFP_inputs"]], "get_ofp_output_files() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_OFP_output_files"]], "get_ofp_outputs() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_OFP_outputs"]], "get_all_previous_iteration_runs() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_all_previous_iteration_runs"]], "get_app_log_path() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_app_log_path"]], "get_app_std_path() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_app_std_path"]], "get_commands_file_hash() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_commands_file_hash"]], "get_data_idx() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_data_idx"]], "get_dependent_ears() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_dependent_EARs"]], "get_directory() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_directory"]], "get_environment() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_environment"]], "get_environment_spec() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_environment_spec"]], "get_input_dependencies() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_input_dependencies"]], "get_input_values() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_input_values"]], "get_input_values_direct() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_input_values_direct"]], "get_parameter_names() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_parameter_names"]], "get_parameter_sources() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_parameter_sources"]], "get_py_script_func_kwargs() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_py_script_func_kwargs"]], "get_resources() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_resources"]], "get_script_artifact_name() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.get_script_artifact_name"]], "id_ (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.id_"]], "index (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.index"]], "input_files (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.input_files"]], "inputs (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.inputs"]], "is_pending (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.is_pending"]], "is_snippet_script (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.is_snippet_script"]], "metadata (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.metadata"]], "output_files (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.output_files"]], "outputs (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.outputs"]], "port_number (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.port_number"]], "raise_on_failure_threshold() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.raise_on_failure_threshold"]], "resources (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.resources"]], "run_hostname (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.run_hostname"]], "skip (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.skip"]], "skip_reason (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.skip_reason"]], "snapshot_end (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.snapshot_end"]], "snapshot_start (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.snapshot_start"]], "start_time (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.start_time"]], "status (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.status"]], "submission_idx (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.submission_idx"]], "success (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.success"]], "task (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.task"]], "try_write_commands() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.try_write_commands"]], "workflow (matflow.elementactionrun property)": [[18, "matflow.ElementActionRun.workflow"]], "write_script_input_files() (matflow.elementactionrun method)": [[18, "matflow.ElementActionRun.write_script_input_files"]], "elementfilter (class in matflow)": [[19, "matflow.ElementFilter"]], "filter() (matflow.elementfilter method)": [[19, "matflow.ElementFilter.filter"]], "from_json_like() (matflow.elementfilter class method)": [[19, "matflow.ElementFilter.from_json_like"]], "rules (matflow.elementfilter attribute)": [[19, "matflow.ElementFilter.rules"]], "to_dict() (matflow.elementfilter method)": [[19, "matflow.ElementFilter.to_dict"]], "to_json_like() (matflow.elementfilter method)": [[19, "matflow.ElementFilter.to_json_like"]], "elementgroup (class in matflow)": [[20, "matflow.ElementGroup"]], "from_json_like() (matflow.elementgroup class method)": [[20, "matflow.ElementGroup.from_json_like"]], "group_by_distinct (matflow.elementgroup attribute)": [[20, "matflow.ElementGroup.group_by_distinct"]], "name (matflow.elementgroup attribute)": [[20, "matflow.ElementGroup.name"]], "to_dict() (matflow.elementgroup method)": [[20, "matflow.ElementGroup.to_dict"]], "to_json_like() (matflow.elementgroup method)": [[20, "matflow.ElementGroup.to_json_like"]], "where (matflow.elementgroup attribute)": [[20, "matflow.ElementGroup.where"]], "elementinputfiles (class in matflow)": [[21, "matflow.ElementInputFiles"]], "prefixed_names_unlabelled (matflow.elementinputfiles property)": [[21, "matflow.ElementInputFiles.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementinputfiles property)": [[21, "matflow.ElementInputFiles.prefixed_names_unlabelled_str"]], "elementinputs (class in matflow)": [[22, "matflow.ElementInputs"]], "prefixed_names_unlabelled (matflow.elementinputs property)": [[22, "matflow.ElementInputs.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementinputs property)": [[22, "matflow.ElementInputs.prefixed_names_unlabelled_str"]], "ear_ids (matflow.elementiteration property)": [[23, "matflow.ElementIteration.EAR_IDs"]], "ear_ids_flat (matflow.elementiteration property)": [[23, "matflow.ElementIteration.EAR_IDs_flat"]], "ears_initialised (matflow.elementiteration property)": [[23, "matflow.ElementIteration.EARs_initialised"]], "elementiteration (class in matflow)": [[23, "matflow.ElementIteration"]], "action_runs (matflow.elementiteration property)": [[23, "matflow.ElementIteration.action_runs"]], "actions (matflow.elementiteration property)": [[23, "matflow.ElementIteration.actions"]], "data_idx (matflow.elementiteration property)": [[23, "matflow.ElementIteration.data_idx"]], "element (matflow.elementiteration property)": [[23, "matflow.ElementIteration.element"]], "get() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get"]], "get_ear_dependencies() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_EAR_dependencies"]], "get_data_idx() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_data_idx"]], "get_dependent_ears() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_dependent_EARs"]], "get_dependent_element_iterations() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_dependent_element_iterations"]], "get_dependent_elements() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_dependent_elements"]], "get_dependent_tasks() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_dependent_tasks"]], "get_element_dependencies() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_element_dependencies"]], "get_element_iteration_dependencies() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_element_iteration_dependencies"]], "get_input_dependencies() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_input_dependencies"]], "get_parameter_names() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_parameter_names"]], "get_parameter_sources() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_parameter_sources"]], "get_resources() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_resources"]], "get_resources_obj() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_resources_obj"]], "get_task_dependencies() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_task_dependencies"]], "get_template_resources() (matflow.elementiteration method)": [[23, "matflow.ElementIteration.get_template_resources"]], "id_ (matflow.elementiteration property)": [[23, "matflow.ElementIteration.id_"]], "index (matflow.elementiteration property)": [[23, "matflow.ElementIteration.index"]], "input_files (matflow.elementiteration property)": [[23, "matflow.ElementIteration.input_files"]], "inputs (matflow.elementiteration property)": [[23, "matflow.ElementIteration.inputs"]], "is_pending (matflow.elementiteration property)": [[23, "matflow.ElementIteration.is_pending"]], "loop_idx (matflow.elementiteration property)": [[23, "matflow.ElementIteration.loop_idx"]], "loop_skipped (matflow.elementiteration property)": [[23, "matflow.ElementIteration.loop_skipped"]], "output_files (matflow.elementiteration property)": [[23, "matflow.ElementIteration.output_files"]], "outputs (matflow.elementiteration property)": [[23, "matflow.ElementIteration.outputs"]], "schema_parameters (matflow.elementiteration property)": [[23, "matflow.ElementIteration.schema_parameters"]], "task (matflow.elementiteration property)": [[23, "matflow.ElementIteration.task"]], "workflow (matflow.elementiteration property)": [[23, "matflow.ElementIteration.workflow"]], "elementoutputfiles (class in matflow)": [[24, "matflow.ElementOutputFiles"]], "prefixed_names_unlabelled (matflow.elementoutputfiles property)": [[24, "matflow.ElementOutputFiles.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementoutputfiles property)": [[24, "matflow.ElementOutputFiles.prefixed_names_unlabelled_str"]], "elementoutputs (class in matflow)": [[25, "matflow.ElementOutputs"]], "prefixed_names_unlabelled (matflow.elementoutputs property)": [[25, "matflow.ElementOutputs.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementoutputs property)": [[25, "matflow.ElementOutputs.prefixed_names_unlabelled_str"]], "elementparameter (class in matflow)": [[26, "matflow.ElementParameter"]], "app (matflow.elementparameter attribute)": [[26, "matflow.ElementParameter.app"]], "data_idx (matflow.elementparameter property)": [[26, "matflow.ElementParameter.data_idx"]], "data_idx_is_set (matflow.elementparameter property)": [[26, "matflow.ElementParameter.data_idx_is_set"]], "element (matflow.elementparameter attribute)": [[26, "matflow.ElementParameter.element"]], "get_size() (matflow.elementparameter method)": [[26, "matflow.ElementParameter.get_size"]], "is_set (matflow.elementparameter property)": [[26, "matflow.ElementParameter.is_set"]], "parent (matflow.elementparameter attribute)": [[26, "matflow.ElementParameter.parent"]], "path (matflow.elementparameter attribute)": [[26, "matflow.ElementParameter.path"]], "task (matflow.elementparameter attribute)": [[26, "matflow.ElementParameter.task"]], "value (matflow.elementparameter property)": [[26, "matflow.ElementParameter.value"]], "elementpropagation (class in matflow)": [[27, "matflow.ElementPropagation"]], "element_set (matflow.elementpropagation property)": [[27, "matflow.ElementPropagation.element_set"]], "input_sources (matflow.elementpropagation attribute)": [[27, "matflow.ElementPropagation.input_sources"]], "nesting_order (matflow.elementpropagation attribute)": [[27, "matflow.ElementPropagation.nesting_order"]], "task (matflow.elementpropagation attribute)": [[27, "matflow.ElementPropagation.task"]], "elementrepeats (class in matflow)": [[28, "matflow.ElementRepeats"]], "number (matflow.elementrepeats attribute)": [[28, "matflow.ElementRepeats.number"]], "where (matflow.elementrepeats attribute)": [[28, "matflow.ElementRepeats.where"]], "elementresources (class in matflow)": [[29, "matflow.ElementResources"]], "sge_parallel_env (matflow.elementresources attribute)": [[29, "matflow.ElementResources.SGE_parallel_env"]], "slurm_is_parallel (matflow.elementresources property)": [[29, "matflow.ElementResources.SLURM_is_parallel"]], "slurm_num_cpus_per_task (matflow.elementresources attribute)": [[29, "matflow.ElementResources.SLURM_num_cpus_per_task"]], "slurm_num_nodes (matflow.elementresources attribute)": [[29, "matflow.ElementResources.SLURM_num_nodes"]], "slurm_num_tasks (matflow.elementresources attribute)": [[29, "matflow.ElementResources.SLURM_num_tasks"]], "slurm_num_tasks_per_node (matflow.elementresources attribute)": [[29, "matflow.ElementResources.SLURM_num_tasks_per_node"]], "slurm_partition (matflow.elementresources attribute)": [[29, "matflow.ElementResources.SLURM_partition"]], "allow_failed_dependencies (matflow.elementresources attribute)": [[29, "matflow.ElementResources.allow_failed_dependencies"]], "combine_jobscript_std (matflow.elementresources attribute)": [[29, "matflow.ElementResources.combine_jobscript_std"]], "combine_scripts (matflow.elementresources attribute)": [[29, "matflow.ElementResources.combine_scripts"]], "environments (matflow.elementresources attribute)": [[29, "matflow.ElementResources.environments"]], "from_json_like() (matflow.elementresources class method)": [[29, "matflow.ElementResources.from_json_like"]], "get_default_os_name() (matflow.elementresources static method)": [[29, "matflow.ElementResources.get_default_os_name"]], "get_default_scheduler() (matflow.elementresources class method)": [[29, "matflow.ElementResources.get_default_scheduler"]], "get_default_shell() (matflow.elementresources class method)": [[29, "matflow.ElementResources.get_default_shell"]], "get_env_instance_filterable_attributes() (matflow.elementresources static method)": [[29, "matflow.ElementResources.get_env_instance_filterable_attributes"]], "get_jobscript_hash() (matflow.elementresources method)": [[29, "matflow.ElementResources.get_jobscript_hash"]], "is_parallel (matflow.elementresources property)": [[29, "matflow.ElementResources.is_parallel"]], "max_array_items (matflow.elementresources attribute)": [[29, "matflow.ElementResources.max_array_items"]], "num_cores (matflow.elementresources attribute)": [[29, "matflow.ElementResources.num_cores"]], "num_cores_per_node (matflow.elementresources attribute)": [[29, "matflow.ElementResources.num_cores_per_node"]], "num_nodes (matflow.elementresources attribute)": [[29, "matflow.ElementResources.num_nodes"]], "num_threads (matflow.elementresources attribute)": [[29, "matflow.ElementResources.num_threads"]], "os_name (matflow.elementresources attribute)": [[29, "matflow.ElementResources.os_name"]], "parallel_mode (matflow.elementresources attribute)": [[29, "matflow.ElementResources.parallel_mode"]], "resources_id (matflow.elementresources attribute)": [[29, "matflow.ElementResources.resources_id"]], "scheduler (matflow.elementresources attribute)": [[29, "matflow.ElementResources.scheduler"]], "scheduler_args (matflow.elementresources attribute)": [[29, "matflow.ElementResources.scheduler_args"]], "scratch (matflow.elementresources attribute)": [[29, "matflow.ElementResources.scratch"]], "set_defaults() (matflow.elementresources method)": [[29, "matflow.ElementResources.set_defaults"]], "shell (matflow.elementresources attribute)": [[29, "matflow.ElementResources.shell"]], "shell_args (matflow.elementresources attribute)": [[29, "matflow.ElementResources.shell_args"]], "skip_downstream_on_failure (matflow.elementresources attribute)": [[29, "matflow.ElementResources.skip_downstream_on_failure"]], "time_limit (matflow.elementresources attribute)": [[29, "matflow.ElementResources.time_limit"]], "to_dict() (matflow.elementresources method)": [[29, "matflow.ElementResources.to_dict"]], "to_json_like() (matflow.elementresources method)": [[29, "matflow.ElementResources.to_json_like"]], "use_job_array (matflow.elementresources attribute)": [[29, "matflow.ElementResources.use_job_array"]], "validate_against_machine() (matflow.elementresources method)": [[29, "matflow.ElementResources.validate_against_machine"]], "write_app_logs (matflow.elementresources attribute)": [[29, "matflow.ElementResources.write_app_logs"]], "elementset (class in matflow)": [[30, "matflow.ElementSet"]], "allow_non_coincident_task_sources (matflow.elementset attribute)": [[30, "matflow.ElementSet.allow_non_coincident_task_sources"]], "defined_input_types (matflow.elementset property)": [[30, "matflow.ElementSet.defined_input_types"]], "elem_iter_ids (matflow.elementset property)": [[30, "matflow.ElementSet.elem_iter_IDs"]], "element_iterations (matflow.elementset property)": [[30, "matflow.ElementSet.element_iterations"]], "element_local_idx_range (matflow.elementset property)": [[30, "matflow.ElementSet.element_local_idx_range"]], "elements (matflow.elementset property)": [[30, "matflow.ElementSet.elements"]], "ensure_element_sets() (matflow.elementset class method)": [[30, "matflow.ElementSet.ensure_element_sets"]], "env_preset (matflow.elementset attribute)": [[30, "matflow.ElementSet.env_preset"]], "environments (matflow.elementset attribute)": [[30, "matflow.ElementSet.environments"]], "from_json_like() (matflow.elementset class method)": [[30, "matflow.ElementSet.from_json_like"]], "get_defined_parameter_types() (matflow.elementset method)": [[30, "matflow.ElementSet.get_defined_parameter_types"]], "get_defined_sub_parameter_types() (matflow.elementset method)": [[30, "matflow.ElementSet.get_defined_sub_parameter_types"]], "get_locally_defined_inputs() (matflow.elementset method)": [[30, "matflow.ElementSet.get_locally_defined_inputs"]], "get_sequence_from_path() (matflow.elementset method)": [[30, "matflow.ElementSet.get_sequence_from_path"]], "get_task_dependencies() (matflow.elementset method)": [[30, "matflow.ElementSet.get_task_dependencies"]], "groups (matflow.elementset attribute)": [[30, "matflow.ElementSet.groups"]], "index (matflow.elementset property)": [[30, "matflow.ElementSet.index"]], "input_files (matflow.elementset attribute)": [[30, "matflow.ElementSet.input_files"]], "input_sources (matflow.elementset attribute)": [[30, "matflow.ElementSet.input_sources"]], "input_types (matflow.elementset property)": [[30, "matflow.ElementSet.input_types"]], "inputs (matflow.elementset attribute)": [[30, "matflow.ElementSet.inputs"]], "is_creation (matflow.elementset attribute)": [[30, "matflow.ElementSet.is_creation"]], "is_input_type_provided() (matflow.elementset method)": [[30, "matflow.ElementSet.is_input_type_provided"]], "multi_path_sequences (matflow.elementset attribute)": [[30, "matflow.ElementSet.multi_path_sequences"]], "nesting_order (matflow.elementset attribute)": [[30, "matflow.ElementSet.nesting_order"]], "prepare_persistent_copy() (matflow.elementset method)": [[30, "matflow.ElementSet.prepare_persistent_copy"]], "repeats (matflow.elementset attribute)": [[30, "matflow.ElementSet.repeats"]], "resources (matflow.elementset attribute)": [[30, "matflow.ElementSet.resources"]], "sequences (matflow.elementset attribute)": [[30, "matflow.ElementSet.sequences"]], "sourceable_elem_iters (matflow.elementset attribute)": [[30, "matflow.ElementSet.sourceable_elem_iters"]], "task (matflow.elementset property)": [[30, "matflow.ElementSet.task"]], "task_template (matflow.elementset property)": [[30, "matflow.ElementSet.task_template"]], "to_dict() (matflow.elementset method)": [[30, "matflow.ElementSet.to_dict"]], "to_json_like() (matflow.elementset method)": [[30, "matflow.ElementSet.to_json_like"]], "undefined_input_types (matflow.elementset property)": [[30, "matflow.ElementSet.undefined_input_types"]], "elements (class in matflow)": [[31, "matflow.Elements"]], "task (matflow.elements property)": [[31, "matflow.Elements.task"]], "environment (class in matflow)": [[32, "matflow.Environment"]], "doc (matflow.environment attribute)": [[32, "matflow.Environment.doc"]], "documentation (matflow.environment property)": [[32, "matflow.Environment.documentation"]], "executables (matflow.environment attribute)": [[32, "matflow.Environment.executables"]], "from_json_like() (matflow.environment class method)": [[32, "matflow.Environment.from_json_like"]], "name (matflow.environment attribute)": [[32, "matflow.Environment.name"]], "setup (matflow.environment attribute)": [[32, "matflow.Environment.setup"]], "specifiers (matflow.environment attribute)": [[32, "matflow.Environment.specifiers"]], "to_dict() (matflow.environment method)": [[32, "matflow.Environment.to_dict"]], "to_json_like() (matflow.environment method)": [[32, "matflow.Environment.to_json_like"]], "environmentslist (class in matflow)": [[33, "matflow.EnvironmentsList"]], "add_object() (matflow.environmentslist method)": [[33, "matflow.EnvironmentsList.add_object"]], "add_objects() (matflow.environmentslist method)": [[33, "matflow.EnvironmentsList.add_objects"]], "from_json_like() (matflow.environmentslist class method)": [[33, "matflow.EnvironmentsList.from_json_like"]], "get() (matflow.environmentslist method)": [[33, "matflow.EnvironmentsList.get"]], "get_all() (matflow.environmentslist method)": [[33, "matflow.EnvironmentsList.get_all"]], "list_attrs() (matflow.environmentslist method)": [[33, "matflow.EnvironmentsList.list_attrs"]], "to_dict() (matflow.environmentslist method)": [[33, "matflow.EnvironmentsList.to_dict"]], "to_json_like() (matflow.environmentslist method)": [[33, "matflow.EnvironmentsList.to_json_like"]], "executable (class in matflow)": [[34, "matflow.Executable"]], "environment (matflow.executable property)": [[34, "matflow.Executable.environment"]], "filter_instances() (matflow.executable method)": [[34, "matflow.Executable.filter_instances"]], "from_json_like() (matflow.executable class method)": [[34, "matflow.Executable.from_json_like"]], "instances (matflow.executable attribute)": [[34, "matflow.Executable.instances"]], "label (matflow.executable attribute)": [[34, "matflow.Executable.label"]], "to_dict() (matflow.executable method)": [[34, "matflow.Executable.to_dict"]], "to_json_like() (matflow.executable method)": [[34, "matflow.Executable.to_json_like"]], "executableinstance (class in matflow)": [[35, "matflow.ExecutableInstance"]], "command (matflow.executableinstance attribute)": [[35, "matflow.ExecutableInstance.command"]], "from_json_like() (matflow.executableinstance class method)": [[35, "matflow.ExecutableInstance.from_json_like"]], "from_spec() (matflow.executableinstance class method)": [[35, "matflow.ExecutableInstance.from_spec"]], "num_cores (matflow.executableinstance attribute)": [[35, "matflow.ExecutableInstance.num_cores"]], "parallel_mode (matflow.executableinstance attribute)": [[35, "matflow.ExecutableInstance.parallel_mode"]], "to_dict() (matflow.executableinstance method)": [[35, "matflow.ExecutableInstance.to_dict"]], "to_json_like() (matflow.executableinstance method)": [[35, "matflow.ExecutableInstance.to_json_like"]], "executableslist (class in matflow)": [[36, "matflow.ExecutablesList"]], "add_object() (matflow.executableslist method)": [[36, "matflow.ExecutablesList.add_object"]], "add_objects() (matflow.executableslist method)": [[36, "matflow.ExecutablesList.add_objects"]], "environment (matflow.executableslist attribute)": [[36, "matflow.ExecutablesList.environment"]], "from_json_like() (matflow.executableslist class method)": [[36, "matflow.ExecutablesList.from_json_like"]], "get() (matflow.executableslist method)": [[36, "matflow.ExecutablesList.get"]], "get_all() (matflow.executableslist method)": [[36, "matflow.ExecutablesList.get_all"]], "list_attrs() (matflow.executableslist method)": [[36, "matflow.ExecutablesList.list_attrs"]], "to_dict() (matflow.executableslist method)": [[36, "matflow.ExecutablesList.to_dict"]], "to_json_like() (matflow.executableslist method)": [[36, "matflow.ExecutablesList.to_json_like"]], "executor (class in matflow)": [[37, "matflow.Executor"]], "q (matflow.executor property)": [[37, "matflow.Executor.q"]], "run() (matflow.executor method)": [[37, "matflow.Executor.run"]], "send_abort() (matflow.executor class method)": [[37, "matflow.Executor.send_abort"]], "start_zmq_server() (matflow.executor method)": [[37, "matflow.Executor.start_zmq_server"]], "stop_zmq_server() (matflow.executor method)": [[37, "matflow.Executor.stop_zmq_server"]], "zmq_context (matflow.executor property)": [[37, "matflow.Executor.zmq_context"]], "filenameext (class in matflow)": [[38, "matflow.FileNameExt"]], "file_name (matflow.filenameext attribute)": [[38, "matflow.FileNameExt.file_name"]], "from_json_like() (matflow.filenameext class method)": [[38, "matflow.FileNameExt.from_json_like"]], "to_dict() (matflow.filenameext method)": [[38, "matflow.FileNameExt.to_dict"]], "to_json_like() (matflow.filenameext method)": [[38, "matflow.FileNameExt.to_json_like"]], "value() (matflow.filenameext method)": [[38, "matflow.FileNameExt.value"]], "filenamespec (class in matflow)": [[39, "matflow.FileNameSpec"]], "args (matflow.filenamespec attribute)": [[39, "matflow.FileNameSpec.args"]], "ext (matflow.filenamespec property)": [[39, "matflow.FileNameSpec.ext"]], "from_json_like() (matflow.filenamespec class method)": [[39, "matflow.FileNameSpec.from_json_like"]], "is_regex (matflow.filenamespec attribute)": [[39, "matflow.FileNameSpec.is_regex"]], "name (matflow.filenamespec attribute)": [[39, "matflow.FileNameSpec.name"]], "stem (matflow.filenamespec property)": [[39, "matflow.FileNameSpec.stem"]], "to_dict() (matflow.filenamespec method)": [[39, "matflow.FileNameSpec.to_dict"]], "to_json_like() (matflow.filenamespec method)": [[39, "matflow.FileNameSpec.to_json_like"]], "value() (matflow.filenamespec method)": [[39, "matflow.FileNameSpec.value"]], "filenamestem (class in matflow)": [[40, "matflow.FileNameStem"]], "file_name (matflow.filenamestem attribute)": [[40, "matflow.FileNameStem.file_name"]], "from_json_like() (matflow.filenamestem class method)": [[40, "matflow.FileNameStem.from_json_like"]], "to_dict() (matflow.filenamestem method)": [[40, "matflow.FileNameStem.to_dict"]], "to_json_like() (matflow.filenamestem method)": [[40, "matflow.FileNameStem.to_json_like"]], "value() (matflow.filenamestem method)": [[40, "matflow.FileNameStem.value"]], "filespec (class in matflow)": [[41, "matflow.FileSpec"]], "doc (matflow.filespec attribute)": [[41, "matflow.FileSpec.doc"]], "documentation (matflow.filespec property)": [[41, "matflow.FileSpec.documentation"]], "ext (matflow.filespec property)": [[41, "matflow.FileSpec.ext"]], "from_json_like() (matflow.filespec class method)": [[41, "matflow.FileSpec.from_json_like"]], "label (matflow.filespec attribute)": [[41, "matflow.FileSpec.label"]], "name (matflow.filespec attribute)": [[41, "matflow.FileSpec.name"]], "stem (matflow.filespec property)": [[41, "matflow.FileSpec.stem"]], "to_dict() (matflow.filespec method)": [[41, "matflow.FileSpec.to_dict"]], "to_json_like() (matflow.filespec method)": [[41, "matflow.FileSpec.to_json_like"]], "value() (matflow.filespec method)": [[41, "matflow.FileSpec.value"]], "grouplist (class in matflow)": [[42, "matflow.GroupList"]], "add_object() (matflow.grouplist method)": [[42, "matflow.GroupList.add_object"]], "add_objects() (matflow.grouplist method)": [[42, "matflow.GroupList.add_objects"]], "from_json_like() (matflow.grouplist class method)": [[42, "matflow.GroupList.from_json_like"]], "get() (matflow.grouplist method)": [[42, "matflow.GroupList.get"]], "get_all() (matflow.grouplist method)": [[42, "matflow.GroupList.get_all"]], "list_attrs() (matflow.grouplist method)": [[42, "matflow.GroupList.list_attrs"]], "to_dict() (matflow.grouplist method)": [[42, "matflow.GroupList.to_dict"]], "to_json_like() (matflow.grouplist method)": [[42, "matflow.GroupList.to_json_like"]], "inputfile (class in matflow)": [[43, "matflow.InputFile"]], "contents (matflow.inputfile property)": [[43, "matflow.InputFile.contents"]], "extension (matflow.inputfile property)": [[43, "matflow.InputFile.extension"]], "file (matflow.inputfile attribute)": [[43, "matflow.InputFile.file"]], "from_json_like() (matflow.inputfile class method)": [[43, "matflow.InputFile.from_json_like"]], "make_persistent() (matflow.inputfile method)": [[43, "matflow.InputFile.make_persistent"]], "normalised_files_path (matflow.inputfile property)": [[43, "matflow.InputFile.normalised_files_path"]], "normalised_path (matflow.inputfile property)": [[43, "matflow.InputFile.normalised_path"]], "path (matflow.inputfile property)": [[43, "matflow.InputFile.path"]], "read_contents() (matflow.inputfile method)": [[43, "matflow.InputFile.read_contents"]], "store_contents (matflow.inputfile property)": [[43, "matflow.InputFile.store_contents"]], "to_dict() (matflow.inputfile method)": [[43, "matflow.InputFile.to_dict"]], "to_json_like() (matflow.inputfile method)": [[43, "matflow.InputFile.to_json_like"]], "workflow (matflow.inputfile property)": [[43, "matflow.InputFile.workflow"]], "inputfilegenerator (class in matflow)": [[44, "matflow.InputFileGenerator"]], "abortable (matflow.inputfilegenerator attribute)": [[44, "matflow.InputFileGenerator.abortable"]], "environment (matflow.inputfilegenerator attribute)": [[44, "matflow.InputFileGenerator.environment"]], "from_json_like() (matflow.inputfilegenerator class method)": [[44, "matflow.InputFileGenerator.from_json_like"]], "get_action_rules() (matflow.inputfilegenerator method)": [[44, "matflow.InputFileGenerator.get_action_rules"]], "input_file (matflow.inputfilegenerator attribute)": [[44, "matflow.InputFileGenerator.input_file"]], "inputs (matflow.inputfilegenerator attribute)": [[44, "matflow.InputFileGenerator.inputs"]], "requires_dir (matflow.inputfilegenerator attribute)": [[44, "matflow.InputFileGenerator.requires_dir"]], "rules (matflow.inputfilegenerator attribute)": [[44, "matflow.InputFileGenerator.rules"]], "script (matflow.inputfilegenerator attribute)": [[44, "matflow.InputFileGenerator.script"]], "script_pass_env_spec (matflow.inputfilegenerator attribute)": [[44, "matflow.InputFileGenerator.script_pass_env_spec"]], "to_dict() (matflow.inputfilegenerator method)": [[44, "matflow.InputFileGenerator.to_dict"]], "to_json_like() (matflow.inputfilegenerator method)": [[44, "matflow.InputFileGenerator.to_json_like"]], "inputfilegeneratorsource (class in matflow)": [[45, "matflow.InputFileGeneratorSource"]], "contents (matflow.inputfilegeneratorsource property)": [[45, "matflow.InputFileGeneratorSource.contents"]], "extension (matflow.inputfilegeneratorsource property)": [[45, "matflow.InputFileGeneratorSource.extension"]], "file (matflow.inputfilegeneratorsource attribute)": [[45, "matflow.InputFileGeneratorSource.file"]], "from_json_like() (matflow.inputfilegeneratorsource class method)": [[45, "matflow.InputFileGeneratorSource.from_json_like"]], "generator (matflow.inputfilegeneratorsource attribute)": [[45, "matflow.InputFileGeneratorSource.generator"]], "make_persistent() (matflow.inputfilegeneratorsource method)": [[45, "matflow.InputFileGeneratorSource.make_persistent"]], "normalised_path (matflow.inputfilegeneratorsource property)": [[45, "matflow.InputFileGeneratorSource.normalised_path"]], "path (matflow.inputfilegeneratorsource property)": [[45, "matflow.InputFileGeneratorSource.path"]], "read_contents() (matflow.inputfilegeneratorsource method)": [[45, "matflow.InputFileGeneratorSource.read_contents"]], "store_contents (matflow.inputfilegeneratorsource property)": [[45, "matflow.InputFileGeneratorSource.store_contents"]], "to_dict() (matflow.inputfilegeneratorsource method)": [[45, "matflow.InputFileGeneratorSource.to_dict"]], "to_json_like() (matflow.inputfilegeneratorsource method)": [[45, "matflow.InputFileGeneratorSource.to_json_like"]], "workflow (matflow.inputfilegeneratorsource property)": [[45, "matflow.InputFileGeneratorSource.workflow"]], "inputsource (class in matflow)": [[46, "matflow.InputSource"]], "default() (matflow.inputsource class method)": [[46, "matflow.InputSource.default"]], "element_iters (matflow.inputsource attribute)": [[46, "matflow.InputSource.element_iters"]], "from_json_like() (matflow.inputsource class method)": [[46, "matflow.InputSource.from_json_like"]], "from_string() (matflow.inputsource class method)": [[46, "matflow.InputSource.from_string"]], "get_task() (matflow.inputsource method)": [[46, "matflow.InputSource.get_task"]], "import_() (matflow.inputsource class method)": [[46, "matflow.InputSource.import_"]], "import_ref (matflow.inputsource attribute)": [[46, "matflow.InputSource.import_ref"]], "is_in() (matflow.inputsource method)": [[46, "matflow.InputSource.is_in"]], "local() (matflow.inputsource class method)": [[46, "matflow.InputSource.local"]], "path (matflow.inputsource attribute)": [[46, "matflow.InputSource.path"]], "source_type (matflow.inputsource attribute)": [[46, "matflow.InputSource.source_type"]], "task() (matflow.inputsource class method)": [[46, "matflow.InputSource.task"]], "task_ref (matflow.inputsource attribute)": [[46, "matflow.InputSource.task_ref"]], "task_source_type (matflow.inputsource attribute)": [[46, "matflow.InputSource.task_source_type"]], "to_dict() (matflow.inputsource method)": [[46, "matflow.InputSource.to_dict"]], "to_json_like() (matflow.inputsource method)": [[46, "matflow.InputSource.to_json_like"]], "to_string() (matflow.inputsource method)": [[46, "matflow.InputSource.to_string"]], "where (matflow.inputsource attribute)": [[46, "matflow.InputSource.where"]], "default (matflow.inputsourcetype attribute)": [[47, "matflow.InputSourceType.DEFAULT"]], "import (matflow.inputsourcetype attribute)": [[47, "matflow.InputSourceType.IMPORT"]], "inputsourcetype (class in matflow)": [[47, "matflow.InputSourceType"]], "local (matflow.inputsourcetype attribute)": [[47, "matflow.InputSourceType.LOCAL"]], "task (matflow.inputsourcetype attribute)": [[47, "matflow.InputSourceType.TASK"]], "inputvalue (class in matflow)": [[48, "matflow.InputValue"]], "from_json_like() (matflow.inputvalue class method)": [[48, "matflow.InputValue.from_json_like"]], "is_sub_value (matflow.inputvalue property)": [[48, "matflow.InputValue.is_sub_value"]], "label (matflow.inputvalue attribute)": [[48, "matflow.InputValue.label"]], "labelled_type (matflow.inputvalue property)": [[48, "matflow.InputValue.labelled_type"]], "make_persistent() (matflow.inputvalue method)": [[48, "matflow.InputValue.make_persistent"]], "normalised_inputs_path (matflow.inputvalue property)": [[48, "matflow.InputValue.normalised_inputs_path"]], "normalised_path (matflow.inputvalue property)": [[48, "matflow.InputValue.normalised_path"]], "parameter (matflow.inputvalue attribute)": [[48, "matflow.InputValue.parameter"]], "path (matflow.inputvalue attribute)": [[48, "matflow.InputValue.path"]], "to_dict() (matflow.inputvalue method)": [[48, "matflow.InputValue.to_dict"]], "to_json_like() (matflow.inputvalue method)": [[48, "matflow.InputValue.to_json_like"]], "value (matflow.inputvalue property)": [[48, "matflow.InputValue.value"]], "value_class_method (matflow.inputvalue attribute)": [[48, "matflow.InputValue.value_class_method"]], "workflow (matflow.inputvalue property)": [[48, "matflow.InputValue.workflow"]], "ear_id_file_name (matflow.jobscript property)": [[49, "matflow.Jobscript.EAR_ID_file_name"]], "ear_id_file_path (matflow.jobscript property)": [[49, "matflow.Jobscript.EAR_ID_file_path"]], "jobscript (class in matflow)": [[49, "matflow.Jobscript"]], "all_ear_ids (matflow.jobscript property)": [[49, "matflow.Jobscript.all_EAR_IDs"]], "all_ears (matflow.jobscript property)": [[49, "matflow.Jobscript.all_EARs"]], "at_submit_metadata (matflow.jobscript property)": [[49, "matflow.Jobscript.at_submit_metadata"]], "blocks (matflow.jobscript property)": [[49, "matflow.Jobscript.blocks"]], "combined_script_indices_file_name (matflow.jobscript property)": [[49, "matflow.Jobscript.combined_script_indices_file_name"]], "combined_script_indices_file_path (matflow.jobscript property)": [[49, "matflow.Jobscript.combined_script_indices_file_path"]], "compose_combined_script() (matflow.jobscript method)": [[49, "matflow.Jobscript.compose_combined_script"]], "compose_jobscript() (matflow.jobscript method)": [[49, "matflow.Jobscript.compose_jobscript"]], "dependencies (matflow.jobscript property)": [[49, "matflow.Jobscript.dependencies"]], "direct_std_out_err_path (matflow.jobscript property)": [[49, "matflow.Jobscript.direct_std_out_err_path"]], "direct_stderr_path (matflow.jobscript property)": [[49, "matflow.Jobscript.direct_stderr_path"]], "direct_stdout_path (matflow.jobscript property)": [[49, "matflow.Jobscript.direct_stdout_path"]], "direct_win_pid_file_name (matflow.jobscript property)": [[49, "matflow.Jobscript.direct_win_pid_file_name"]], "direct_win_pid_file_path (matflow.jobscript property)": [[49, "matflow.Jobscript.direct_win_pid_file_path"]], "end_time (matflow.jobscript property)": [[49, "matflow.Jobscript.end_time"]], "from_json_like() (matflow.jobscript class method)": [[49, "matflow.Jobscript.from_json_like"]], "get_active_states() (matflow.jobscript method)": [[49, "matflow.Jobscript.get_active_states"]], "get_app_std_path() (matflow.jobscript method)": [[49, "matflow.Jobscript.get_app_std_path"]], "get_commands_file_name() (matflow.jobscript method)": [[49, "matflow.Jobscript.get_commands_file_name"]], "get_std_out_err_path() (matflow.jobscript method)": [[49, "matflow.Jobscript.get_std_out_err_path"]], "get_stderr() (matflow.jobscript method)": [[49, "matflow.Jobscript.get_stderr"]], "get_stderr_path() (matflow.jobscript method)": [[49, "matflow.Jobscript.get_stderr_path"]], "get_stdout() (matflow.jobscript method)": [[49, "matflow.Jobscript.get_stdout"]], "get_stdout_path() (matflow.jobscript method)": [[49, "matflow.Jobscript.get_stdout_path"]], "index (matflow.jobscript property)": [[49, "matflow.Jobscript.index"]], "is_array (matflow.jobscript property)": [[49, "matflow.Jobscript.is_array"]], "is_scheduled (matflow.jobscript property)": [[49, "matflow.Jobscript.is_scheduled"]], "is_submitted (matflow.jobscript property)": [[49, "matflow.Jobscript.is_submitted"]], "jobscript_functions_name (matflow.jobscript property)": [[49, "matflow.Jobscript.jobscript_functions_name"]], "jobscript_functions_path (matflow.jobscript property)": [[49, "matflow.Jobscript.jobscript_functions_path"]], "jobscript_name (matflow.jobscript property)": [[49, "matflow.Jobscript.jobscript_name"]], "jobscript_path (matflow.jobscript property)": [[49, "matflow.Jobscript.jobscript_path"]], "os_name (matflow.jobscript property)": [[49, "matflow.Jobscript.os_name"]], "print_stderr() (matflow.jobscript method)": [[49, "matflow.Jobscript.print_stderr"]], "print_stdout() (matflow.jobscript method)": [[49, "matflow.Jobscript.print_stdout"]], "process_id (matflow.jobscript property)": [[49, "matflow.Jobscript.process_ID"]], "resources (matflow.jobscript property)": [[49, "matflow.Jobscript.resources"]], "scheduler (matflow.jobscript property)": [[49, "matflow.Jobscript.scheduler"]], "scheduler_job_id (matflow.jobscript property)": [[49, "matflow.Jobscript.scheduler_job_ID"]], "scheduler_js_ref (matflow.jobscript property)": [[49, "matflow.Jobscript.scheduler_js_ref"]], "scheduler_name (matflow.jobscript property)": [[49, "matflow.Jobscript.scheduler_name"]], "shell (matflow.jobscript property)": [[49, "matflow.Jobscript.shell"]], "shell_idx (matflow.jobscript property)": [[49, "matflow.Jobscript.shell_idx"]], "shell_name (matflow.jobscript property)": [[49, "matflow.Jobscript.shell_name"]], "start_time (matflow.jobscript property)": [[49, "matflow.Jobscript.start_time"]], "std_path (matflow.jobscript property)": [[49, "matflow.Jobscript.std_path"]], "submission (matflow.jobscript property)": [[49, "matflow.Jobscript.submission"]], "submit() (matflow.jobscript method)": [[49, "matflow.Jobscript.submit"]], "submit_cmdline (matflow.jobscript property)": [[49, "matflow.Jobscript.submit_cmdline"]], "submit_hostname (matflow.jobscript property)": [[49, "matflow.Jobscript.submit_hostname"]], "submit_machine (matflow.jobscript property)": [[49, "matflow.Jobscript.submit_machine"]], "submit_time (matflow.jobscript property)": [[49, "matflow.Jobscript.submit_time"]], "to_dict() (matflow.jobscript method)": [[49, "matflow.Jobscript.to_dict"]], "to_json_like() (matflow.jobscript method)": [[49, "matflow.Jobscript.to_json_like"]], "version_info (matflow.jobscript property)": [[49, "matflow.Jobscript.version_info"]], "workflow (matflow.jobscript property)": [[49, "matflow.Jobscript.workflow"]], "workflow_app_alias (matflow.jobscript property)": [[49, "matflow.Jobscript.workflow_app_alias"]], "write_jobscript() (matflow.jobscript method)": [[49, "matflow.Jobscript.write_jobscript"]], "write_script_indices_file() (matflow.jobscript method)": [[49, "matflow.Jobscript.write_script_indices_file"]], "ear_id (matflow.jobscriptblock property)": [[50, "matflow.JobscriptBlock.EAR_ID"]], "jobscriptblock (class in matflow)": [[50, "matflow.JobscriptBlock"]], "all_ears (matflow.jobscriptblock property)": [[50, "matflow.JobscriptBlock.all_EARs"]], "dependencies (matflow.jobscriptblock property)": [[50, "matflow.JobscriptBlock.dependencies"]], "from_json_like() (matflow.jobscriptblock class method)": [[50, "matflow.JobscriptBlock.from_json_like"]], "get_task_loop_idx_array() (matflow.jobscriptblock method)": [[50, "matflow.JobscriptBlock.get_task_loop_idx_array"]], "index (matflow.jobscriptblock property)": [[50, "matflow.JobscriptBlock.index"]], "num_actions (matflow.jobscriptblock property)": [[50, "matflow.JobscriptBlock.num_actions"]], "num_elements (matflow.jobscriptblock property)": [[50, "matflow.JobscriptBlock.num_elements"]], "submission (matflow.jobscriptblock property)": [[50, "matflow.JobscriptBlock.submission"]], "task_actions (matflow.jobscriptblock property)": [[50, "matflow.JobscriptBlock.task_actions"]], "task_elements (matflow.jobscriptblock property)": [[50, "matflow.JobscriptBlock.task_elements"]], "task_insert_ids (matflow.jobscriptblock property)": [[50, "matflow.JobscriptBlock.task_insert_IDs"]], "task_loop_idx (matflow.jobscriptblock property)": [[50, "matflow.JobscriptBlock.task_loop_idx"]], "to_dict() (matflow.jobscriptblock method)": [[50, "matflow.JobscriptBlock.to_dict"]], "to_json_like() (matflow.jobscriptblock method)": [[50, "matflow.JobscriptBlock.to_json_like"]], "workflow (matflow.jobscriptblock property)": [[50, "matflow.JobscriptBlock.workflow"]], "write_ear_id_file() (matflow.jobscriptblock method)": [[50, "matflow.JobscriptBlock.write_EAR_ID_file"]], "loop (class in matflow)": [[51, "matflow.Loop"]], "from_json_like() (matflow.loop class method)": [[51, "matflow.Loop.from_json_like"]], "name (matflow.loop property)": [[51, "matflow.Loop.name"]], "non_iterable_parameters (matflow.loop property)": [[51, "matflow.Loop.non_iterable_parameters"]], "num_iterations (matflow.loop property)": [[51, "matflow.Loop.num_iterations"]], "task_insert_ids (matflow.loop property)": [[51, "matflow.Loop.task_insert_IDs"]], "task_objects (matflow.loop property)": [[51, "matflow.Loop.task_objects"]], "termination (matflow.loop property)": [[51, "matflow.Loop.termination"]], "termination_task (matflow.loop property)": [[51, "matflow.Loop.termination_task"]], "termination_task_insert_id (matflow.loop property)": [[51, "matflow.Loop.termination_task_insert_ID"]], "to_dict() (matflow.loop method)": [[51, "matflow.Loop.to_dict"]], "to_json_like() (matflow.loop method)": [[51, "matflow.Loop.to_json_like"]], "workflow_template (matflow.loop property)": [[51, "matflow.Loop.workflow_template"]], "metatask (class in matflow)": [[52, "matflow.MetaTask"]], "from_json_like() (matflow.metatask class method)": [[52, "matflow.MetaTask.from_json_like"]], "to_dict() (matflow.metatask method)": [[52, "matflow.MetaTask.to_dict"]], "to_json_like() (matflow.metatask method)": [[52, "matflow.MetaTask.to_json_like"]], "metataskschema (class in matflow)": [[53, "matflow.MetaTaskSchema"]], "actions (matflow.metataskschema attribute)": [[53, "matflow.MetaTaskSchema.actions"]], "basic_info() (matflow.metataskschema method)": [[53, "matflow.MetaTaskSchema.basic_info"]], "doc (matflow.metataskschema attribute)": [[53, "matflow.MetaTaskSchema.doc"]], "environment_presets (matflow.metataskschema attribute)": [[53, "matflow.MetaTaskSchema.environment_presets"]], "from_json_like() (matflow.metataskschema class method)": [[53, "matflow.MetaTaskSchema.from_json_like"]], "get_by_key() (matflow.metataskschema class method)": [[53, "matflow.MetaTaskSchema.get_by_key"]], "get_info_html() (matflow.metataskschema method)": [[53, "matflow.MetaTaskSchema.get_info_html"]], "get_key() (matflow.metataskschema method)": [[53, "matflow.MetaTaskSchema.get_key"]], "get_parameter_dependence() (matflow.metataskschema method)": [[53, "matflow.MetaTaskSchema.get_parameter_dependence"]], "ignore_invalid_actions() (matflow.metataskschema class method)": [[53, "matflow.MetaTaskSchema.ignore_invalid_actions"]], "implementation (matflow.metataskschema attribute)": [[53, "matflow.MetaTaskSchema.implementation"]], "info() (matflow.metataskschema method)": [[53, "matflow.MetaTaskSchema.info"]], "input_types (matflow.metataskschema property)": [[53, "matflow.MetaTaskSchema.input_types"]], "inputs (matflow.metataskschema attribute)": [[53, "matflow.MetaTaskSchema.inputs"]], "make_persistent() (matflow.metataskschema method)": [[53, "matflow.MetaTaskSchema.make_persistent"]], "method (matflow.metataskschema attribute)": [[53, "matflow.MetaTaskSchema.method"]], "multi_input_types (matflow.metataskschema property)": [[53, "matflow.MetaTaskSchema.multi_input_types"]], "name (matflow.metataskschema property)": [[53, "matflow.MetaTaskSchema.name"]], "objective (matflow.metataskschema attribute)": [[53, "matflow.MetaTaskSchema.objective"]], "output_types (matflow.metataskschema property)": [[53, "matflow.MetaTaskSchema.output_types"]], "outputs (matflow.metataskschema attribute)": [[53, "matflow.MetaTaskSchema.outputs"]], "parameter_class_modules (matflow.metataskschema attribute)": [[53, "matflow.MetaTaskSchema.parameter_class_modules"]], "provides_parameters (matflow.metataskschema property)": [[53, "matflow.MetaTaskSchema.provides_parameters"]], "task_template (matflow.metataskschema property)": [[53, "matflow.MetaTaskSchema.task_template"]], "to_dict() (matflow.metataskschema method)": [[53, "matflow.MetaTaskSchema.to_dict"]], "to_json_like() (matflow.metataskschema method)": [[53, "matflow.MetaTaskSchema.to_json_like"]], "version (matflow.metataskschema attribute)": [[53, "matflow.MetaTaskSchema.version"]], "web_doc (matflow.metataskschema attribute)": [[53, "matflow.MetaTaskSchema.web_doc"]], "multipathsequence (class in matflow)": [[54, "matflow.MultiPathSequence"]], "from_json_like() (matflow.multipathsequence class method)": [[54, "matflow.MultiPathSequence.from_json_like"]], "from_latin_hypercube() (matflow.multipathsequence class method)": [[54, "matflow.MultiPathSequence.from_latin_hypercube"]], "sequence_indices (matflow.multipathsequence property)": [[54, "matflow.MultiPathSequence.sequence_indices"]], "sequences (matflow.multipathsequence property)": [[54, "matflow.MultiPathSequence.sequences"]], "to_dict() (matflow.multipathsequence method)": [[54, "matflow.MultiPathSequence.to_dict"]], "to_json_like() (matflow.multipathsequence method)": [[54, "matflow.MultiPathSequence.to_json_like"]], "values (matflow.multipathsequence property)": [[54, "matflow.MultiPathSequence.values"]], "numcores (class in matflow)": [[55, "matflow.NumCores"]], "from_json_like() (matflow.numcores class method)": [[55, "matflow.NumCores.from_json_like"]], "start (matflow.numcores attribute)": [[55, "matflow.NumCores.start"]], "step (matflow.numcores attribute)": [[55, "matflow.NumCores.step"]], "stop (matflow.numcores attribute)": [[55, "matflow.NumCores.stop"]], "to_dict() (matflow.numcores method)": [[55, "matflow.NumCores.to_dict"]], "to_json_like() (matflow.numcores method)": [[55, "matflow.NumCores.to_json_like"]], "outputfileparser (class in matflow)": [[56, "matflow.OutputFileParser"]], "abortable (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.abortable"]], "clean_up (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.clean_up"]], "environment (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.environment"]], "from_json_like() (matflow.outputfileparser class method)": [[56, "matflow.OutputFileParser.from_json_like"]], "get_action_rules() (matflow.outputfileparser method)": [[56, "matflow.OutputFileParser.get_action_rules"]], "inputs (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.inputs"]], "options (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.options"]], "output (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.output"]], "output_files (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.output_files"]], "outputs (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.outputs"]], "requires_dir (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.requires_dir"]], "rules (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.rules"]], "save_files (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.save_files"]], "script (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.script"]], "script_pass_env_spec (matflow.outputfileparser attribute)": [[56, "matflow.OutputFileParser.script_pass_env_spec"]], "to_dict() (matflow.outputfileparser method)": [[56, "matflow.OutputFileParser.to_dict"]], "to_json_like() (matflow.outputfileparser method)": [[56, "matflow.OutputFileParser.to_json_like"]], "outputfileparsersource (class in matflow)": [[57, "matflow.OutputFileParserSource"]], "contents (matflow.outputfileparsersource property)": [[57, "matflow.OutputFileParserSource.contents"]], "extension (matflow.outputfileparsersource property)": [[57, "matflow.OutputFileParserSource.extension"]], "file (matflow.outputfileparsersource attribute)": [[57, "matflow.OutputFileParserSource.file"]], "from_json_like() (matflow.outputfileparsersource class method)": [[57, "matflow.OutputFileParserSource.from_json_like"]], "make_persistent() (matflow.outputfileparsersource method)": [[57, "matflow.OutputFileParserSource.make_persistent"]], "normalised_path (matflow.outputfileparsersource property)": [[57, "matflow.OutputFileParserSource.normalised_path"]], "parser (matflow.outputfileparsersource attribute)": [[57, "matflow.OutputFileParserSource.parser"]], "path (matflow.outputfileparsersource property)": [[57, "matflow.OutputFileParserSource.path"]], "read_contents() (matflow.outputfileparsersource method)": [[57, "matflow.OutputFileParserSource.read_contents"]], "store_contents (matflow.outputfileparsersource property)": [[57, "matflow.OutputFileParserSource.store_contents"]], "to_dict() (matflow.outputfileparsersource method)": [[57, "matflow.OutputFileParserSource.to_dict"]], "to_json_like() (matflow.outputfileparsersource method)": [[57, "matflow.OutputFileParserSource.to_json_like"]], "workflow (matflow.outputfileparsersource property)": [[57, "matflow.OutputFileParserSource.workflow"]], "outputlabel (class in matflow)": [[58, "matflow.OutputLabel"]], "from_json_like() (matflow.outputlabel class method)": [[58, "matflow.OutputLabel.from_json_like"]], "label (matflow.outputlabel attribute)": [[58, "matflow.OutputLabel.label"]], "parameter (matflow.outputlabel attribute)": [[58, "matflow.OutputLabel.parameter"]], "to_dict() (matflow.outputlabel method)": [[58, "matflow.OutputLabel.to_dict"]], "to_json_like() (matflow.outputlabel method)": [[58, "matflow.OutputLabel.to_json_like"]], "where (matflow.outputlabel attribute)": [[58, "matflow.OutputLabel.where"]], "parameter (class in matflow)": [[59, "matflow.Parameter"]], "from_json_like() (matflow.parameter class method)": [[59, "matflow.Parameter.from_json_like"]], "is_file (matflow.parameter attribute)": [[59, "matflow.Parameter.is_file"]], "sub_parameters (matflow.parameter attribute)": [[59, "matflow.Parameter.sub_parameters"]], "to_dict() (matflow.parameter method)": [[59, "matflow.Parameter.to_dict"]], "to_json_like() (matflow.parameter method)": [[59, "matflow.Parameter.to_json_like"]], "typ (matflow.parameter attribute)": [[59, "matflow.Parameter.typ"]], "url_slug (matflow.parameter property)": [[59, "matflow.Parameter.url_slug"]], "parameterpath (class in matflow)": [[60, "matflow.ParameterPath"]], "from_json_like() (matflow.parameterpath class method)": [[60, "matflow.ParameterPath.from_json_like"]], "path (matflow.parameterpath attribute)": [[60, "matflow.ParameterPath.path"]], "task (matflow.parameterpath attribute)": [[60, "matflow.ParameterPath.task"]], "to_dict() (matflow.parameterpath method)": [[60, "matflow.ParameterPath.to_dict"]], "to_json_like() (matflow.parameterpath method)": [[60, "matflow.ParameterPath.to_json_like"]], "explicit (matflow.parameterpropagationmode attribute)": [[61, "matflow.ParameterPropagationMode.EXPLICIT"]], "implicit (matflow.parameterpropagationmode attribute)": [[61, "matflow.ParameterPropagationMode.IMPLICIT"]], "never (matflow.parameterpropagationmode attribute)": [[61, "matflow.ParameterPropagationMode.NEVER"]], "parameterpropagationmode (class in matflow)": [[61, "matflow.ParameterPropagationMode"]], "parametervalue (class in matflow)": [[62, "matflow.ParameterValue"]], "dump_element_group_to_hdf5_group() (matflow.parametervalue class method)": [[62, "matflow.ParameterValue.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.parametervalue method)": [[62, "matflow.ParameterValue.dump_to_HDF5_group"]], "prepare_json_dump() (matflow.parametervalue method)": [[62, "matflow.ParameterValue.prepare_JSON_dump"]], "save_from_hdf5_group() (matflow.parametervalue class method)": [[62, "matflow.ParameterValue.save_from_HDF5_group"]], "save_from_json() (matflow.parametervalue class method)": [[62, "matflow.ParameterValue.save_from_JSON"]], "to_dict() (matflow.parametervalue method)": [[62, "matflow.ParameterValue.to_dict"]], "parameters (class in matflow)": [[63, "matflow.Parameters"]], "default (matflow.parameters attribute)": [[63, "matflow.Parameters.default"]], "path (matflow.parameters attribute)": [[63, "matflow.Parameters.path"]], "raise_on_missing (matflow.parameters attribute)": [[63, "matflow.Parameters.raise_on_missing"]], "raise_on_unset (matflow.parameters attribute)": [[63, "matflow.Parameters.raise_on_unset"]], "return_element_parameters (matflow.parameters attribute)": [[63, "matflow.Parameters.return_element_parameters"]], "task (matflow.parameters attribute)": [[63, "matflow.Parameters.task"]], "parameterslist (class in matflow)": [[64, "matflow.ParametersList"]], "add_object() (matflow.parameterslist method)": [[64, "matflow.ParametersList.add_object"]], "add_objects() (matflow.parameterslist method)": [[64, "matflow.ParametersList.add_objects"]], "from_json_like() (matflow.parameterslist class method)": [[64, "matflow.ParametersList.from_json_like"]], "get() (matflow.parameterslist method)": [[64, "matflow.ParametersList.get"]], "get_all() (matflow.parameterslist method)": [[64, "matflow.ParametersList.get_all"]], "list_attrs() (matflow.parameterslist method)": [[64, "matflow.ParametersList.list_attrs"]], "to_dict() (matflow.parameterslist method)": [[64, "matflow.ParametersList.to_dict"]], "to_json_like() (matflow.parameterslist method)": [[64, "matflow.ParametersList.to_json_like"]], "default_array_item_var (matflow.queuedscheduler attribute)": [[65, "matflow.QueuedScheduler.DEFAULT_ARRAY_ITEM_VAR"]], "default_array_switch (matflow.queuedscheduler attribute)": [[65, "matflow.QueuedScheduler.DEFAULT_ARRAY_SWITCH"]], "default_del_cmd (matflow.queuedscheduler attribute)": [[65, "matflow.QueuedScheduler.DEFAULT_DEL_CMD"]], "default_js_cmd (matflow.queuedscheduler attribute)": [[65, "matflow.QueuedScheduler.DEFAULT_JS_CMD"]], "default_login_nodes_cmd (matflow.queuedscheduler attribute)": [[65, "matflow.QueuedScheduler.DEFAULT_LOGIN_NODES_CMD"]], "default_login_node_match (matflow.queuedscheduler attribute)": [[65, "matflow.QueuedScheduler.DEFAULT_LOGIN_NODE_MATCH"]], "default_show_cmd (matflow.queuedscheduler attribute)": [[65, "matflow.QueuedScheduler.DEFAULT_SHOW_CMD"]], "default_submit_cmd (matflow.queuedscheduler attribute)": [[65, "matflow.QueuedScheduler.DEFAULT_SUBMIT_CMD"]], "queuedscheduler (class in matflow)": [[65, "matflow.QueuedScheduler"]], "cancel_jobs() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.cancel_jobs"]], "format_directives() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.format_directives"]], "format_switch() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.format_switch"]], "get_job_state_info() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.get_job_state_info"]], "get_std_out_err_filename() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.get_std_out_err_filename"]], "get_stderr_filename() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.get_stderr_filename"]], "get_stdout_filename() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.get_stdout_filename"]], "get_submit_command() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.get_submit_command"]], "get_version_info() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.get_version_info"]], "is_jobscript_active() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.is_jobscript_active"]], "is_num_cores_supported() (matflow.queuedscheduler static method)": [[65, "matflow.QueuedScheduler.is_num_cores_supported"]], "parse_submission_output() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.parse_submission_output"]], "process_resources() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.process_resources"]], "unique_properties (matflow.queuedscheduler property)": [[65, "matflow.QueuedScheduler.unique_properties"]], "wait_for_jobscripts() (matflow.queuedscheduler method)": [[65, "matflow.QueuedScheduler.wait_for_jobscripts"]], "resourcelist (class in matflow)": [[66, "matflow.ResourceList"]], "add_object() (matflow.resourcelist method)": [[66, "matflow.ResourceList.add_object"]], "element_set (matflow.resourcelist property)": [[66, "matflow.ResourceList.element_set"]], "from_json_like() (matflow.resourcelist class method)": [[66, "matflow.ResourceList.from_json_like"]], "get() (matflow.resourcelist method)": [[66, "matflow.ResourceList.get"]], "get_all() (matflow.resourcelist method)": [[66, "matflow.ResourceList.get_all"]], "get_scopes() (matflow.resourcelist method)": [[66, "matflow.ResourceList.get_scopes"]], "merge_one() (matflow.resourcelist method)": [[66, "matflow.ResourceList.merge_one"]], "merge_other() (matflow.resourcelist method)": [[66, "matflow.ResourceList.merge_other"]], "normalise() (matflow.resourcelist class method)": [[66, "matflow.ResourceList.normalise"]], "to_dict() (matflow.resourcelist method)": [[66, "matflow.ResourceList.to_dict"]], "to_json_like() (matflow.resourcelist method)": [[66, "matflow.ResourceList.to_json_like"]], "workflow_template (matflow.resourcelist property)": [[66, "matflow.ResourceList.workflow_template"]], "allowed_parameters (matflow.resourcespec attribute)": [[67, "matflow.ResourceSpec.ALLOWED_PARAMETERS"]], "resourcespec (class in matflow)": [[67, "matflow.ResourceSpec"]], "sge_parallel_env (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.SGE_parallel_env"]], "slurm_num_cpus_per_task (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.SLURM_num_cpus_per_task"]], "slurm_num_nodes (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.SLURM_num_nodes"]], "slurm_num_tasks (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.SLURM_num_tasks"]], "slurm_num_tasks_per_node (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.SLURM_num_tasks_per_node"]], "slurm_partition (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.SLURM_partition"]], "combine_jobscript_std (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.combine_jobscript_std"]], "combine_scripts (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.combine_scripts"]], "copy_non_persistent() (matflow.resourcespec method)": [[67, "matflow.ResourceSpec.copy_non_persistent"]], "element_set (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.element_set"]], "environments (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.environments"]], "from_json_like() (matflow.resourcespec class method)": [[67, "matflow.ResourceSpec.from_json_like"]], "make_persistent() (matflow.resourcespec method)": [[67, "matflow.ResourceSpec.make_persistent"]], "max_array_items (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.max_array_items"]], "normalised_path (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.normalised_path"]], "normalised_resources_path (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.normalised_resources_path"]], "num_cores (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.num_cores"]], "num_cores_per_node (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.num_cores_per_node"]], "num_nodes (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.num_nodes"]], "num_threads (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.num_threads"]], "os_name (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.os_name"]], "parallel_mode (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.parallel_mode"]], "resources_id (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.resources_id"]], "scheduler (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.scheduler"]], "scheduler_args (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.scheduler_args"]], "scope (matflow.resourcespec attribute)": [[67, "matflow.ResourceSpec.scope"]], "scratch (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.scratch"]], "shell (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.shell"]], "shell_args (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.shell_args"]], "skip_downstream_on_failure (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.skip_downstream_on_failure"]], "time_limit (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.time_limit"]], "to_dict() (matflow.resourcespec method)": [[67, "matflow.ResourceSpec.to_dict"]], "to_json_like() (matflow.resourcespec method)": [[67, "matflow.ResourceSpec.to_json_like"]], "use_job_array (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.use_job_array"]], "workflow (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.workflow"]], "workflow_template (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.workflow_template"]], "write_app_logs (matflow.resourcespec property)": [[67, "matflow.ResourceSpec.write_app_logs"]], "rule (class in matflow)": [[68, "matflow.Rule"]], "cast (matflow.rule attribute)": [[68, "matflow.Rule.cast"]], "check_exists (matflow.rule attribute)": [[68, "matflow.Rule.check_exists"]], "check_missing (matflow.rule attribute)": [[68, "matflow.Rule.check_missing"]], "condition (matflow.rule attribute)": [[68, "matflow.Rule.condition"]], "doc (matflow.rule attribute)": [[68, "matflow.Rule.doc"]], "from_json_like() (matflow.rule class method)": [[68, "matflow.Rule.from_json_like"]], "path (matflow.rule attribute)": [[68, "matflow.Rule.path"]], "test() (matflow.rule method)": [[68, "matflow.Rule.test"]], "to_dict() (matflow.rule method)": [[68, "matflow.Rule.to_dict"]], "to_json_like() (matflow.rule method)": [[68, "matflow.Rule.to_json_like"]], "rundirappfiles (class in matflow)": [[69, "matflow.RunDirAppFiles"]], "get_commands_file_name() (matflow.rundirappfiles class method)": [[69, "matflow.RunDirAppFiles.get_commands_file_name"]], "get_run_file_prefix() (matflow.rundirappfiles static method)": [[69, "matflow.RunDirAppFiles.get_run_file_prefix"]], "get_run_param_dump_file_prefix() (matflow.rundirappfiles class method)": [[69, "matflow.RunDirAppFiles.get_run_param_dump_file_prefix"]], "get_run_param_load_file_prefix() (matflow.rundirappfiles class method)": [[69, "matflow.RunDirAppFiles.get_run_param_load_file_prefix"]], "take_snapshot() (matflow.rundirappfiles class method)": [[69, "matflow.RunDirAppFiles.take_snapshot"]], "default_array_item_var (matflow.sgeposix attribute)": [[70, "matflow.SGEPosix.DEFAULT_ARRAY_ITEM_VAR"]], "default_array_switch (matflow.sgeposix attribute)": [[70, "matflow.SGEPosix.DEFAULT_ARRAY_SWITCH"]], "default_cwd_switch (matflow.sgeposix attribute)": [[70, "matflow.SGEPosix.DEFAULT_CWD_SWITCH"]], "default_del_cmd (matflow.sgeposix attribute)": [[70, "matflow.SGEPosix.DEFAULT_DEL_CMD"]], "default_js_cmd (matflow.sgeposix attribute)": [[70, "matflow.SGEPosix.DEFAULT_JS_CMD"]], "default_login_nodes_cmd (matflow.sgeposix attribute)": [[70, "matflow.SGEPosix.DEFAULT_LOGIN_NODES_CMD"]], "default_login_node_match (matflow.sgeposix attribute)": [[70, "matflow.SGEPosix.DEFAULT_LOGIN_NODE_MATCH"]], "default_show_cmd (matflow.sgeposix attribute)": [[70, "matflow.SGEPosix.DEFAULT_SHOW_CMD"]], "default_submit_cmd (matflow.sgeposix attribute)": [[70, "matflow.SGEPosix.DEFAULT_SUBMIT_CMD"]], "sgeposix (class in matflow)": [[70, "matflow.SGEPosix"]], "cancel_jobs() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.cancel_jobs"]], "format_directives() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.format_directives"]], "format_switch() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.format_switch"]], "get_job_state_info() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.get_job_state_info"]], "get_job_statuses() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.get_job_statuses"]], "get_login_nodes() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.get_login_nodes"]], "get_std_out_err_filename() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.get_std_out_err_filename"]], "get_stderr_filename() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.get_stderr_filename"]], "get_stdout_filename() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.get_stdout_filename"]], "get_submit_command() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.get_submit_command"]], "get_version_info() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.get_version_info"]], "is_jobscript_active() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.sgeposix static method)": [[70, "matflow.SGEPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.parse_submission_output"]], "process_resources() (matflow.sgeposix class method)": [[70, "matflow.SGEPosix.process_resources"]], "state_lookup (matflow.sgeposix attribute)": [[70, "matflow.SGEPosix.state_lookup"]], "unique_properties (matflow.sgeposix property)": [[70, "matflow.SGEPosix.unique_properties"]], "wait_for_jobscripts() (matflow.sgeposix method)": [[70, "matflow.SGEPosix.wait_for_jobscripts"]], "schemainput (class in matflow)": [[71, "matflow.SchemaInput"]], "all_labelled_types (matflow.schemainput property)": [[71, "matflow.SchemaInput.all_labelled_types"]], "default_value (matflow.schemainput property)": [[71, "matflow.SchemaInput.default_value"]], "from_json_like() (matflow.schemainput class method)": [[71, "matflow.SchemaInput.from_json_like"]], "input_or_output (matflow.schemainput property)": [[71, "matflow.SchemaInput.input_or_output"]], "labelled_info() (matflow.schemainput method)": [[71, "matflow.SchemaInput.labelled_info"]], "labels (matflow.schemainput attribute)": [[71, "matflow.SchemaInput.labels"]], "multiple (matflow.schemainput attribute)": [[71, "matflow.SchemaInput.multiple"]], "parameter (matflow.schemainput attribute)": [[71, "matflow.SchemaInput.parameter"]], "single_label (matflow.schemainput property)": [[71, "matflow.SchemaInput.single_label"]], "single_labelled_data (matflow.schemainput property)": [[71, "matflow.SchemaInput.single_labelled_data"]], "single_labelled_type (matflow.schemainput property)": [[71, "matflow.SchemaInput.single_labelled_type"]], "task_schema (matflow.schemainput property)": [[71, "matflow.SchemaInput.task_schema"]], "to_dict() (matflow.schemainput method)": [[71, "matflow.SchemaInput.to_dict"]], "to_json_like() (matflow.schemainput method)": [[71, "matflow.SchemaInput.to_json_like"]], "typ (matflow.schemainput property)": [[71, "matflow.SchemaInput.typ"]], "schemaoutput (class in matflow)": [[72, "matflow.SchemaOutput"]], "from_json_like() (matflow.schemaoutput class method)": [[72, "matflow.SchemaOutput.from_json_like"]], "input_or_output (matflow.schemaoutput property)": [[72, "matflow.SchemaOutput.input_or_output"]], "parameter (matflow.schemaoutput attribute)": [[72, "matflow.SchemaOutput.parameter"]], "propagation_mode (matflow.schemaoutput attribute)": [[72, "matflow.SchemaOutput.propagation_mode"]], "to_dict() (matflow.schemaoutput method)": [[72, "matflow.SchemaOutput.to_dict"]], "to_json_like() (matflow.schemaoutput method)": [[72, "matflow.SchemaOutput.to_json_like"]], "typ (matflow.schemaoutput property)": [[72, "matflow.SchemaOutput.typ"]], "schemaparameter (class in matflow)": [[73, "matflow.SchemaParameter"]], "from_json_like() (matflow.schemaparameter class method)": [[73, "matflow.SchemaParameter.from_json_like"]], "to_dict() (matflow.schemaparameter method)": [[73, "matflow.SchemaParameter.to_dict"]], "to_json_like() (matflow.schemaparameter method)": [[73, "matflow.SchemaParameter.to_json_like"]], "typ (matflow.schemaparameter property)": [[73, "matflow.SchemaParameter.typ"]], "default_array_item_var (matflow.slurmposix attribute)": [[74, "matflow.SlurmPosix.DEFAULT_ARRAY_ITEM_VAR"]], "default_array_switch (matflow.slurmposix attribute)": [[74, "matflow.SlurmPosix.DEFAULT_ARRAY_SWITCH"]], "default_del_cmd (matflow.slurmposix attribute)": [[74, "matflow.SlurmPosix.DEFAULT_DEL_CMD"]], "default_js_cmd (matflow.slurmposix attribute)": [[74, "matflow.SlurmPosix.DEFAULT_JS_CMD"]], "default_login_nodes_cmd (matflow.slurmposix attribute)": [[74, "matflow.SlurmPosix.DEFAULT_LOGIN_NODES_CMD"]], "default_login_node_match (matflow.slurmposix attribute)": [[74, "matflow.SlurmPosix.DEFAULT_LOGIN_NODE_MATCH"]], "default_show_cmd (matflow.slurmposix attribute)": [[74, "matflow.SlurmPosix.DEFAULT_SHOW_CMD"]], "default_submit_cmd (matflow.slurmposix attribute)": [[74, "matflow.SlurmPosix.DEFAULT_SUBMIT_CMD"]], "inter_state_query_delay (matflow.slurmposix attribute)": [[74, "matflow.SlurmPosix.INTER_STATE_QUERY_DELAY"]], "num_state_query_tries (matflow.slurmposix attribute)": [[74, "matflow.SlurmPosix.NUM_STATE_QUERY_TRIES"]], "slurmposix (class in matflow)": [[74, "matflow.SlurmPosix"]], "cancel_jobs() (matflow.slurmposix method)": [[74, "matflow.SlurmPosix.cancel_jobs"]], "format_directives() (matflow.slurmposix method)": [[74, "matflow.SlurmPosix.format_directives"]], "format_switch() (matflow.slurmposix method)": [[74, "matflow.SlurmPosix.format_switch"]], "get_job_state_info() (matflow.slurmposix method)": [[74, "matflow.SlurmPosix.get_job_state_info"]], "get_std_out_err_filename() (matflow.slurmposix method)": [[74, "matflow.SlurmPosix.get_std_out_err_filename"]], "get_stderr_filename() (matflow.slurmposix method)": [[74, "matflow.SlurmPosix.get_stderr_filename"]], "get_stdout_filename() (matflow.slurmposix method)": [[74, "matflow.SlurmPosix.get_stdout_filename"]], "get_submit_command() (matflow.slurmposix method)": [[74, "matflow.SlurmPosix.get_submit_command"]], "get_version_info() (matflow.slurmposix method)": [[74, "matflow.SlurmPosix.get_version_info"]], "is_jobscript_active() (matflow.slurmposix method)": [[74, "matflow.SlurmPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.slurmposix static method)": [[74, "matflow.SlurmPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.slurmposix method)": [[74, "matflow.SlurmPosix.parse_submission_output"]], "process_resources() (matflow.slurmposix class method)": [[74, "matflow.SlurmPosix.process_resources"]], "state_lookup (matflow.slurmposix attribute)": [[74, "matflow.SlurmPosix.state_lookup"]], "unique_properties (matflow.slurmposix property)": [[74, "matflow.SlurmPosix.unique_properties"]], "wait_for_jobscripts() (matflow.slurmposix method)": [[74, "matflow.SlurmPosix.wait_for_jobscripts"]], "subparameter (class in matflow)": [[75, "matflow.SubParameter"]], "address (matflow.subparameter attribute)": [[75, "matflow.SubParameter.address"]], "parameter (matflow.subparameter attribute)": [[75, "matflow.SubParameter.parameter"]], "app_std_dir_name (matflow.submission attribute)": [[76, "matflow.Submission.APP_STD_DIR_NAME"]], "commands_dir_name (matflow.submission attribute)": [[76, "matflow.Submission.COMMANDS_DIR_NAME"]], "ears_by_elements (matflow.submission property)": [[76, "matflow.Submission.EARs_by_elements"]], "js_dir_name (matflow.submission attribute)": [[76, "matflow.Submission.JS_DIR_NAME"]], "js_funcs_dir_name (matflow.submission attribute)": [[76, "matflow.Submission.JS_FUNCS_DIR_NAME"]], "js_run_ids_dir_name (matflow.submission attribute)": [[76, "matflow.Submission.JS_RUN_IDS_DIR_NAME"]], "js_script_indices_dir_name (matflow.submission attribute)": [[76, "matflow.Submission.JS_SCRIPT_INDICES_DIR_NAME"]], "js_std_dir_name (matflow.submission attribute)": [[76, "matflow.Submission.JS_STD_DIR_NAME"]], "js_win_pids_dir_name (matflow.submission attribute)": [[76, "matflow.Submission.JS_WIN_PIDS_DIR_NAME"]], "js_parallelism (matflow.submission property)": [[76, "matflow.Submission.JS_parallelism"]], "log_dir_name (matflow.submission attribute)": [[76, "matflow.Submission.LOG_DIR_NAME"]], "scripts_dir_name (matflow.submission attribute)": [[76, "matflow.Submission.SCRIPTS_DIR_NAME"]], "submission (class in matflow)": [[76, "matflow.Submission"]], "tmp_dir_name (matflow.submission attribute)": [[76, "matflow.Submission.TMP_DIR_NAME"]], "workflow_app_alias (matflow.submission attribute)": [[76, "matflow.Submission.WORKFLOW_APP_ALIAS"]], "all_ear_ids (matflow.submission property)": [[76, "matflow.Submission.all_EAR_IDs"]], "all_ears (matflow.submission property)": [[76, "matflow.Submission.all_EARs"]], "all_ears_ids_by_jobscript (matflow.submission property)": [[76, "matflow.Submission.all_EARs_IDs_by_jobscript"]], "all_ears_by_jobscript (matflow.submission property)": [[76, "matflow.Submission.all_EARs_by_jobscript"]], "app_log_path (matflow.submission property)": [[76, "matflow.Submission.app_log_path"]], "app_std_path (matflow.submission property)": [[76, "matflow.Submission.app_std_path"]], "at_submit_metadata (matflow.submission property)": [[76, "matflow.Submission.at_submit_metadata"]], "cancel() (matflow.submission method)": [[76, "matflow.Submission.cancel"]], "commands_path (matflow.submission property)": [[76, "matflow.Submission.commands_path"]], "end_time (matflow.submission property)": [[76, "matflow.Submission.end_time"]], "environments (matflow.submission property)": [[76, "matflow.Submission.environments"]], "from_json_like() (matflow.submission class method)": [[76, "matflow.Submission.from_json_like"]], "get_active_jobscripts() (matflow.submission method)": [[76, "matflow.Submission.get_active_jobscripts"]], "get_app_log_file_name() (matflow.submission static method)": [[76, "matflow.Submission.get_app_log_file_name"]], "get_app_log_file_path() (matflow.submission class method)": [[76, "matflow.Submission.get_app_log_file_path"]], "get_app_log_path() (matflow.submission class method)": [[76, "matflow.Submission.get_app_log_path"]], "get_app_std_path() (matflow.submission class method)": [[76, "matflow.Submission.get_app_std_path"]], "get_commands_path() (matflow.submission class method)": [[76, "matflow.Submission.get_commands_path"]], "get_end_time() (matflow.submission method)": [[76, "matflow.Submission.get_end_time"]], "get_jobscript_functions_name() (matflow.submission method)": [[76, "matflow.Submission.get_jobscript_functions_name"]], "get_jobscript_functions_path() (matflow.submission method)": [[76, "matflow.Submission.get_jobscript_functions_path"]], "get_js_funcs_path() (matflow.submission class method)": [[76, "matflow.Submission.get_js_funcs_path"]], "get_js_path() (matflow.submission class method)": [[76, "matflow.Submission.get_js_path"]], "get_js_run_ids_path() (matflow.submission class method)": [[76, "matflow.Submission.get_js_run_ids_path"]], "get_js_script_indices_path() (matflow.submission class method)": [[76, "matflow.Submission.get_js_script_indices_path"]], "get_js_std_path() (matflow.submission class method)": [[76, "matflow.Submission.get_js_std_path"]], "get_js_win_pids_path() (matflow.submission class method)": [[76, "matflow.Submission.get_js_win_pids_path"]], "get_path() (matflow.submission class method)": [[76, "matflow.Submission.get_path"]], "get_process_ids() (matflow.submission method)": [[76, "matflow.Submission.get_process_IDs"]], "get_scheduler_job_ids() (matflow.submission method)": [[76, "matflow.Submission.get_scheduler_job_IDs"]], "get_scripts_path() (matflow.submission class method)": [[76, "matflow.Submission.get_scripts_path"]], "get_start_time() (matflow.submission method)": [[76, "matflow.Submission.get_start_time"]], "get_tmp_path() (matflow.submission class method)": [[76, "matflow.Submission.get_tmp_path"]], "get_unique_schedulers() (matflow.submission method)": [[76, "matflow.Submission.get_unique_schedulers"]], "get_unique_schedulers_of_jobscripts() (matflow.submission static method)": [[76, "matflow.Submission.get_unique_schedulers_of_jobscripts"]], "get_unique_shells() (matflow.submission method)": [[76, "matflow.Submission.get_unique_shells"]], "index (matflow.submission property)": [[76, "matflow.Submission.index"]], "is_scheduled (matflow.submission property)": [[76, "matflow.Submission.is_scheduled"]], "jobscript_indices (matflow.submission property)": [[76, "matflow.Submission.jobscript_indices"]], "jobscripts (matflow.submission property)": [[76, "matflow.Submission.jobscripts"]], "js_funcs_path (matflow.submission property)": [[76, "matflow.Submission.js_funcs_path"]], "js_path (matflow.submission property)": [[76, "matflow.Submission.js_path"]], "js_run_ids_path (matflow.submission property)": [[76, "matflow.Submission.js_run_ids_path"]], "js_script_indices_path (matflow.submission property)": [[76, "matflow.Submission.js_script_indices_path"]], "js_std_path (matflow.submission property)": [[76, "matflow.Submission.js_std_path"]], "js_win_pids_path (matflow.submission property)": [[76, "matflow.Submission.js_win_pids_path"]], "list_jobscripts() (matflow.submission method)": [[76, "matflow.Submission.list_jobscripts"]], "list_task_jobscripts() (matflow.submission method)": [[76, "matflow.Submission.list_task_jobscripts"]], "needs_app_log_dir (matflow.submission property)": [[76, "matflow.Submission.needs_app_log_dir"]], "needs_script_indices_dir (matflow.submission property)": [[76, "matflow.Submission.needs_script_indices_dir"]], "needs_submit (matflow.submission property)": [[76, "matflow.Submission.needs_submit"]], "needs_win_pids_dir (matflow.submission property)": [[76, "matflow.Submission.needs_win_pids_dir"]], "outstanding_jobscripts (matflow.submission property)": [[76, "matflow.Submission.outstanding_jobscripts"]], "path (matflow.submission property)": [[76, "matflow.Submission.path"]], "scripts_path (matflow.submission property)": [[76, "matflow.Submission.scripts_path"]], "start_time (matflow.submission property)": [[76, "matflow.Submission.start_time"]], "status (matflow.submission property)": [[76, "matflow.Submission.status"]], "submission_parts (matflow.submission property)": [[76, "matflow.Submission.submission_parts"]], "submit() (matflow.submission method)": [[76, "matflow.Submission.submit"]], "submitted_jobscripts (matflow.submission property)": [[76, "matflow.Submission.submitted_jobscripts"]], "tmp_path (matflow.submission property)": [[76, "matflow.Submission.tmp_path"]], "to_dict() (matflow.submission method)": [[76, "matflow.Submission.to_dict"]], "to_json_like() (matflow.submission method)": [[76, "matflow.Submission.to_json_like"]], "workflow (matflow.submission property)": [[76, "matflow.Submission.workflow"]], "task (class in matflow)": [[77, "matflow.Task"]], "add_group() (matflow.task method)": [[77, "matflow.Task.add_group"]], "all_schema_actions() (matflow.task method)": [[77, "matflow.Task.all_schema_actions"]], "all_schema_input_normalised_paths (matflow.task property)": [[77, "matflow.Task.all_schema_input_normalised_paths"]], "all_schema_input_types (matflow.task property)": [[77, "matflow.Task.all_schema_input_types"]], "all_schema_inputs (matflow.task property)": [[77, "matflow.Task.all_schema_inputs"]], "all_schema_output_types (matflow.task property)": [[77, "matflow.Task.all_schema_output_types"]], "all_schema_outputs (matflow.task property)": [[77, "matflow.Task.all_schema_outputs"]], "all_sourced_normalised_paths (matflow.task property)": [[77, "matflow.Task.all_sourced_normalised_paths"]], "defined_input_types (matflow.task property)": [[77, "matflow.Task.defined_input_types"]], "dir_name (matflow.task property)": [[77, "matflow.Task.dir_name"]], "element_sets (matflow.task property)": [[77, "matflow.Task.element_sets"]], "from_json_like() (matflow.task class method)": [[77, "matflow.Task.from_json_like"]], "get_available_task_input_sources() (matflow.task method)": [[77, "matflow.Task.get_available_task_input_sources"]], "get_input_statuses() (matflow.task method)": [[77, "matflow.Task.get_input_statuses"]], "get_param_provided_element_sets() (matflow.task method)": [[77, "matflow.Task.get_param_provided_element_sets"]], "get_schema_action() (matflow.task method)": [[77, "matflow.Task.get_schema_action"]], "get_task_unique_names() (matflow.task static method)": [[77, "matflow.Task.get_task_unique_names"]], "index (matflow.task property)": [[77, "matflow.Task.index"]], "insert_id (matflow.task property)": [[77, "matflow.Task.insert_ID"]], "is_input_type_required() (matflow.task method)": [[77, "matflow.Task.is_input_type_required"]], "merge_envs (matflow.task attribute)": [[77, "matflow.Task.merge_envs"]], "name (matflow.task property)": [[77, "matflow.Task.name"]], "non_universal_input_types (matflow.task property)": [[77, "matflow.Task.non_universal_input_types"]], "num_all_schema_actions (matflow.task property)": [[77, "matflow.Task.num_all_schema_actions"]], "num_element_sets (matflow.task property)": [[77, "matflow.Task.num_element_sets"]], "objective (matflow.task property)": [[77, "matflow.Task.objective"]], "output_labels (matflow.task property)": [[77, "matflow.Task.output_labels"]], "prepare_element_resolution() (matflow.task method)": [[77, "matflow.Task.prepare_element_resolution"]], "provides_parameters() (matflow.task method)": [[77, "matflow.Task.provides_parameters"]], "schema (matflow.task property)": [[77, "matflow.Task.schema"]], "schemas (matflow.task property)": [[77, "matflow.Task.schemas"]], "set_sequence_parameters() (matflow.task method)": [[77, "matflow.Task.set_sequence_parameters"]], "to_dict() (matflow.task method)": [[77, "matflow.Task.to_dict"]], "to_json_like() (matflow.task method)": [[77, "matflow.Task.to_json_like"]], "to_persistent() (matflow.task method)": [[77, "matflow.Task.to_persistent"]], "undefined_input_types (matflow.task property)": [[77, "matflow.Task.undefined_input_types"]], "undefined_inputs (matflow.task property)": [[77, "matflow.Task.undefined_inputs"]], "universal_input_types (matflow.task property)": [[77, "matflow.Task.universal_input_types"]], "workflow_template (matflow.task attribute)": [[77, "matflow.Task.workflow_template"]], "taskinputparameters (class in matflow)": [[78, "matflow.TaskInputParameters"]], "task (matflow.taskinputparameters attribute)": [[78, "matflow.TaskInputParameters.task"]], "tasklist (class in matflow)": [[79, "matflow.TaskList"]], "add_object() (matflow.tasklist method)": [[79, "matflow.TaskList.add_object"]], "add_objects() (matflow.tasklist method)": [[79, "matflow.TaskList.add_objects"]], "from_json_like() (matflow.tasklist class method)": [[79, "matflow.TaskList.from_json_like"]], "get() (matflow.tasklist method)": [[79, "matflow.TaskList.get"]], "get_all() (matflow.tasklist method)": [[79, "matflow.TaskList.get_all"]], "list_attrs() (matflow.tasklist method)": [[79, "matflow.TaskList.list_attrs"]], "to_dict() (matflow.tasklist method)": [[79, "matflow.TaskList.to_dict"]], "to_json_like() (matflow.tasklist method)": [[79, "matflow.TaskList.to_json_like"]], "taskobjective (class in matflow)": [[80, "matflow.TaskObjective"]], "from_json_like() (matflow.taskobjective class method)": [[80, "matflow.TaskObjective.from_json_like"]], "name (matflow.taskobjective attribute)": [[80, "matflow.TaskObjective.name"]], "to_dict() (matflow.taskobjective method)": [[80, "matflow.TaskObjective.to_dict"]], "to_json_like() (matflow.taskobjective method)": [[80, "matflow.TaskObjective.to_json_like"]], "taskoutputparameters (class in matflow)": [[81, "matflow.TaskOutputParameters"]], "task (matflow.taskoutputparameters attribute)": [[81, "matflow.TaskOutputParameters.task"]], "taskschema (class in matflow)": [[82, "matflow.TaskSchema"]], "actions (matflow.taskschema attribute)": [[82, "matflow.TaskSchema.actions"]], "basic_info() (matflow.taskschema method)": [[82, "matflow.TaskSchema.basic_info"]], "doc (matflow.taskschema attribute)": [[82, "matflow.TaskSchema.doc"]], "environment_presets (matflow.taskschema attribute)": [[82, "matflow.TaskSchema.environment_presets"]], "from_json_like() (matflow.taskschema class method)": [[82, "matflow.TaskSchema.from_json_like"]], "get_by_key() (matflow.taskschema class method)": [[82, "matflow.TaskSchema.get_by_key"]], "get_info_html() (matflow.taskschema method)": [[82, "matflow.TaskSchema.get_info_html"]], "get_key() (matflow.taskschema method)": [[82, "matflow.TaskSchema.get_key"]], "get_parameter_dependence() (matflow.taskschema method)": [[82, "matflow.TaskSchema.get_parameter_dependence"]], "ignore_invalid_actions() (matflow.taskschema class method)": [[82, "matflow.TaskSchema.ignore_invalid_actions"]], "implementation (matflow.taskschema attribute)": [[82, "matflow.TaskSchema.implementation"]], "info() (matflow.taskschema method)": [[82, "matflow.TaskSchema.info"]], "input_types (matflow.taskschema property)": [[82, "matflow.TaskSchema.input_types"]], "inputs (matflow.taskschema attribute)": [[82, "matflow.TaskSchema.inputs"]], "make_persistent() (matflow.taskschema method)": [[82, "matflow.TaskSchema.make_persistent"]], "method (matflow.taskschema attribute)": [[82, "matflow.TaskSchema.method"]], "multi_input_types (matflow.taskschema property)": [[82, "matflow.TaskSchema.multi_input_types"]], "name (matflow.taskschema property)": [[82, "matflow.TaskSchema.name"]], "objective (matflow.taskschema attribute)": [[82, "matflow.TaskSchema.objective"]], "output_types (matflow.taskschema property)": [[82, "matflow.TaskSchema.output_types"]], "outputs (matflow.taskschema attribute)": [[82, "matflow.TaskSchema.outputs"]], "parameter_class_modules (matflow.taskschema attribute)": [[82, "matflow.TaskSchema.parameter_class_modules"]], "provides_parameters (matflow.taskschema property)": [[82, "matflow.TaskSchema.provides_parameters"]], "task_template (matflow.taskschema property)": [[82, "matflow.TaskSchema.task_template"]], "to_dict() (matflow.taskschema method)": [[82, "matflow.TaskSchema.to_dict"]], "to_json_like() (matflow.taskschema method)": [[82, "matflow.TaskSchema.to_json_like"]], "version (matflow.taskschema attribute)": [[82, "matflow.TaskSchema.version"]], "web_doc (matflow.taskschema attribute)": [[82, "matflow.TaskSchema.web_doc"]], "taskschemaslist (class in matflow)": [[83, "matflow.TaskSchemasList"]], "add_object() (matflow.taskschemaslist method)": [[83, "matflow.TaskSchemasList.add_object"]], "add_objects() (matflow.taskschemaslist method)": [[83, "matflow.TaskSchemasList.add_objects"]], "from_json_like() (matflow.taskschemaslist class method)": [[83, "matflow.TaskSchemasList.from_json_like"]], "get() (matflow.taskschemaslist method)": [[83, "matflow.TaskSchemasList.get"]], "get_all() (matflow.taskschemaslist method)": [[83, "matflow.TaskSchemasList.get_all"]], "list_attrs() (matflow.taskschemaslist method)": [[83, "matflow.TaskSchemasList.list_attrs"]], "to_dict() (matflow.taskschemaslist method)": [[83, "matflow.TaskSchemasList.to_dict"]], "to_json_like() (matflow.taskschemaslist method)": [[83, "matflow.TaskSchemasList.to_json_like"]], "any (matflow.tasksourcetype attribute)": [[84, "matflow.TaskSourceType.ANY"]], "input (matflow.tasksourcetype attribute)": [[84, "matflow.TaskSourceType.INPUT"]], "output (matflow.tasksourcetype attribute)": [[84, "matflow.TaskSourceType.OUTPUT"]], "tasksourcetype (class in matflow)": [[84, "matflow.TaskSourceType"]], "names() (matflow.tasksourcetype class method)": [[84, "matflow.TaskSourceType.names"]], "tasktemplatelist (class in matflow)": [[85, "matflow.TaskTemplateList"]], "add_object() (matflow.tasktemplatelist method)": [[85, "matflow.TaskTemplateList.add_object"]], "add_objects() (matflow.tasktemplatelist method)": [[85, "matflow.TaskTemplateList.add_objects"]], "from_json_like() (matflow.tasktemplatelist class method)": [[85, "matflow.TaskTemplateList.from_json_like"]], "get() (matflow.tasktemplatelist method)": [[85, "matflow.TaskTemplateList.get"]], "get_all() (matflow.tasktemplatelist method)": [[85, "matflow.TaskTemplateList.get_all"]], "list_attrs() (matflow.tasktemplatelist method)": [[85, "matflow.TaskTemplateList.list_attrs"]], "to_dict() (matflow.tasktemplatelist method)": [[85, "matflow.TaskTemplateList.to_dict"]], "to_json_like() (matflow.tasktemplatelist method)": [[85, "matflow.TaskTemplateList.to_json_like"]], "valueperturbation (class in matflow)": [[86, "matflow.ValuePerturbation"]], "additive_factor (matflow.valueperturbation attribute)": [[86, "matflow.ValuePerturbation.additive_factor"]], "from_json_like() (matflow.valueperturbation class method)": [[86, "matflow.ValuePerturbation.from_json_like"]], "from_spec() (matflow.valueperturbation class method)": [[86, "matflow.ValuePerturbation.from_spec"]], "make_persistent() (matflow.valueperturbation method)": [[86, "matflow.ValuePerturbation.make_persistent"]], "multiplicative_factor (matflow.valueperturbation attribute)": [[86, "matflow.ValuePerturbation.multiplicative_factor"]], "name (matflow.valueperturbation attribute)": [[86, "matflow.ValuePerturbation.name"]], "normalised_path (matflow.valueperturbation property)": [[86, "matflow.ValuePerturbation.normalised_path"]], "path (matflow.valueperturbation attribute)": [[86, "matflow.ValuePerturbation.path"]], "to_dict() (matflow.valueperturbation method)": [[86, "matflow.ValuePerturbation.to_dict"]], "to_json_like() (matflow.valueperturbation method)": [[86, "matflow.ValuePerturbation.to_json_like"]], "value (matflow.valueperturbation property)": [[86, "matflow.ValuePerturbation.value"]], "workflow (matflow.valueperturbation property)": [[86, "matflow.ValuePerturbation.workflow"]], "valuesequence (class in matflow)": [[87, "matflow.ValueSequence"]], "from_file() (matflow.valuesequence class method)": [[87, "matflow.ValueSequence.from_file"]], "from_geometric_space() (matflow.valuesequence class method)": [[87, "matflow.ValueSequence.from_geometric_space"]], "from_json_like() (matflow.valuesequence class method)": [[87, "matflow.ValueSequence.from_json_like"]], "from_linear_space() (matflow.valuesequence class method)": [[87, "matflow.ValueSequence.from_linear_space"]], "from_log_space() (matflow.valuesequence class method)": [[87, "matflow.ValueSequence.from_log_space"]], "from_random_uniform() (matflow.valuesequence class method)": [[87, "matflow.ValueSequence.from_random_uniform"]], "from_range() (matflow.valuesequence class method)": [[87, "matflow.ValueSequence.from_range"]], "from_rectangle() (matflow.valuesequence class method)": [[87, "matflow.ValueSequence.from_rectangle"]], "input_path (matflow.valuesequence property)": [[87, "matflow.ValueSequence.input_path"]], "input_type (matflow.valuesequence property)": [[87, "matflow.ValueSequence.input_type"]], "is_sub_value (matflow.valuesequence property)": [[87, "matflow.ValueSequence.is_sub_value"]], "label (matflow.valuesequence attribute)": [[87, "matflow.ValueSequence.label"]], "labelled_type (matflow.valuesequence property)": [[87, "matflow.ValueSequence.labelled_type"]], "make_persistent() (matflow.valuesequence method)": [[87, "matflow.ValueSequence.make_persistent"]], "nesting_order (matflow.valuesequence attribute)": [[87, "matflow.ValueSequence.nesting_order"]], "normalised_inputs_path (matflow.valuesequence property)": [[87, "matflow.ValueSequence.normalised_inputs_path"]], "normalised_path (matflow.valuesequence property)": [[87, "matflow.ValueSequence.normalised_path"]], "parameter (matflow.valuesequence property)": [[87, "matflow.ValueSequence.parameter"]], "path (matflow.valuesequence attribute)": [[87, "matflow.ValueSequence.path"]], "path_split (matflow.valuesequence property)": [[87, "matflow.ValueSequence.path_split"]], "path_type (matflow.valuesequence property)": [[87, "matflow.ValueSequence.path_type"]], "resource_scope (matflow.valuesequence property)": [[87, "matflow.ValueSequence.resource_scope"]], "to_dict() (matflow.valuesequence method)": [[87, "matflow.ValueSequence.to_dict"]], "to_json_like() (matflow.valuesequence method)": [[87, "matflow.ValueSequence.to_json_like"]], "value_class_method (matflow.valuesequence attribute)": [[87, "matflow.ValueSequence.value_class_method"]], "values (matflow.valuesequence property)": [[87, "matflow.ValueSequence.values"]], "workflow (matflow.valuesequence property)": [[87, "matflow.ValueSequence.workflow"]], "workflow (class in matflow)": [[88, "matflow.Workflow"]], "abort_run() (matflow.workflow method)": [[88, "matflow.Workflow.abort_run"]], "add_loop() (matflow.workflow method)": [[88, "matflow.Workflow.add_loop"]], "add_submission() (matflow.workflow method)": [[88, "matflow.Workflow.add_submission"]], "add_task() (matflow.workflow method)": [[88, "matflow.Workflow.add_task"]], "add_task_after() (matflow.workflow method)": [[88, "matflow.Workflow.add_task_after"]], "add_task_before() (matflow.workflow method)": [[88, "matflow.Workflow.add_task_before"]], "artifacts_path (matflow.workflow property)": [[88, "matflow.Workflow.artifacts_path"]], "batch_update() (matflow.workflow method)": [[88, "matflow.Workflow.batch_update"]], "cached_merged_parameters() (matflow.workflow method)": [[88, "matflow.Workflow.cached_merged_parameters"]], "cancel() (matflow.workflow method)": [[88, "matflow.Workflow.cancel"]], "check_parameters_exist() (matflow.workflow method)": [[88, "matflow.Workflow.check_parameters_exist"]], "copy() (matflow.workflow method)": [[88, "matflow.Workflow.copy"]], "creation_info (matflow.workflow property)": [[88, "matflow.Workflow.creation_info"]], "delete() (matflow.workflow method)": [[88, "matflow.Workflow.delete"]], "elements() (matflow.workflow method)": [[88, "matflow.Workflow.elements"]], "ensure_commands_file() (matflow.workflow method)": [[88, "matflow.Workflow.ensure_commands_file"]], "execute_combined_runs() (matflow.workflow method)": [[88, "matflow.Workflow.execute_combined_runs"]], "execute_run() (matflow.workflow method)": [[88, "matflow.Workflow.execute_run"]], "execution_path (matflow.workflow property)": [[88, "matflow.Workflow.execution_path"]], "from_json_file() (matflow.workflow class method)": [[88, "matflow.Workflow.from_JSON_file"]], "from_json_string() (matflow.workflow class method)": [[88, "matflow.Workflow.from_JSON_string"]], "from_yaml_file() (matflow.workflow class method)": [[88, "matflow.Workflow.from_YAML_file"]], "from_yaml_string() (matflow.workflow class method)": [[88, "matflow.Workflow.from_YAML_string"]], "from_file() (matflow.workflow class method)": [[88, "matflow.Workflow.from_file"]], "from_template() (matflow.workflow class method)": [[88, "matflow.Workflow.from_template"]], "from_template_data() (matflow.workflow class method)": [[88, "matflow.Workflow.from_template_data"]], "get_ear_ids_of_tasks() (matflow.workflow method)": [[88, "matflow.Workflow.get_EAR_IDs_of_tasks"]], "get_ear_skipped() (matflow.workflow method)": [[88, "matflow.Workflow.get_EAR_skipped"]], "get_ears_from_ids() (matflow.workflow method)": [[88, "matflow.Workflow.get_EARs_from_IDs"]], "get_ears_of_tasks() (matflow.workflow method)": [[88, "matflow.Workflow.get_EARs_of_tasks"]], "get_all_ears() (matflow.workflow method)": [[88, "matflow.Workflow.get_all_EARs"]], "get_all_element_iterations() (matflow.workflow method)": [[88, "matflow.Workflow.get_all_element_iterations"]], "get_all_elements() (matflow.workflow method)": [[88, "matflow.Workflow.get_all_elements"]], "get_all_parameter_data() (matflow.workflow method)": [[88, "matflow.Workflow.get_all_parameter_data"]], "get_all_parameter_sources() (matflow.workflow method)": [[88, "matflow.Workflow.get_all_parameter_sources"]], "get_all_parameters() (matflow.workflow method)": [[88, "matflow.Workflow.get_all_parameters"]], "get_all_submission_run_ids() (matflow.workflow method)": [[88, "matflow.Workflow.get_all_submission_run_IDs"]], "get_element_ids_from_ear_ids() (matflow.workflow method)": [[88, "matflow.Workflow.get_element_IDs_from_EAR_IDs"]], "get_element_iteration_ids_from_ear_ids() (matflow.workflow method)": [[88, "matflow.Workflow.get_element_iteration_IDs_from_EAR_IDs"]], "get_element_iterations_from_ids() (matflow.workflow method)": [[88, "matflow.Workflow.get_element_iterations_from_IDs"]], "get_element_iterations_of_tasks() (matflow.workflow method)": [[88, "matflow.Workflow.get_element_iterations_of_tasks"]], "get_elements_from_ids() (matflow.workflow method)": [[88, "matflow.Workflow.get_elements_from_IDs"]], "get_iteration_task_pathway() (matflow.workflow method)": [[88, "matflow.Workflow.get_iteration_task_pathway"]], "get_parameter() (matflow.workflow method)": [[88, "matflow.Workflow.get_parameter"]], "get_parameter_data() (matflow.workflow method)": [[88, "matflow.Workflow.get_parameter_data"]], "get_parameter_set_statuses() (matflow.workflow method)": [[88, "matflow.Workflow.get_parameter_set_statuses"]], "get_parameter_source() (matflow.workflow method)": [[88, "matflow.Workflow.get_parameter_source"]], "get_parameter_sources() (matflow.workflow method)": [[88, "matflow.Workflow.get_parameter_sources"]], "get_parameters() (matflow.workflow method)": [[88, "matflow.Workflow.get_parameters"]], "get_process_ids() (matflow.workflow method)": [[88, "matflow.Workflow.get_process_IDs"]], "get_run_directories() (matflow.workflow method)": [[88, "matflow.Workflow.get_run_directories"]], "get_running_elements() (matflow.workflow method)": [[88, "matflow.Workflow.get_running_elements"]], "get_running_runs() (matflow.workflow method)": [[88, "matflow.Workflow.get_running_runs"]], "get_scheduler_job_ids() (matflow.workflow method)": [[88, "matflow.Workflow.get_scheduler_job_IDs"]], "get_store_ears() (matflow.workflow method)": [[88, "matflow.Workflow.get_store_EARs"]], "get_store_element_iterations() (matflow.workflow method)": [[88, "matflow.Workflow.get_store_element_iterations"]], "get_store_elements() (matflow.workflow method)": [[88, "matflow.Workflow.get_store_elements"]], "get_store_tasks() (matflow.workflow method)": [[88, "matflow.Workflow.get_store_tasks"]], "get_task_ids_from_element_ids() (matflow.workflow method)": [[88, "matflow.Workflow.get_task_IDs_from_element_IDs"]], "get_task_elements() (matflow.workflow method)": [[88, "matflow.Workflow.get_task_elements"]], "get_task_unique_names() (matflow.workflow method)": [[88, "matflow.Workflow.get_task_unique_names"]], "get_text_file() (matflow.workflow method)": [[88, "matflow.Workflow.get_text_file"]], "id_ (matflow.workflow property)": [[88, "matflow.Workflow.id_"]], "input_files_path (matflow.workflow property)": [[88, "matflow.Workflow.input_files_path"]], "is_parameter_set() (matflow.workflow method)": [[88, "matflow.Workflow.is_parameter_set"]], "list_jobscripts() (matflow.workflow method)": [[88, "matflow.Workflow.list_jobscripts"]], "list_task_jobscripts() (matflow.workflow method)": [[88, "matflow.Workflow.list_task_jobscripts"]], "loops (matflow.workflow property)": [[88, "matflow.Workflow.loops"]], "name (matflow.workflow property)": [[88, "matflow.Workflow.name"]], "num_ears (matflow.workflow property)": [[88, "matflow.Workflow.num_EARs"]], "num_added_tasks (matflow.workflow property)": [[88, "matflow.Workflow.num_added_tasks"]], "num_element_iterations (matflow.workflow property)": [[88, "matflow.Workflow.num_element_iterations"]], "num_elements (matflow.workflow property)": [[88, "matflow.Workflow.num_elements"]], "num_loops (matflow.workflow property)": [[88, "matflow.Workflow.num_loops"]], "num_submissions (matflow.workflow property)": [[88, "matflow.Workflow.num_submissions"]], "num_tasks (matflow.workflow property)": [[88, "matflow.Workflow.num_tasks"]], "process_shell_parameter_output() (matflow.workflow method)": [[88, "matflow.Workflow.process_shell_parameter_output"]], "rechunk() (matflow.workflow method)": [[88, "matflow.Workflow.rechunk"]], "rechunk_parameter_base() (matflow.workflow method)": [[88, "matflow.Workflow.rechunk_parameter_base"]], "rechunk_runs() (matflow.workflow method)": [[88, "matflow.Workflow.rechunk_runs"]], "reload() (matflow.workflow method)": [[88, "matflow.Workflow.reload"]], "resolve_jobscripts() (matflow.workflow method)": [[88, "matflow.Workflow.resolve_jobscripts"]], "save_parameter() (matflow.workflow method)": [[88, "matflow.Workflow.save_parameter"]], "set_ear_end() (matflow.workflow method)": [[88, "matflow.Workflow.set_EAR_end"]], "set_ear_skip() (matflow.workflow method)": [[88, "matflow.Workflow.set_EAR_skip"]], "set_ear_start() (matflow.workflow method)": [[88, "matflow.Workflow.set_EAR_start"]], "set_ears_initialised() (matflow.workflow method)": [[88, "matflow.Workflow.set_EARs_initialised"]], "set_multi_run_ends() (matflow.workflow method)": [[88, "matflow.Workflow.set_multi_run_ends"]], "set_multi_run_starts() (matflow.workflow method)": [[88, "matflow.Workflow.set_multi_run_starts"]], "set_parameter_value() (matflow.workflow method)": [[88, "matflow.Workflow.set_parameter_value"]], "set_parameter_values() (matflow.workflow method)": [[88, "matflow.Workflow.set_parameter_values"]], "show_all_ear_statuses() (matflow.workflow method)": [[88, "matflow.Workflow.show_all_EAR_statuses"]], "store_format (matflow.workflow property)": [[88, "matflow.Workflow.store_format"]], "submissions (matflow.workflow property)": [[88, "matflow.Workflow.submissions"]], "submissions_path (matflow.workflow property)": [[88, "matflow.Workflow.submissions_path"]], "submit() (matflow.workflow method)": [[88, "matflow.Workflow.submit"]], "task_artifacts_path (matflow.workflow property)": [[88, "matflow.Workflow.task_artifacts_path"]], "tasks (matflow.workflow property)": [[88, "matflow.Workflow.tasks"]], "template (matflow.workflow property)": [[88, "matflow.Workflow.template"]], "template_components (matflow.workflow property)": [[88, "matflow.Workflow.template_components"]], "temporary_rename() (matflow.workflow class method)": [[88, "matflow.Workflow.temporary_rename"]], "ts_fmt (matflow.workflow property)": [[88, "matflow.Workflow.ts_fmt"]], "ts_name_fmt (matflow.workflow property)": [[88, "matflow.Workflow.ts_name_fmt"]], "unzip() (matflow.workflow method)": [[88, "matflow.Workflow.unzip"]], "url (matflow.workflow property)": [[88, "matflow.Workflow.url"]], "wait() (matflow.workflow method)": [[88, "matflow.Workflow.wait"]], "zip() (matflow.workflow method)": [[88, "matflow.Workflow.zip"]], "workflowblueprint (class in matflow)": [[89, "matflow.WorkflowBlueprint"]], "workflow_template (matflow.workflowblueprint attribute)": [[89, "matflow.WorkflowBlueprint.workflow_template"]], "workflowloop (class in matflow)": [[90, "matflow.WorkflowLoop"]], "add_iteration() (matflow.workflowloop method)": [[90, "matflow.WorkflowLoop.add_iteration"]], "downstream_tasks (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.downstream_tasks"]], "get_child_loops() (matflow.workflowloop method)": [[90, "matflow.WorkflowLoop.get_child_loops"]], "get_element_ids() (matflow.workflowloop method)": [[90, "matflow.WorkflowLoop.get_element_IDs"]], "get_elements() (matflow.workflowloop method)": [[90, "matflow.WorkflowLoop.get_elements"]], "get_parent_loops() (matflow.workflowloop method)": [[90, "matflow.WorkflowLoop.get_parent_loops"]], "index (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.index"]], "iterable_parameters (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.iterable_parameters"]], "name (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.name"]], "new_empty_loop() (matflow.workflowloop class method)": [[90, "matflow.WorkflowLoop.new_empty_loop"]], "num_added_iterations (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.num_added_iterations"]], "num_iterations (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.num_iterations"]], "output_parameters (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.output_parameters"]], "parents (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.parents"]], "skip_downstream_iterations() (matflow.workflowloop method)": [[90, "matflow.WorkflowLoop.skip_downstream_iterations"]], "task_indices (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.task_indices"]], "task_insert_ids (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.task_insert_IDs"]], "task_objects (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.task_objects"]], "template (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.template"]], "test_termination() (matflow.workflowloop method)": [[90, "matflow.WorkflowLoop.test_termination"]], "upstream_tasks (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.upstream_tasks"]], "workflow (matflow.workflowloop property)": [[90, "matflow.WorkflowLoop.workflow"]], "workflowlooplist (class in matflow)": [[91, "matflow.WorkflowLoopList"]], "add_object() (matflow.workflowlooplist method)": [[91, "matflow.WorkflowLoopList.add_object"]], "add_objects() (matflow.workflowlooplist method)": [[91, "matflow.WorkflowLoopList.add_objects"]], "from_json_like() (matflow.workflowlooplist class method)": [[91, "matflow.WorkflowLoopList.from_json_like"]], "get() (matflow.workflowlooplist method)": [[91, "matflow.WorkflowLoopList.get"]], "get_all() (matflow.workflowlooplist method)": [[91, "matflow.WorkflowLoopList.get_all"]], "list_attrs() (matflow.workflowlooplist method)": [[91, "matflow.WorkflowLoopList.list_attrs"]], "to_dict() (matflow.workflowlooplist method)": [[91, "matflow.WorkflowLoopList.to_dict"]], "to_json_like() (matflow.workflowlooplist method)": [[91, "matflow.WorkflowLoopList.to_json_like"]], "workflowtask (class in matflow)": [[92, "matflow.WorkflowTask"]], "add_elements() (matflow.workflowtask method)": [[92, "matflow.WorkflowTask.add_elements"]], "dir_name (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.dir_name"]], "downstream_tasks (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.downstream_tasks"]], "element_ids (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.element_IDs"]], "elements (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.elements"]], "ensure_input_sources() (matflow.workflowtask method)": [[92, "matflow.WorkflowTask.ensure_input_sources"]], "generate_new_elements() (matflow.workflowtask method)": [[92, "matflow.WorkflowTask.generate_new_elements"]], "get() (matflow.workflowtask method)": [[92, "matflow.WorkflowTask.get"]], "get_all_element_iterations() (matflow.workflowtask method)": [[92, "matflow.WorkflowTask.get_all_element_iterations"]], "get_dependent_elements() (matflow.workflowtask method)": [[92, "matflow.WorkflowTask.get_dependent_elements"]], "get_dependent_tasks() (matflow.workflowtask method)": [[92, "matflow.WorkflowTask.get_dependent_tasks"]], "get_dir_name() (matflow.workflowtask method)": [[92, "matflow.WorkflowTask.get_dir_name"]], "get_element_dependencies() (matflow.workflowtask method)": [[92, "matflow.WorkflowTask.get_element_dependencies"]], "get_task_dependencies() (matflow.workflowtask method)": [[92, "matflow.WorkflowTask.get_task_dependencies"]], "index (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.index"]], "initialise_ears() (matflow.workflowtask method)": [[92, "matflow.WorkflowTask.initialise_EARs"]], "inputs (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.inputs"]], "insert_id (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.insert_ID"]], "name (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.name"]], "new_empty_task() (matflow.workflowtask class method)": [[92, "matflow.WorkflowTask.new_empty_task"]], "num_actions (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.num_actions"]], "num_element_sets (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.num_element_sets"]], "num_elements (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.num_elements"]], "outputs (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.outputs"]], "resolve_element_data_indices() (matflow.workflowtask static method)": [[92, "matflow.WorkflowTask.resolve_element_data_indices"]], "template (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.template"]], "unique_name (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.unique_name"]], "upstream_tasks (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.upstream_tasks"]], "workflow (matflow.workflowtask property)": [[92, "matflow.WorkflowTask.workflow"]], "workflowtasklist (class in matflow)": [[93, "matflow.WorkflowTaskList"]], "add_object() (matflow.workflowtasklist method)": [[93, "matflow.WorkflowTaskList.add_object"]], "add_objects() (matflow.workflowtasklist method)": [[93, "matflow.WorkflowTaskList.add_objects"]], "from_json_like() (matflow.workflowtasklist class method)": [[93, "matflow.WorkflowTaskList.from_json_like"]], "get() (matflow.workflowtasklist method)": [[93, "matflow.WorkflowTaskList.get"]], "get_all() (matflow.workflowtasklist method)": [[93, "matflow.WorkflowTaskList.get_all"]], "list_attrs() (matflow.workflowtasklist method)": [[93, "matflow.WorkflowTaskList.list_attrs"]], "to_dict() (matflow.workflowtasklist method)": [[93, "matflow.WorkflowTaskList.to_dict"]], "to_json_like() (matflow.workflowtasklist method)": [[93, "matflow.WorkflowTaskList.to_json_like"]], "workflowtemplate (class in matflow)": [[94, "matflow.WorkflowTemplate"]], "config (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.config"]], "doc (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.doc"]], "env_presets (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.env_presets"]], "environments (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.environments"]], "from_json_file() (matflow.workflowtemplate class method)": [[94, "matflow.WorkflowTemplate.from_JSON_file"]], "from_json_string() (matflow.workflowtemplate class method)": [[94, "matflow.WorkflowTemplate.from_JSON_string"]], "from_yaml_file() (matflow.workflowtemplate class method)": [[94, "matflow.WorkflowTemplate.from_YAML_file"]], "from_yaml_string() (matflow.workflowtemplate class method)": [[94, "matflow.WorkflowTemplate.from_YAML_string"]], "from_file() (matflow.workflowtemplate class method)": [[94, "matflow.WorkflowTemplate.from_file"]], "from_json_like() (matflow.workflowtemplate class method)": [[94, "matflow.WorkflowTemplate.from_json_like"]], "loops (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.loops"]], "merge_envs (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.merge_envs"]], "merge_resources (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.merge_resources"]], "name (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.name"]], "resources (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.resources"]], "source_file (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.source_file"]], "store_kwargs (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.store_kwargs"]], "tasks (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.tasks"]], "to_dict() (matflow.workflowtemplate method)": [[94, "matflow.WorkflowTemplate.to_dict"]], "to_json_like() (matflow.workflowtemplate method)": [[94, "matflow.WorkflowTemplate.to_json_like"]], "workflow (matflow.workflowtemplate attribute)": [[94, "matflow.WorkflowTemplate.workflow"]], "app (in module matflow)": [[95, "matflow.app"]], "cancel() (in module matflow)": [[96, "matflow.cancel"]], "matflow.cli": [[97, "module-matflow.cli"]], "get_os_info() (in module matflow)": [[98, "matflow.get_OS_info"]], "get_known_submissions() (in module matflow)": [[99, "matflow.get_known_submissions"]], "get_shell_info() (in module matflow)": [[100, "matflow.get_shell_info"]], "make_and_submit_demo_workflow() (in module matflow)": [[101, "matflow.make_and_submit_demo_workflow"]], "make_and_submit_workflow() (in module matflow)": [[102, "matflow.make_and_submit_workflow"]], "make_demo_workflow() (in module matflow)": [[103, "matflow.make_demo_workflow"]], "make_workflow() (in module matflow)": [[104, "matflow.make_workflow"]], "matflow.param_classes": [[105, "module-matflow.param_classes"]], "matflow.param_classes.load": [[106, "module-matflow.param_classes.load"]], "loadcase (class in matflow.param_classes.load)": [[107, "matflow.param_classes.load.LoadCase"]], "biaxial() (matflow.param_classes.load.loadcase class method)": [[107, "matflow.param_classes.load.LoadCase.biaxial"]], "create_damask_loading_plan() (matflow.param_classes.load.loadcase method)": [[107, "matflow.param_classes.load.LoadCase.create_damask_loading_plan"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.load.loadcase class method)": [[107, "matflow.param_classes.load.LoadCase.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.param_classes.load.loadcase method)": [[107, "matflow.param_classes.load.LoadCase.dump_to_HDF5_group"]], "example_uniaxial() (matflow.param_classes.load.loadcase class method)": [[107, "matflow.param_classes.load.LoadCase.example_uniaxial"]], "multistep() (matflow.param_classes.load.loadcase class method)": [[107, "matflow.param_classes.load.LoadCase.multistep"]], "num_steps (matflow.param_classes.load.loadcase property)": [[107, "matflow.param_classes.load.LoadCase.num_steps"]], "planar_2d() (matflow.param_classes.load.loadcase class method)": [[107, "matflow.param_classes.load.LoadCase.planar_2D"]], "plane_strain() (matflow.param_classes.load.loadcase class method)": [[107, "matflow.param_classes.load.LoadCase.plane_strain"]], "prepare_json_dump() (matflow.param_classes.load.loadcase method)": [[107, "matflow.param_classes.load.LoadCase.prepare_JSON_dump"]], "random_2d() (matflow.param_classes.load.loadcase class method)": [[107, "matflow.param_classes.load.LoadCase.random_2D"]], "random_3d() (matflow.param_classes.load.loadcase class method)": [[107, "matflow.param_classes.load.LoadCase.random_3D"]], "save_from_hdf5_group() (matflow.param_classes.load.loadcase class method)": [[107, "matflow.param_classes.load.LoadCase.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.load.loadcase class method)": [[107, "matflow.param_classes.load.LoadCase.save_from_JSON"]], "steps (matflow.param_classes.load.loadcase attribute)": [[107, "matflow.param_classes.load.LoadCase.steps"]], "to_dict() (matflow.param_classes.load.loadcase method)": [[107, "matflow.param_classes.load.LoadCase.to_dict"]], "type (matflow.param_classes.load.loadcase property)": [[107, "matflow.param_classes.load.LoadCase.type"]], "types (matflow.param_classes.load.loadcase property)": [[107, "matflow.param_classes.load.LoadCase.types"]], "uniaxial() (matflow.param_classes.load.loadcase class method)": [[107, "matflow.param_classes.load.LoadCase.uniaxial"]], "uniaxial_cyclic() (matflow.param_classes.load.loadcase class method)": [[107, "matflow.param_classes.load.LoadCase.uniaxial_cyclic"]], "loadstep (class in matflow.param_classes.load)": [[108, "matflow.param_classes.load.LoadStep"]], "biaxial() (matflow.param_classes.load.loadstep class method)": [[108, "matflow.param_classes.load.LoadStep.biaxial"]], "direction (matflow.param_classes.load.loadstep attribute)": [[108, "matflow.param_classes.load.LoadStep.direction"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.load.loadstep class method)": [[108, "matflow.param_classes.load.LoadStep.dump_element_group_to_HDF5_group"]], "dump_frequency (matflow.param_classes.load.loadstep attribute)": [[108, "matflow.param_classes.load.LoadStep.dump_frequency"]], "dump_to_hdf5_group() (matflow.param_classes.load.loadstep method)": [[108, "matflow.param_classes.load.LoadStep.dump_to_HDF5_group"]], "example_uniaxial() (matflow.param_classes.load.loadstep class method)": [[108, "matflow.param_classes.load.LoadStep.example_uniaxial"]], "method_args (matflow.param_classes.load.loadstep property)": [[108, "matflow.param_classes.load.LoadStep.method_args"]], "method_name (matflow.param_classes.load.loadstep property)": [[108, "matflow.param_classes.load.LoadStep.method_name"]], "normal_direction (matflow.param_classes.load.loadstep attribute)": [[108, "matflow.param_classes.load.LoadStep.normal_direction"]], "num_increments (matflow.param_classes.load.loadstep attribute)": [[108, "matflow.param_classes.load.LoadStep.num_increments"]], "planar_2d() (matflow.param_classes.load.loadstep class method)": [[108, "matflow.param_classes.load.LoadStep.planar_2D"]], "plane_strain() (matflow.param_classes.load.loadstep class method)": [[108, "matflow.param_classes.load.LoadStep.plane_strain"]], "prepare_json_dump() (matflow.param_classes.load.loadstep method)": [[108, "matflow.param_classes.load.LoadStep.prepare_JSON_dump"]], "random_2d() (matflow.param_classes.load.loadstep class method)": [[108, "matflow.param_classes.load.LoadStep.random_2D"]], "random_3d() (matflow.param_classes.load.loadstep class method)": [[108, "matflow.param_classes.load.LoadStep.random_3D"]], "save_from_hdf5_group() (matflow.param_classes.load.loadstep class method)": [[108, "matflow.param_classes.load.LoadStep.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.load.loadstep class method)": [[108, "matflow.param_classes.load.LoadStep.save_from_JSON"]], "strain_like_tensor (matflow.param_classes.load.loadstep property)": [[108, "matflow.param_classes.load.LoadStep.strain_like_tensor"]], "stress (matflow.param_classes.load.loadstep attribute)": [[108, "matflow.param_classes.load.LoadStep.stress"]], "target_def_grad (matflow.param_classes.load.loadstep attribute)": [[108, "matflow.param_classes.load.LoadStep.target_def_grad"]], "target_def_grad_rate (matflow.param_classes.load.loadstep attribute)": [[108, "matflow.param_classes.load.LoadStep.target_def_grad_rate"]], "target_vel_grad (matflow.param_classes.load.loadstep attribute)": [[108, "matflow.param_classes.load.LoadStep.target_vel_grad"]], "to_dict() (matflow.param_classes.load.loadstep method)": [[108, "matflow.param_classes.load.LoadStep.to_dict"]], "total_time (matflow.param_classes.load.loadstep attribute)": [[108, "matflow.param_classes.load.LoadStep.total_time"]], "type (matflow.param_classes.load.loadstep property)": [[108, "matflow.param_classes.load.LoadStep.type"]], "uniaxial() (matflow.param_classes.load.loadstep class method)": [[108, "matflow.param_classes.load.LoadStep.uniaxial"]], "uniaxial_cyclic() (matflow.param_classes.load.loadstep class method)": [[108, "matflow.param_classes.load.LoadStep.uniaxial_cyclic"]], "def_grad_rate (matflow.param_classes.load.strainratemode attribute)": [[109, "matflow.param_classes.load.StrainRateMode.DEF_GRAD_RATE"]], "strainratemode (class in matflow.param_classes.load)": [[109, "matflow.param_classes.load.StrainRateMode"]], "vel_grad (matflow.param_classes.load.strainratemode attribute)": [[109, "matflow.param_classes.load.StrainRateMode.VEL_GRAD"]], "vel_grad_approx (matflow.param_classes.load.strainratemode attribute)": [[109, "matflow.param_classes.load.StrainRateMode.VEL_GRAD_APPROX"]], "symbol (matflow.param_classes.load.strainratemode attribute)": [[109, "matflow.param_classes.load.StrainRateMode.symbol"]], "value (matflow.param_classes.load.strainratemode property)": [[109, "matflow.param_classes.load.StrainRateMode.value"]], "matflow.param_classes.orientations": [[110, "module-matflow.param_classes.orientations"]], "bunge (matflow.param_classes.orientations.eulerdefinition attribute)": [[111, "matflow.param_classes.orientations.EulerDefinition.BUNGE"]], "eulerdefinition (class in matflow.param_classes.orientations)": [[111, "matflow.param_classes.orientations.EulerDefinition"]], "rotation_order (matflow.param_classes.orientations.eulerdefinition attribute)": [[111, "matflow.param_classes.orientations.EulerDefinition.rotation_order"]], "value (matflow.param_classes.orientations.eulerdefinition property)": [[111, "matflow.param_classes.orientations.EulerDefinition.value"]], "a (matflow.param_classes.orientations.latticedirection attribute)": [[112, "matflow.param_classes.orientations.LatticeDirection.A"]], "a_star (matflow.param_classes.orientations.latticedirection attribute)": [[112, "matflow.param_classes.orientations.LatticeDirection.A_STAR"]], "b (matflow.param_classes.orientations.latticedirection attribute)": [[112, "matflow.param_classes.orientations.LatticeDirection.B"]], "b_star (matflow.param_classes.orientations.latticedirection attribute)": [[112, "matflow.param_classes.orientations.LatticeDirection.B_STAR"]], "c (matflow.param_classes.orientations.latticedirection attribute)": [[112, "matflow.param_classes.orientations.LatticeDirection.C"]], "c_star (matflow.param_classes.orientations.latticedirection attribute)": [[112, "matflow.param_classes.orientations.LatticeDirection.C_STAR"]], "latticedirection (class in matflow.param_classes.orientations)": [[112, "matflow.param_classes.orientations.LatticeDirection"]], "orientationrepresentation (class in matflow.param_classes.orientations)": [[113, "matflow.param_classes.orientations.OrientationRepresentation"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.orientations.orientationrepresentation class method)": [[113, "matflow.param_classes.orientations.OrientationRepresentation.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.orientationrepresentation method)": [[113, "matflow.param_classes.orientations.OrientationRepresentation.dump_to_HDF5_group"]], "euler() (matflow.param_classes.orientations.orientationrepresentation class method)": [[113, "matflow.param_classes.orientations.OrientationRepresentation.euler"]], "euler_definition (matflow.param_classes.orientations.orientationrepresentation attribute)": [[113, "matflow.param_classes.orientations.OrientationRepresentation.euler_definition"]], "euler_is_degrees (matflow.param_classes.orientations.orientationrepresentation attribute)": [[113, "matflow.param_classes.orientations.OrientationRepresentation.euler_is_degrees"]], "prepare_json_dump() (matflow.param_classes.orientations.orientationrepresentation method)": [[113, "matflow.param_classes.orientations.OrientationRepresentation.prepare_JSON_dump"]], "quat_order (matflow.param_classes.orientations.orientationrepresentation attribute)": [[113, "matflow.param_classes.orientations.OrientationRepresentation.quat_order"]], "quaternion() (matflow.param_classes.orientations.orientationrepresentation class method)": [[113, "matflow.param_classes.orientations.OrientationRepresentation.quaternion"]], "save_from_hdf5_group() (matflow.param_classes.orientations.orientationrepresentation class method)": [[113, "matflow.param_classes.orientations.OrientationRepresentation.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.orientations.orientationrepresentation class method)": [[113, "matflow.param_classes.orientations.OrientationRepresentation.save_from_JSON"]], "to_dict() (matflow.param_classes.orientations.orientationrepresentation method)": [[113, "matflow.param_classes.orientations.OrientationRepresentation.to_dict"]], "type (matflow.param_classes.orientations.orientationrepresentation attribute)": [[113, "matflow.param_classes.orientations.OrientationRepresentation.type"]], "euler (matflow.param_classes.orientations.orientationrepresentationtype attribute)": [[114, "matflow.param_classes.orientations.OrientationRepresentationType.EULER"]], "orientationrepresentationtype (class in matflow.param_classes.orientations)": [[114, "matflow.param_classes.orientations.OrientationRepresentationType"]], "quaternion (matflow.param_classes.orientations.orientationrepresentationtype attribute)": [[114, "matflow.param_classes.orientations.OrientationRepresentationType.QUATERNION"]], "orientations (class in matflow.param_classes.orientations)": [[115, "matflow.param_classes.orientations.Orientations"]], "data (matflow.param_classes.orientations.orientations attribute)": [[115, "matflow.param_classes.orientations.Orientations.data"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.orientations.orientations class method)": [[115, "matflow.param_classes.orientations.Orientations.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.orientations method)": [[115, "matflow.param_classes.orientations.Orientations.dump_to_HDF5_group"]], "from_json_like() (matflow.param_classes.orientations.orientations class method)": [[115, "matflow.param_classes.orientations.Orientations.from_JSON_like"]], "from_file() (matflow.param_classes.orientations.orientations class method)": [[115, "matflow.param_classes.orientations.Orientations.from_file"]], "from_random() (matflow.param_classes.orientations.orientations class method)": [[115, "matflow.param_classes.orientations.Orientations.from_random"]], "prepare_json_dump() (matflow.param_classes.orientations.orientations method)": [[115, "matflow.param_classes.orientations.Orientations.prepare_JSON_dump"]], "quat_sample_random() (matflow.param_classes.orientations.orientations static method)": [[115, "matflow.param_classes.orientations.Orientations.quat_sample_random"]], "representation (matflow.param_classes.orientations.orientations attribute)": [[115, "matflow.param_classes.orientations.Orientations.representation"]], "save_from_hdf5_group() (matflow.param_classes.orientations.orientations class method)": [[115, "matflow.param_classes.orientations.Orientations.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.orientations.orientations class method)": [[115, "matflow.param_classes.orientations.Orientations.save_from_JSON"]], "to_dict() (matflow.param_classes.orientations.orientations method)": [[115, "matflow.param_classes.orientations.Orientations.to_dict"]], "unit_cell_alignment (matflow.param_classes.orientations.orientations attribute)": [[115, "matflow.param_classes.orientations.Orientations.unit_cell_alignment"]], "quatorder (class in matflow.param_classes.orientations)": [[116, "matflow.param_classes.orientations.QuatOrder"]], "scalar_vector (matflow.param_classes.orientations.quatorder attribute)": [[116, "matflow.param_classes.orientations.QuatOrder.SCALAR_VECTOR"]], "vector_scalar (matflow.param_classes.orientations.quatorder attribute)": [[116, "matflow.param_classes.orientations.QuatOrder.VECTOR_SCALAR"]], "unitcellalignment (class in matflow.param_classes.orientations)": [[117, "matflow.param_classes.orientations.UnitCellAlignment"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.orientations.unitcellalignment class method)": [[117, "matflow.param_classes.orientations.UnitCellAlignment.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.unitcellalignment method)": [[117, "matflow.param_classes.orientations.UnitCellAlignment.dump_to_HDF5_group"]], "from_hex_convention_damask() (matflow.param_classes.orientations.unitcellalignment class method)": [[117, "matflow.param_classes.orientations.UnitCellAlignment.from_hex_convention_DAMASK"]], "from_hex_convention_mtex() (matflow.param_classes.orientations.unitcellalignment class method)": [[117, "matflow.param_classes.orientations.UnitCellAlignment.from_hex_convention_MTEX"]], "prepare_json_dump() (matflow.param_classes.orientations.unitcellalignment method)": [[117, "matflow.param_classes.orientations.UnitCellAlignment.prepare_JSON_dump"]], "save_from_hdf5_group() (matflow.param_classes.orientations.unitcellalignment class method)": [[117, "matflow.param_classes.orientations.UnitCellAlignment.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.orientations.unitcellalignment class method)": [[117, "matflow.param_classes.orientations.UnitCellAlignment.save_from_JSON"]], "to_dict() (matflow.param_classes.orientations.unitcellalignment method)": [[117, "matflow.param_classes.orientations.UnitCellAlignment.to_dict"]], "x (matflow.param_classes.orientations.unitcellalignment attribute)": [[117, "matflow.param_classes.orientations.UnitCellAlignment.x"]], "y (matflow.param_classes.orientations.unitcellalignment attribute)": [[117, "matflow.param_classes.orientations.UnitCellAlignment.y"]], "z (matflow.param_classes.orientations.unitcellalignment attribute)": [[117, "matflow.param_classes.orientations.UnitCellAlignment.z"]], "matflow.param_classes.seeds": [[118, "module-matflow.param_classes.seeds"]], "microstructureseeds (class in matflow.param_classes.seeds)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds"]], "box_size (matflow.param_classes.seeds.microstructureseeds attribute)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.box_size"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.seeds.microstructureseeds class method)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.param_classes.seeds.microstructureseeds method)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.dump_to_HDF5_group"]], "from_json_like() (matflow.param_classes.seeds.microstructureseeds class method)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.from_JSON_like"]], "from_file() (matflow.param_classes.seeds.microstructureseeds class method)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.from_file"]], "from_random() (matflow.param_classes.seeds.microstructureseeds class method)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.from_random"]], "num_seeds (matflow.param_classes.seeds.microstructureseeds property)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.num_seeds"]], "orientations (matflow.param_classes.seeds.microstructureseeds attribute)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.orientations"]], "phase_label (matflow.param_classes.seeds.microstructureseeds attribute)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.phase_label"]], "position (matflow.param_classes.seeds.microstructureseeds attribute)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.position"]], "prepare_json_dump() (matflow.param_classes.seeds.microstructureseeds method)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.prepare_JSON_dump"]], "random_seed (matflow.param_classes.seeds.microstructureseeds attribute)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.random_seed"]], "save_from_hdf5_group() (matflow.param_classes.seeds.microstructureseeds class method)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.seeds.microstructureseeds class method)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.save_from_JSON"]], "show() (matflow.param_classes.seeds.microstructureseeds method)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.show"]], "to_dict() (matflow.param_classes.seeds.microstructureseeds method)": [[119, "matflow.param_classes.seeds.MicrostructureSeeds.to_dict"]], "matflow.param_classes.single_crystal_parameters": [[120, "module-matflow.param_classes.single_crystal_parameters"]], "perturbation (class in matflow.param_classes.single_crystal_parameters)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation"]], "clear() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.clear"]], "copy() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.copy"]], "fromkeys() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.fromkeys"]], "get() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.get"]], "items() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.items"]], "keys() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.keys"]], "multiplicative (matflow.param_classes.single_crystal_parameters.perturbation attribute)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.multiplicative"]], "path (matflow.param_classes.single_crystal_parameters.perturbation attribute)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.path"]], "pop() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.pop"]], "popitem() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.popitem"]], "setdefault() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.setdefault"]], "update() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.update"]], "values() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[121, "matflow.param_classes.single_crystal_parameters.Perturbation.values"]], "singlecrystalparameters (class in matflow.param_classes.single_crystal_parameters)": [[122, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters"]], "as_base() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[122, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.as_base"]], "base (matflow.param_classes.single_crystal_parameters.singlecrystalparameters property)": [[122, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.base"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters class method)": [[122, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[122, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.dump_to_HDF5_group"]], "perturbations (matflow.param_classes.single_crystal_parameters.singlecrystalparameters property)": [[122, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.perturbations"]], "phases (matflow.param_classes.single_crystal_parameters.singlecrystalparameters property)": [[122, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.phases"]], "prepare_json_dump() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[122, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.prepare_JSON_dump"]], "save_from_hdf5_group() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters class method)": [[122, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters class method)": [[122, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.save_from_JSON"]], "to_dict() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[122, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.to_dict"]], "matflow.param_classes.utils": [[123, "module-matflow.param_classes.utils"]], "masked_array_from_list() (in module matflow.param_classes.utils)": [[124, "matflow.param_classes.utils.masked_array_from_list"]], "run_hpcflow_tests() (in module matflow)": [[125, "matflow.run_hpcflow_tests"]], "run_tests() (in module matflow)": [[126, "matflow.run_tests"]], "show() (in module matflow)": [[127, "matflow.show"]], "show_legend() (in module matflow)": [[128, "matflow.show_legend"]], "submit_workflow() (in module matflow)": [[129, "matflow.submit_workflow"]], "matflow.tests": [[130, "module-matflow.tests"]], "matflow.tests.conftest": [[131, "module-matflow.tests.conftest"]], "load_case_1() (in module matflow.tests.conftest)": [[132, "matflow.tests.conftest.load_case_1"]], "new_null_config() (in module matflow.tests.conftest)": [[133, "matflow.tests.conftest.new_null_config"]], "null_config() (in module matflow.tests.conftest)": [[134, "matflow.tests.conftest.null_config"]], "orientations_1() (in module matflow.tests.conftest)": [[135, "matflow.tests.conftest.orientations_1"]], "orientations_2() (in module matflow.tests.conftest)": [[136, "matflow.tests.conftest.orientations_2"]], "pytest_addoption() (in module matflow.tests.conftest)": [[137, "matflow.tests.conftest.pytest_addoption"]], "pytest_collection_modifyitems() (in module matflow.tests.conftest)": [[138, "matflow.tests.conftest.pytest_collection_modifyitems"]], "pytest_configure() (in module matflow.tests.conftest)": [[139, "matflow.tests.conftest.pytest_configure"]], "pytest_unconfigure() (in module matflow.tests.conftest)": [[140, "matflow.tests.conftest.pytest_unconfigure"]], "seeds_1() (in module matflow.tests.conftest)": [[141, "matflow.tests.conftest.seeds_1"]], "matflow.tests.data": [[142, "module-matflow.tests.data"]], "matflow.tests.test_cli": [[143, "module-matflow.tests.test_cli"]], "test_hpcflow_version() (in module matflow.tests.test_cli)": [[144, "matflow.tests.test_cli.test_hpcflow_version"]], "test_version() (in module matflow.tests.test_cli)": [[145, "matflow.tests.test_cli.test_version"]], "matflow.tests.test_utils": [[146, "module-matflow.tests.test_utils"]], "test_masked_array_from_list_1d() (in module matflow.tests.test_utils)": [[147, "matflow.tests.test_utils.test_masked_array_from_list_1D"]], "test_masked_array_from_list_1d_masked() (in module matflow.tests.test_utils)": [[148, "matflow.tests.test_utils.test_masked_array_from_list_1D_masked"]], "test_masked_array_from_list_2d() (in module matflow.tests.test_utils)": [[149, "matflow.tests.test_utils.test_masked_array_from_list_2D"]], "test_masked_array_from_list_2d_masked() (in module matflow.tests.test_utils)": [[150, "matflow.tests.test_utils.test_masked_array_from_list_2D_masked"]], "matflow.tests.utils": [[151, "module-matflow.tests.utils"]], "--add-submission": [[153, "cmdoption-matflow-demo-workflow-make-add-submission"], [153, "cmdoption-matflow-make-add-submission"]], "--add-to-known": [[153, "cmdoption-matflow-demo-workflow-go-add-to-known"], [153, "cmdoption-matflow-go-add-to-known"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"]], "--all": [[153, "cmdoption-matflow-config-get-all"], [153, "cmdoption-matflow-demo-data-cache-all"]], "--array-idx": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stderr-array-idx"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stdout-array-idx"]], "--backup": [[153, "cmdoption-matflow-rechunk-backup"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup"]], "--cancel": [[153, "cmdoption-matflow-demo-workflow-go-cancel"], [153, "cmdoption-matflow-go-cancel"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-cancel"]], "--chunk-size": [[153, "cmdoption-matflow-rechunk-chunk-size"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-chunk-size"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-chunk-size"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-chunk-size"]], "--click-exit-code": [[153, "cmdoption-matflow-internal-noop-click-exit-code"]], "--config-dir": [[153, "cmdoption-matflow-config-dir"], [153, "cmdoption-matflow-manage-get-config-path-config-dir"], [153, "cmdoption-matflow-manage-reset-config-config-dir"]], "--config-key": [[153, "cmdoption-matflow-config-key"]], "--defaults": [[153, "cmdoption-matflow-config-add-scheduler-defaults"], [153, "cmdoption-matflow-config-add-shell-defaults"], [153, "cmdoption-matflow-config-add-shell-wsl-defaults"]], "--doc": [[153, "cmdoption-matflow-demo-workflow-copy-doc"], [153, "cmdoption-matflow-demo-workflow-show-doc"]], "--element": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element"]], "--env-source-file": [[153, "cmdoption-matflow-configure-env-env-source-file"]], "--exclude-os": [[153, "cmdoption-matflow-submission-shell-info-exclude-os"]], "--file": [[153, "cmdoption-matflow-config-get-file"], [153, "cmdoption-matflow-helper-pid-f"]], "--force-array": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-force-array"]], "--format": [[153, "cmdoption-matflow-demo-workflow-go-format"], [153, "cmdoption-matflow-demo-workflow-make-format"], [153, "cmdoption-matflow-go-format"], [153, "cmdoption-matflow-make-format"]], "--full": [[153, "cmdoption-matflow-show-f"]], "--help": [[153, "cmdoption-matflow-help"]], "--hostname": [[153, "cmdoption-matflow-manage-clear-cache-hostname"]], "--hpcflow-version": [[153, "cmdoption-matflow-hpcflow-version"]], "--include-execute": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-execute"], [153, "cmdoption-matflow-zip-include-execute"]], "--include-rechunk-backups": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-rechunk-backups"], [153, "cmdoption-matflow-zip-include-rechunk-backups"]], "--infile1": [[153, "cmdoption-matflow-demo-software-doSomething-i1"]], "--infile2": [[153, "cmdoption-matflow-demo-software-doSomething-i2"]], "--jobscripts": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-jobscripts"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-jobscripts"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "--js-parallelism": [[153, "cmdoption-matflow-demo-workflow-go-js-parallelism"], [153, "cmdoption-matflow-go-js-parallelism"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-js-parallelism"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism"]], "--json": [[153, "cmdoption-matflow-config-append-json"], [153, "cmdoption-matflow-config-prepend-json"], [153, "cmdoption-matflow-config-set-json"], [153, "cmdoption-matflow-config-update-json"], [153, "cmdoption-matflow-submission-get-known-json"]], "--legend": [[153, "cmdoption-matflow-show-legend"]], "--list": [[153, "cmdoption-matflow-demo-data-l"], [153, "cmdoption-matflow-demo-workflow-l"]], "--log": [[153, "cmdoption-matflow-unzip-log"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-log"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log"], [153, "cmdoption-matflow-zip-log"]], "--max-js": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-max-js"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-max-js"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-max-js"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-max-js"]], "--max-recent": [[153, "cmdoption-matflow-show-r"]], "--metadata": [[153, "cmdoption-matflow-config-get-metadata"]], "--name": [[153, "cmdoption-matflow-demo-workflow-go-name"], [153, "cmdoption-matflow-demo-workflow-make-name"], [153, "cmdoption-matflow-go-name"], [153, "cmdoption-matflow-make-name"], [153, "cmdoption-matflow-open-env-source-name"]], "--new": [[153, "cmdoption-matflow-config-import-new"]], "--no-add-to-known": [[153, "cmdoption-matflow-demo-workflow-go-add-to-known"], [153, "cmdoption-matflow-go-add-to-known"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"]], "--no-backup": [[153, "cmdoption-matflow-rechunk-backup"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup"]], "--no-callback": [[153, "cmdoption-matflow-config-no-callback"]], "--no-doc": [[153, "cmdoption-matflow-demo-workflow-copy-doc"], [153, "cmdoption-matflow-demo-workflow-show-doc"]], "--no-rename": [[153, "cmdoption-matflow-config-import-rename"]], "--no-status": [[153, "cmdoption-matflow-cancel-status"], [153, "cmdoption-matflow-demo-workflow-go-status"], [153, "cmdoption-matflow-demo-workflow-make-status"], [153, "cmdoption-matflow-go-status"], [153, "cmdoption-matflow-make-status"], [153, "cmdoption-matflow-rechunk-status"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-status"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status"]], "--no-syntax": [[153, "cmdoption-matflow-demo-workflow-show-syntax"]], "--no-update": [[153, "cmdoption-matflow-show-no-update"]], "--os-info": [[153, "cmdoption-matflow-submission-os-info"]], "--out": [[153, "cmdoption-matflow-demo-software-doSomething-o"]], "--overwrite": [[153, "cmdoption-matflow-demo-workflow-go-overwrite"], [153, "cmdoption-matflow-demo-workflow-make-overwrite"], [153, "cmdoption-matflow-go-overwrite"], [153, "cmdoption-matflow-make-overwrite"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-overwrite"], [153, "cmdoption-matflow-zip-overwrite"]], "--path": [[153, "cmdoption-matflow-config-init-path"], [153, "cmdoption-matflow-config-open-path"], [153, "cmdoption-matflow-demo-workflow-go-path"], [153, "cmdoption-matflow-demo-workflow-make-path"], [153, "cmdoption-matflow-go-path"], [153, "cmdoption-matflow-make-path"], [153, "cmdoption-matflow-open-config-path"], [153, "cmdoption-matflow-open-demo-data-cache-dir-path"], [153, "cmdoption-matflow-open-env-source-path"], [153, "cmdoption-matflow-open-known-subs-path"], [153, "cmdoption-matflow-open-log-path"], [153, "cmdoption-matflow-open-user-cache-dir-path"], [153, "cmdoption-matflow-open-user-cache-hostname-dir-path"], [153, "cmdoption-matflow-open-user-data-dir-path"], [153, "cmdoption-matflow-open-user-data-hostname-dir-path"], [153, "cmdoption-matflow-open-user-runtime-dir-path"], [153, "cmdoption-matflow-open-workflow-path"], [153, "cmdoption-matflow-unzip-path"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-path"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-path"], [153, "cmdoption-matflow-zip-path"]], "--print-idx": [[153, "cmdoption-matflow-demo-workflow-go-print-idx"], [153, "cmdoption-matflow-go-print-idx"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-print-idx"]], "--raise": [[153, "cmdoption-matflow-internal-noop-raise"]], "--ref-type": [[153, "cmdoption-matflow-cancel-r"], [153, "cmdoption-matflow-open-workflow-r"], [153, "cmdoption-matflow-rechunk-r"], [153, "cmdoption-matflow-workflow-r"], [153, "cmdoption-matflow-zip-r"]], "--rename": [[153, "cmdoption-matflow-config-import-rename"]], "--run-time-info": [[153, "cmdoption-matflow-run-time-info"]], "--setup": [[153, "cmdoption-matflow-configure-env-setup"]], "--sleep": [[153, "cmdoption-matflow-internal-noop-sleep"]], "--status": [[153, "cmdoption-matflow-cancel-status"], [153, "cmdoption-matflow-demo-workflow-go-status"], [153, "cmdoption-matflow-demo-workflow-make-status"], [153, "cmdoption-matflow-go-status"], [153, "cmdoption-matflow-make-status"], [153, "cmdoption-matflow-rechunk-status"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-status"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status"]], "--std-stream": [[153, "cmdoption-matflow-std-stream"]], "--stderr": [[153, "cmdoption-matflow-internal-workflow-PATH-save-parameter-stderr"]], "--store": [[153, "cmdoption-matflow-demo-workflow-go-store"], [153, "cmdoption-matflow-demo-workflow-make-store"], [153, "cmdoption-matflow-go-store"], [153, "cmdoption-matflow-make-store"]], "--string": [[153, "cmdoption-matflow-go-string"], [153, "cmdoption-matflow-make-string"]], "--sub-idx": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-sub-idx"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-sub-idx"]], "--submission": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission"]], "--syntax": [[153, "cmdoption-matflow-demo-workflow-show-syntax"]], "--task": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task"]], "--task-names": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-task-names"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-task-names"]], "--tasks": [[153, "cmdoption-matflow-demo-workflow-go-tasks"], [153, "cmdoption-matflow-go-tasks"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-tasks"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-tasks"]], "--timeit": [[153, "cmdoption-matflow-timeit"]], "--timeit-file": [[153, "cmdoption-matflow-timeit-file"]], "--timeout": [[153, "cmdoption-matflow-helper-restart-timeout"], [153, "cmdoption-matflow-helper-run-timeout"], [153, "cmdoption-matflow-helper-start-timeout"]], "--timeout-check-interval": [[153, "cmdoption-matflow-helper-restart-timeout-check-interval"], [153, "cmdoption-matflow-helper-run-timeout-check-interval"], [153, "cmdoption-matflow-helper-start-timeout-check-interval"]], "--ts-fmt": [[153, "cmdoption-matflow-demo-workflow-go-ts-fmt"], [153, "cmdoption-matflow-demo-workflow-make-ts-fmt"], [153, "cmdoption-matflow-go-ts-fmt"], [153, "cmdoption-matflow-make-ts-fmt"]], "--ts-name-fmt": [[153, "cmdoption-matflow-demo-workflow-go-ts-name-fmt"], [153, "cmdoption-matflow-demo-workflow-make-ts-name-fmt"], [153, "cmdoption-matflow-go-ts-name-fmt"], [153, "cmdoption-matflow-make-ts-name-fmt"]], "--use-current-env": [[153, "cmdoption-matflow-configure-env-use-current-env"]], "--value": [[153, "cmdoption-matflow-demo-software-doSomething-v"]], "--var": [[153, "cmdoption-matflow-demo-workflow-go-v"], [153, "cmdoption-matflow-demo-workflow-make-v"], [153, "cmdoption-matflow-go-v"], [153, "cmdoption-matflow-make-v"]], "--version": [[153, "cmdoption-matflow-version"]], "--wait": [[153, "cmdoption-matflow-demo-workflow-go-wait"], [153, "cmdoption-matflow-go-wait"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait"]], "--watch-interval": [[153, "cmdoption-matflow-helper-restart-watch-interval"], [153, "cmdoption-matflow-helper-run-watch-interval"], [153, "cmdoption-matflow-helper-start-watch-interval"]], "--width": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-width"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-width"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-width"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-width"]], "--with-config": [[153, "cmdoption-matflow-with-config"]], "-f": [[153, "cmdoption-matflow-helper-pid-f"], [153, "cmdoption-matflow-show-f"]], "-i1": [[153, "cmdoption-matflow-demo-software-doSomething-i1"]], "-i2": [[153, "cmdoption-matflow-demo-software-doSomething-i2"]], "-j": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "-l": [[153, "cmdoption-matflow-demo-data-l"], [153, "cmdoption-matflow-demo-workflow-l"]], "-o": [[153, "cmdoption-matflow-demo-software-doSomething-o"]], "-r": [[153, "cmdoption-matflow-cancel-r"], [153, "cmdoption-matflow-open-workflow-r"], [153, "cmdoption-matflow-rechunk-r"], [153, "cmdoption-matflow-show-r"], [153, "cmdoption-matflow-workflow-r"], [153, "cmdoption-matflow-zip-r"]], "-v": [[153, "cmdoption-matflow-demo-software-doSomething-v"], [153, "cmdoption-matflow-demo-workflow-go-v"], [153, "cmdoption-matflow-demo-workflow-make-v"], [153, "cmdoption-matflow-go-v"], [153, "cmdoption-matflow-make-v"]], "block_action_idx": [[153, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-BLOCK_ACTION_IDX"]], "block_idx": [[153, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-BLOCK_IDX"]], "cmd_idx": [[153, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-CMD_IDX"]], "destination": [[153, "cmdoption-matflow-demo-data-copy-arg-DESTINATION"], [153, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION"]], "ear_id": [[153, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID"]], "file_name": [[153, "cmdoption-matflow-demo-data-cache-arg-FILE_NAME"], [153, "cmdoption-matflow-demo-data-copy-arg-FILE_NAME"]], "file_path": [[153, "cmdoption-matflow-config-import-arg-FILE_PATH"]], "index": [[153, "cmdoption-matflow-config-pop-arg-INDEX"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX"]], "jobscript_idx": [[153, "cmdoption-matflow-internal-workflow-PATH-execute-combined-runs-arg-JOBSCRIPT_IDX"], [153, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-JOBSCRIPT_IDX"]], "js_idx": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX"]], "known_name": [[153, "cmdoption-matflow-config-init-arg-KNOWN_NAME"]], "name": [[153, "cmdoption-matflow-config-add-scheduler-arg-NAME"], [153, "cmdoption-matflow-config-add-shell-arg-NAME"], [153, "cmdoption-matflow-config-append-arg-NAME"], [153, "cmdoption-matflow-config-get-arg-NAME"], [153, "cmdoption-matflow-config-pop-arg-NAME"], [153, "cmdoption-matflow-config-prepend-arg-NAME"], [153, "cmdoption-matflow-config-set-arg-NAME"], [153, "cmdoption-matflow-config-unset-arg-NAME"], [153, "cmdoption-matflow-config-update-arg-NAME"], [153, "cmdoption-matflow-configure-env-arg-NAME"], [153, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME"]], "path": [[153, "cmdoption-matflow-internal-workflow-arg-PATH"]], "py_test_args": [[153, "cmdoption-matflow-test-arg-PY_TEST_ARGS"], [153, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS"]], "run_id": [[153, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-RUN_ID"]], "scheduler_name": [[153, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME"]], "sha": [[153, "cmdoption-matflow-config-set-github-demo-data-dir-arg-SHA"]], "shell_name": [[153, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME"]], "submission_idx": [[153, "cmdoption-matflow-internal-workflow-PATH-execute-combined-runs-arg-SUBMISSION_IDX"], [153, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-SUBMISSION_IDX"]], "sub_idx": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX"]], "template_file_or_str": [[153, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR"], [153, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR"]], "value": [[153, "cmdoption-matflow-config-append-arg-VALUE"], [153, "cmdoption-matflow-config-prepend-arg-VALUE"], [153, "cmdoption-matflow-config-set-arg-VALUE"], [153, "cmdoption-matflow-config-update-arg-VALUE"], [153, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE"]], "workflow_name": [[153, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME"], [153, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME"], [153, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME"], [153, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME"]], "workflow_path": [[153, "cmdoption-matflow-unzip-arg-WORKFLOW_PATH"]], "workflow_ref": [[153, "cmdoption-matflow-cancel-arg-WORKFLOW_REF"], [153, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF"], [153, "cmdoption-matflow-rechunk-arg-WORKFLOW_REF"], [153, "cmdoption-matflow-workflow-arg-WORKFLOW_REF"], [153, "cmdoption-matflow-zip-arg-WORKFLOW_REF"]], "matflow command line option": [[153, "cmdoption-matflow-config-dir"], [153, "cmdoption-matflow-config-key"], [153, "cmdoption-matflow-help"], [153, "cmdoption-matflow-hpcflow-version"], [153, "cmdoption-matflow-run-time-info"], [153, "cmdoption-matflow-std-stream"], [153, "cmdoption-matflow-timeit"], [153, "cmdoption-matflow-timeit-file"], [153, "cmdoption-matflow-version"], [153, "cmdoption-matflow-with-config"]], "matflow-cancel command line option": [[153, "cmdoption-matflow-cancel-arg-WORKFLOW_REF"], [153, "cmdoption-matflow-cancel-r"], [153, "cmdoption-matflow-cancel-status"]], "matflow-config command line option": [[153, "cmdoption-matflow-config-no-callback"]], "matflow-config-add-scheduler command line option": [[153, "cmdoption-matflow-config-add-scheduler-arg-NAME"], [153, "cmdoption-matflow-config-add-scheduler-defaults"]], "matflow-config-add-shell command line option": [[153, "cmdoption-matflow-config-add-shell-arg-NAME"], [153, "cmdoption-matflow-config-add-shell-defaults"]], "matflow-config-add-shell-wsl command line option": [[153, "cmdoption-matflow-config-add-shell-wsl-defaults"]], "matflow-config-append command line option": [[153, "cmdoption-matflow-config-append-arg-NAME"], [153, "cmdoption-matflow-config-append-arg-VALUE"], [153, "cmdoption-matflow-config-append-json"]], "matflow-config-get command line option": [[153, "cmdoption-matflow-config-get-all"], [153, "cmdoption-matflow-config-get-arg-NAME"], [153, "cmdoption-matflow-config-get-file"], [153, "cmdoption-matflow-config-get-metadata"]], "matflow-config-import command line option": [[153, "cmdoption-matflow-config-import-arg-FILE_PATH"], [153, "cmdoption-matflow-config-import-new"], [153, "cmdoption-matflow-config-import-rename"]], "matflow-config-init command line option": [[153, "cmdoption-matflow-config-init-arg-KNOWN_NAME"], [153, "cmdoption-matflow-config-init-path"]], "matflow-config-open command line option": [[153, "cmdoption-matflow-config-open-path"]], "matflow-config-pop command line option": [[153, "cmdoption-matflow-config-pop-arg-INDEX"], [153, "cmdoption-matflow-config-pop-arg-NAME"]], "matflow-config-prepend command line option": [[153, "cmdoption-matflow-config-prepend-arg-NAME"], [153, "cmdoption-matflow-config-prepend-arg-VALUE"], [153, "cmdoption-matflow-config-prepend-json"]], "matflow-config-set command line option": [[153, "cmdoption-matflow-config-set-arg-NAME"], [153, "cmdoption-matflow-config-set-arg-VALUE"], [153, "cmdoption-matflow-config-set-json"]], "matflow-config-set-github-demo-data-dir command line option": [[153, "cmdoption-matflow-config-set-github-demo-data-dir-arg-SHA"]], "matflow-config-unset command line option": [[153, "cmdoption-matflow-config-unset-arg-NAME"]], "matflow-config-update command line option": [[153, "cmdoption-matflow-config-update-arg-NAME"], [153, "cmdoption-matflow-config-update-arg-VALUE"], [153, "cmdoption-matflow-config-update-json"]], "matflow-configure-env command line option": [[153, "cmdoption-matflow-configure-env-arg-NAME"], [153, "cmdoption-matflow-configure-env-env-source-file"], [153, "cmdoption-matflow-configure-env-setup"], [153, "cmdoption-matflow-configure-env-use-current-env"]], "matflow-demo-data command line option": [[153, "cmdoption-matflow-demo-data-l"]], "matflow-demo-data-cache command line option": [[153, "cmdoption-matflow-demo-data-cache-all"], [153, "cmdoption-matflow-demo-data-cache-arg-FILE_NAME"]], "matflow-demo-data-copy command line option": [[153, "cmdoption-matflow-demo-data-copy-arg-DESTINATION"], [153, "cmdoption-matflow-demo-data-copy-arg-FILE_NAME"]], "matflow-demo-software-dosomething command line option": [[153, "cmdoption-matflow-demo-software-doSomething-i1"], [153, "cmdoption-matflow-demo-software-doSomething-i2"], [153, "cmdoption-matflow-demo-software-doSomething-o"], [153, "cmdoption-matflow-demo-software-doSomething-v"]], "matflow-demo-workflow command line option": [[153, "cmdoption-matflow-demo-workflow-l"]], "matflow-demo-workflow-copy command line option": [[153, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION"], [153, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME"], [153, "cmdoption-matflow-demo-workflow-copy-doc"]], "matflow-demo-workflow-go command line option": [[153, "cmdoption-matflow-demo-workflow-go-add-to-known"], [153, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME"], [153, "cmdoption-matflow-demo-workflow-go-cancel"], [153, "cmdoption-matflow-demo-workflow-go-format"], [153, "cmdoption-matflow-demo-workflow-go-js-parallelism"], [153, "cmdoption-matflow-demo-workflow-go-name"], [153, "cmdoption-matflow-demo-workflow-go-overwrite"], [153, "cmdoption-matflow-demo-workflow-go-path"], [153, "cmdoption-matflow-demo-workflow-go-print-idx"], [153, "cmdoption-matflow-demo-workflow-go-status"], [153, "cmdoption-matflow-demo-workflow-go-store"], [153, "cmdoption-matflow-demo-workflow-go-tasks"], [153, "cmdoption-matflow-demo-workflow-go-ts-fmt"], [153, "cmdoption-matflow-demo-workflow-go-ts-name-fmt"], [153, "cmdoption-matflow-demo-workflow-go-v"], [153, "cmdoption-matflow-demo-workflow-go-wait"]], "matflow-demo-workflow-make command line option": [[153, "cmdoption-matflow-demo-workflow-make-add-submission"], [153, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME"], [153, "cmdoption-matflow-demo-workflow-make-format"], [153, "cmdoption-matflow-demo-workflow-make-name"], [153, "cmdoption-matflow-demo-workflow-make-overwrite"], [153, "cmdoption-matflow-demo-workflow-make-path"], [153, "cmdoption-matflow-demo-workflow-make-status"], [153, "cmdoption-matflow-demo-workflow-make-store"], [153, "cmdoption-matflow-demo-workflow-make-ts-fmt"], [153, "cmdoption-matflow-demo-workflow-make-ts-name-fmt"], [153, "cmdoption-matflow-demo-workflow-make-v"]], "matflow-demo-workflow-show command line option": [[153, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME"], [153, "cmdoption-matflow-demo-workflow-show-doc"], [153, "cmdoption-matflow-demo-workflow-show-syntax"]], "matflow-go command line option": [[153, "cmdoption-matflow-go-add-to-known"], [153, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR"], [153, "cmdoption-matflow-go-cancel"], [153, "cmdoption-matflow-go-format"], [153, "cmdoption-matflow-go-js-parallelism"], [153, "cmdoption-matflow-go-name"], [153, "cmdoption-matflow-go-overwrite"], [153, "cmdoption-matflow-go-path"], [153, "cmdoption-matflow-go-print-idx"], [153, "cmdoption-matflow-go-status"], [153, "cmdoption-matflow-go-store"], [153, "cmdoption-matflow-go-string"], [153, "cmdoption-matflow-go-tasks"], [153, "cmdoption-matflow-go-ts-fmt"], [153, "cmdoption-matflow-go-ts-name-fmt"], [153, "cmdoption-matflow-go-v"], [153, "cmdoption-matflow-go-wait"]], "matflow-helper-pid command line option": [[153, "cmdoption-matflow-helper-pid-f"]], "matflow-helper-restart command line option": [[153, "cmdoption-matflow-helper-restart-timeout"], [153, "cmdoption-matflow-helper-restart-timeout-check-interval"], [153, "cmdoption-matflow-helper-restart-watch-interval"]], "matflow-helper-run command line option": [[153, "cmdoption-matflow-helper-run-timeout"], [153, "cmdoption-matflow-helper-run-timeout-check-interval"], [153, "cmdoption-matflow-helper-run-watch-interval"]], "matflow-helper-start command line option": [[153, "cmdoption-matflow-helper-start-timeout"], [153, "cmdoption-matflow-helper-start-timeout-check-interval"], [153, "cmdoption-matflow-helper-start-watch-interval"]], "matflow-internal-noop command line option": [[153, "cmdoption-matflow-internal-noop-click-exit-code"], [153, "cmdoption-matflow-internal-noop-raise"], [153, "cmdoption-matflow-internal-noop-sleep"]], "matflow-internal-workflow command line option": [[153, "cmdoption-matflow-internal-workflow-arg-PATH"]], "matflow-internal-workflow-path-execute-combined-runs command line option": [[153, "cmdoption-matflow-internal-workflow-PATH-execute-combined-runs-arg-JOBSCRIPT_IDX"], [153, "cmdoption-matflow-internal-workflow-PATH-execute-combined-runs-arg-SUBMISSION_IDX"]], "matflow-internal-workflow-path-execute-run command line option": [[153, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-BLOCK_ACTION_IDX"], [153, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-BLOCK_IDX"], [153, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-JOBSCRIPT_IDX"], [153, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-RUN_ID"], [153, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-SUBMISSION_IDX"]], "matflow-internal-workflow-path-save-parameter command line option": [[153, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-CMD_IDX"], [153, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID"], [153, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME"], [153, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE"], [153, "cmdoption-matflow-internal-workflow-PATH-save-parameter-stderr"]], "matflow-make command line option": [[153, "cmdoption-matflow-make-add-submission"], [153, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR"], [153, "cmdoption-matflow-make-format"], [153, "cmdoption-matflow-make-name"], [153, "cmdoption-matflow-make-overwrite"], [153, "cmdoption-matflow-make-path"], [153, "cmdoption-matflow-make-status"], [153, "cmdoption-matflow-make-store"], [153, "cmdoption-matflow-make-string"], [153, "cmdoption-matflow-make-ts-fmt"], [153, "cmdoption-matflow-make-ts-name-fmt"], [153, "cmdoption-matflow-make-v"]], "matflow-manage-clear-cache command line option": [[153, "cmdoption-matflow-manage-clear-cache-hostname"]], "matflow-manage-get-config-path command line option": [[153, "cmdoption-matflow-manage-get-config-path-config-dir"]], "matflow-manage-reset-config command line option": [[153, "cmdoption-matflow-manage-reset-config-config-dir"]], "matflow-open-config command line option": [[153, "cmdoption-matflow-open-config-path"]], "matflow-open-demo-data-cache-dir command line option": [[153, "cmdoption-matflow-open-demo-data-cache-dir-path"]], "matflow-open-env-source command line option": [[153, "cmdoption-matflow-open-env-source-name"], [153, "cmdoption-matflow-open-env-source-path"]], "matflow-open-known-subs command line option": [[153, "cmdoption-matflow-open-known-subs-path"]], "matflow-open-log command line option": [[153, "cmdoption-matflow-open-log-path"]], "matflow-open-user-cache-dir command line option": [[153, "cmdoption-matflow-open-user-cache-dir-path"]], "matflow-open-user-cache-hostname-dir command line option": [[153, "cmdoption-matflow-open-user-cache-hostname-dir-path"]], "matflow-open-user-data-dir command line option": [[153, "cmdoption-matflow-open-user-data-dir-path"]], "matflow-open-user-data-hostname-dir command line option": [[153, "cmdoption-matflow-open-user-data-hostname-dir-path"]], "matflow-open-user-runtime-dir command line option": [[153, "cmdoption-matflow-open-user-runtime-dir-path"]], "matflow-open-workflow command line option": [[153, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF"], [153, "cmdoption-matflow-open-workflow-path"], [153, "cmdoption-matflow-open-workflow-r"]], "matflow-rechunk command line option": [[153, "cmdoption-matflow-rechunk-arg-WORKFLOW_REF"], [153, "cmdoption-matflow-rechunk-backup"], [153, "cmdoption-matflow-rechunk-chunk-size"], [153, "cmdoption-matflow-rechunk-r"], [153, "cmdoption-matflow-rechunk-status"]], "matflow-show command line option": [[153, "cmdoption-matflow-show-f"], [153, "cmdoption-matflow-show-legend"], [153, "cmdoption-matflow-show-no-update"], [153, "cmdoption-matflow-show-r"]], "matflow-submission command line option": [[153, "cmdoption-matflow-submission-os-info"]], "matflow-submission-get-known command line option": [[153, "cmdoption-matflow-submission-get-known-json"]], "matflow-submission-scheduler command line option": [[153, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME"]], "matflow-submission-shell-info command line option": [[153, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME"], [153, "cmdoption-matflow-submission-shell-info-exclude-os"]], "matflow-test command line option": [[153, "cmdoption-matflow-test-arg-PY_TEST_ARGS"]], "matflow-test-hpcflow command line option": [[153, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS"]], "matflow-unzip command line option": [[153, "cmdoption-matflow-unzip-arg-WORKFLOW_PATH"], [153, "cmdoption-matflow-unzip-log"], [153, "cmdoption-matflow-unzip-path"]], "matflow-workflow command line option": [[153, "cmdoption-matflow-workflow-arg-WORKFLOW_REF"], [153, "cmdoption-matflow-workflow-r"]], "matflow-workflow-workflow_ref-abort-run command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task"]], "matflow-workflow-workflow_ref-add-submission command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-force-array"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-js-parallelism"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-status"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-tasks"]], "matflow-workflow-workflow_ref-get-param command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX"]], "matflow-workflow-workflow_ref-get-param-source command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX"]], "matflow-workflow-workflow_ref-is-param-set command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX"]], "matflow-workflow-workflow_ref-list-jobscripts command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-jobscripts"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-max-js"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-sub-idx"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-width"]], "matflow-workflow-workflow_ref-list-task-jobscripts command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-max-js"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-sub-idx"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-task-names"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-width"]], "matflow-workflow-workflow_ref-rechunk command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-chunk-size"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status"]], "matflow-workflow-workflow_ref-rechunk-parameter-base command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-chunk-size"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status"]], "matflow-workflow-workflow_ref-rechunk-runs command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-chunk-size"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status"]], "matflow-workflow-workflow_ref-sub command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX"]], "matflow-workflow-workflow_ref-sub-sub_idx-js command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX"]], "matflow-workflow-workflow_ref-sub-sub_idx-js-js_idx-stderr command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stderr-array-idx"]], "matflow-workflow-workflow_ref-sub-sub_idx-js-js_idx-stdout command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stdout-array-idx"]], "matflow-workflow-workflow_ref-sub-sub_idx-list-jobscripts command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-jobscripts"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-max-js"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-width"]], "matflow-workflow-workflow_ref-sub-sub_idx-list-task-jobscripts command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-max-js"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-task-names"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-width"]], "matflow-workflow-workflow_ref-submit command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-cancel"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-print-idx"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-tasks"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait"]], "matflow-workflow-workflow_ref-unzip command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-log"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-path"]], "matflow-workflow-workflow_ref-wait command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "matflow-workflow-workflow_ref-zip command line option": [[153, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-execute"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-rechunk-backups"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-overwrite"], [153, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-path"]], "matflow-zip command line option": [[153, "cmdoption-matflow-zip-arg-WORKFLOW_REF"], [153, "cmdoption-matflow-zip-include-execute"], [153, "cmdoption-matflow-zip-include-rechunk-backups"], [153, "cmdoption-matflow-zip-log"], [153, "cmdoption-matflow-zip-overwrite"], [153, "cmdoption-matflow-zip-path"], [153, "cmdoption-matflow-zip-r"]]}})