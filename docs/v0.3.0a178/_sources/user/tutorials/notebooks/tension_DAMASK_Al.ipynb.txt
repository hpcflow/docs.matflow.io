{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a026540b-359e-4c3f-acce-e61d9d33944e",
   "metadata": {},
   "source": [
    "\n",
    "# Simulating stress-strain curves with DAMASK\n",
    "This notebook processes the results from the demo workflow `tension_DAMASK_Al`, and generates a plot of stress-strain.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "5e04174c-bfc9-44a6-8412-c656fd339ee8",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import matflow as mf\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from pathlib import Path\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a63da62-b6c3-4c1d-ae10-ac9112251201",
   "metadata": {},
   "source": [
    "## Load and process simulation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "04e550a1-bdb9-4839-af3f-746587ed7f14",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "workflow_path = Path(\"tension_DAMASK_Al_2025-05-29_115126\")\n",
    "workflow = mf.Workflow(workflow_path)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "c5337ac3-ba6c-46ae-bfba-36bb925056b6",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "VE_response = workflow.tasks.simulate_VE_loading_damask.elements[0].outputs.VE_response.value\n",
    "\n",
    "stress = np.array(VE_response['phase_data']['vol_avg_equivalent_stress']['data'])\n",
    "strain = np.array(VE_response['phase_data']['vol_avg_equivalent_strain']['data'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0460d09-ad3d-4678-959b-3f9585fb6777",
   "metadata": {},
   "source": [
    "## Plot stress-strain"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "5ca3e8bd-a127-4f74-a7a7-30c33885eca6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Stress (MPa)')"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(strain, stress/1e6, color='k')\n",
    "plt.xlabel(f\"Strain [-]\")\n",
    "plt.ylabel(f\"Stress (MPa)\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "damask-venv",
   "language": "python",
   "name": "damask-venv"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
