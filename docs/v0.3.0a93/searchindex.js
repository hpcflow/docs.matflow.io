Search.setIndex({"docnames": ["development/environments", "development/index", "index", "installation", "reference/_autosummary/matflow", "reference/_autosummary/matflow.Action", "reference/_autosummary/matflow.ActionEnvironment", "reference/_autosummary/matflow.ActionRule", "reference/_autosummary/matflow.ActionScope", "reference/_autosummary/matflow.ActionScopeType", "reference/_autosummary/matflow.Command", "reference/_autosummary/matflow.CommandFilesList", "reference/_autosummary/matflow.DirectPosix", "reference/_autosummary/matflow.DirectWindows", "reference/_autosummary/matflow.Element", "reference/_autosummary/matflow.ElementAction", "reference/_autosummary/matflow.ElementActionRun", "reference/_autosummary/matflow.ElementFilter", "reference/_autosummary/matflow.ElementGroup", "reference/_autosummary/matflow.ElementInputFiles", "reference/_autosummary/matflow.ElementInputs", "reference/_autosummary/matflow.ElementIteration", "reference/_autosummary/matflow.ElementOutputFiles", "reference/_autosummary/matflow.ElementOutputs", "reference/_autosummary/matflow.ElementParameter", "reference/_autosummary/matflow.ElementPropagation", "reference/_autosummary/matflow.ElementRepeats", "reference/_autosummary/matflow.ElementResources", "reference/_autosummary/matflow.ElementSet", "reference/_autosummary/matflow.Elements", "reference/_autosummary/matflow.Environment", "reference/_autosummary/matflow.EnvironmentsList", "reference/_autosummary/matflow.Executable", "reference/_autosummary/matflow.ExecutableInstance", "reference/_autosummary/matflow.ExecutablesList", "reference/_autosummary/matflow.FileNameExt", "reference/_autosummary/matflow.FileNameSpec", "reference/_autosummary/matflow.FileNameStem", "reference/_autosummary/matflow.FileSpec", "reference/_autosummary/matflow.GroupList", "reference/_autosummary/matflow.InputFile", "reference/_autosummary/matflow.InputFileGenerator", "reference/_autosummary/matflow.InputFileGeneratorSource", "reference/_autosummary/matflow.InputSource", "reference/_autosummary/matflow.InputSourceType", "reference/_autosummary/matflow.InputValue", "reference/_autosummary/matflow.Jobscript", "reference/_autosummary/matflow.Loop", "reference/_autosummary/matflow.NumCores", "reference/_autosummary/matflow.OutputFileParser", "reference/_autosummary/matflow.OutputFileParserSource", "reference/_autosummary/matflow.OutputLabel", "reference/_autosummary/matflow.Parameter", "reference/_autosummary/matflow.ParameterPath", "reference/_autosummary/matflow.ParameterPropagationMode", "reference/_autosummary/matflow.ParameterValue", "reference/_autosummary/matflow.Parameters", "reference/_autosummary/matflow.ParametersList", "reference/_autosummary/matflow.ResourceList", "reference/_autosummary/matflow.ResourceSpec", "reference/_autosummary/matflow.Rule", "reference/_autosummary/matflow.SGEPosix", "reference/_autosummary/matflow.SchemaInput", "reference/_autosummary/matflow.SchemaOutput", "reference/_autosummary/matflow.SchemaParameter", "reference/_autosummary/matflow.SlurmPosix", "reference/_autosummary/matflow.SubParameter", "reference/_autosummary/matflow.Submission", "reference/_autosummary/matflow.Task", "reference/_autosummary/matflow.TaskInputParameters", "reference/_autosummary/matflow.TaskList", "reference/_autosummary/matflow.TaskObjective", "reference/_autosummary/matflow.TaskOutputParameters", "reference/_autosummary/matflow.TaskSchema", "reference/_autosummary/matflow.TaskSchemasList", "reference/_autosummary/matflow.TaskSourceType", "reference/_autosummary/matflow.TaskTemplateList", "reference/_autosummary/matflow.ValuePerturbation", "reference/_autosummary/matflow.ValueSequence", "reference/_autosummary/matflow.Workflow", "reference/_autosummary/matflow.WorkflowBlueprint", "reference/_autosummary/matflow.WorkflowLoop", "reference/_autosummary/matflow.WorkflowLoopList", "reference/_autosummary/matflow.WorkflowTask", "reference/_autosummary/matflow.WorkflowTaskList", "reference/_autosummary/matflow.WorkflowTemplate", "reference/_autosummary/matflow.app", "reference/_autosummary/matflow.cancel", "reference/_autosummary/matflow.cli", "reference/_autosummary/matflow.get_OS_info", "reference/_autosummary/matflow.get_known_submissions", "reference/_autosummary/matflow.get_shell_info", "reference/_autosummary/matflow.make_and_submit_demo_workflow", "reference/_autosummary/matflow.make_and_submit_workflow", "reference/_autosummary/matflow.make_demo_workflow", "reference/_autosummary/matflow.make_workflow", "reference/_autosummary/matflow.param_classes", "reference/_autosummary/matflow.param_classes.load", "reference/_autosummary/matflow.param_classes.load.LoadCase", "reference/_autosummary/matflow.param_classes.load.LoadStep", "reference/_autosummary/matflow.param_classes.load.StrainRateMode", "reference/_autosummary/matflow.param_classes.orientations", "reference/_autosummary/matflow.param_classes.orientations.EulerDefinition", "reference/_autosummary/matflow.param_classes.orientations.LatticeDirection", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentation", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentationType", "reference/_autosummary/matflow.param_classes.orientations.Orientations", "reference/_autosummary/matflow.param_classes.orientations.QuatOrder", "reference/_autosummary/matflow.param_classes.orientations.UnitCellAlignment", "reference/_autosummary/matflow.param_classes.seeds", "reference/_autosummary/matflow.param_classes.seeds.MicrostructureSeeds", "reference/_autosummary/matflow.param_classes.single_crystal_parameters", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.SingleCrystalParameters", "reference/_autosummary/matflow.param_classes.utils", "reference/_autosummary/matflow.param_classes.utils.masked_array_from_list", "reference/_autosummary/matflow.run_hpcflow_tests", "reference/_autosummary/matflow.run_tests", "reference/_autosummary/matflow.show", "reference/_autosummary/matflow.show_legend", "reference/_autosummary/matflow.submit_workflow", "reference/_autosummary/matflow.tests", "reference/_autosummary/matflow.tests.conftest", "reference/_autosummary/matflow.tests.conftest.new_null_config", "reference/_autosummary/matflow.tests.conftest.null_config", "reference/_autosummary/matflow.tests.conftest.pytest_addoption", "reference/_autosummary/matflow.tests.conftest.pytest_collection_modifyitems", "reference/_autosummary/matflow.tests.conftest.pytest_configure", "reference/_autosummary/matflow.tests.conftest.pytest_unconfigure", "reference/_autosummary/matflow.tests.test_cli", "reference/_autosummary/matflow.tests.test_cli.test_hpcflow_version", "reference/_autosummary/matflow.tests.test_cli.test_version", "reference/_autosummary/matflow.tests.test_utils", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D_masked", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D_masked", "reference/api", "reference/cli", "reference/config_file", "reference/glossary", "reference/index", "reference/template_components", "reference/template_components/command_files", "reference/template_components/environments", "reference/template_components/parameters", "reference/template_components/task_schemas", "reference/workflows", "user/how_to/config", "user/how_to/index", "user/how_to/task_schemas", "user/how_to/template_components", "user/how_to/workflow_templates", "user/how_to/workflows", "user/index", "user/tutorials"], "filenames": ["development/environments.rst", "development/index.rst", "index.rst", "installation.rst", "reference/_autosummary/matflow.rst", "reference/_autosummary/matflow.Action.rst", "reference/_autosummary/matflow.ActionEnvironment.rst", "reference/_autosummary/matflow.ActionRule.rst", "reference/_autosummary/matflow.ActionScope.rst", "reference/_autosummary/matflow.ActionScopeType.rst", "reference/_autosummary/matflow.Command.rst", "reference/_autosummary/matflow.CommandFilesList.rst", "reference/_autosummary/matflow.DirectPosix.rst", "reference/_autosummary/matflow.DirectWindows.rst", "reference/_autosummary/matflow.Element.rst", "reference/_autosummary/matflow.ElementAction.rst", "reference/_autosummary/matflow.ElementActionRun.rst", "reference/_autosummary/matflow.ElementFilter.rst", "reference/_autosummary/matflow.ElementGroup.rst", "reference/_autosummary/matflow.ElementInputFiles.rst", "reference/_autosummary/matflow.ElementInputs.rst", "reference/_autosummary/matflow.ElementIteration.rst", "reference/_autosummary/matflow.ElementOutputFiles.rst", "reference/_autosummary/matflow.ElementOutputs.rst", "reference/_autosummary/matflow.ElementParameter.rst", "reference/_autosummary/matflow.ElementPropagation.rst", "reference/_autosummary/matflow.ElementRepeats.rst", "reference/_autosummary/matflow.ElementResources.rst", "reference/_autosummary/matflow.ElementSet.rst", "reference/_autosummary/matflow.Elements.rst", "reference/_autosummary/matflow.Environment.rst", "reference/_autosummary/matflow.EnvironmentsList.rst", "reference/_autosummary/matflow.Executable.rst", "reference/_autosummary/matflow.ExecutableInstance.rst", "reference/_autosummary/matflow.ExecutablesList.rst", "reference/_autosummary/matflow.FileNameExt.rst", "reference/_autosummary/matflow.FileNameSpec.rst", "reference/_autosummary/matflow.FileNameStem.rst", "reference/_autosummary/matflow.FileSpec.rst", "reference/_autosummary/matflow.GroupList.rst", "reference/_autosummary/matflow.InputFile.rst", "reference/_autosummary/matflow.InputFileGenerator.rst", "reference/_autosummary/matflow.InputFileGeneratorSource.rst", "reference/_autosummary/matflow.InputSource.rst", "reference/_autosummary/matflow.InputSourceType.rst", "reference/_autosummary/matflow.InputValue.rst", "reference/_autosummary/matflow.Jobscript.rst", "reference/_autosummary/matflow.Loop.rst", "reference/_autosummary/matflow.NumCores.rst", "reference/_autosummary/matflow.OutputFileParser.rst", "reference/_autosummary/matflow.OutputFileParserSource.rst", "reference/_autosummary/matflow.OutputLabel.rst", "reference/_autosummary/matflow.Parameter.rst", "reference/_autosummary/matflow.ParameterPath.rst", "reference/_autosummary/matflow.ParameterPropagationMode.rst", "reference/_autosummary/matflow.ParameterValue.rst", "reference/_autosummary/matflow.Parameters.rst", "reference/_autosummary/matflow.ParametersList.rst", "reference/_autosummary/matflow.ResourceList.rst", "reference/_autosummary/matflow.ResourceSpec.rst", "reference/_autosummary/matflow.Rule.rst", "reference/_autosummary/matflow.SGEPosix.rst", "reference/_autosummary/matflow.SchemaInput.rst", "reference/_autosummary/matflow.SchemaOutput.rst", "reference/_autosummary/matflow.SchemaParameter.rst", "reference/_autosummary/matflow.SlurmPosix.rst", "reference/_autosummary/matflow.SubParameter.rst", "reference/_autosummary/matflow.Submission.rst", "reference/_autosummary/matflow.Task.rst", "reference/_autosummary/matflow.TaskInputParameters.rst", "reference/_autosummary/matflow.TaskList.rst", "reference/_autosummary/matflow.TaskObjective.rst", "reference/_autosummary/matflow.TaskOutputParameters.rst", "reference/_autosummary/matflow.TaskSchema.rst", "reference/_autosummary/matflow.TaskSchemasList.rst", "reference/_autosummary/matflow.TaskSourceType.rst", "reference/_autosummary/matflow.TaskTemplateList.rst", "reference/_autosummary/matflow.ValuePerturbation.rst", "reference/_autosummary/matflow.ValueSequence.rst", "reference/_autosummary/matflow.Workflow.rst", "reference/_autosummary/matflow.WorkflowBlueprint.rst", "reference/_autosummary/matflow.WorkflowLoop.rst", "reference/_autosummary/matflow.WorkflowLoopList.rst", "reference/_autosummary/matflow.WorkflowTask.rst", "reference/_autosummary/matflow.WorkflowTaskList.rst", "reference/_autosummary/matflow.WorkflowTemplate.rst", "reference/_autosummary/matflow.app.rst", "reference/_autosummary/matflow.cancel.rst", "reference/_autosummary/matflow.cli.rst", "reference/_autosummary/matflow.get_OS_info.rst", "reference/_autosummary/matflow.get_known_submissions.rst", "reference/_autosummary/matflow.get_shell_info.rst", "reference/_autosummary/matflow.make_and_submit_demo_workflow.rst", "reference/_autosummary/matflow.make_and_submit_workflow.rst", "reference/_autosummary/matflow.make_demo_workflow.rst", "reference/_autosummary/matflow.make_workflow.rst", "reference/_autosummary/matflow.param_classes.rst", "reference/_autosummary/matflow.param_classes.load.rst", "reference/_autosummary/matflow.param_classes.load.LoadCase.rst", "reference/_autosummary/matflow.param_classes.load.LoadStep.rst", "reference/_autosummary/matflow.param_classes.load.StrainRateMode.rst", "reference/_autosummary/matflow.param_classes.orientations.rst", "reference/_autosummary/matflow.param_classes.orientations.EulerDefinition.rst", "reference/_autosummary/matflow.param_classes.orientations.LatticeDirection.rst", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentation.rst", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentationType.rst", "reference/_autosummary/matflow.param_classes.orientations.Orientations.rst", "reference/_autosummary/matflow.param_classes.orientations.QuatOrder.rst", "reference/_autosummary/matflow.param_classes.orientations.UnitCellAlignment.rst", "reference/_autosummary/matflow.param_classes.seeds.rst", "reference/_autosummary/matflow.param_classes.seeds.MicrostructureSeeds.rst", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.rst", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.rst", "reference/_autosummary/matflow.param_classes.utils.rst", "reference/_autosummary/matflow.param_classes.utils.masked_array_from_list.rst", "reference/_autosummary/matflow.run_hpcflow_tests.rst", "reference/_autosummary/matflow.run_tests.rst", "reference/_autosummary/matflow.show.rst", "reference/_autosummary/matflow.show_legend.rst", "reference/_autosummary/matflow.submit_workflow.rst", "reference/_autosummary/matflow.tests.rst", "reference/_autosummary/matflow.tests.conftest.rst", "reference/_autosummary/matflow.tests.conftest.new_null_config.rst", "reference/_autosummary/matflow.tests.conftest.null_config.rst", "reference/_autosummary/matflow.tests.conftest.pytest_addoption.rst", "reference/_autosummary/matflow.tests.conftest.pytest_collection_modifyitems.rst", "reference/_autosummary/matflow.tests.conftest.pytest_configure.rst", "reference/_autosummary/matflow.tests.conftest.pytest_unconfigure.rst", "reference/_autosummary/matflow.tests.test_cli.rst", "reference/_autosummary/matflow.tests.test_cli.test_hpcflow_version.rst", "reference/_autosummary/matflow.tests.test_cli.test_version.rst", "reference/_autosummary/matflow.tests.test_utils.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D_masked.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D_masked.rst", "reference/api.rst", "reference/cli.rst", "reference/config_file.rst", "reference/glossary.rst", "reference/index.rst", "reference/template_components.rst", "reference/template_components/command_files.rst", "reference/template_components/environments.rst", "reference/template_components/parameters.rst", "reference/template_components/task_schemas.rst", "reference/workflows.rst", "user/how_to/config.rst", "user/how_to/index.rst", "user/how_to/task_schemas.rst", "user/how_to/template_components.rst", "user/how_to/workflow_templates.rst", "user/how_to/workflows.rst", "user/index.rst", "user/tutorials.rst"], "titles": ["Environments", "Development", "Welcome to MatFlow\u2019s documentation!", "Installation", "matflow", "matflow.Action", "matflow.ActionEnvironment", "matflow.ActionRule", "matflow.ActionScope", "matflow.ActionScopeType", "matflow.Command", "matflow.CommandFilesList", "matflow.DirectPosix", "matflow.DirectWindows", "matflow.Element", "matflow.ElementAction", "matflow.ElementActionRun", "matflow.ElementFilter", "matflow.ElementGroup", "matflow.ElementInputFiles", "matflow.ElementInputs", "matflow.ElementIteration", "matflow.ElementOutputFiles", "matflow.ElementOutputs", "matflow.ElementParameter", "matflow.ElementPropagation", "matflow.ElementRepeats", "matflow.ElementResources", "matflow.ElementSet", "matflow.Elements", "matflow.Environment", "matflow.EnvironmentsList", "matflow.Executable", "matflow.ExecutableInstance", "matflow.ExecutablesList", "matflow.FileNameExt", "matflow.FileNameSpec", "matflow.FileNameStem", "matflow.FileSpec", "matflow.GroupList", "matflow.InputFile", "matflow.InputFileGenerator", "matflow.InputFileGeneratorSource", "matflow.InputSource", "matflow.InputSourceType", "matflow.InputValue", "matflow.Jobscript", "matflow.Loop", "matflow.NumCores", "matflow.OutputFileParser", "matflow.OutputFileParserSource", "matflow.OutputLabel", "matflow.Parameter", "matflow.ParameterPath", "matflow.ParameterPropagationMode", "matflow.ParameterValue", "matflow.Parameters", "matflow.ParametersList", "matflow.ResourceList", "matflow.ResourceSpec", "matflow.Rule", "matflow.SGEPosix", "matflow.SchemaInput", "matflow.SchemaOutput", "matflow.SchemaParameter", "matflow.SlurmPosix", "matflow.SubParameter", "matflow.Submission", "matflow.Task", "matflow.TaskInputParameters", "matflow.TaskList", "matflow.TaskObjective", "matflow.TaskOutputParameters", "matflow.TaskSchema", "matflow.TaskSchemasList", "matflow.TaskSourceType", "matflow.TaskTemplateList", "matflow.ValuePerturbation", "matflow.ValueSequence", "matflow.Workflow", "matflow.WorkflowBlueprint", "matflow.WorkflowLoop", "matflow.WorkflowLoopList", "matflow.WorkflowTask", "matflow.WorkflowTaskList", "matflow.WorkflowTemplate", "matflow.app", "matflow.cancel", "matflow.cli", "matflow.get_OS_info", "matflow.get_known_submissions", "matflow.get_shell_info", "matflow.make_and_submit_demo_workflow", "matflow.make_and_submit_workflow", "matflow.make_demo_workflow", "matflow.make_workflow", "matflow.param_classes", "matflow.param_classes.load", "matflow.param_classes.load.LoadCase", "matflow.param_classes.load.LoadStep", "matflow.param_classes.load.StrainRateMode", "matflow.param_classes.orientations", "matflow.param_classes.orientations.EulerDefinition", "matflow.param_classes.orientations.LatticeDirection", "matflow.param_classes.orientations.OrientationRepresentation", "matflow.param_classes.orientations.OrientationRepresentationType", "matflow.param_classes.orientations.Orientations", "matflow.param_classes.orientations.QuatOrder", "matflow.param_classes.orientations.UnitCellAlignment", "matflow.param_classes.seeds", "matflow.param_classes.seeds.MicrostructureSeeds", "matflow.param_classes.single_crystal_parameters", "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters", "matflow.param_classes.utils", "matflow.param_classes.utils.masked_array_from_list", "matflow.run_hpcflow_tests", "matflow.run_tests", "matflow.show", "matflow.show_legend", "matflow.submit_workflow", "matflow.tests", "matflow.tests.conftest", "matflow.tests.conftest.new_null_config", "matflow.tests.conftest.null_config", "matflow.tests.conftest.pytest_addoption", "matflow.tests.conftest.pytest_collection_modifyitems", "matflow.tests.conftest.pytest_configure", "matflow.tests.conftest.pytest_unconfigure", "matflow.tests.test_cli", "matflow.tests.test_cli.test_hpcflow_version", "matflow.tests.test_cli.test_version", "matflow.tests.test_utils", "matflow.tests.test_utils.test_masked_array_from_list_1D", "matflow.tests.test_utils.test_masked_array_from_list_1D_masked", "matflow.tests.test_utils.test_masked_array_from_list_2D", "matflow.tests.test_utils.test_masked_array_from_list_2D_masked", "Python API", "Command-line interface", "Configuration file", "Glossary", "Reference", "Template components", "Command files", "Task schemas", "Parameters", "Task schemas", "Demo workflows", "Configuration how-tos", "How-To Guides", "Task schema how-tos", "Template components", "Workflow templates how-tos", "Workflow how-tos", "User Guide", "Tutorials"], "terms": {"There": [0, 3, 152], "ar": [0, 3, 5, 11, 12, 13, 14, 15, 16, 21, 31, 34, 39, 45, 49, 57, 61, 62, 65, 67, 68, 70, 73, 74, 76, 78, 79, 80, 83, 85, 90, 92, 93, 94, 95, 96, 99, 117, 118, 119, 137, 138, 144, 146, 152], "two": [0, 3, 5, 21, 81, 99], "wai": [0, 3, 58, 139], "run": [0, 3, 10, 12, 13, 14, 15, 16, 21, 41, 46, 60, 61, 65, 79, 115, 116, 117, 147], "task": [0, 8, 14, 15, 16, 21, 24, 25, 28, 29, 39, 40, 42, 43, 44, 45, 46, 47, 50, 51, 53, 56, 59, 62, 63, 69, 70, 72, 73, 74, 76, 77, 79, 81, 83, 85, 92, 93, 119, 137, 140, 141, 144, 146, 148, 153], "us": [0, 5, 14, 21, 28, 45, 59, 62, 73, 78, 79, 85, 92, 93, 94, 95, 99, 107, 108, 119, 137, 138, 144, 146, 147, 149, 151, 152], "mtex": [0, 108, 146], "script": [0, 5, 16, 41, 49, 137], "can": [0, 3, 45, 58, 79, 85, 137, 138, 146, 147, 151, 152], "either": [0, 14, 21, 78, 79, 83, 85, 93, 95, 99, 137], "compil": [0, 145, 146], "applic": [0, 3, 16, 21, 137], "directli": [0, 5, 16, 68, 106], "thi": [0, 5, 10, 12, 13, 14, 16, 21, 27, 28, 40, 41, 42, 43, 45, 46, 49, 50, 58, 59, 61, 62, 65, 67, 68, 73, 77, 79, 81, 83, 85, 90, 92, 93, 94, 95, 96, 108, 115, 119, 137, 138, 141, 144, 145, 146, 147, 148, 150, 152], "i": [0, 3, 5, 7, 10, 12, 13, 14, 16, 19, 20, 21, 22, 23, 28, 40, 42, 43, 45, 46, 50, 59, 61, 62, 65, 68, 73, 77, 78, 79, 81, 83, 92, 93, 96, 99, 115, 138, 142, 144, 146, 147, 150, 152], "control": [0, 152], "input": [0, 5, 14, 15, 16, 19, 20, 21, 22, 23, 28, 40, 41, 42, 43, 45, 49, 50, 51, 58, 59, 62, 68, 69, 73, 75, 77, 78, 79, 83, 144, 145, 146, 149], "paramet": [0, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 96, 98, 99, 104, 106, 108, 110, 112, 117, 119, 140, 141, 145, 146, 149], "which": [0, 14, 16, 28, 45, 62, 67, 68, 78, 79, 92, 93, 94, 95, 96, 98, 107, 137, 138, 144, 146, 147], "fals": [0, 5, 11, 14, 15, 16, 19, 20, 21, 22, 23, 28, 31, 34, 36, 39, 41, 46, 49, 52, 56, 57, 58, 60, 62, 67, 70, 74, 76, 79, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 117, 119, 137, 145, 146], "default": [0, 5, 14, 15, 16, 21, 43, 44, 56, 57, 59, 61, 62, 65, 68, 79, 83, 85, 87, 92, 93, 99, 108, 119, 137, 140, 144, 148, 153], "when": [0, 59, 79, 85, 92, 93, 94, 95, 137, 147], "run_mtex": 0, "execut": [0, 3, 5, 10, 16, 30, 34, 46, 73, 79, 87, 92, 93, 119, 137, 138, 145], "must": [0, 7, 41, 46, 62, 68, 138, 147, 150], "defin": [0, 14, 16, 19, 20, 21, 22, 23, 47, 62, 73, 79, 81, 83, 96, 144], "true": [0, 5, 7, 11, 14, 16, 21, 27, 31, 34, 39, 40, 45, 46, 49, 57, 60, 62, 67, 70, 74, 76, 78, 79, 85, 90, 91, 92, 93, 94, 95, 117, 119, 137, 138, 145, 146], "compile_mtex": 0, "run_compiled_mtex": 0, "exectu": 0, "both": [0, 3, 78, 99], "fine": 0, "In": [0, 3, 146, 147, 149, 152], "below": [0, 3, 147], "all": [0, 5, 12, 13, 14, 16, 21, 27, 46, 61, 62, 65, 67, 68, 69, 72, 79, 83, 85, 92, 93, 106, 119], "mean": [0, 62, 78, 79, 99, 150], "For": [0, 5, 15, 16, 21, 46, 62, 68, 69, 72, 79, 106, 110, 137, 138, 144, 151, 152], "direct": [0, 46, 99, 138, 144, 146], "matlab": 0, "batch": [0, 65, 79], "switch": [0, 61, 65], "document": [0, 98, 137, 147, 152], "here": [0, 79, 138], "todo": [0, 65, 83, 99, 152], "current": [0, 61, 65, 79, 92, 93, 94, 95, 137, 138, 146, 147], "test": [0, 5, 7, 41, 60, 108, 115, 116, 146], "onli": [0, 5, 14, 21, 68, 79, 90, 115, 137, 147], "name": [0, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 91, 92, 93, 94, 95, 99, 100, 102, 103, 105, 107, 137, 138, 142, 146, 147, 152], "label": [0, 5, 10, 11, 15, 16, 19, 20, 21, 22, 23, 32, 34, 38, 45, 51, 62, 68, 73, 78, 138, 142, 144, 145], "instanc": [0, 32, 90, 137, 152], "command": [0, 2, 3, 5, 11, 16, 33, 73, 79, 92, 93, 108, 118, 140, 141, 145, 147], "c": [0, 103, 106, 146], "path": [0, 3, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 21, 24, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 67, 68, 70, 71, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 87, 92, 93, 94, 95, 106, 110, 119, 138, 146, 147, 152], "ex": [0, 3, 13], "script_name_no_ext": 0, "arg": [0, 12, 13, 36, 61, 65, 115, 116, 137, 146], "num_cor": [0, 12, 13, 27, 32, 33, 59, 61, 65, 85, 138], "1": [0, 9, 11, 14, 15, 21, 31, 34, 39, 44, 54, 57, 58, 61, 65, 70, 74, 75, 76, 77, 78, 79, 82, 84, 99, 100, 102, 103, 105, 107, 137, 144, 145, 146], "parallel_mod": [0, 27, 32, 33, 59, 138], "null": [0, 62], "mtex_path": 0, "folder": [0, 3], "mtex_includ": 0, "get": [0, 5, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 31, 34, 39, 41, 46, 47, 57, 58, 61, 65, 67, 68, 70, 73, 74, 76, 79, 81, 82, 83, 84, 89, 91, 99, 138, 145, 148, 153], "childitem": 0, "recurs": [0, 14], "directori": [0, 16, 35, 36, 37, 38, 46, 65, 68, 79, 92, 93, 94, 95, 137, 138, 146], "_": 0, "fullnam": 0, "join": [0, 79, 92, 93, 94, 95, 137], "data": [0, 5, 14, 21, 40, 42, 45, 50, 55, 59, 68, 77, 79, 83, 98, 99, 104, 106, 108, 110, 112, 138, 139, 146], "mcc": 0, "bat": 0, "r": [0, 61, 137, 142], "singlecompthread": 0, "m": [0, 146], "script_nam": 0, "setup": [0, 30, 137], "set": [0, 25, 28, 45, 59, 68, 79, 83, 85, 90, 92, 93, 119, 138, 144, 148, 153], "up": [0, 79], "e": [0, 5, 45, 59, 62, 80, 85, 137, 138, 144, 146, 150], "g": [0, 5, 80, 85, 137, 138, 144, 146], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "load": [0, 3, 73, 85, 106, 142, 145, 146, 147, 148, 153], "matlab_dir": 0, "runtim": [0, 138], "run_": 0, "sh": [0, 3, 61], "we": [0, 46, 79, 106, 137, 144, 146, 147, 152], "our": 0, "cento": 0, "docker": 0, "imag": 0, "org": [0, 61, 65, 146, 152], "hpcflow": [0, 3, 115, 138, 150], "produc": [0, 5, 68, 146], "relocat": 0, "conda": 0, "matflow": [0, 1, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "pack": 0, "requir": [0, 5, 10, 49, 59, 68, 79, 137], "becaus": [0, 16, 62, 79, 92, 93, 94, 95, 96, 137], "glibc": 0, "compat": [0, 62, 90, 137], "contain": [0, 3, 11, 16, 31, 34, 39, 40, 42, 45, 50, 57, 59, 70, 74, 76, 77, 79, 85, 92, 93, 95, 96, 114, 137, 138], "instal": [0, 2], "miniconda": 0, "via": [0, 3, 5, 106, 110, 152], "bash": [0, 3, 12, 65, 137, 138], "http": [0, 3, 61, 65, 106, 107, 146, 152], "doc": [0, 7, 60, 85, 137], "io": 0, "project": 0, "en": 0, "latest": [0, 3, 14], "user": [0, 2, 3, 12, 13, 61, 65, 99, 138, 152], "guid": [0, 2], "html": [0, 61, 106], "initialis": [0, 21, 62, 83, 106, 110], "shell": [0, 3, 10, 12, 13, 16, 21, 27, 46, 59, 61, 65, 67, 79, 91, 138], "init": 0, "reload": [0, 79, 138], "bashrc": [0, 3], "sourc": [0, 5, 14, 40, 41, 42, 43, 45, 49, 50, 59, 62, 68, 73, 77, 78, 83, 147, 151], "creat": [0, 3, 79, 106, 138], "new": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "pars": [0, 49, 79, 92, 93, 94, 95, 137], "n": [0, 145], "matflow_damask_parse_v3a7_env": 0, "python": [0, 2, 5, 16, 137, 138, 140, 146, 147, 149, 150, 152], "3": [0, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 27, 28, 30, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 73, 77, 78, 79, 81, 82, 83, 84, 85, 86, 90, 99, 103, 117, 138, 144, 145, 146], "10": [0, 78, 137, 146], "libgl": 0, "vtk": 0, "packag": [0, 2, 96], "yum": 0, "mesa": 0, "activ": [0, 46, 67, 90], "add": [0, 79, 92, 93], "pip": 0, "deactiv": 0, "tarbal": 0, "save": [0, 28, 40, 42, 45, 50, 59, 68, 77, 78, 79, 106, 138, 147], "result": [0, 99], "compress": [0, 146], "file": [0, 2, 3, 5, 8, 11, 21, 40, 41, 46, 49, 68, 79, 85, 90, 92, 93, 95, 117, 140, 141, 145, 146, 148, 151, 152, 153], "outsid": 0, "transfer": 0, "target": [0, 99, 146], "machin": [0, 21, 27, 46, 67, 90, 138, 147], "On": [0, 62], "unpack": 0, "mkdir": 0, "tar": 0, "xzf": 0, "gz": 0, "bin": [0, 12, 65], "The": [0, 3, 14, 21, 45, 49, 62, 68, 79, 85, 92, 93, 94, 95, 96, 99, 137, 138, 144, 147], "now": [0, 90], "normal": [0, 99, 137], "abov": [0, 3], "resourc": [0, 3, 12, 13, 16, 21, 28, 46, 58, 59, 61, 65, 68, 79, 83, 85, 137], "github": [0, 3, 151], "index": [0, 2, 5, 11, 14, 16, 21, 28, 31, 34, 39, 45, 46, 57, 58, 67, 68, 70, 74, 76, 77, 79, 81, 82, 83, 84, 137], "manag": [0, 79, 147, 153], "an": [0, 3, 5, 7, 19, 20, 22, 23, 28, 60, 62, 68, 73, 78, 79, 106, 119, 137, 138, 146, 151], "160": 0, "damask_parse_env": 0, "matflow_damask_parse_env": 0, "damask_env": 0, "damask_grid": [0, 145], "rm": [0, 3], "interact": [0, 137, 147], "volum": [0, 99, 144, 146], "pwd": 0, "wd": 0, "env": [0, 10], "omp_num_thread": 0, "eisenforschung": 0, "grid": 0, "0": [0, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 27, 28, 30, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 100, 102, 103, 105, 106, 107, 110, 137, 144, 145, 146], "alpha7": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154], "home": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "runner": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "work": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "environ": [1, 2, 5, 6, 16, 31, 32, 34, 41, 49, 67, 137, 140, 141, 143, 145, 147], "matlab_env": 1, "exampl": [1, 3, 5, 21, 62, 98, 99, 137, 138, 144, 151], "definit": 1, "window": [1, 3, 59, 137], "linux": [1, 3, 138], "maco": [1, 3], "damask_pars": 1, "damask": [1, 146], "cli": [2, 137, 146, 147, 152], "download": 2, "binari": [2, 146], "advanc": 2, "releas": 2, "note": [2, 12, 13, 14, 16, 59, 61, 65, 68, 96, 147], "how": [2, 25, 62, 106, 153], "tutori": [2, 153], "refer": [2, 61, 65, 83, 106, 107, 137, 138, 145, 146, 147, 152], "api": [2, 3, 140, 146, 147, 149], "line": [2, 3, 5, 10, 46, 117, 140], "interfac": [2, 3, 140], "templat": [2, 16, 21, 58, 79, 80, 81, 83, 85, 92, 93, 94, 95, 137, 140, 146, 147, 148, 153], "compon": [2, 99, 107, 137, 140, 147], "demo": [2, 92, 94, 138, 140], "workflow": [2, 3, 5, 10, 14, 16, 21, 28, 40, 42, 43, 45, 46, 50, 55, 59, 62, 67, 68, 73, 77, 78, 80, 81, 83, 85, 87, 90, 92, 93, 94, 95, 98, 99, 104, 106, 108, 110, 112, 117, 119, 140, 147, 148, 153], "configur": [2, 27, 140, 148, 153], "glossari": [2, 140], "develop": [2, 3], "search": 2, "page": [2, 3], "option": [3, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 73, 74, 76, 77, 78, 79, 82, 84, 85, 99, 137, 138, 147, 152], "allow": [3, 41, 62, 79, 92, 93, 119, 137], "design": 3, "recommend": 3, "beginn": 3, "strongli": 3, "you": [3, 146, 147, 148, 152], "want": [3, 147], "cluster": 3, "explor": [3, 137], "comfort": 3, "If": [3, 5, 11, 14, 16, 19, 20, 21, 22, 23, 31, 34, 39, 43, 46, 57, 62, 70, 74, 76, 79, 81, 83, 85, 90, 91, 92, 93, 94, 95, 99, 117, 119, 137, 138, 147, 152], "interest": 3, "contribut": 3, "place": 3, "start": [3, 9, 44, 46, 48, 54, 67, 75, 78, 79, 100, 102, 103, 105, 107, 145, 150], "simultan": [3, 79, 92, 93, 119, 137], "through": [3, 62, 148], "termin": [3, 47, 79, 81, 137], "prompt": 3, "open": 3, "past": 3, "shown": 3, "press": 3, "enter": 3, "touch": 3, "tmp": [3, 138], "curl": 3, "fssl": 3, "raw": 3, "githubusercont": 3, "com": [3, 65, 106], "main": [3, 8, 9, 145], "src": 3, "prereleas": 3, "univlink": 3, "powershel": [3, 13, 137, 138], "scriptblock": 3, "object": [3, 11, 14, 21, 31, 34, 39, 46, 57, 58, 68, 70, 73, 74, 76, 79, 82, 83, 84, 85, 96, 98, 106, 137, 146, 149, 150, 152], "net": [3, 61, 107], "webclient": 3, "downloadstr": 3, "ps1": 3, "repositori": [3, 151], "follow": [3, 137, 138, 147, 151], "It": [3, 138], "version": [3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 27, 28, 30, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 73, 77, 78, 79, 81, 82, 83, 84, 85, 86, 137, 138, 145, 147], "zip": [3, 79, 138, 152], "archiv": [3, 138], "singl": [3, 11, 31, 34, 39, 45, 57, 58, 62, 68, 70, 74, 76, 77, 82, 83, 84, 98, 99, 146, 152], "extract": [3, 61, 65], "access": [3, 11, 31, 34, 39, 57, 58, 70, 74, 76, 82, 84, 99, 146], "locat": [3, 137, 146], "depend": [3, 14, 16, 21, 28, 46, 79, 83, 85, 137], "oper": [3, 89, 91, 137], "system": [3, 89, 91, 137, 138], "local": [3, 14, 16, 21, 28, 43, 44, 68, 83, 137, 138, 152], "share": 3, "librari": 3, "support": [3, 27, 79, 91, 92, 93, 119, 137, 152], "usernam": 3, "appdata": 3, "A": [3, 11, 31, 34, 39, 45, 57, 62, 63, 68, 70, 73, 74, 76, 79, 85, 98, 99, 103, 138, 139, 144, 146], "symbol": 3, "link": 3, "alia": [3, 137], "point": [3, 138, 144], "simpl": [3, 146], "ad": [3, 25, 45, 79, 83], "zshrc": 3, "profil": 3, "ani": [3, 8, 9, 14, 15, 16, 21, 24, 27, 33, 45, 52, 56, 61, 65, 68, 75, 78, 79, 83, 85, 145, 147], "detect": 3, "try": [3, 83], "alreadi": [3, 79, 92, 93, 94, 95, 137], "stop": [3, 48, 78], "exit": [3, 79, 137], "hpc": [3, 61], "check": [3, 28, 43, 68, 79, 81, 83], "connect": 3, "internet": 3, "first": [3, 46, 67, 81, 99, 137, 147], "might": [3, 12, 13, 147], "need": [3, 46, 68, 147], "proxi": 3, "pypi": 3, "0a93": [3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 27, 28, 30, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 73, 77, 78, 79, 81, 82, 83, 84, 85, 86, 138], "come": [3, 14, 21, 83], "soon": 3, "avail": [3, 68, 115, 137, 138], "format": [3, 5, 73, 79, 85, 92, 93, 94, 95, 137, 151, 152], "correspond": [3, 16, 67, 79, 83, 98, 99], "differ": [3, 79], "pyinstal": 3, "gener": [3, 5, 14, 41, 42, 46, 49, 58, 67, 68, 79, 85, 92, 93, 94, 95, 99, 106, 108, 114, 137, 138, 146, 148, 153], "everyth": 3, "click": 3, "your": [3, 147], "platform": 3, "executablematflow": 3, "v0": 3, "linuxlinux": 3, "foldermatflow": 3, "dir": 3, "zipmaco": 3, "macosmaco": 3, "zipwindow": 3, "win": 3, "switcher": 3, "top": [3, 16, 138], "right": 3, "corner": 3, "other": [3, 14, 21, 43, 62, 68, 79, 107], "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112, 150], "function": [4, 16, 113, 115, 121, 128, 131, 137, 138, 146, 152], "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 138, 144], "none": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 91, 92, 93, 94, 95, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112, 117, 119, 145], "script_data_in": 5, "script_data_out": 5, "script_data_files_use_opt": 5, "script_ex": 5, "abort": [5, 41, 49, 79], "input_file_gener": [5, 8, 9], "output_file_pars": [5, 8, 9], "input_fil": [5, 14, 15, 16, 21, 28, 41, 68, 83], "output_fil": [5, 14, 15, 16, 21, 49], "rule": [5, 7, 17, 41, 43, 47, 150], "save_fil": [5, 49], "clean_up": [5, 49], "base": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112], "method": [5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 92, 93, 94, 95, 98, 99, 104, 106, 108, 110, 112, 150], "list": [5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 92, 93, 96, 98, 99, 107, 114, 119, 138, 144, 147], "app": [5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 77, 78, 79, 81, 82, 83, 84, 85, 115, 137, 138, 151, 152], "actionenviron": 5, "str": [5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 32, 33, 35, 36, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 77, 78, 79, 82, 83, 84, 85, 87, 91, 92, 93, 94, 95, 99, 110, 138, 144], "bool": [5, 7, 10, 11, 14, 15, 16, 21, 27, 28, 31, 34, 39, 40, 41, 42, 45, 46, 49, 50, 52, 56, 57, 59, 60, 62, 67, 68, 70, 74, 76, 77, 78, 79, 83, 85, 90, 91, 92, 93, 94, 95, 104, 117, 119, 138], "inputfilegener": [5, 42], "outputfilepars": [5, 50], "filespec": [5, 40, 41, 49, 142], "actionrul": 5, "compose_sourc": [5, 41, 49], "snip_path": 5, "content": [5, 40, 41, 42, 49, 50, 137, 145], "return": [5, 7, 10, 12, 13, 14, 15, 16, 17, 21, 27, 28, 40, 41, 42, 43, 45, 46, 49, 50, 55, 59, 60, 61, 65, 67, 68, 73, 77, 78, 79, 81, 83, 85, 89, 91, 92, 93, 94, 95, 98, 99, 104, 106, 108, 110, 112, 119, 137, 138], "type": [5, 7, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 28, 40, 41, 42, 43, 44, 45, 46, 49, 50, 54, 55, 57, 59, 60, 61, 62, 65, 67, 68, 73, 75, 77, 78, 79, 81, 83, 85, 89, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112, 119, 137, 138, 144, 146, 150], "expand": 5, "classmethod": [5, 6, 7, 8, 10, 11, 12, 13, 17, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 98, 99, 104, 106, 108, 110, 112], "from_json_lik": [5, 6, 7, 8, 10, 11, 17, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 63, 64, 67, 68, 70, 71, 73, 74, 76, 77, 78, 82, 84, 85, 106, 110, 144], "json_lik": [5, 6, 7, 8, 10, 11, 17, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 63, 64, 67, 68, 70, 71, 73, 74, 76, 77, 78, 82, 84, 85], "shared_data": [5, 6, 7, 8, 10, 11, 17, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 63, 64, 67, 68, 70, 71, 73, 74, 76, 77, 78, 82, 84, 85], "union": [5, 6, 7, 8, 10, 16, 17, 18, 21, 24, 27, 28, 30, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 53, 58, 59, 60, 62, 63, 64, 67, 68, 71, 73, 77, 79, 82, 84, 85], "dict": [5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 89, 91, 92, 93, 94, 95, 98, 99, 104, 106, 108, 110, 112, 119, 138, 144], "objectlist": [5, 6, 7, 10, 17, 18, 27, 28, 30, 32, 33, 35, 36, 37, 38, 40, 41, 42, 47, 48, 50, 51, 52, 53, 58, 59, 60, 63, 64, 67, 68, 71, 73, 77, 82, 84, 85], "generate_data_index": 5, "act_idx": 5, "ear_id": [5, 21, 46, 79, 137], "schema_data_idx": 5, "all_data_idx": 5, "param_sourc": 5, "element": [5, 12, 13, 15, 16, 21, 24, 25, 28, 41, 46, 60, 61, 62, 65, 68, 69, 72, 79, 81, 83, 85, 99, 114, 118, 137, 144, 146], "iter": [5, 14, 16, 21, 60, 68, 79, 81, 137, 146], "whose": [5, 11, 16, 31, 34, 39, 45, 57, 62, 68, 70, 73, 74, 76, 79, 81, 83, 114, 137, 138], "overal": [5, 21], "pass": [5, 16, 67, 68, 79, 92, 93, 94, 95, 99, 137, 146], "mutat": [5, 12, 13, 61, 65, 83], "int": [5, 12, 13, 14, 15, 16, 21, 26, 27, 28, 40, 42, 43, 45, 46, 47, 48, 50, 53, 55, 59, 61, 65, 66, 67, 68, 73, 77, 78, 79, 81, 83, 87, 90, 92, 93, 98, 99, 104, 106, 108, 110, 112, 117, 119, 144, 145], "get_command_input_file_label": 5, "tupl": [5, 10, 11, 12, 13, 16, 31, 34, 39, 40, 42, 45, 46, 47, 50, 57, 58, 59, 61, 65, 67, 68, 70, 73, 74, 76, 77, 78, 81, 82, 84], "get_command_input_typ": 5, "sub_paramet": [5, 52], "sub": [5, 45, 78, 96, 147], "dot": [5, 11, 31, 34, 39, 45, 57, 70, 74, 76, 137], "delimit": [5, 45, 46, 106, 110, 137, 146], "untouch": 5, "root": 5, "disregard": 5, "part": [5, 45, 67, 78], "get_command_output_typ": 5, "stdout": [5, 10, 12, 13, 16, 46, 61, 65, 79, 142, 145], "stderr": [5, 10, 16, 46, 79, 137, 142, 145], "argument": [5, 10, 11, 27, 31, 34, 39, 45, 57, 58, 62, 70, 74, 76, 79, 82, 84, 92, 93, 94, 95, 98, 137], "get_commands_action_env": 5, "get_environ": [5, 16], "get_environment_label": [5, 16], "get_input_file_generator_action_env": 5, "get_input_file_label": 5, "get_input_typ": 5, "consum": 5, "get_output_file_label": 5, "get_output_file_parser_action_env": 5, "get_output_typ": [5, 10], "output": [5, 8, 12, 13, 14, 15, 16, 21, 49, 51, 61, 63, 65, 68, 72, 73, 75, 79, 83, 117, 118, 137, 144, 145, 146, 149], "standard": [5, 79], "error": [5, 61, 65, 79, 138], "parser": [5, 49, 50, 124], "get_param_dump_file_path_hdf5": 5, "js_idx": [5, 16, 79, 137], "js_act_idx": [5, 16, 79, 137], "get_param_dump_file_path_json": 5, "static": [5, 12, 13, 27, 61, 65, 67, 68, 83, 106], "get_param_dump_file_stem": 5, "get_param_load_file_path_hdf5": 5, "get_param_load_file_path_json": 5, "get_param_load_file_stem": 5, "get_parameter_depend": [5, 73], "find": [5, 73, 83], "where": [5, 14, 16, 18, 21, 26, 40, 42, 43, 45, 50, 51, 59, 68, 73, 77, 79, 92, 93, 94, 95, 99, 112, 137, 138, 144, 146], "given": [5, 15, 16, 19, 20, 21, 22, 23, 25, 41, 43, 46, 60, 67, 68, 73, 79, 81, 83, 91, 137], "schemaparamet": [5, 73], "get_parameter_nam": [5, 15, 16, 21], "prefix": [5, 15, 16, 21, 68, 78], "associ": [5, 15, 16, 19, 20, 21, 22, 23, 45, 67, 68, 79, 137, 144], "would": [5, 21, 96], "p1": [5, 21, 62, 145], "p2": [5, 21, 145], "ha": [5, 19, 20, 21, 22, 23, 46, 62, 98, 137], "ignor": [5, 15, 16, 21, 79, 85, 137], "accept": [5, 11, 21, 31, 34, 39, 45, 57, 70, 74, 76], "same": [5, 21, 46, 79], "one": [5, 11, 21, 31, 34, 39, 58, 62, 68, 70, 74, 76, 79, 82, 84, 92, 93, 94, 95, 137, 146], "distinct": [5, 21], "taskschema": [5, 53, 68, 149], "level": [5, 16, 21, 58, 85, 138, 147], "wherea": [5, 21, 107], "schema": [5, 8, 14, 16, 19, 20, 21, 22, 23, 39, 49, 51, 52, 62, 68, 69, 72, 73, 74, 137, 140, 141, 144, 146, 148, 153], "One": [5, 15, 16, 21, 85, 87, 91, 99], "get_possible_scop": 5, "scope": [5, 6, 16, 21, 58, 59, 79, 85], "inclus": 5, "order": [5, 107], "decreas": 5, "specif": [5, 12, 13, 16, 21, 27, 59, 61, 65], "actionscop": [5, 6, 59], "get_precise_scop": 5, "get_required_execut": [5, 10], "get_resolved_action_env": 5, "relevant_scop": 5, "actionscopetyp": [5, 8], "get_script_nam": 5, "get_snippet_script_path": 5, "script_path": 5, "get_snippet_script_str": 5, "is_input_type_requir": [5, 68], "typ": [5, 8, 14, 15, 16, 21, 52, 62, 63, 64, 68, 150], "provided_fil": 5, "is_snippet_script": 5, "provid": [5, 28, 46, 57, 68, 117, 137, 138, 147, 151], "string": [5, 40, 42, 45, 46, 50, 59, 62, 73, 77, 79, 85, 92, 93, 95, 99, 137, 138, 144], "repres": [5, 7, 8, 25, 28, 46, 51, 59, 60, 62, 73, 79, 81, 83, 85, 92, 93, 98, 99], "snippet": [5, 148], "modifi": [5, 137, 147], "befor": [5, 21, 79, 147], "receiv": 5, "process_script_data_format": 5, "properti": [5, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 32, 36, 38, 40, 42, 45, 46, 47, 50, 52, 58, 59, 62, 63, 64, 67, 68, 73, 77, 78, 79, 81, 83, 98, 99, 110, 112, 149], "script_data_in_group": 5, "script_data_in_has_direct": 5, "some": [5, 139], "script_data_in_has_fil": 5, "intermedi": 5, "script_data_out_group": 5, "out": [5, 58, 99, 137, 145], "script_data_out_has_direct": 5, "script_data_out_has_fil": 5, "script_is_python": 5, "determin": [5, 16, 62, 93, 95, 137, 144], "extens": [5, 40, 42, 50, 79, 85], "task_schema": [5, 62], "test_rul": 5, "element_it": [5, 17, 43, 81], "against": [5, 27], "specifi": [5, 11, 12, 13, 14, 16, 21, 27, 30, 31, 34, 39, 45, 57, 58, 61, 62, 65, 68, 70, 74, 76, 79, 81, 82, 83, 84, 85, 92, 93, 94, 95, 99, 137, 138, 144, 152], "to_dict": [5, 6, 7, 8, 10, 11, 17, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 64, 67, 68, 70, 71, 73, 74, 76, 77, 78, 82, 84, 85, 98, 99, 104, 106, 108, 110, 112], "to_json_lik": [5, 6, 7, 8, 10, 11, 17, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 63, 64, 67, 68, 70, 71, 73, 74, 76, 77, 78, 82, 84, 85], "dct": [5, 6, 7, 8, 10, 11, 17, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 63, 64, 67, 68, 70, 71, 73, 74, 76, 77, 78, 82, 84, 85], "exclud": [5, 6, 7, 8, 10, 11, 17, 18, 21, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 63, 64, 67, 68, 70, 71, 73, 74, 76, 77, 78, 82, 84, 85, 90, 91, 137], "check_exist": [7, 60], "check_miss": [7, 60], "condit": [7, 60, 79, 99, 137, 138, 144, 146], "cast": [7, 45, 60], "action": [7, 8, 14, 15, 16, 21, 41, 46, 49, 58, 59, 60, 68, 73, 79, 85, 145], "includ": [7, 14, 16, 21, 79, 85, 90, 92, 93, 94, 95, 112, 119, 137, 144, 146, 147, 150], "conditionlik": [7, 60], "element_iter": [7, 15, 16, 19, 20, 22, 23, 28], "elementiter": [7, 14, 17, 19, 20, 22, 23, 60, 79], "kwarg": [8, 11, 12, 13, 31, 34, 39, 57, 58, 61, 65, 70, 74, 76, 78, 79, 82, 84, 98, 110], "identif": 8, "subset": [8, 16, 51, 68, 79, 81], "filter": [8, 12, 13, 17, 61, 65, 107], "process": [8, 9, 12, 13, 61, 65, 79, 90, 137, 139, 145, 146], "to_str": [8, 43], "valu": [9, 10, 11, 16, 19, 20, 22, 23, 24, 27, 31, 34, 35, 36, 37, 38, 39, 44, 45, 54, 57, 58, 62, 68, 70, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 99, 100, 102, 103, 105, 107, 114, 137, 138, 144, 145, 146, 148, 153], "qualnam": [9, 44, 54, 75, 100, 102, 103, 105, 107], "boundari": [9, 44, 46, 54, 75, 99, 100, 102, 103, 105, 107], "enum": [9, 44, 54, 75, 100, 102, 103, 105, 107], "4": [9, 103, 106, 145, 146], "2": [9, 44, 54, 61, 65, 75, 85, 99, 100, 103, 144, 145, 146], "variabl": [10, 16, 138], "stdin": 10, "get_command_lin": 10, "ear": [10, 14, 16, 21, 46, 79, 83, 118], "resolv": [10, 14, 16, 21, 138], "ordinarili": 10, "call": [10, 96, 147], "time": [10, 46, 67, 79, 85, 92, 93, 94, 95, 99, 137], "write_command": [10, 79], "process_std_stream": 10, "_object": [11, 31, 34, 39, 57, 58, 70, 74, 76, 82, 84], "like": [11, 31, 34, 39, 57, 58, 65, 70, 74, 76, 96, 137, 138, 146, 147, 152], "notat": [11, 31, 34, 39, 57, 70, 74, 76], "add_object": [11, 31, 34, 39, 57, 58, 70, 74, 76, 82, 84], "obj": [11, 31, 34, 39, 57, 58, 70, 74, 76, 82, 84], "skip_dupl": [11, 31, 34, 39, 57, 58, 70, 74, 76, 82, 84], "is_hash": [11, 31, 34, 39, 57, 70, 74, 76], "kei": [11, 16, 31, 34, 39, 57, 58, 62, 68, 70, 73, 74, 76, 83, 90, 98, 137, 138, 144], "hash": [11, 27, 31, 34, 39, 57, 70, 74, 76], "access_attribute_valu": [11, 31, 34, 39, 57, 70, 74, 76, 82, 84], "addit": [11, 31, 34, 39, 57, 58, 70, 74, 76, 82, 84], "keyword": [11, 31, 34, 39, 45, 57, 58, 62, 70, 74, 76, 79, 82, 84, 92, 93, 94, 95], "get_al": [11, 31, 34, 39, 57, 58, 70, 74, 76, 82, 84, 138], "more": [11, 15, 16, 31, 34, 39, 58, 62, 70, 74, 76, 82, 84, 99, 117, 150, 152], "list_attr": [11, 31, 34, 39, 57, 58, 70, 74, 76, 82, 84], "uniqu": [11, 31, 34, 39, 57, 58, 67, 68, 70, 74, 76, 79, 82, 84], "constitu": [11, 31, 34, 39, 57, 58, 70, 74, 76, 82, 84], "default_shebang_arg": [12, 13, 61, 65], "default_shell_arg": [12, 13, 61, 65], "default_shell_execut": [12, 13, 65], "cancel_job": [12, 13, 61, 65], "js_ref": [12, 13, 61, 65], "jobscript": [12, 13, 16, 27, 61, 65, 67, 79, 92, 93, 118, 119], "get_job_state_info": [12, 13, 61, 65], "num_js_el": [12, 13], "queri": [12, 13, 61, 65, 137], "schedul": [12, 13, 21, 27, 46, 59, 61, 65, 67, 79, 90, 138], "state": [12, 13, 16, 46, 61, 65, 67, 118, 137], "": [12, 13, 16, 45, 46, 61, 65, 67, 73, 79, 81, 92, 93, 94, 95, 98, 108, 137, 141], "job": [12, 13, 27, 61, 65], "id": [12, 13, 14, 21, 61, 65, 79, 83, 87, 90, 137], "statu": [12, 13, 16, 61, 65, 67], "appear": [12, 13, 61, 65], "jobscriptelementst": [12, 13, 46, 61, 65, 67], "get_submit_command": [12, 13, 61, 65], "js_path": [12, 13, 61, 65], "dep": [12, 13, 46, 61, 65], "get_version_info": [12, 13, 61, 65], "is_jobscript_act": [12, 13, 61, 65], "process_id": [12, 13, 46], "process_cmdlin": [12, 13], "wait": [12, 13, 61, 79, 92, 93, 119], "upstream": [12, 13, 14, 16, 21, 28, 49, 79, 83], "complet": [12, 13, 65, 79, 81, 92, 93, 137], "is_num_cores_support": [12, 13, 61, 65], "core_rang": [12, 13, 61, 65], "parse_submission_output": [12, 13, 61, 65], "process_resourc": [12, 13, 61, 65], "scheduler_config": [12, 13, 61, 65], "perform": [12, 13, 61, 65], "wait_for_jobscript": [12, 13, 61, 65], "callback": [12, 13, 137], "until": [12, 13, 79, 92, 93, 137], "have": [12, 13, 16, 21, 67, 73, 81, 137, 147, 152], "callabl": [12, 13], "id_": [14, 16, 21, 79], "is_pend": [14, 16, 21], "es_idx": 14, "seq_idx": 14, "src_idx": 14, "iteration_id": 14, "workflowtask": [14, 21, 24, 29, 47, 56, 68, 69, 72], "action_run": [14, 21], "elementactionrun": [14, 19, 20, 21, 22, 23, 24, 60, 79], "final": [14, 21, 67, 79], "taken": [14, 21], "each": [14, 16, 21, 46, 68, 78, 79, 83, 92, 93, 117, 137, 138, 144], "elementact": [14, 19, 20, 21, 22, 23, 24], "dir_nam": [14, 68, 83], "element_set": [14, 25, 28, 58, 59, 68, 83, 146], "element_set_idx": 14, "action_idx": [14, 15, 21], "run_idx": [14, 15, 21], "raise_on_miss": [14, 15, 16, 21, 56, 83], "raise_on_unset": [14, 15, 16, 21, 56], "most": [14, 79, 107], "recent": [14, 79, 90, 92, 93, 137, 147], "persist": [14, 21, 28, 40, 42, 45, 50, 59, 68, 77, 78, 79, 85, 92, 93, 94, 95, 106, 137, 147, 148, 153], "store": [14, 21, 40, 42, 45, 50, 59, 77, 79, 92, 93, 94, 95, 119, 137, 146, 152], "get_ear_depend": [14, 16, 21], "as_object": [14, 16, 21, 28, 83], "get_data_idx": [14, 15, 16, 21], "within": [14, 21, 45, 62, 79, 137, 138, 147], "get_dependent_ear": [14, 16, 21], "get_dependent_element_iter": [14, 21], "get_dependent_el": [14, 21, 83], "get_dependent_elements_recurs": 14, "task_insert_id": [14, 46, 47, 79, 81], "downstream": [14, 16, 21, 25, 62, 79, 83], "initi": [14, 85, 150], "identifi": [14, 45, 79, 150], "previou": [14, 16], "should": [14, 16, 25, 45, 51, 59, 62, 68, 79, 81, 92, 93, 94, 95, 137, 138, 144], "parametris": [14, 28, 49, 68, 79, 80, 85, 92, 93, 95, 98, 99], "get_dependent_task": [14, 21, 83], "get_element_depend": [14, 21, 83], "get_element_iteration_depend": [14, 21], "get_input_depend": [14, 16, 21], "sequenc": [14, 16, 21, 28, 45, 53, 68, 77, 78, 83, 146], "get_parameter_sourc": [14, 15, 16, 21, 79], "as_str": [14, 15, 16, 21], "use_task_index": [14, 15, 16, 21], "rather": [14, 21], "than": [14, 21], "insert": [14, 21, 79, 83], "get_sequence_valu": 14, "sequence_path": [14, 28], "get_task_depend": [14, 21, 28, 83], "mai": [14, 21, 28, 46, 62, 68, 79, 83, 114, 117, 137, 138, 150], "global_idx": 14, "across": [14, 69, 72, 137], "init_loop_index": 14, "loop_nam": [14, 79, 137], "elementinputfil": [14, 21], "input_source_idx": 14, "input_sourc": [14, 28, 62, 68, 83, 146], "inputsourc": [14, 28, 68], "elementinput": [14, 21], "latest_iter": 14, "elementoutputfil": [14, 21], "elementoutput": [14, 21], "schema_paramet": [14, 21], "sequence_idx": 14, "to_element_set_data": 14, "bound": [14, 81, 83], "inputvalu": [14, 28, 62, 68, 145], "resourcelist": [14, 85], "see": [15, 16, 98, 147, 150, 152], "inform": [15, 16, 46, 61, 89, 90, 91, 117, 137, 148, 153], "num_run": 15, "element_act": [16, 19, 20, 22, 23], "data_idx": [16, 21, 24], "start_tim": [16, 46, 67], "end_tim": [16, 46, 67], "snapshot_start": 16, "snapshot_end": 16, "submission_idx": [16, 79, 137], "success": 16, "skip": [16, 79], "exit_cod": [16, 79, 137], "metadata": [16, 137], "datetim": [16, 46, 67, 79, 92, 93, 94, 95, 137], "compose_command": 16, "js_action_idx": [16, 46, 79, 137], "shell_var": 16, "indic": [16, 27, 40, 42, 50, 59, 67, 68, 79, 81, 83, 92, 93, 119, 137, 146], "dir_diff": 16, "directorysnapshotdiff": 16, "chang": [16, 28, 79, 147], "due": [16, 79], "get_ifg_input_valu": 16, "get_ofp_input": 16, "get_ofp_output_fil": 16, "get_ofp_output": 16, "get_all_previous_iteration_run": 16, "include_self": 16, "over": [16, 67, 68], "about": [16, 61, 89, 90, 91, 117, 137, 148, 152, 153], "doe": [16, 62, 79, 92, 93, 94, 95, 119, 137, 147], "aim": [16, 99], "help": [16, 107, 137, 148], "get_input_valu": 16, "label_dict": 16, "multipl": [16, 19, 20, 22, 23, 45, 49, 62, 73, 79, 83, 92, 93, 98, 117, 119, 137, 146], "all_iter": 16, "present": 16, "structur": [16, 45, 79], "arrang": 16, "get_input_values_direct": 16, "get_resourc": [16, 21], "consid": [16, 21, 43, 65, 68, 79, 81, 144], "write_sourc": [16, 41, 49], "factori": [17, 52, 85], "elementfilt": [18, 26, 43, 51, 68], "group_by_distinct": [18, 68], "parameterpath": [18, 68], "element_action_run": [19, 20, 22, 23], "prefixed_names_unlabel": [19, 20, 22, 23], "map": [19, 20, 22, 23, 79, 85, 137, 138], "between": [19, 20, 22, 23, 137], "even": [19, 20, 22, 23], "empti": [19, 20, 22, 23, 62, 138], "prefixed_names_unlabelled_str": [19, 20, 22, 23], "ears_initialis": [21, 79], "loop_idx": [21, 83], "ear_ids_flat": 21, "whether": [21, 46, 68, 93], "been": [21, 46, 67, 137], "resolut": 21, "set_default": [21, 27], "os_nam": [21, 27, 46, 59], "get_resources_obj": 21, "elementresourc": [21, 46], "get_template_resourc": 21, "parent": [24, 79, 81], "data_idx_is_set": 24, "get_siz": 24, "store_kwarg": [24, 79, 85, 92, 93, 94, 95], "is_set": 24, "nesting_ord": [25, 28, 68, 78, 83], "newli": [25, 61, 65, 106], "propag": [25, 62], "number": [26, 77, 90, 99, 106, 110, 117, 137, 144, 146, 150], "scratch": [27, 59], "parallelmod": [27, 59], "num_cores_per_nod": [27, 59, 138], "num_thread": [27, 59], "num_nod": [27, 59, 138], "use_job_arrai": [27, 59], "max_array_item": [27, 59], "time_limit": [27, 59], "scheduler_arg": [27, 46, 59], "shell_arg": [27, 46, 59], "sge_parallel_env": [27, 59], "slurm_partit": [27, 59], "slurm_num_task": [27, 59], "slurm_num_tasks_per_nod": [27, 59], "slurm_num_nod": [27, 59], "slurm_num_cpus_per_task": [27, 59], "slurm_is_parallel": 27, "slurm": [27, 65, 138], "parallel": [27, 79, 92, 93, 119, 137], "get_default_os_nam": 27, "get_default_schedul": 27, "shell_nam": [27, 46, 91, 137], "get_default_shel": 27, "get_jobscript_hash": 27, "distinguish": [27, 62], "is_parallel": 27, "agnost": 27, "validate_against_machin": 27, "valid": [27, 83, 85, 140, 147, 150], "those": [27, 62, 79, 138], "repeat": [28, 68, 83, 146], "group": [28, 39, 40, 42, 45, 50, 55, 59, 62, 68, 77, 83, 98, 99, 104, 106, 108, 110, 112, 145, 146], "sourceable_elem_it": [28, 68, 83], "allow_non_coincident_task_sourc": 28, "inputfil": [28, 68], "valuesequ": [28, 68], "elementgroup": [28, 68], "defined_input_typ": [28, 68], "elem_iter_id": 28, "element_local_idx_rang": 28, "retriev": [28, 46, 59, 69, 72, 79, 90, 137, 147], "belong": [28, 79], "ensure_element_set": 28, "get_defined_parameter_typ": 28, "get_defined_sub_parameter_typ": 28, "get_locally_defined_input": 28, "get_sequence_by_path": 28, "get_sequence_from_path": 28, "input_typ": [28, 73, 78], "is_input_type_provid": 28, "labelled_path": [28, 68], "prepare_persistent_copi": 28, "copi": [28, 59, 68, 79, 106, 112, 146, 147], "self": 28, "made": [28, 68, 147], "dure": [28, 137], "integr": 28, "task_templ": [28, 73], "undefined_input_typ": [28, 68], "_hash_valu": [30, 38, 52, 73], "executableinst": 32, "filter_inst": 32, "from_spec": [33, 77], "spec": [33, 58, 77], "file_nam": [35, 37, 137], "filenamespec": [35, 37, 142], "is_regex": 36, "ext": [36, 38], "stem": [36, 38], "store_cont": [40, 42, 50], "make_persist": [40, 42, 45, 50, 59, 73, 77, 78, 83], "integ": [40, 42, 45, 50, 59, 77, 144], "zarr": [40, 42, 45, 50, 59, 77, 79, 83, 92, 93, 94, 95, 106, 137, 152], "normalised_files_path": 40, "normalised_path": [40, 45, 59, 78], "read_cont": [40, 42, 50], "get_action_rul": 41, "source_typ": [43, 146], "import_ref": 43, "task_ref": [43, 79, 146], "task_source_typ": 43, "from_str": 43, "str_defn": 43, "get_task": 43, "referenc": 43, "import_": 43, "is_in": 43, "other_input_sourc": 43, "without": [43, 68, 78, 137], "import": [44, 68, 146, 147, 151, 152], "value_class_method": [45, 78], "_inputvalue__check_obj": 45, "schemainput": [45, 68, 73], "invok": [45, 98, 137, 147], "nest": [45, 99, 138], "is_sub_valu": [45, 78], "interpret": [45, 137], "labelled_typ": [45, 78], "item": [45, 62, 77, 83, 98, 125, 137, 148, 153], "normalised_inputs_path": [45, 78], "task_act": 46, "task_el": 46, "task_loop_idx": 46, "submit_tim": [46, 67], "submit_hostnam": 46, "submit_machin": 46, "submit_cmdlin": 46, "scheduler_job_id": 46, "version_info": 46, "scheduler_nam": [46, 137], "ndarrai": [46, 99, 106, 110], "ear_id_file_nam": 46, "ear_id_file_path": 46, "all_ear_id": [46, 67], "all_ear": [46, 67], "cancel": [46, 61, 65, 67, 79], "compose_jobscript": 46, "os_arg": [46, 138], "prepar": 46, "direct_stderr_file_nam": 46, "direct_stderr_path": 46, "direct_stdout_file_nam": 46, "direct_stdout_path": 46, "direct_win_pid_file_nam": 46, "direct_win_pid_file_path": 46, "element_run_dir_file_nam": 46, "element_run_dir_file_path": 46, "last": 46, "end": [46, 67, 79], "get_active_st": 46, "as_json": [46, 67, 90], "get_commands_file_nam": 46, "get_task_loop_idx_arrai": 46, "is_arrai": [46, 61, 65], "is_submit": 46, "submit": [46, 61, 65, 67, 79, 92, 93, 119], "jobscript_nam": 46, "jobscript_path": 46, "make_artifact_dir": 46, "num_act": [46, 83], "num_el": [46, 61, 65, 79, 83], "submiss": [46, 79, 87, 90, 92, 93, 117, 119, 148, 153], "scheduler_js_ref": 46, "scheduler_ref": 46, "print_stdout": [46, 67, 79], "workflow_app_alia": 46, "write_ear_id_fil": 46, "write": [46, 58, 79, 145], "text": [46, 137], "token": 46, "per": [46, 137], "write_element_run_dir_fil": 46, "run_dir": 46, "assum": [46, 87, 137], "cross": 46, "so": [46, 79, 92, 93, 94, 95, 137], "combin": [46, 60, 79, 85, 92, 93, 94, 95, 137], "write_jobscript": 46, "num_iter": [47, 81, 146], "non_iterable_paramet": 47, "insert_id": [47, 68, 83], "extent": [47, 81], "task_object": [47, 81], "workflow_templ": [47, 58, 59, 80], "step": [48, 78, 98, 99, 146], "singular": 49, "Not": 49, "confus": 49, "plural": 49, "appli": [51, 62, 79, 85, 150], "is_fil": 52, "subparamet": 52, "_value_class": 52, "_valid": 52, "valida": 52, "url_slug": 52, "float": [53, 66, 77, 99, 144], "tasktempl": 53, "explicit": [54, 62, 145], "implicit": [54, 62, 63, 145], "never": [54, 62], "dump_to_hdf5_group": [55, 98, 99, 104, 106, 108, 110, 112], "prepare_json_dump": [55, 98, 99, 104, 106, 108, 110, 112], "save_from_hdf5_group": [55, 98, 99, 104, 106, 108, 110, 112, 144], "param_id": [55, 79, 98, 99, 104, 106, 108, 110, 112], "save_from_json": [55, 98, 99, 104, 106, 108, 110, 112], "return_element_paramet": 56, "overridden": [57, 58], "exist": [57, 62, 68, 79, 92, 93, 94, 95, 119, 137, 138, 147], "get_scop": 58, "merge_template_resourc": 58, "temp_res_lst": 58, "merg": [58, 85], "lower": [58, 150], "preced": [58, 79], "normalis": [58, 68, 78], "potenti": 58, "sever": [58, 152], "yaml": [58, 79, 85, 92, 93, 94, 95, 106, 110, 137, 142, 145, 151, 152], "instead": [58, 137, 138, 144], "correct": 59, "wsl": [59, 138], "still": 59, "nt": 59, "timedelta": 59, "allowed_paramet": 59, "copy_non_persist": 59, "make": [59, 79, 92, 94, 138, 147, 152], "non": [59, 67, 68, 79, 98, 99, 138], "normalised_resources_path": 59, "testabl": 60, "element_lik": 60, "evalu": 60, "cwd_switch": [61, 138], "serial": 61, "gridschedul": 61, "sourceforg": 61, "htmlman": 61, "htmlman1": 61, "qsub": 61, "softpanorama": 61, "grid_engin": 61, "queue": 61, "queue_stat": 61, "shtml": 61, "default_array_item_var": [61, 65], "sge_task_id": 61, "default_array_switch": [61, 65], "t": [61, 83, 137, 146], "default_cwd_switch": 61, "cwd": 61, "default_del_cmd": [61, 65], "qdel": 61, "default_js_cmd": [61, 65], "default_login_nodes_cmd": [61, 65], "qconf": 61, "default_login_node_match": [61, 65], "login": [61, 65], "default_show_cmd": [61, 65], "qstat": 61, "default_submit_cmd": [61, 65], "format_array_request": [61, 65], "format_core_request_lin": [61, 65], "format_opt": [61, 65], "sub_idx": [61, 65, 79, 137], "format_std_stream_file_option_lin": [61, 65], "format_switch": [61, 65], "get_job_status": 61, "get_login_nod": 61, "hostnam": [61, 138], "administr": 61, "node": 61, "report": 61, "job_id": [61, 65], "pend": [61, 65], "state_lookup": [61, 65], "eh": 61, "eq": 61, "rt": 61, "rr": 61, "dr": 61, "d": [61, 142], "dt": 61, "hr": 61, "hq": 61, "qw": 61, "tt": 61, "default_valu": [62, 145], "nulldefault": 62, "propagation_mod": [62, 63, 145], "parameterpropagationmod": [62, 63, 145], "particular": [62, 63, 79, 92, 93, 94, 95, 137], "expect": [62, 68, 85], "squar": 62, "bracket": 62, "match": [62, 138], "catch": 62, "remain": [62, 68, 99], "treat": 62, "itself": 62, "By": [62, 79, 85, 92, 93, 99, 119, 137, 138, 150], "simpli": 62, "mode": 62, "explicitli": 62, "inaccess": 62, "all_labelled_typ": 62, "input_or_output": [62, 63], "labelled_info": 62, "single_label": 62, "single_labelled_data": 62, "single_labelled_typ": 62, "memori": [65, 106], "usag": 65, "stackoverflow": [65, 106], "44143229": 65, "5042280": [65, 106], "manpag": 65, "sbatch": 65, "ri": 65, "itservic": 65, "manchest": 65, "ac": 65, "uk": 65, "csf4": 65, "sge": [65, 138], "slurm_array_task_id": 65, "arrai": [65, 99, 106, 114], "scancel": 65, "squeue": 65, "me": 65, "finish": [65, 90, 137], "fail": [65, 79, 147], "out_of_memori": 65, "timeout": [65, 137], "address": 66, "submission_part": 67, "js_parallel": [67, 79, 92, 93, 119, 137], "environmentslist": 67, "ears_by_el": 67, "abort_ears_file_nam": 67, "abort_ears_file_path": 67, "get_active_jobscript": 67, "get_end_tim": 67, "get_start_tim": 67, "get_unique_schedul": 67, "thei": [67, 68, 150], "get_unique_schedulers_of_jobscript": 67, "get_unique_shel": 67, "jobscript_indic": 67, "needs_submit": 67, "outstanding_jobscript": 67, "yet": [67, 137], "successfulli": [67, 79], "ignore_error": [67, 79], "add_to_known": [67, 79, 92, 93], "submitted_jobscript": 67, "output_label": 68, "isol": 68, "satisfi": 68, "elementset": 68, "outputlabel": 68, "add_group": 68, "all_schema_act": 68, "all_schema_input_normalised_path": 68, "all_schema_input_typ": 68, "all_schema_input": 68, "all_schema_output_typ": 68, "all_schema_output": 68, "schemaoutput": [68, 73], "all_sourced_normalised_path": 68, "artefact": 68, "get_available_task_input_sourc": 68, "source_task": 68, "possibl": 68, "deriv": [68, 115], "get_input_status": 68, "elem_set": 68, "inputstatu": 68, "status": 68, "get_param_provided_element_set": 68, "get_schema_act": 68, "idx": [68, 137], "get_task_unique_nam": [68, 79], "non_universal_input_typ": 68, "univers": 68, "num_all_schema_act": 68, "num_element_set": [68, 83], "prepare_element_resolut": 68, "input_data_indic": [68, 83], "provides_paramet": [68, 73], "els": [68, 78, 137], "rais": [68, 79, 92, 93, 119, 137], "set_sequence_paramet": 68, "to_persist": 68, "undefined_input": 68, "universal_input_typ": 68, "implement": [73, 150], "parameter_class_modul": 73, "mechan": [73, 144, 146], "taskobject": 73, "its": [73, 137, 147], "basic_info": 73, "show": [73, 79, 92, 93, 110, 118, 147, 148, 153], "tabl": 73, "get_by_kei": 73, "config": [73, 125, 126, 127, 140, 148, 153], "get_kei": 73, "ignore_invalid_act": 73, "info": [73, 79, 92, 93, 94, 95, 138, 149], "multi_input_typ": 73, "output_typ": 73, "multiplicative_factor": 77, "numer": 77, "additive_factor": 77, "from_fil": [78, 79, 85, 106, 110, 144], "file_path": [78, 137], "from_geometric_spac": 78, "num": 78, "endpoint": 78, "from_linear_spac": 78, "from_log_spac": 78, "from_rang": 78, "from_rectangl": 78, "coord": 78, "coordin": 78, "input_path": 78, "path_split": 78, "path_typ": 78, "resource_scop": 78, "workflow_ref": [79, 87, 137], "store_fmt": 79, "fs_kwarg": 79, "abort_run": 79, "task_idx": 79, "element_idx": 79, "multi": 79, "add_loop": 79, "loop": [79, 81, 85, 146], "parent_loop_indic": [79, 81], "add_submiss": 79, "add_task": 79, "new_index": 79, "add_task_aft": 79, "new_task": 79, "after": 79, "add_task_befor": 79, "begin": 79, "artifacts_path": 79, "batch_upd": 79, "is_workflow_cr": 79, "context": 79, "commit": 79, "them": [79, 83], "disk": 79, "togeth": 79, "hard": 79, "check_loop_termin": 79, "run_id": 79, "check_parameters_exist": 79, "id_lst": 79, "creation_info": 79, "delet": [79, 137], "execution_path": 79, "from_json_fil": [79, 85], "json_path": 79, "overwrit": [79, 92, 93, 94, 95, 137], "ts_fmt": [79, 92, 93, 94, 95, 137], "ts_name_fmt": [79, 92, 93, 94, 95, 137], "json": [79, 85, 90, 92, 93, 94, 95, 106, 110, 137, 138, 152], "pathlik": [79, 85, 87, 92, 93, 94, 95, 119], "workflowtempl": [79, 80, 92, 93, 151], "date": [79, 85, 92, 93, 94, 95, 137], "timestamp": [79, 92, 93, 94, 95, 137], "overwritten": [79, 92, 93, 94, 95, 137], "alwai": [79, 92, 93, 94, 95, 137], "utc": [79, 92, 93, 94, 95, 137], "numpi": [79, 92, 93, 94, 95, 99, 106, 110, 137], "zone": [79, 92, 93, 94, 95, 137], "write_empty_workflow": [79, 92, 93, 94, 95], "from_json_str": [79, 85], "json_str": 79, "from_yaml_fil": [79, 85, 151], "yaml_path": 79, "from_yaml_str": [79, 85], "yaml_str": 79, "template_path": 79, "template_format": [79, 85, 92, 93, 94, 95], "yml": 79, "forc": [79, 92, 93, 94, 95, 137], "regardless": 79, "from_templ": [79, 152], "from_template_data": 79, "template_nam": 79, "workflow_nam": [79, 92, 94, 137, 146], "take": 79, "whole": 79, "fs_path": 79, "get_ear_ids_of_task": 79, "get_ear_skip": 79, "get_ears_from_id": 79, "get_ears_of_task": 79, "get_all_ear": 79, "get_all_element_iter": [79, 83], "get_all_el": 79, "get_all_parameter_data": 79, "get_all_paramet": 79, "anysparamet": 79, "get_all_submission_run_id": 79, "get_element_ids_from_ear_id": 79, "get_element_iteration_ids_from_ear_id": 79, "get_element_iterations_from_id": 79, "get_element_iterations_of_task": 79, "get_elements_from_id": 79, "get_iteration_final_run_id": 79, "loop_map": 79, "These": [79, 146, 150], "append": [79, 138], "get_iteration_task_pathwai": 79, "get_loop_map": 79, "get_paramet": 79, "get_parameter_data": 79, "get_parameter_set_status": 79, "get_running_el": 79, "accord": [79, 83, 90, 137, 144], "get_running_run": 79, "get_store_ear": 79, "anysear": 79, "get_store_element_iter": 79, "anyselementit": 79, "get_store_el": 79, "anysel": 79, "get_store_task": 79, "anystask": 79, "get_task_ids_from_element_id": 79, "get_task_el": 79, "select": 79, "slice": 79, "map_to_insert_id": 79, "otherwis": [79, 147], "input_files_path": 79, "is_parameter_set": 79, "workflowlooplist": 79, "creation": 79, "num_ear": 79, "num_added_task": 79, "num_element_iter": 79, "num_loop": 79, "num_submiss": 79, "num_task": 79, "process_shell_parameter_output": 79, "cmd_idx": [79, 137], "stream": 79, "resolve_jobscript": 79, "save_paramet": 79, "set_ear_end": 79, "code": 79, "zero": [79, 99], "also": [79, 147, 150], "set_ear_skip": 79, "record": [79, 152], "failur": 79, "being": [79, 137], "met": [79, 137], "set_ear_start": 79, "set_ear_submission_index": 79, "set_ears_initialis": 79, "iter_id": 79, "set_parameter_valu": 79, "show_all_ear_status": 79, "store_format": 79, "submissions_path": 79, "return_idx": [79, 92, 93, 119], "halt": 79, "jobscript_parallel": [79, 92, 93, 119, 137], "featur": [79, 92, 93, 119, 137], "print": [79, 137, 147, 149], "hide": 79, "block": [79, 92, 93, 137], "known": [79, 90, 92, 93, 117, 148, 153], "monitor": [79, 92, 93], "task_artifacts_path": 79, "workflowtasklist": 79, "template_compon": [79, 145], "temporary_renam": 79, "f": [79, 137, 146], "renam": [79, 137], "restor": 79, "occur": 79, "unzip": 79, "log": [79, 138, 142, 145, 147], "sub_j": 79, "jobscript_idx": [79, 137], "pre": 80, "built": [80, 138, 141], "simpler": 80, "fit": [80, 146], "num_added_iter": 81, "iterable_paramet": 81, "add_iter": 81, "get_child_loop": 81, "ident": 81, "get_parent_loop": 81, "superset": 81, "new_empty_loop": 81, "task_indic": 81, "test_termin": 81, "element_id": 83, "add_el": 83, "base_el": 83, "propagate_to": 83, "return_indic": 83, "downstream_task": 83, "ensure_input_sourc": 83, "posit": [83, 110], "behaviour": 83, "generate_new_el": 83, "output_data_indic": 83, "element_data_indic": 83, "sequence_indic": 83, "source_indic": 83, "get_dir_nam": 83, "initialise_ear": 83, "uninitialis": 83, "new_empty_task": 83, "resolve_element_data_indic": 83, "updat": [83, 90, 117, 147], "docstr": 83, "shouldn": 83, "element_dat_idx": 83, "unique_nam": 83, "upstream_task": 83, "source_fil": 85, "merge_resourc": 85, "limit": 85, "logic": 85, "stamp": 85, "resourcespec": 85, "ref_is_path": 87, "max_rec": [90, 117, 137], "no_upd": [90, 117], "inact": [90, 117, 137], "remov": [90, 117, 137, 147], "found": 90, "maximum": [90, 99, 117, 137], "do": [90, 117, 137, 145], "exclude_o": 91, "template_file_or_str": [93, 95, 137], "is_str": [93, 95], "template_path_or_str": [93, 95], "builtin": [94, 137], "conflict": 96, "parametervalu": [96, 98, 99, 104, 106, 108, 110, 112], "loadstep": 98, "biaxial": [98, 99, 144], "case": [98, 99, 138, 147, 150], "example_uniaxi": [98, 99, 144], "uniaxi": [98, 99, 144, 145, 146], "multistep": [98, 144], "remaind": 98, "num_step": 98, "planar_2d": [98, 99, 144], "planar": [98, 99], "2d": [98, 99, 114], "plane_strain": [98, 99, 144], "plane": [98, 99], "strain": [98, 99, 146], "random_2d": [98, 99, 144], "random": [98, 99, 106, 146], "random_3d": [98, 99, 144, 146], "3d": 98, "uniaxial_cycl": [98, 99, 144], "cyclic": 98, "total_tim": [99, 146], "num_incr": [99, 146], "normal_direct": 99, "target_def_grad": [99, 146], "target_def_grad_r": [99, 146], "target_vel_grad": 99, "stress": [99, 146], "dump_frequ": [99, 146], "rotat": 99, "total": 99, "simul": [99, 144, 146], "increment": [99, 146], "ma": 99, "core": [99, 150], "maskedarrai": 99, "shape": [99, 106], "deform": 99, "gradient": 99, "tensor": 99, "mask": [99, 114], "unmask": 99, "np": 99, "arraylik": 99, "rate": 99, "written": 99, "everi": 99, "charact": 99, "ij": 99, "j": [99, 146], "x": [99, 108, 114, 144, 146], "y": [99, 108, 144], "z": [99, 108, 144, 145], "achiev": 99, "along": 99, "method_arg": 99, "method_nam": 99, "flat": 99, "fourth": 99, "second": [99, 137], "row": 99, "column": [99, 117], "shear": 99, "third": 99, "strain_rate_mod": 99, "strainratemod": 99, "def_grad_r": [99, 100], "vel_grad": [99, 100], "vel_grad_approx": [99, 100], "mix": 99, "sampl": [99, 146], "randomli": 99, "interv": [99, 137], "strain_like_tensor": 99, "friendli": 99, "max_stress": 99, "min_stress": 99, "cycle_frequ": 99, "num_increments_per_cycl": 99, "num_cycl": 99, "waveform": 99, "sine": 99, "bung": 102, "a_star": 103, "b": 103, "b_star": 103, "c_star": 103, "5": [103, 145, 146], "orientationrepresentationtyp": 104, "euler_definit": 104, "eulerdefinit": 104, "euler_is_degre": 104, "quat_ord": 104, "quatord": 104, "euler": 105, "quaternion": [105, 106, 107], "unit_cell_align": 106, "unitcellalign": 106, "represent": 106, "orientationrepresent": 106, "ori_format": 106, "custom": [106, 110, 147], "start_index": [106, 110], "from_random": [106, 110, 144, 146], "quat_sample_random": 106, "uniformli": 106, "distribut": 106, "unit": [106, 108], "mani": 106, "quat": 106, "44031492": 106, "plan": 106, "uiuc": 106, "edu": 106, "node198": 106, "hdf5": [106, 142], "avoid": 106, "onc": 106, "firstli": 106, "small": 106, "four": 107, "dream3d": 107, "vector": 107, "scalar": 107, "program": 107, "seem": 107, "bluequartz": 107, "orientationanalysisfilt": 107, "convertquaternion": 107, "scalar_vector": 107, "vector_scalar": 107, "latticedirect": 108, "from_hex_convention_damask": 108, "from_hex_convention_mtex": 108, "cell": 108, "align": 108, "convent": [108, 150], "hexagon": 108, "symmetri": 108, "crystalsymmetri": 108, "box_siz": [110, 146], "phase_label": [110, 145, 146], "orient": [110, 145, 146], "random_se": 110, "num_se": [110, 146], "phase": [112, 144, 146], "perturb": [112, 146], "as_bas": 112, "arr": 114, "fill_valu": 114, "1d": 114, "fill": 114, "suit": [115, 116, 137], "full": [117, 137, 138, 144, 146], "span": 117, "longer": [117, 137], "legend": [118, 137], "displai": [118, 137], "workflow_path": [119, 137], "tmp_path": [122, 123], "messag": [137, 145], "config_dir": 137, "config_kei": [137, 138], "with_config": 137, "overrid": 137, "ref": 137, "ref_typ": 137, "no_callback": 137, "known_nam": 137, "fsspec": [137, 138, 151], "look": 137, "sha": 137, "env_source_fil": 137, "l": [137, 146], "ensur": 137, "destin": [137, 146], "i1": 137, "infile1": 137, "i2": 137, "infile2": 137, "v": [137, 146], "o": [137, 146], "fmt": 137, "comma": 137, "separ": 137, "syntax": 137, "kill": 137, "3600": 137, "timeout_check_interv": 137, "exceed": 137, "60": [137, 146], "watch_interv": 137, "poll": 137, "infrequ": 137, "app_nam": [137, 138], "invalid": 137, "max": 137, "relat": 137, "py_test_arg": 137, "pytest": 137, "submitt": 137, "colon": 137, "space": 137, "To": [137, 144], "semicolon": 137, "pattern": 137, "invoc": 138, "environment_setup": 138, "telemetri": 138, "log_file_path": 138, "matflow_v0": 138, "environment_sourc": 138, "task_schema_sourc": 138, "command_file_sourc": 138, "parameter_sourc": 138, "default_schedul": 138, "default_shel": 138, "conform": 138, "conditionand": [138, 144], "valuedatatyp": [138, 144], "equal_to": [138, 144, 146], "lt": [138, 144], "x27": [138, 144], "gt": [138, 144], "keys_is_inst": 138, "quot": [138, 144], "optionalcondit": 138, "required_kei": 138, "requiredcondit": 138, "allowed_kei": 138, "noneconfig": 138, "forbidden_kei": 138, "config_directori": 138, "config_file_nam": 138, "config_file_path": 138, "config_file_cont": 138, "config_schema": 138, "invoking_user_id": 138, "host_user_id": 138, "host_user_id_file_path": 138, "config_callback": 138, "_set": 138, "unset": 138, "user_orcid": 138, "user_nam": 138, "user_affili": 138, "wsl_execut": 138, "wsl_distribut": 138, "wsl_user": 138, "noneexecut": 138, "nonewsl_us": 138, "nonewsl_execut": 138, "nonewsl_distribut": 138, "nonewsl": 138, "nonepowershel": 138, "nonebash": 138, "noneschedul": 138, "direct_posix": 138, "parallel_environ": 138, "partit": 138, "noneparallel_environ": 138, "nonedefault": 138, "shebang_arg": 138, "submit_cmd": 138, "show_cmd": 138, "del_cmd": 138, "js_cmd": 138, "array_switch": 138, "array_item_var": 138, "noneshow_cmd": 138, "noneshebang_arg": 138, "noneopt": 138, "nonejs_cmd": 138, "nonedel_cmd": 138, "nonecwd_switch": 138, "nonearray_switch": 138, "nonearray_item_var": 138, "noneslurm": 138, "nonenum_nod": 138, "nonenum_cores_per_nod": 138, "nonenum_cor": 138, "nonesg": 138, "nonedirect_posix": 138, "nonedirect": 138, "noneparameter_sourc": 138, "socket": 138, "gethostnam": 138, "is_inst": 138, "pathlib": 138, "app_vers": 138, "respect": 138, "rel": 138, "log_file_level": 138, "notset": 138, "debug": [138, 147], "warn": 138, "critic": 138, "in_": [138, 144], "log_console_level": [138, 147], "linux_release_fil": 138, "demo_data_manifest_fil": 138, "manifest": 138, "in_zip": 138, "text_fil": 138, "url": [138, 151], "demo_data_dir": 138, "alternative_unix_runtime_dir": 138, "cannot": [138, 150], "pipelin": 139, "sample_texture_odf_mat": 140, "read_tensile_test_csv": 140, "fit_single_crystal_paramet": [140, 144], "sample_texture_ctf_fil": 140, "tension_damask_": 140, "tension_damask_mg": 140, "fit_yield_func": 140, "section": 141, "detail": [141, 150, 152], "geom": [142, 145], "vti": [142, 145], "materi": [142, 146, 153], "geom_load": 142, "geom_load_incd": 142, "static_output": 142, "vt": 142, "pole_figur": 142, "png": 142, "ipf_kei": 142, "atom": 142, "lammp": 142, "dump": 142, "txt": [142, 145], "length": 144, "valuelength": 144, "size": 144, "twice": 144, "long": 144, "elong": 144, "generate_microstructure_se": 144, "pixel": 144, "voxel": 144, "generate_volume_el": 144, "strcondit": 144, "demo_hello_world": 144, "teach": 144, "learn": 144, "print_hello": 144, "intcondit": 144, "demo_add": 144, "microstructur": 144, "seed": 144, "grain": 144, "constructor": 144, "microstructurese": 144, "dictcondit": 144, "simulate_ve_load": 144, "sample_textur": 144, "generate_orient": 144, "visualise_orient": 144, "scheme": 144, "emploi": 144, "crystal": [144, 146], "plastic": [144, 146], "field": [144, 146], "typic": 144, "sx": [144, 145, 146], "dump_all_yield_stress": 144, "fit_yield_funct": [144, 146], "define_load_cas": [144, 146], "loadcas": 144, "thermal": 144, "damag": 144, "dictionari": 144, "solver": 144, "physic": 144, "phenomenon": 144, "spectral_polar": 144, "spectral_bas": 144, "test_t1_bash": 144, "test_t1_p": 144, "define_p1": 144, "test_t2_bash": 144, "test_t2_p": 144, "demo_sleep": 144, "echo": 145, "100": [145, 146], "count": 145, "while": 145, "le": 145, "sleep": 145, "goe": 145, "done": [145, 147], "host": [145, 152], "ge": 145, "break": 145, "python_script": 145, "p3": 145, "ve_siz": [145, 146], "num_grain": [145, 146], "microstructure_se": [145, 146], "ve_grid_s": [145, 146], "homog_label": [145, 146], "volume_el": 145, "ctf_file_path": [145, 146], "specimen_symmetri": [145, 146], "ebsd_phas": [145, 146], "num_orient": [145, 146], "ebsd_reference_frame_transform": [145, 146], "euler_to_spati": 145, "ebsd_rot": [145, 146], "odf_mat_file_path": [145, 146], "crystal_symmetri": [145, 146], "pole_figure_direct": [145, 146], "use_contour": [145, 146], "ipf_reference_direct": 145, "colourbar_limit": 145, "use_one_colourbar": 145, "load_cas": [145, 146], "homogen": [145, 146], "damask_phas": [145, 146], "damask_post_process": [145, 146], "ve_response_data": [145, 146], "damask_viz": [145, 146], "single_crystal_paramet": [145, 146], "damask_solv": 145, "damask_log": 145, "damask_post_processing_result": 145, "ve_respons": [145, 146], "damask_viz_result": 145, "6": [145, 146], "7": 145, "csv_file_path": [145, 146], "csv_argument": [145, 146], "eng_stress_col_index": [145, 146], "eng_strain_col_index": [145, 146], "true_stress_col_index": 145, "true_strain_col_index": 145, "stress_unit": [145, 146], "pa": 145, "plastic_rang": 145, "tensile_test": 145, "initial_damp": [145, 146], "levenberg_marquardt_fitt": 145, "all_simul": 145, "yield_point": 145, "dump_path": 145, "yield_function_nam": [145, 146], "yield_point_criteria": [145, 146], "multiaxi": [145, 146], "multiaxial_load_cas": [145, 146], "fit_yield_fixed_paramet": 145, "fit_yield_initial_paramet": 145, "fit_yield_opt_paramet": 145, "fitted_yield_funct": 145, "my_nam": 145, "world": 145, "hello": 145, "number_1": 145, "number_2": 145, "sum": 145, "max_sleep_tim": 145, "1800": 145, "sleep_tim": 145, "sleep_second": 145, "filepath": 145, "head": 145, "demonstr": 146, "somewher": 146, "mf": [146, 147, 151, 152], "copy_demo_workflow": 146, "dst": 146, "textur": 146, "odf": 146, "mat": 146, "pole": 146, "figur": 146, "sample_texture_from_odf_mat_file_mtex": 146, "demo_data_fil": 146, "1000": 146, "visualise_orientations_pole_figure_mtex": 146, "cubic": 146, "read": 146, "tensil": 146, "csv": 146, "read_tensile_test_from_csv": 146, "surfalex_tensile_test": 146, "skip_row": 146, "header_row": 146, "mpa": 146, "experiment": 146, "tension": 146, "curv": 146, "levenberg": 146, "marquardt": 146, "generate_microstructure_seeds_from_random": 146, "2000": 146, "al": 146, "generate_volume_element_from_voronoi": 146, "32": 146, "simulate_ve_loading_damask": 146, "3500": 146, "170": 146, "0e": 146, "n_constitu": 146, "h_0_sl": 146, "sl": 146, "400e6": 146, "xi_0_sl": 146, "30e6": 146, "xi_inf_sl": 146, "95e6": 146, "lattic": 146, "cf": 146, "p": 146, "f_p": 146, "elast": 146, "hook": 146, "c_11": 146, "106750000000": 146, "c_12": 146, "60410000000": 146, "c_44": 146, "28340000000": 146, "phenopowerlaw": 146, "n_sl": 146, "12": 146, "a_sl": 146, "25": 146, "atol_xi": 146, "dot_gamma_0_sl": 146, "001": 146, "h_sl": 146, "20": 146, "xi_sl": 146, "add_stress_cauchi": 146, "opt": 146, "add_mis": 146, "add_strain": 146, "u": 146, "volume_data": 146, "out_nam": 146, "vol_avg_stress": 146, "field_nam": 146, "sigma": 146, "transform": 146, "mean_along_ax": 146, "vol_avg_strain": 146, "epsilon_u": 146, "05": 146, "ctf": 146, "sample_texture_from_ctf_file_mtex": 146, "texture_": 146, "converteuler2spatialreferencefram": 146, "voronoi": 146, "tessel": 146, "aluminium": 146, "8": 146, "200": 146, "f_e": 146, "l_p": 146, "75": 146, "31": 146, "63": 146, "add_ipf_color": 146, "phase_data": 146, "sigma_vm": 146, "phase_nam": 146, "vol_avg_equivalent_stress": 146, "epsilon_v": 146, "_vm": 146, "vol_avg_equivalent_strain": 146, "vol_avg_equivalent_plastic_strain": 146, "field_data": 146, "grain_data": 146, "ipfcolor_": 146, "magnesium": 146, "mg": 146, "hp": 146, "62350": 146, "troman": 146, "2011": 146, "anisotropi": 146, "hcp": 146, "metal": 146, "polycryst": 146, "rho": 146, "1740": 146, "59": 146, "3e9": 146, "7e9": 146, "c_13": 146, "21": 146, "4e9": 146, "c_33": 146, "61": 146, "5e9": 146, "16": 146, "wang": 146, "et": 146, "acta": 146, "materialia": 146, "80": 146, "77": 146, "93": 146, "2014": 146, "doi": 146, "1016": 146, "actamat": 146, "07": 146, "048": 146, "xi_tw": 146, "basal": 146, "prism": 146, "pyr": 146, "n_tw": 146, "55": 146, "40": 146, "135": 146, "150": 146, "xi_0_tw": 146, "dot_gamma_0_tw": 146, "f_sat_sl": 146, "tw": 146, "500": 146, "h_0_tw": 146, "50": 146, "unus": 146, "entri": 146, "h_tw": 146, "yield": 146, "vol_avg_plastic_strain": 146, "hill1948": 146, "threshold": 146, "equivalent_plastic_strain": 146, "my": 147, "temporari": 147, "temporarili": 147, "just": 147, "session": 147, "load_config": 147, "reload_config": 147, "consol": 147, "usual": 147, "thing": 147, "howev": 147, "newer": 147, "incompat": 147, "sometim": 147, "reset_config": 147, "had": 147, "pointer": 147, "old": 147, "get_config_path": 147, "track": 147, "equival": 147, "clear_known_submissions_fil": 147, "common": 148, "quick": 148, "reset": [148, 153], "clear": [148, 153], "fulli": 150, "alphanumer": 150, "underscor": 150, "sdk": 150, "util": 150, "check_valid_py_identifi": 150, "prefer": 150, "except": 150, "acronym": 150, "remot": [151, 152], "wkt": [151, 152], "wk": 152, "tell": 152, "ssh": 152, "sandbox": 152, "zenodo": 152, "1210144": 152, "convert": 152, "to_zip": 152, "scienc": 153}, "objects": {"": [[4, 0, 0, "-", "matflow"]], "matflow": [[5, 1, 1, "", "Action"], [6, 1, 1, "", "ActionEnvironment"], [7, 1, 1, "", "ActionRule"], [8, 1, 1, "", "ActionScope"], [9, 1, 1, "", "ActionScopeType"], [10, 1, 1, "", "Command"], [11, 1, 1, "", "CommandFilesList"], [12, 1, 1, "", "DirectPosix"], [13, 1, 1, "", "DirectWindows"], [14, 1, 1, "", "Element"], [15, 1, 1, "", "ElementAction"], [16, 1, 1, "", "ElementActionRun"], [17, 1, 1, "", "ElementFilter"], [18, 1, 1, "", "ElementGroup"], [19, 1, 1, "", "ElementInputFiles"], [20, 1, 1, "", "ElementInputs"], [21, 1, 1, "", "ElementIteration"], [22, 1, 1, "", "ElementOutputFiles"], [23, 1, 1, "", "ElementOutputs"], [24, 1, 1, "", "ElementParameter"], [25, 1, 1, "", "ElementPropagation"], [26, 1, 1, "", "ElementRepeats"], [27, 1, 1, "", "ElementResources"], [28, 1, 1, "", "ElementSet"], [29, 1, 1, "", "Elements"], [30, 1, 1, "", "Environment"], [31, 1, 1, "", "EnvironmentsList"], [32, 1, 1, "", "Executable"], [33, 1, 1, "", "ExecutableInstance"], [34, 1, 1, "", "ExecutablesList"], [35, 1, 1, "", "FileNameExt"], [36, 1, 1, "", "FileNameSpec"], [37, 1, 1, "", "FileNameStem"], [38, 1, 1, "", "FileSpec"], [39, 1, 1, "", "GroupList"], [40, 1, 1, "", "InputFile"], [41, 1, 1, "", "InputFileGenerator"], [42, 1, 1, "", "InputFileGeneratorSource"], [43, 1, 1, "", "InputSource"], [44, 1, 1, "", "InputSourceType"], [45, 1, 1, "", "InputValue"], [46, 1, 1, "", "Jobscript"], [47, 1, 1, "", "Loop"], [48, 1, 1, "", "NumCores"], [49, 1, 1, "", "OutputFileParser"], [50, 1, 1, "", "OutputFileParserSource"], [51, 1, 1, "", "OutputLabel"], [52, 1, 1, "", "Parameter"], [53, 1, 1, "", "ParameterPath"], [54, 1, 1, "", "ParameterPropagationMode"], [55, 1, 1, "", "ParameterValue"], [56, 1, 1, "", "Parameters"], [57, 1, 1, "", "ParametersList"], [58, 1, 1, "", "ResourceList"], [59, 1, 1, "", "ResourceSpec"], [60, 1, 1, "", "Rule"], [61, 1, 1, "", "SGEPosix"], [62, 1, 1, "", "SchemaInput"], [63, 1, 1, "", "SchemaOutput"], [64, 1, 1, "", "SchemaParameter"], [65, 1, 1, "", "SlurmPosix"], [66, 1, 1, "", "SubParameter"], [67, 1, 1, "", "Submission"], [68, 1, 1, "", "Task"], [69, 1, 1, "", "TaskInputParameters"], [70, 1, 1, "", "TaskList"], [71, 1, 1, "", "TaskObjective"], [72, 1, 1, "", "TaskOutputParameters"], [73, 1, 1, "", "TaskSchema"], [74, 1, 1, "", "TaskSchemasList"], [75, 1, 1, "", "TaskSourceType"], [76, 1, 1, "", "TaskTemplateList"], [77, 1, 1, "", "ValuePerturbation"], [78, 1, 1, "", "ValueSequence"], [79, 1, 1, "", "Workflow"], [80, 1, 1, "", "WorkflowBlueprint"], [81, 1, 1, "", "WorkflowLoop"], [82, 1, 1, "", "WorkflowLoopList"], [83, 1, 1, "", "WorkflowTask"], [84, 1, 1, "", "WorkflowTaskList"], [85, 1, 1, "", "WorkflowTemplate"], [86, 5, 1, "", "app"], [87, 6, 1, "", "cancel"], [88, 0, 0, "-", "cli"], [89, 6, 1, "", "get_OS_info"], [90, 6, 1, "", "get_known_submissions"], [91, 6, 1, "", "get_shell_info"], [92, 6, 1, "", "make_and_submit_demo_workflow"], [93, 6, 1, "", "make_and_submit_workflow"], [94, 6, 1, "", "make_demo_workflow"], [95, 6, 1, "", "make_workflow"], [96, 0, 0, "-", "param_classes"], [115, 6, 1, "", "run_hpcflow_tests"], [116, 6, 1, "", "run_tests"], [117, 6, 1, "", "show"], [118, 6, 1, "", "show_legend"], [119, 6, 1, "", "submit_workflow"], [120, 0, 0, "-", "tests"], [137, 7, 1, "cmdoption-matflow-config-dir", "--config-dir"], [137, 7, 1, "cmdoption-matflow-config-key", "--config-key"], [137, 7, 1, "cmdoption-matflow-help", "--help"], [137, 7, 1, "cmdoption-matflow-hpcflow-version", "--hpcflow-version"], [137, 7, 1, "cmdoption-matflow-run-time-info", "--run-time-info"], [137, 7, 1, "cmdoption-matflow-version", "--version"], [137, 7, 1, "cmdoption-matflow-with-config", "--with-config"]], "matflow.Action": [[5, 2, 1, "", "app"], [5, 3, 1, "", "compose_source"], [5, 3, 1, "", "expand"], [5, 3, 1, "", "from_json_like"], [5, 3, 1, "", "generate_data_index"], [5, 3, 1, "", "get_command_input_file_labels"], [5, 3, 1, "", "get_command_input_types"], [5, 3, 1, "", "get_command_output_types"], [5, 3, 1, "", "get_commands_action_env"], [5, 3, 1, "", "get_environment"], [5, 3, 1, "", "get_environment_label"], [5, 3, 1, "", "get_input_file_generator_action_env"], [5, 3, 1, "", "get_input_file_labels"], [5, 3, 1, "", "get_input_types"], [5, 3, 1, "", "get_output_file_labels"], [5, 3, 1, "", "get_output_file_parser_action_env"], [5, 3, 1, "", "get_output_types"], [5, 3, 1, "", "get_param_dump_file_path_HDF5"], [5, 3, 1, "", "get_param_dump_file_path_JSON"], [5, 3, 1, "", "get_param_dump_file_stem"], [5, 3, 1, "", "get_param_load_file_path_HDF5"], [5, 3, 1, "", "get_param_load_file_path_JSON"], [5, 3, 1, "", "get_param_load_file_stem"], [5, 3, 1, "", "get_parameter_dependence"], [5, 3, 1, "", "get_parameter_names"], [5, 3, 1, "", "get_possible_scopes"], [5, 3, 1, "", "get_precise_scope"], [5, 3, 1, "", "get_required_executables"], [5, 3, 1, "", "get_resolved_action_env"], [5, 3, 1, "", "get_script_name"], [5, 3, 1, "", "get_snippet_script_path"], [5, 3, 1, "", "get_snippet_script_str"], [5, 3, 1, "", "is_input_type_required"], [5, 3, 1, "", "is_snippet_script"], [5, 3, 1, "", "process_script_data_formats"], [5, 4, 1, "", "script_data_in_grouped"], [5, 4, 1, "", "script_data_in_has_direct"], [5, 4, 1, "", "script_data_in_has_files"], [5, 4, 1, "", "script_data_out_grouped"], [5, 4, 1, "", "script_data_out_has_direct"], [5, 4, 1, "", "script_data_out_has_files"], [5, 4, 1, "", "script_is_python"], [5, 4, 1, "", "task_schema"], [5, 3, 1, "", "test_rules"], [5, 3, 1, "", "to_dict"], [5, 3, 1, "", "to_json_like"]], "matflow.ActionEnvironment": [[6, 2, 1, "", "app"], [6, 2, 1, "", "environment"], [6, 3, 1, "", "from_json_like"], [6, 2, 1, "", "scope"], [6, 3, 1, "", "to_dict"], [6, 3, 1, "", "to_json_like"]], "matflow.ActionRule": [[7, 2, 1, "", "app"], [7, 3, 1, "", "check_exists"], [7, 3, 1, "", "check_missing"], [7, 3, 1, "", "from_json_like"], [7, 3, 1, "", "test"], [7, 3, 1, "", "to_dict"], [7, 3, 1, "", "to_json_like"]], "matflow.ActionScope": [[8, 3, 1, "", "any"], [8, 2, 1, "", "app"], [8, 3, 1, "", "from_json_like"], [8, 3, 1, "", "input_file_generator"], [8, 3, 1, "", "main"], [8, 3, 1, "", "output_file_parser"], [8, 3, 1, "", "processing"], [8, 3, 1, "", "to_dict"], [8, 3, 1, "", "to_json_like"], [8, 3, 1, "", "to_string"]], "matflow.ActionScopeType": [[9, 2, 1, "", "ANY"], [9, 2, 1, "", "INPUT_FILE_GENERATOR"], [9, 2, 1, "", "MAIN"], [9, 2, 1, "", "OUTPUT_FILE_PARSER"], [9, 2, 1, "", "PROCESSING"]], "matflow.Command": [[10, 2, 1, "", "app"], [10, 2, 1, "", "arguments"], [10, 2, 1, "", "command"], [10, 2, 1, "", "executable"], [10, 3, 1, "", "from_json_like"], [10, 3, 1, "", "get_command_line"], [10, 3, 1, "", "get_output_types"], [10, 3, 1, "", "get_required_executables"], [10, 3, 1, "", "process_std_stream"], [10, 2, 1, "", "stderr"], [10, 2, 1, "", "stdin"], [10, 2, 1, "", "stdout"], [10, 3, 1, "", "to_dict"], [10, 3, 1, "", "to_json_like"], [10, 2, 1, "", "variables"]], "matflow.CommandFilesList": [[11, 3, 1, "", "add_object"], [11, 3, 1, "", "add_objects"], [11, 3, 1, "", "from_json_like"], [11, 3, 1, "", "get"], [11, 3, 1, "", "get_all"], [11, 3, 1, "", "list_attrs"], [11, 3, 1, "", "to_dict"], [11, 3, 1, "", "to_json_like"]], "matflow.DirectPosix": [[12, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [12, 2, 1, "", "DEFAULT_SHELL_ARGS"], [12, 2, 1, "", "DEFAULT_SHELL_EXECUTABLE"], [12, 2, 1, "", "app"], [12, 3, 1, "", "cancel_jobs"], [12, 3, 1, "", "get_job_state_info"], [12, 3, 1, "", "get_submit_command"], [12, 3, 1, "", "get_version_info"], [12, 3, 1, "", "is_jobscript_active"], [12, 3, 1, "", "is_num_cores_supported"], [12, 3, 1, "", "parse_submission_output"], [12, 3, 1, "", "process_resources"], [12, 3, 1, "", "wait_for_jobscripts"]], "matflow.DirectWindows": [[13, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [13, 2, 1, "", "DEFAULT_SHELL_ARGS"], [13, 2, 1, "", "DEFAULT_SHELL_EXECUTABLE"], [13, 2, 1, "", "app"], [13, 3, 1, "", "cancel_jobs"], [13, 3, 1, "", "get_job_state_info"], [13, 3, 1, "", "get_submit_command"], [13, 3, 1, "", "get_version_info"], [13, 3, 1, "", "is_jobscript_active"], [13, 3, 1, "", "is_num_cores_supported"], [13, 3, 1, "", "parse_submission_output"], [13, 3, 1, "", "process_resources"], [13, 3, 1, "", "wait_for_jobscripts"]], "matflow.Element": [[14, 4, 1, "", "action_runs"], [14, 4, 1, "", "actions"], [14, 2, 1, "", "app"], [14, 4, 1, "", "dir_name"], [14, 4, 1, "", "element_set"], [14, 4, 1, "", "element_set_idx"], [14, 3, 1, "", "get"], [14, 3, 1, "", "get_EAR_dependencies"], [14, 3, 1, "", "get_data_idx"], [14, 3, 1, "", "get_dependent_EARs"], [14, 3, 1, "", "get_dependent_element_iterations"], [14, 3, 1, "", "get_dependent_elements"], [14, 3, 1, "", "get_dependent_elements_recursively"], [14, 3, 1, "", "get_dependent_tasks"], [14, 3, 1, "", "get_element_dependencies"], [14, 3, 1, "", "get_element_iteration_dependencies"], [14, 3, 1, "", "get_input_dependencies"], [14, 3, 1, "", "get_parameter_sources"], [14, 3, 1, "", "get_sequence_value"], [14, 3, 1, "", "get_task_dependencies"], [14, 4, 1, "", "id_"], [14, 4, 1, "", "index"], [14, 3, 1, "", "init_loop_index"], [14, 4, 1, "", "input_files"], [14, 4, 1, "", "input_source_idx"], [14, 4, 1, "", "input_sources"], [14, 4, 1, "", "inputs"], [14, 4, 1, "", "is_pending"], [14, 4, 1, "", "iteration_IDs"], [14, 4, 1, "", "iterations"], [14, 4, 1, "", "latest_iteration"], [14, 4, 1, "", "output_files"], [14, 4, 1, "", "outputs"], [14, 4, 1, "", "schema_parameters"], [14, 4, 1, "", "sequence_idx"], [14, 4, 1, "", "task"], [14, 3, 1, "", "to_element_set_data"], [14, 4, 1, "", "workflow"]], "matflow.ElementAction": [[15, 4, 1, "", "action"], [15, 4, 1, "", "action_idx"], [15, 2, 1, "", "app"], [15, 4, 1, "", "element"], [15, 4, 1, "", "element_iteration"], [15, 3, 1, "", "get"], [15, 3, 1, "", "get_data_idx"], [15, 3, 1, "", "get_parameter_names"], [15, 3, 1, "", "get_parameter_sources"], [15, 4, 1, "", "input_files"], [15, 4, 1, "", "inputs"], [15, 4, 1, "", "num_runs"], [15, 4, 1, "", "output_files"], [15, 4, 1, "", "outputs"], [15, 4, 1, "", "runs"], [15, 4, 1, "", "task"]], "matflow.ElementActionRun": [[16, 4, 1, "", "action"], [16, 2, 1, "", "app"], [16, 3, 1, "", "compose_commands"], [16, 4, 1, "", "data_idx"], [16, 4, 1, "", "dir_diff"], [16, 4, 1, "", "element"], [16, 4, 1, "", "element_action"], [16, 4, 1, "", "element_iteration"], [16, 4, 1, "", "end_time"], [16, 4, 1, "", "exit_code"], [16, 3, 1, "", "get"], [16, 3, 1, "", "get_EAR_dependencies"], [16, 3, 1, "", "get_IFG_input_values"], [16, 3, 1, "", "get_OFP_inputs"], [16, 3, 1, "", "get_OFP_output_files"], [16, 3, 1, "", "get_OFP_outputs"], [16, 3, 1, "", "get_all_previous_iteration_runs"], [16, 3, 1, "", "get_data_idx"], [16, 3, 1, "", "get_dependent_EARs"], [16, 3, 1, "", "get_environment"], [16, 3, 1, "", "get_environment_label"], [16, 3, 1, "", "get_input_dependencies"], [16, 3, 1, "", "get_input_values"], [16, 3, 1, "", "get_input_values_direct"], [16, 3, 1, "", "get_parameter_names"], [16, 3, 1, "", "get_parameter_sources"], [16, 3, 1, "", "get_resources"], [16, 4, 1, "", "id_"], [16, 4, 1, "", "index"], [16, 4, 1, "", "input_files"], [16, 4, 1, "", "inputs"], [16, 4, 1, "", "is_pending"], [16, 4, 1, "", "metadata"], [16, 4, 1, "", "output_files"], [16, 4, 1, "", "outputs"], [16, 4, 1, "", "resources"], [16, 4, 1, "", "skip"], [16, 4, 1, "", "snapshot_end"], [16, 4, 1, "", "snapshot_start"], [16, 4, 1, "", "start_time"], [16, 4, 1, "", "status"], [16, 4, 1, "", "submission_idx"], [16, 4, 1, "", "success"], [16, 4, 1, "", "task"], [16, 4, 1, "", "workflow"], [16, 3, 1, "", "write_source"]], "matflow.ElementFilter": [[17, 2, 1, "", "app"], [17, 3, 1, "", "filter"], [17, 3, 1, "", "from_json_like"], [17, 2, 1, "", "rules"], [17, 3, 1, "", "to_dict"], [17, 3, 1, "", "to_json_like"]], "matflow.ElementGroup": [[18, 2, 1, "", "app"], [18, 3, 1, "", "from_json_like"], [18, 2, 1, "", "group_by_distinct"], [18, 2, 1, "", "name"], [18, 3, 1, "", "to_dict"], [18, 3, 1, "", "to_json_like"], [18, 2, 1, "", "where"]], "matflow.ElementInputFiles": [[19, 4, 1, "", "prefixed_names_unlabelled"], [19, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementInputs": [[20, 4, 1, "", "prefixed_names_unlabelled"], [20, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementIteration": [[21, 4, 1, "", "EAR_IDs"], [21, 4, 1, "", "EAR_IDs_flat"], [21, 4, 1, "", "EARs_initialised"], [21, 4, 1, "", "action_runs"], [21, 4, 1, "", "actions"], [21, 2, 1, "", "app"], [21, 4, 1, "", "data_idx"], [21, 4, 1, "", "element"], [21, 3, 1, "", "get"], [21, 3, 1, "", "get_EAR_dependencies"], [21, 3, 1, "", "get_data_idx"], [21, 3, 1, "", "get_dependent_EARs"], [21, 3, 1, "", "get_dependent_element_iterations"], [21, 3, 1, "", "get_dependent_elements"], [21, 3, 1, "", "get_dependent_tasks"], [21, 3, 1, "", "get_element_dependencies"], [21, 3, 1, "", "get_element_iteration_dependencies"], [21, 3, 1, "", "get_input_dependencies"], [21, 3, 1, "", "get_parameter_names"], [21, 3, 1, "", "get_parameter_sources"], [21, 3, 1, "", "get_resources"], [21, 3, 1, "", "get_resources_obj"], [21, 3, 1, "", "get_task_dependencies"], [21, 3, 1, "", "get_template_resources"], [21, 4, 1, "", "id_"], [21, 4, 1, "", "index"], [21, 4, 1, "", "input_files"], [21, 4, 1, "", "inputs"], [21, 4, 1, "", "is_pending"], [21, 4, 1, "", "loop_idx"], [21, 4, 1, "", "output_files"], [21, 4, 1, "", "outputs"], [21, 4, 1, "", "schema_parameters"], [21, 4, 1, "", "task"], [21, 4, 1, "", "workflow"]], "matflow.ElementOutputFiles": [[22, 4, 1, "", "prefixed_names_unlabelled"], [22, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementOutputs": [[23, 4, 1, "", "prefixed_names_unlabelled"], [23, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementParameter": [[24, 2, 1, "", "app"], [24, 4, 1, "", "data_idx"], [24, 4, 1, "", "data_idx_is_set"], [24, 2, 1, "", "element"], [24, 3, 1, "", "get_size"], [24, 4, 1, "", "is_set"], [24, 2, 1, "", "parent"], [24, 2, 1, "", "path"], [24, 2, 1, "", "task"], [24, 4, 1, "", "value"]], "matflow.ElementPropagation": [[25, 2, 1, "", "app"], [25, 4, 1, "", "element_set"], [25, 2, 1, "", "nesting_order"], [25, 2, 1, "", "task"]], "matflow.ElementRepeats": [[26, 2, 1, "", "number"], [26, 2, 1, "", "where"]], "matflow.ElementResources": [[27, 2, 1, "", "SGE_parallel_env"], [27, 4, 1, "", "SLURM_is_parallel"], [27, 2, 1, "", "SLURM_num_cpus_per_task"], [27, 2, 1, "", "SLURM_num_nodes"], [27, 2, 1, "", "SLURM_num_tasks"], [27, 2, 1, "", "SLURM_num_tasks_per_node"], [27, 2, 1, "", "SLURM_partition"], [27, 2, 1, "", "app"], [27, 3, 1, "", "from_json_like"], [27, 3, 1, "", "get_default_os_name"], [27, 3, 1, "", "get_default_scheduler"], [27, 3, 1, "", "get_default_shell"], [27, 3, 1, "", "get_jobscript_hash"], [27, 4, 1, "", "is_parallel"], [27, 2, 1, "", "max_array_items"], [27, 2, 1, "", "num_cores"], [27, 2, 1, "", "num_cores_per_node"], [27, 2, 1, "", "num_nodes"], [27, 2, 1, "", "num_threads"], [27, 2, 1, "", "os_name"], [27, 2, 1, "", "parallel_mode"], [27, 2, 1, "", "scheduler"], [27, 2, 1, "", "scheduler_args"], [27, 2, 1, "", "scratch"], [27, 3, 1, "", "set_defaults"], [27, 2, 1, "", "shell"], [27, 2, 1, "", "shell_args"], [27, 2, 1, "", "time_limit"], [27, 3, 1, "", "to_dict"], [27, 3, 1, "", "to_json_like"], [27, 2, 1, "", "use_job_array"], [27, 3, 1, "", "validate_against_machine"]], "matflow.ElementSet": [[28, 2, 1, "", "app"], [28, 4, 1, "", "defined_input_types"], [28, 4, 1, "", "elem_iter_IDs"], [28, 4, 1, "", "element_iterations"], [28, 4, 1, "", "element_local_idx_range"], [28, 4, 1, "", "elements"], [28, 3, 1, "", "ensure_element_sets"], [28, 3, 1, "", "from_json_like"], [28, 3, 1, "", "get_defined_parameter_types"], [28, 3, 1, "", "get_defined_sub_parameter_types"], [28, 3, 1, "", "get_locally_defined_inputs"], [28, 3, 1, "", "get_sequence_by_path"], [28, 3, 1, "", "get_sequence_from_path"], [28, 3, 1, "", "get_task_dependencies"], [28, 4, 1, "", "index"], [28, 4, 1, "", "input_types"], [28, 3, 1, "", "is_input_type_provided"], [28, 3, 1, "", "prepare_persistent_copy"], [28, 4, 1, "", "task"], [28, 4, 1, "", "task_template"], [28, 3, 1, "", "to_dict"], [28, 3, 1, "", "to_json_like"], [28, 4, 1, "", "undefined_input_types"]], "matflow.Elements": [[29, 4, 1, "", "task"]], "matflow.Environment": [[30, 2, 1, "", "app"], [30, 3, 1, "", "from_json_like"], [30, 3, 1, "", "to_dict"], [30, 3, 1, "", "to_json_like"]], "matflow.EnvironmentsList": [[31, 3, 1, "", "add_object"], [31, 3, 1, "", "add_objects"], [31, 3, 1, "", "from_json_like"], [31, 3, 1, "", "get"], [31, 3, 1, "", "get_all"], [31, 3, 1, "", "list_attrs"], [31, 3, 1, "", "to_dict"], [31, 3, 1, "", "to_json_like"]], "matflow.Executable": [[32, 2, 1, "", "app"], [32, 4, 1, "", "environment"], [32, 3, 1, "", "filter_instances"], [32, 3, 1, "", "from_json_like"], [32, 3, 1, "", "to_dict"], [32, 3, 1, "", "to_json_like"]], "matflow.ExecutableInstance": [[33, 2, 1, "", "app"], [33, 2, 1, "", "command"], [33, 3, 1, "", "from_json_like"], [33, 3, 1, "", "from_spec"], [33, 2, 1, "", "num_cores"], [33, 2, 1, "", "parallel_mode"], [33, 3, 1, "", "to_dict"], [33, 3, 1, "", "to_json_like"]], "matflow.ExecutablesList": [[34, 3, 1, "", "add_object"], [34, 3, 1, "", "add_objects"], [34, 2, 1, "", "environment"], [34, 3, 1, "", "from_json_like"], [34, 3, 1, "", "get"], [34, 3, 1, "", "get_all"], [34, 3, 1, "", "list_attrs"], [34, 3, 1, "", "to_dict"], [34, 3, 1, "", "to_json_like"]], "matflow.FileNameExt": [[35, 2, 1, "", "app"], [35, 2, 1, "", "file_name"], [35, 3, 1, "", "from_json_like"], [35, 3, 1, "", "to_dict"], [35, 3, 1, "", "to_json_like"], [35, 3, 1, "", "value"]], "matflow.FileNameSpec": [[36, 2, 1, "", "app"], [36, 4, 1, "", "ext"], [36, 3, 1, "", "from_json_like"], [36, 4, 1, "", "stem"], [36, 3, 1, "", "to_dict"], [36, 3, 1, "", "to_json_like"], [36, 3, 1, "", "value"]], "matflow.FileNameStem": [[37, 2, 1, "", "app"], [37, 2, 1, "", "file_name"], [37, 3, 1, "", "from_json_like"], [37, 3, 1, "", "to_dict"], [37, 3, 1, "", "to_json_like"], [37, 3, 1, "", "value"]], "matflow.FileSpec": [[38, 2, 1, "", "app"], [38, 4, 1, "", "ext"], [38, 3, 1, "", "from_json_like"], [38, 2, 1, "", "label"], [38, 2, 1, "", "name"], [38, 4, 1, "", "stem"], [38, 3, 1, "", "to_dict"], [38, 3, 1, "", "to_json_like"], [38, 3, 1, "", "value"]], "matflow.GroupList": [[39, 3, 1, "", "add_object"], [39, 3, 1, "", "add_objects"], [39, 3, 1, "", "from_json_like"], [39, 3, 1, "", "get"], [39, 3, 1, "", "get_all"], [39, 3, 1, "", "list_attrs"], [39, 3, 1, "", "to_dict"], [39, 3, 1, "", "to_json_like"]], "matflow.InputFile": [[40, 2, 1, "", "app"], [40, 4, 1, "", "contents"], [40, 4, 1, "", "extension"], [40, 3, 1, "", "from_json_like"], [40, 3, 1, "", "make_persistent"], [40, 4, 1, "", "normalised_files_path"], [40, 4, 1, "", "normalised_path"], [40, 4, 1, "", "path"], [40, 3, 1, "", "read_contents"], [40, 4, 1, "", "store_contents"], [40, 3, 1, "", "to_dict"], [40, 3, 1, "", "to_json_like"], [40, 4, 1, "", "workflow"]], "matflow.InputFileGenerator": [[41, 2, 1, "", "abortable"], [41, 2, 1, "", "app"], [41, 3, 1, "", "compose_source"], [41, 2, 1, "", "environment"], [41, 3, 1, "", "from_json_like"], [41, 3, 1, "", "get_action_rule"], [41, 2, 1, "", "input_file"], [41, 2, 1, "", "inputs"], [41, 2, 1, "", "script"], [41, 3, 1, "", "to_dict"], [41, 3, 1, "", "to_json_like"], [41, 3, 1, "", "write_source"]], "matflow.InputFileGeneratorSource": [[42, 2, 1, "", "app"], [42, 4, 1, "", "contents"], [42, 4, 1, "", "extension"], [42, 3, 1, "", "from_json_like"], [42, 3, 1, "", "make_persistent"], [42, 4, 1, "", "path"], [42, 3, 1, "", "read_contents"], [42, 4, 1, "", "store_contents"], [42, 3, 1, "", "to_dict"], [42, 3, 1, "", "to_json_like"], [42, 4, 1, "", "workflow"]], "matflow.InputSource": [[43, 2, 1, "", "app"], [43, 3, 1, "", "default"], [43, 3, 1, "", "from_json_like"], [43, 3, 1, "", "from_string"], [43, 3, 1, "", "get_task"], [43, 3, 1, "", "import_"], [43, 3, 1, "", "is_in"], [43, 3, 1, "", "local"], [43, 3, 1, "", "task"], [43, 3, 1, "", "to_dict"], [43, 3, 1, "", "to_json_like"], [43, 3, 1, "", "to_string"]], "matflow.InputSourceType": [[44, 2, 1, "", "DEFAULT"], [44, 2, 1, "", "IMPORT"], [44, 2, 1, "", "LOCAL"], [44, 2, 1, "", "TASK"]], "matflow.InputValue": [[45, 2, 1, "", "app"], [45, 3, 1, "", "from_json_like"], [45, 4, 1, "", "is_sub_value"], [45, 4, 1, "", "labelled_type"], [45, 3, 1, "", "make_persistent"], [45, 4, 1, "", "normalised_inputs_path"], [45, 4, 1, "", "normalised_path"], [45, 3, 1, "", "to_dict"], [45, 3, 1, "", "to_json_like"], [45, 4, 1, "", "value"], [45, 4, 1, "", "workflow"]], "matflow.Jobscript": [[46, 4, 1, "", "EAR_ID"], [46, 4, 1, "", "EAR_ID_file_name"], [46, 4, 1, "", "EAR_ID_file_path"], [46, 4, 1, "", "all_EAR_IDs"], [46, 4, 1, "", "all_EARs"], [46, 2, 1, "", "app"], [46, 3, 1, "", "cancel"], [46, 3, 1, "", "compose_jobscript"], [46, 4, 1, "", "dependencies"], [46, 4, 1, "", "direct_stderr_file_name"], [46, 4, 1, "", "direct_stderr_path"], [46, 4, 1, "", "direct_stdout_file_name"], [46, 4, 1, "", "direct_stdout_path"], [46, 4, 1, "", "direct_win_pid_file_name"], [46, 4, 1, "", "direct_win_pid_file_path"], [46, 4, 1, "", "element_run_dir_file_name"], [46, 4, 1, "", "element_run_dir_file_path"], [46, 4, 1, "", "end_time"], [46, 3, 1, "", "from_json_like"], [46, 3, 1, "", "get_active_states"], [46, 3, 1, "", "get_commands_file_name"], [46, 3, 1, "", "get_task_loop_idx_array"], [46, 4, 1, "", "index"], [46, 4, 1, "", "is_array"], [46, 4, 1, "", "is_submitted"], [46, 4, 1, "", "jobscript_name"], [46, 4, 1, "", "jobscript_path"], [46, 3, 1, "", "make_artifact_dirs"], [46, 4, 1, "", "num_actions"], [46, 4, 1, "", "num_elements"], [46, 4, 1, "", "os_name"], [46, 4, 1, "", "process_ID"], [46, 4, 1, "", "resources"], [46, 4, 1, "", "scheduler"], [46, 4, 1, "", "scheduler_job_ID"], [46, 4, 1, "", "scheduler_js_ref"], [46, 4, 1, "", "scheduler_name"], [46, 4, 1, "", "scheduler_ref"], [46, 4, 1, "", "shell"], [46, 4, 1, "", "shell_name"], [46, 4, 1, "", "start_time"], [46, 4, 1, "", "submission"], [46, 3, 1, "", "submit"], [46, 4, 1, "", "submit_cmdline"], [46, 4, 1, "", "submit_hostname"], [46, 4, 1, "", "submit_machine"], [46, 4, 1, "", "submit_time"], [46, 4, 1, "", "task_actions"], [46, 4, 1, "", "task_elements"], [46, 4, 1, "", "task_insert_IDs"], [46, 4, 1, "", "task_loop_idx"], [46, 3, 1, "", "to_dict"], [46, 3, 1, "", "to_json_like"], [46, 4, 1, "", "version_info"], [46, 4, 1, "", "workflow"], [46, 4, 1, "", "workflow_app_alias"], [46, 3, 1, "", "write_EAR_ID_file"], [46, 3, 1, "", "write_element_run_dir_file"], [46, 3, 1, "", "write_jobscript"]], "matflow.Loop": [[47, 2, 1, "", "app"], [47, 3, 1, "", "from_json_like"], [47, 4, 1, "", "name"], [47, 4, 1, "", "non_iterable_parameters"], [47, 4, 1, "", "num_iterations"], [47, 4, 1, "", "task_insert_IDs"], [47, 4, 1, "", "task_objects"], [47, 4, 1, "", "termination"], [47, 3, 1, "", "to_dict"], [47, 3, 1, "", "to_json_like"], [47, 4, 1, "", "workflow_template"]], "matflow.NumCores": [[48, 2, 1, "", "app"], [48, 3, 1, "", "from_json_like"], [48, 2, 1, "", "start"], [48, 2, 1, "", "step"], [48, 2, 1, "", "stop"], [48, 3, 1, "", "to_dict"], [48, 3, 1, "", "to_json_like"]], "matflow.OutputFileParser": [[49, 2, 1, "", "abortable"], [49, 2, 1, "", "app"], [49, 2, 1, "", "clean_up"], [49, 3, 1, "", "compose_source"], [49, 2, 1, "", "environment"], [49, 3, 1, "", "from_json_like"], [49, 2, 1, "", "inputs"], [49, 2, 1, "", "options"], [49, 2, 1, "", "output"], [49, 2, 1, "", "output_files"], [49, 2, 1, "", "outputs"], [49, 2, 1, "", "save_files"], [49, 2, 1, "", "script"], [49, 3, 1, "", "to_dict"], [49, 3, 1, "", "to_json_like"], [49, 3, 1, "", "write_source"]], "matflow.OutputFileParserSource": [[50, 2, 1, "", "app"], [50, 4, 1, "", "contents"], [50, 4, 1, "", "extension"], [50, 3, 1, "", "from_json_like"], [50, 3, 1, "", "make_persistent"], [50, 4, 1, "", "path"], [50, 3, 1, "", "read_contents"], [50, 4, 1, "", "store_contents"], [50, 3, 1, "", "to_dict"], [50, 3, 1, "", "to_json_like"], [50, 4, 1, "", "workflow"]], "matflow.OutputLabel": [[51, 2, 1, "", "app"], [51, 3, 1, "", "from_json_like"], [51, 3, 1, "", "to_dict"], [51, 3, 1, "", "to_json_like"]], "matflow.Parameter": [[52, 2, 1, "", "app"], [52, 3, 1, "", "from_json_like"], [52, 2, 1, "", "is_file"], [52, 2, 1, "", "sub_parameters"], [52, 3, 1, "", "to_dict"], [52, 3, 1, "", "to_json_like"], [52, 2, 1, "", "typ"], [52, 4, 1, "", "url_slug"]], "matflow.ParameterPath": [[53, 2, 1, "", "app"], [53, 3, 1, "", "from_json_like"], [53, 2, 1, "", "path"], [53, 2, 1, "", "task"], [53, 3, 1, "", "to_dict"], [53, 3, 1, "", "to_json_like"]], "matflow.ParameterPropagationMode": [[54, 2, 1, "", "EXPLICIT"], [54, 2, 1, "", "IMPLICIT"], [54, 2, 1, "", "NEVER"]], "matflow.ParameterValue": [[55, 3, 1, "", "dump_to_HDF5_group"], [55, 3, 1, "", "prepare_JSON_dump"], [55, 3, 1, "", "save_from_HDF5_group"], [55, 3, 1, "", "save_from_JSON"], [55, 3, 1, "", "to_dict"]], "matflow.Parameters": [[56, 2, 1, "", "default"], [56, 2, 1, "", "path"], [56, 2, 1, "", "raise_on_missing"], [56, 2, 1, "", "raise_on_unset"], [56, 2, 1, "", "return_element_parameters"], [56, 2, 1, "", "task"]], "matflow.ParametersList": [[57, 3, 1, "", "add_object"], [57, 3, 1, "", "add_objects"], [57, 3, 1, "", "from_json_like"], [57, 3, 1, "", "get"], [57, 3, 1, "", "get_all"], [57, 3, 1, "", "list_attrs"], [57, 3, 1, "", "to_dict"], [57, 3, 1, "", "to_json_like"]], "matflow.ResourceList": [[58, 3, 1, "", "add_object"], [58, 4, 1, "", "element_set"], [58, 3, 1, "", "from_json_like"], [58, 3, 1, "", "get"], [58, 3, 1, "", "get_all"], [58, 3, 1, "", "get_scopes"], [58, 3, 1, "", "list_attrs"], [58, 3, 1, "", "merge_template_resources"], [58, 3, 1, "", "normalise"], [58, 3, 1, "", "to_dict"], [58, 3, 1, "", "to_json_like"], [58, 4, 1, "", "workflow_template"]], "matflow.ResourceSpec": [[59, 2, 1, "", "ALLOWED_PARAMETERS"], [59, 4, 1, "", "SGE_parallel_env"], [59, 4, 1, "", "SLURM_num_cpus_per_task"], [59, 4, 1, "", "SLURM_num_nodes"], [59, 4, 1, "", "SLURM_num_tasks"], [59, 4, 1, "", "SLURM_num_tasks_per_node"], [59, 4, 1, "", "SLURM_partition"], [59, 2, 1, "", "app"], [59, 3, 1, "", "copy_non_persistent"], [59, 4, 1, "", "element_set"], [59, 3, 1, "", "from_json_like"], [59, 3, 1, "", "make_persistent"], [59, 4, 1, "", "max_array_items"], [59, 4, 1, "", "normalised_path"], [59, 4, 1, "", "normalised_resources_path"], [59, 4, 1, "", "num_cores"], [59, 4, 1, "", "num_cores_per_node"], [59, 4, 1, "", "num_nodes"], [59, 4, 1, "", "num_threads"], [59, 4, 1, "", "os_name"], [59, 4, 1, "", "parallel_mode"], [59, 4, 1, "", "scheduler"], [59, 4, 1, "", "scheduler_args"], [59, 4, 1, "", "scratch"], [59, 4, 1, "", "shell"], [59, 4, 1, "", "shell_args"], [59, 4, 1, "", "time_limit"], [59, 3, 1, "", "to_dict"], [59, 3, 1, "", "to_json_like"], [59, 4, 1, "", "use_job_array"], [59, 4, 1, "", "workflow"], [59, 4, 1, "", "workflow_template"]], "matflow.Rule": [[60, 2, 1, "", "app"], [60, 3, 1, "", "from_json_like"], [60, 3, 1, "", "test"], [60, 3, 1, "", "to_dict"], [60, 3, 1, "", "to_json_like"]], "matflow.SGEPosix": [[61, 2, 1, "", "DEFAULT_ARRAY_ITEM_VAR"], [61, 2, 1, "", "DEFAULT_ARRAY_SWITCH"], [61, 2, 1, "", "DEFAULT_CWD_SWITCH"], [61, 2, 1, "", "DEFAULT_DEL_CMD"], [61, 2, 1, "", "DEFAULT_JS_CMD"], [61, 2, 1, "", "DEFAULT_LOGIN_NODES_CMD"], [61, 2, 1, "", "DEFAULT_LOGIN_NODE_MATCH"], [61, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [61, 2, 1, "", "DEFAULT_SHELL_ARGS"], [61, 2, 1, "", "DEFAULT_SHOW_CMD"], [61, 2, 1, "", "DEFAULT_SUBMIT_CMD"], [61, 2, 1, "", "app"], [61, 3, 1, "", "cancel_jobs"], [61, 3, 1, "", "format_array_request"], [61, 3, 1, "", "format_core_request_lines"], [61, 3, 1, "", "format_options"], [61, 3, 1, "", "format_std_stream_file_option_lines"], [61, 3, 1, "", "format_switch"], [61, 3, 1, "", "get_job_state_info"], [61, 3, 1, "", "get_job_statuses"], [61, 3, 1, "", "get_login_nodes"], [61, 3, 1, "", "get_submit_command"], [61, 3, 1, "", "get_version_info"], [61, 3, 1, "", "is_jobscript_active"], [61, 3, 1, "", "is_num_cores_supported"], [61, 3, 1, "", "parse_submission_output"], [61, 3, 1, "", "process_resources"], [61, 2, 1, "", "state_lookup"], [61, 3, 1, "", "wait_for_jobscripts"]], "matflow.SchemaInput": [[62, 4, 1, "", "all_labelled_types"], [62, 2, 1, "", "app"], [62, 4, 1, "", "default_value"], [62, 3, 1, "", "from_json_like"], [62, 4, 1, "", "input_or_output"], [62, 3, 1, "", "labelled_info"], [62, 4, 1, "", "name"], [62, 4, 1, "", "single_label"], [62, 4, 1, "", "single_labelled_data"], [62, 4, 1, "", "single_labelled_type"], [62, 4, 1, "", "task_schema"], [62, 3, 1, "", "to_dict"], [62, 3, 1, "", "to_json_like"], [62, 4, 1, "", "typ"]], "matflow.SchemaOutput": [[63, 2, 1, "", "app"], [63, 3, 1, "", "from_json_like"], [63, 4, 1, "", "input_or_output"], [63, 4, 1, "", "name"], [63, 2, 1, "", "parameter"], [63, 2, 1, "", "propagation_mode"], [63, 3, 1, "", "to_dict"], [63, 3, 1, "", "to_json_like"], [63, 4, 1, "", "typ"]], "matflow.SchemaParameter": [[64, 2, 1, "", "app"], [64, 3, 1, "", "from_json_like"], [64, 4, 1, "", "name"], [64, 3, 1, "", "to_dict"], [64, 3, 1, "", "to_json_like"], [64, 4, 1, "", "typ"]], "matflow.SlurmPosix": [[65, 2, 1, "", "DEFAULT_ARRAY_ITEM_VAR"], [65, 2, 1, "", "DEFAULT_ARRAY_SWITCH"], [65, 2, 1, "", "DEFAULT_DEL_CMD"], [65, 2, 1, "", "DEFAULT_JS_CMD"], [65, 2, 1, "", "DEFAULT_LOGIN_NODES_CMD"], [65, 2, 1, "", "DEFAULT_LOGIN_NODE_MATCH"], [65, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [65, 2, 1, "", "DEFAULT_SHELL_ARGS"], [65, 2, 1, "", "DEFAULT_SHELL_EXECUTABLE"], [65, 2, 1, "", "DEFAULT_SHOW_CMD"], [65, 2, 1, "", "DEFAULT_SUBMIT_CMD"], [65, 2, 1, "", "app"], [65, 3, 1, "", "cancel_jobs"], [65, 3, 1, "", "format_array_request"], [65, 3, 1, "", "format_core_request_lines"], [65, 3, 1, "", "format_options"], [65, 3, 1, "", "format_std_stream_file_option_lines"], [65, 3, 1, "", "format_switch"], [65, 3, 1, "", "get_job_state_info"], [65, 3, 1, "", "get_submit_command"], [65, 3, 1, "", "get_version_info"], [65, 3, 1, "", "is_jobscript_active"], [65, 3, 1, "", "is_num_cores_supported"], [65, 3, 1, "", "parse_submission_output"], [65, 3, 1, "", "process_resources"], [65, 2, 1, "", "state_lookup"], [65, 3, 1, "", "wait_for_jobscripts"]], "matflow.SubParameter": [[66, 2, 1, "", "address"], [66, 2, 1, "", "parameter"]], "matflow.Submission": [[67, 4, 1, "", "EARs_by_elements"], [67, 4, 1, "", "JS_parallelism"], [67, 4, 1, "", "abort_EARs_file_name"], [67, 4, 1, "", "abort_EARs_file_path"], [67, 4, 1, "", "all_EAR_IDs"], [67, 4, 1, "", "all_EARs"], [67, 2, 1, "", "app"], [67, 3, 1, "", "cancel"], [67, 4, 1, "", "end_time"], [67, 4, 1, "", "environments"], [67, 3, 1, "", "from_json_like"], [67, 3, 1, "", "get_active_jobscripts"], [67, 3, 1, "", "get_end_time"], [67, 3, 1, "", "get_start_time"], [67, 3, 1, "", "get_unique_schedulers"], [67, 3, 1, "", "get_unique_schedulers_of_jobscripts"], [67, 3, 1, "", "get_unique_shells"], [67, 4, 1, "", "index"], [67, 4, 1, "", "jobscript_indices"], [67, 4, 1, "", "jobscripts"], [67, 4, 1, "", "needs_submit"], [67, 4, 1, "", "outstanding_jobscripts"], [67, 4, 1, "", "path"], [67, 4, 1, "", "start_time"], [67, 4, 1, "", "status"], [67, 4, 1, "", "submission_parts"], [67, 3, 1, "", "submit"], [67, 4, 1, "", "submitted_jobscripts"], [67, 3, 1, "", "to_dict"], [67, 3, 1, "", "to_json_like"], [67, 4, 1, "", "workflow"]], "matflow.Task": [[68, 3, 1, "", "add_group"], [68, 3, 1, "", "all_schema_actions"], [68, 4, 1, "", "all_schema_input_normalised_paths"], [68, 4, 1, "", "all_schema_input_types"], [68, 4, 1, "", "all_schema_inputs"], [68, 4, 1, "", "all_schema_output_types"], [68, 4, 1, "", "all_schema_outputs"], [68, 4, 1, "", "all_sourced_normalised_paths"], [68, 2, 1, "", "app"], [68, 4, 1, "", "defined_input_types"], [68, 4, 1, "", "dir_name"], [68, 4, 1, "", "element_sets"], [68, 3, 1, "", "from_json_like"], [68, 3, 1, "", "get_available_task_input_sources"], [68, 3, 1, "", "get_input_statuses"], [68, 3, 1, "", "get_param_provided_element_sets"], [68, 3, 1, "", "get_schema_action"], [68, 3, 1, "", "get_task_unique_names"], [68, 4, 1, "", "index"], [68, 4, 1, "", "insert_ID"], [68, 3, 1, "", "is_input_type_required"], [68, 4, 1, "", "name"], [68, 4, 1, "", "non_universal_input_types"], [68, 4, 1, "", "num_all_schema_actions"], [68, 4, 1, "", "num_element_sets"], [68, 4, 1, "", "objective"], [68, 4, 1, "", "output_labels"], [68, 3, 1, "", "prepare_element_resolution"], [68, 3, 1, "", "provides_parameters"], [68, 4, 1, "", "schema"], [68, 4, 1, "", "schemas"], [68, 3, 1, "", "set_sequence_parameters"], [68, 3, 1, "", "to_dict"], [68, 3, 1, "", "to_json_like"], [68, 3, 1, "", "to_persistent"], [68, 4, 1, "", "undefined_input_types"], [68, 4, 1, "", "undefined_inputs"], [68, 4, 1, "", "universal_input_types"]], "matflow.TaskInputParameters": [[69, 2, 1, "", "task"]], "matflow.TaskList": [[70, 3, 1, "", "add_object"], [70, 3, 1, "", "add_objects"], [70, 3, 1, "", "from_json_like"], [70, 3, 1, "", "get"], [70, 3, 1, "", "get_all"], [70, 3, 1, "", "list_attrs"], [70, 3, 1, "", "to_dict"], [70, 3, 1, "", "to_json_like"]], "matflow.TaskObjective": [[71, 2, 1, "", "app"], [71, 3, 1, "", "from_json_like"], [71, 2, 1, "", "name"], [71, 3, 1, "", "to_dict"], [71, 3, 1, "", "to_json_like"]], "matflow.TaskOutputParameters": [[72, 2, 1, "", "task"]], "matflow.TaskSchema": [[73, 2, 1, "", "app"], [73, 4, 1, "", "basic_info"], [73, 3, 1, "", "from_json_like"], [73, 3, 1, "", "get_by_key"], [73, 3, 1, "", "get_key"], [73, 3, 1, "", "get_parameter_dependence"], [73, 3, 1, "", "ignore_invalid_actions"], [73, 4, 1, "", "info"], [73, 4, 1, "", "input_types"], [73, 3, 1, "", "make_persistent"], [73, 4, 1, "", "multi_input_types"], [73, 4, 1, "", "name"], [73, 4, 1, "", "output_types"], [73, 4, 1, "", "provides_parameters"], [73, 4, 1, "", "task_template"], [73, 3, 1, "", "to_dict"], [73, 3, 1, "", "to_json_like"]], "matflow.TaskSchemasList": [[74, 3, 1, "", "add_object"], [74, 3, 1, "", "add_objects"], [74, 3, 1, "", "from_json_like"], [74, 3, 1, "", "get"], [74, 3, 1, "", "get_all"], [74, 3, 1, "", "list_attrs"], [74, 3, 1, "", "to_dict"], [74, 3, 1, "", "to_json_like"]], "matflow.TaskSourceType": [[75, 2, 1, "", "ANY"], [75, 2, 1, "", "INPUT"], [75, 2, 1, "", "OUTPUT"]], "matflow.TaskTemplateList": [[76, 3, 1, "", "add_object"], [76, 3, 1, "", "add_objects"], [76, 3, 1, "", "from_json_like"], [76, 3, 1, "", "get"], [76, 3, 1, "", "get_all"], [76, 3, 1, "", "list_attrs"], [76, 3, 1, "", "to_dict"], [76, 3, 1, "", "to_json_like"]], "matflow.ValuePerturbation": [[77, 2, 1, "", "additive_factor"], [77, 2, 1, "", "app"], [77, 3, 1, "", "from_json_like"], [77, 3, 1, "", "from_spec"], [77, 3, 1, "", "make_persistent"], [77, 2, 1, "", "multiplicative_factor"], [77, 2, 1, "", "name"], [77, 2, 1, "", "path"], [77, 3, 1, "", "to_dict"], [77, 3, 1, "", "to_json_like"], [77, 4, 1, "", "value"], [77, 4, 1, "", "workflow"]], "matflow.ValueSequence": [[78, 2, 1, "", "app"], [78, 3, 1, "", "from_file"], [78, 3, 1, "", "from_geometric_space"], [78, 3, 1, "", "from_json_like"], [78, 3, 1, "", "from_linear_space"], [78, 3, 1, "", "from_log_space"], [78, 3, 1, "", "from_range"], [78, 3, 1, "", "from_rectangle"], [78, 4, 1, "", "input_path"], [78, 4, 1, "", "input_type"], [78, 4, 1, "", "is_sub_value"], [78, 4, 1, "", "labelled_type"], [78, 3, 1, "", "make_persistent"], [78, 4, 1, "", "normalised_inputs_path"], [78, 4, 1, "", "normalised_path"], [78, 4, 1, "", "parameter"], [78, 4, 1, "", "path_split"], [78, 4, 1, "", "path_type"], [78, 4, 1, "", "resource_scope"], [78, 3, 1, "", "to_dict"], [78, 3, 1, "", "to_json_like"], [78, 4, 1, "", "values"], [78, 4, 1, "", "workflow"]], "matflow.Workflow": [[79, 3, 1, "", "abort_run"], [79, 3, 1, "", "add_loop"], [79, 3, 1, "", "add_submission"], [79, 3, 1, "", "add_task"], [79, 3, 1, "", "add_task_after"], [79, 3, 1, "", "add_task_before"], [79, 2, 1, "", "app"], [79, 4, 1, "", "artifacts_path"], [79, 3, 1, "", "batch_update"], [79, 3, 1, "", "cancel"], [79, 3, 1, "", "check_loop_termination"], [79, 3, 1, "", "check_parameters_exist"], [79, 3, 1, "", "copy"], [79, 4, 1, "", "creation_info"], [79, 3, 1, "", "delete"], [79, 3, 1, "", "elements"], [79, 4, 1, "", "execution_path"], [79, 3, 1, "", "from_JSON_file"], [79, 3, 1, "", "from_JSON_string"], [79, 3, 1, "", "from_YAML_file"], [79, 3, 1, "", "from_YAML_string"], [79, 3, 1, "", "from_file"], [79, 3, 1, "", "from_template"], [79, 3, 1, "", "from_template_data"], [79, 4, 1, "", "fs_path"], [79, 3, 1, "", "get_EAR_IDs_of_tasks"], [79, 3, 1, "", "get_EAR_skipped"], [79, 3, 1, "", "get_EARs_from_IDs"], [79, 3, 1, "", "get_EARs_of_tasks"], [79, 3, 1, "", "get_all_EARs"], [79, 3, 1, "", "get_all_element_iterations"], [79, 3, 1, "", "get_all_elements"], [79, 3, 1, "", "get_all_parameter_data"], [79, 3, 1, "", "get_all_parameters"], [79, 3, 1, "", "get_all_submission_run_IDs"], [79, 3, 1, "", "get_element_IDs_from_EAR_IDs"], [79, 3, 1, "", "get_element_iteration_IDs_from_EAR_IDs"], [79, 3, 1, "", "get_element_iterations_from_IDs"], [79, 3, 1, "", "get_element_iterations_of_tasks"], [79, 3, 1, "", "get_elements_from_IDs"], [79, 3, 1, "", "get_iteration_final_run_IDs"], [79, 3, 1, "", "get_iteration_task_pathway"], [79, 3, 1, "", "get_loop_map"], [79, 3, 1, "", "get_parameter"], [79, 3, 1, "", "get_parameter_data"], [79, 3, 1, "", "get_parameter_set_statuses"], [79, 3, 1, "", "get_parameter_source"], [79, 3, 1, "", "get_parameter_sources"], [79, 3, 1, "", "get_parameters"], [79, 3, 1, "", "get_running_elements"], [79, 3, 1, "", "get_running_runs"], [79, 3, 1, "", "get_store_EARs"], [79, 3, 1, "", "get_store_element_iterations"], [79, 3, 1, "", "get_store_elements"], [79, 3, 1, "", "get_store_tasks"], [79, 3, 1, "", "get_task_IDs_from_element_IDs"], [79, 3, 1, "", "get_task_elements"], [79, 3, 1, "", "get_task_unique_names"], [79, 4, 1, "", "id_"], [79, 4, 1, "", "input_files_path"], [79, 3, 1, "", "is_parameter_set"], [79, 4, 1, "", "loops"], [79, 4, 1, "", "name"], [79, 4, 1, "", "num_EARs"], [79, 4, 1, "", "num_added_tasks"], [79, 4, 1, "", "num_element_iterations"], [79, 4, 1, "", "num_elements"], [79, 4, 1, "", "num_loops"], [79, 4, 1, "", "num_submissions"], [79, 4, 1, "", "num_tasks"], [79, 3, 1, "", "process_shell_parameter_output"], [79, 3, 1, "", "reload"], [79, 3, 1, "", "resolve_jobscripts"], [79, 3, 1, "", "save_parameter"], [79, 3, 1, "", "set_EAR_end"], [79, 3, 1, "", "set_EAR_skip"], [79, 3, 1, "", "set_EAR_start"], [79, 3, 1, "", "set_EAR_submission_index"], [79, 3, 1, "", "set_EARs_initialised"], [79, 3, 1, "", "set_parameter_value"], [79, 3, 1, "", "show_all_EAR_statuses"], [79, 4, 1, "", "store_format"], [79, 4, 1, "", "submissions"], [79, 4, 1, "", "submissions_path"], [79, 3, 1, "", "submit"], [79, 4, 1, "", "task_artifacts_path"], [79, 4, 1, "", "tasks"], [79, 4, 1, "", "template"], [79, 4, 1, "", "template_components"], [79, 3, 1, "", "temporary_rename"], [79, 4, 1, "", "ts_fmt"], [79, 4, 1, "", "ts_name_fmt"], [79, 3, 1, "", "unzip"], [79, 3, 1, "", "wait"], [79, 3, 1, "", "write_commands"], [79, 3, 1, "", "zip"]], "matflow.WorkflowBlueprint": [[80, 2, 1, "", "workflow_template"]], "matflow.WorkflowLoop": [[81, 3, 1, "", "add_iteration"], [81, 2, 1, "", "app"], [81, 3, 1, "", "get_child_loops"], [81, 3, 1, "", "get_parent_loops"], [81, 4, 1, "", "index"], [81, 4, 1, "", "iterable_parameters"], [81, 4, 1, "", "name"], [81, 3, 1, "", "new_empty_loop"], [81, 4, 1, "", "num_added_iterations"], [81, 4, 1, "", "num_iterations"], [81, 4, 1, "", "task_indices"], [81, 4, 1, "", "task_insert_IDs"], [81, 4, 1, "", "task_objects"], [81, 4, 1, "", "template"], [81, 3, 1, "", "test_termination"], [81, 4, 1, "", "workflow"]], "matflow.WorkflowLoopList": [[82, 3, 1, "", "add_object"], [82, 3, 1, "", "add_objects"], [82, 2, 1, "", "app"], [82, 3, 1, "", "from_json_like"], [82, 3, 1, "", "get"], [82, 3, 1, "", "get_all"], [82, 3, 1, "", "list_attrs"], [82, 3, 1, "", "to_dict"], [82, 3, 1, "", "to_json_like"]], "matflow.WorkflowTask": [[83, 3, 1, "", "add_elements"], [83, 2, 1, "", "app"], [83, 4, 1, "", "dir_name"], [83, 4, 1, "", "downstream_tasks"], [83, 4, 1, "", "element_IDs"], [83, 4, 1, "", "elements"], [83, 3, 1, "", "ensure_input_sources"], [83, 3, 1, "", "generate_new_elements"], [83, 3, 1, "", "get"], [83, 3, 1, "", "get_all_element_iterations"], [83, 3, 1, "", "get_dependent_elements"], [83, 3, 1, "", "get_dependent_tasks"], [83, 3, 1, "", "get_dir_name"], [83, 3, 1, "", "get_element_dependencies"], [83, 3, 1, "", "get_task_dependencies"], [83, 4, 1, "", "index"], [83, 3, 1, "", "initialise_EARs"], [83, 4, 1, "", "inputs"], [83, 4, 1, "", "insert_ID"], [83, 4, 1, "", "name"], [83, 3, 1, "", "new_empty_task"], [83, 4, 1, "", "num_actions"], [83, 4, 1, "", "num_element_sets"], [83, 4, 1, "", "num_elements"], [83, 4, 1, "", "outputs"], [83, 3, 1, "", "resolve_element_data_indices"], [83, 4, 1, "", "template"], [83, 4, 1, "", "unique_name"], [83, 4, 1, "", "upstream_tasks"], [83, 4, 1, "", "workflow"]], "matflow.WorkflowTaskList": [[84, 3, 1, "", "add_object"], [84, 3, 1, "", "add_objects"], [84, 2, 1, "", "app"], [84, 3, 1, "", "from_json_like"], [84, 3, 1, "", "get"], [84, 3, 1, "", "get_all"], [84, 3, 1, "", "list_attrs"], [84, 3, 1, "", "to_dict"], [84, 3, 1, "", "to_json_like"]], "matflow.WorkflowTemplate": [[85, 2, 1, "", "app"], [85, 2, 1, "", "doc"], [85, 3, 1, "", "from_JSON_file"], [85, 3, 1, "", "from_JSON_string"], [85, 3, 1, "", "from_YAML_file"], [85, 3, 1, "", "from_YAML_string"], [85, 3, 1, "", "from_file"], [85, 3, 1, "", "from_json_like"], [85, 2, 1, "", "loops"], [85, 2, 1, "", "merge_resources"], [85, 2, 1, "", "name"], [85, 2, 1, "", "resources"], [85, 2, 1, "", "source_file"], [85, 2, 1, "", "store_kwargs"], [85, 2, 1, "", "tasks"], [85, 3, 1, "", "to_dict"], [85, 3, 1, "", "to_json_like"], [85, 2, 1, "", "workflow"]], "matflow.param_classes": [[97, 0, 0, "-", "load"], [101, 0, 0, "-", "orientations"], [109, 0, 0, "-", "seeds"], [111, 0, 0, "-", "single_crystal_parameters"], [113, 0, 0, "-", "utils"]], "matflow.param_classes.load": [[98, 1, 1, "", "LoadCase"], [99, 1, 1, "", "LoadStep"], [100, 1, 1, "", "StrainRateMode"]], "matflow.param_classes.load.LoadCase": [[98, 3, 1, "", "biaxial"], [98, 3, 1, "", "dump_to_HDF5_group"], [98, 3, 1, "", "example_uniaxial"], [98, 3, 1, "", "multistep"], [98, 4, 1, "", "num_steps"], [98, 3, 1, "", "planar_2D"], [98, 3, 1, "", "plane_strain"], [98, 3, 1, "", "prepare_JSON_dump"], [98, 3, 1, "", "random_2D"], [98, 3, 1, "", "random_3D"], [98, 3, 1, "", "save_from_HDF5_group"], [98, 3, 1, "", "save_from_JSON"], [98, 2, 1, "", "steps"], [98, 3, 1, "", "to_dict"], [98, 4, 1, "", "type"], [98, 4, 1, "", "types"], [98, 3, 1, "", "uniaxial"], [98, 3, 1, "", "uniaxial_cyclic"]], "matflow.param_classes.load.LoadStep": [[99, 3, 1, "", "biaxial"], [99, 3, 1, "", "dump_to_HDF5_group"], [99, 3, 1, "", "example_uniaxial"], [99, 4, 1, "", "method_args"], [99, 4, 1, "", "method_name"], [99, 3, 1, "", "planar_2D"], [99, 3, 1, "", "plane_strain"], [99, 3, 1, "", "prepare_JSON_dump"], [99, 3, 1, "", "random_2D"], [99, 3, 1, "", "random_3D"], [99, 3, 1, "", "save_from_HDF5_group"], [99, 3, 1, "", "save_from_JSON"], [99, 4, 1, "", "strain_like_tensor"], [99, 3, 1, "", "to_dict"], [99, 4, 1, "", "type"], [99, 3, 1, "", "uniaxial"], [99, 3, 1, "", "uniaxial_cyclic"]], "matflow.param_classes.load.StrainRateMode": [[100, 2, 1, "", "DEF_GRAD_RATE"], [100, 2, 1, "", "VEL_GRAD"], [100, 2, 1, "", "VEL_GRAD_APPROX"]], "matflow.param_classes.orientations": [[102, 1, 1, "", "EulerDefinition"], [103, 1, 1, "", "LatticeDirection"], [104, 1, 1, "", "OrientationRepresentation"], [105, 1, 1, "", "OrientationRepresentationType"], [106, 1, 1, "", "Orientations"], [107, 1, 1, "", "QuatOrder"], [108, 1, 1, "", "UnitCellAlignment"]], "matflow.param_classes.orientations.EulerDefinition": [[102, 2, 1, "", "BUNGE"]], "matflow.param_classes.orientations.LatticeDirection": [[103, 2, 1, "", "A"], [103, 2, 1, "", "A_STAR"], [103, 2, 1, "", "B"], [103, 2, 1, "", "B_STAR"], [103, 2, 1, "", "C"], [103, 2, 1, "", "C_STAR"]], "matflow.param_classes.orientations.OrientationRepresentation": [[104, 3, 1, "", "dump_to_HDF5_group"], [104, 2, 1, "", "euler_definition"], [104, 2, 1, "", "euler_is_degrees"], [104, 3, 1, "", "prepare_JSON_dump"], [104, 2, 1, "", "quat_order"], [104, 3, 1, "", "save_from_HDF5_group"], [104, 3, 1, "", "save_from_JSON"], [104, 3, 1, "", "to_dict"], [104, 2, 1, "", "type"]], "matflow.param_classes.orientations.OrientationRepresentationType": [[105, 2, 1, "", "EULER"], [105, 2, 1, "", "QUATERNION"]], "matflow.param_classes.orientations.Orientations": [[106, 2, 1, "", "data"], [106, 3, 1, "", "dump_to_HDF5_group"], [106, 3, 1, "", "from_JSON_like"], [106, 3, 1, "", "from_file"], [106, 3, 1, "", "from_random"], [106, 3, 1, "", "prepare_JSON_dump"], [106, 3, 1, "", "quat_sample_random"], [106, 2, 1, "", "representation"], [106, 3, 1, "", "save_from_HDF5_group"], [106, 3, 1, "", "save_from_JSON"], [106, 3, 1, "", "to_dict"], [106, 2, 1, "", "unit_cell_alignment"]], "matflow.param_classes.orientations.QuatOrder": [[107, 2, 1, "", "SCALAR_VECTOR"], [107, 2, 1, "", "VECTOR_SCALAR"]], "matflow.param_classes.orientations.UnitCellAlignment": [[108, 3, 1, "", "dump_to_HDF5_group"], [108, 3, 1, "", "from_hex_convention_DAMASK"], [108, 3, 1, "", "from_hex_convention_MTEX"], [108, 3, 1, "", "prepare_JSON_dump"], [108, 3, 1, "", "save_from_HDF5_group"], [108, 3, 1, "", "save_from_JSON"], [108, 3, 1, "", "to_dict"], [108, 2, 1, "", "x"], [108, 2, 1, "", "y"], [108, 2, 1, "", "z"]], "matflow.param_classes.seeds": [[110, 1, 1, "", "MicrostructureSeeds"]], "matflow.param_classes.seeds.MicrostructureSeeds": [[110, 2, 1, "", "box_size"], [110, 3, 1, "", "dump_to_HDF5_group"], [110, 3, 1, "", "from_JSON_like"], [110, 3, 1, "", "from_file"], [110, 3, 1, "", "from_random"], [110, 4, 1, "", "num_seeds"], [110, 2, 1, "", "orientations"], [110, 2, 1, "", "phase_label"], [110, 2, 1, "", "position"], [110, 3, 1, "", "prepare_JSON_dump"], [110, 2, 1, "", "random_seed"], [110, 3, 1, "", "save_from_HDF5_group"], [110, 3, 1, "", "save_from_JSON"], [110, 3, 1, "", "show"], [110, 3, 1, "", "to_dict"]], "matflow.param_classes.single_crystal_parameters": [[112, 1, 1, "", "SingleCrystalParameters"]], "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters": [[112, 3, 1, "", "as_base"], [112, 4, 1, "", "base"], [112, 3, 1, "", "dump_to_HDF5_group"], [112, 4, 1, "", "perturbations"], [112, 4, 1, "", "phases"], [112, 3, 1, "", "prepare_JSON_dump"], [112, 3, 1, "", "save_from_HDF5_group"], [112, 3, 1, "", "save_from_JSON"], [112, 3, 1, "", "to_dict"]], "matflow.param_classes.utils": [[114, 6, 1, "", "masked_array_from_list"]], "matflow.tests": [[121, 0, 0, "-", "conftest"], [128, 0, 0, "-", "test_cli"], [131, 0, 0, "-", "test_utils"]], "matflow.tests.conftest": [[122, 6, 1, "", "new_null_config"], [123, 6, 1, "", "null_config"], [124, 6, 1, "", "pytest_addoption"], [125, 6, 1, "", "pytest_collection_modifyitems"], [126, 6, 1, "", "pytest_configure"], [127, 6, 1, "", "pytest_unconfigure"]], "matflow.tests.test_cli": [[129, 6, 1, "", "test_hpcflow_version"], [130, 6, 1, "", "test_version"]], "matflow.tests.test_utils": [[132, 6, 1, "", "test_masked_array_from_list_1D"], [133, 6, 1, "", "test_masked_array_from_list_1D_masked"], [134, 6, 1, "", "test_masked_array_from_list_2D"], [135, 6, 1, "", "test_masked_array_from_list_2D_masked"]], "matflow-cancel": [[137, 7, 1, "cmdoption-matflow-cancel-r", "--ref-type"], [137, 7, 1, "cmdoption-matflow-cancel-r", "-r"], [137, 7, 1, "cmdoption-matflow-cancel-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-config-add-scheduler": [[137, 7, 1, "cmdoption-matflow-config-add-scheduler-defaults", "--defaults"], [137, 7, 1, "cmdoption-matflow-config-add-scheduler-arg-NAME", "NAME"]], "matflow-config-add-shell-wsl": [[137, 7, 1, "cmdoption-matflow-config-add-shell-wsl-defaults", "--defaults"]], "matflow-config-add-shell": [[137, 7, 1, "cmdoption-matflow-config-add-shell-defaults", "--defaults"], [137, 7, 1, "cmdoption-matflow-config-add-shell-arg-NAME", "NAME"]], "matflow-config-append": [[137, 7, 1, "cmdoption-matflow-config-append-json", "--json"], [137, 7, 1, "cmdoption-matflow-config-append-arg-NAME", "NAME"], [137, 7, 1, "cmdoption-matflow-config-append-arg-VALUE", "VALUE"]], "matflow-config-get": [[137, 7, 1, "cmdoption-matflow-config-get-all", "--all"], [137, 7, 1, "cmdoption-matflow-config-get-file", "--file"], [137, 7, 1, "cmdoption-matflow-config-get-metadata", "--metadata"], [137, 7, 1, "cmdoption-matflow-config-get-arg-NAME", "NAME"]], "matflow-config-import": [[137, 7, 1, "cmdoption-matflow-config-import-new", "--new"], [137, 7, 1, "cmdoption-matflow-config-import-rename", "--no-rename"], [137, 7, 1, "cmdoption-matflow-config-import-rename", "--rename"], [137, 7, 1, "cmdoption-matflow-config-import-arg-FILE_PATH", "FILE_PATH"]], "matflow-config-init": [[137, 7, 1, "cmdoption-matflow-config-init-path", "--path"], [137, 7, 1, "cmdoption-matflow-config-init-arg-KNOWN_NAME", "KNOWN_NAME"]], "matflow-config-open": [[137, 7, 1, "cmdoption-matflow-config-open-path", "--path"]], "matflow-config-pop": [[137, 7, 1, "cmdoption-matflow-config-pop-arg-INDEX", "INDEX"], [137, 7, 1, "cmdoption-matflow-config-pop-arg-NAME", "NAME"]], "matflow-config-prepend": [[137, 7, 1, "cmdoption-matflow-config-prepend-json", "--json"], [137, 7, 1, "cmdoption-matflow-config-prepend-arg-NAME", "NAME"], [137, 7, 1, "cmdoption-matflow-config-prepend-arg-VALUE", "VALUE"]], "matflow-config-set-github-demo-data-dir": [[137, 7, 1, "cmdoption-matflow-config-set-github-demo-data-dir-arg-SHA", "SHA"]], "matflow-config-set": [[137, 7, 1, "cmdoption-matflow-config-set-json", "--json"], [137, 7, 1, "cmdoption-matflow-config-set-arg-NAME", "NAME"], [137, 7, 1, "cmdoption-matflow-config-set-arg-VALUE", "VALUE"]], "matflow-config-unset": [[137, 7, 1, "cmdoption-matflow-config-unset-arg-NAME", "NAME"]], "matflow-config-update": [[137, 7, 1, "cmdoption-matflow-config-update-json", "--json"], [137, 7, 1, "cmdoption-matflow-config-update-arg-NAME", "NAME"], [137, 7, 1, "cmdoption-matflow-config-update-arg-VALUE", "VALUE"]], "matflow-config": [[137, 7, 1, "cmdoption-matflow-config-no-callback", "--no-callback"]], "matflow-configure-env": [[137, 7, 1, "cmdoption-matflow-configure-env-env-source-file", "--env-source-file"], [137, 7, 1, "cmdoption-matflow-configure-env-setup", "--setup"], [137, 7, 1, "cmdoption-matflow-configure-env-use-current-env", "--use-current-env"], [137, 7, 1, "cmdoption-matflow-configure-env-arg-NAME", "NAME"]], "matflow-demo-data-cache": [[137, 7, 1, "cmdoption-matflow-demo-data-cache-all", "--all"], [137, 7, 1, "cmdoption-matflow-demo-data-cache-arg-FILE_NAME", "FILE_NAME"]], "matflow-demo-data-copy": [[137, 7, 1, "cmdoption-matflow-demo-data-copy-arg-DESTINATION", "DESTINATION"], [137, 7, 1, "cmdoption-matflow-demo-data-copy-arg-FILE_NAME", "FILE_NAME"]], "matflow-demo-data": [[137, 7, 1, "cmdoption-matflow-demo-data-l", "--list"], [137, 7, 1, "cmdoption-matflow-demo-data-l", "-l"]], "matflow-demo-software-doSomething": [[137, 7, 1, "cmdoption-matflow-demo-software-doSomething-i1", "--infile1"], [137, 7, 1, "cmdoption-matflow-demo-software-doSomething-i2", "--infile2"], [137, 7, 1, "cmdoption-matflow-demo-software-doSomething-o", "--out"], [137, 7, 1, "cmdoption-matflow-demo-software-doSomething-v", "--value"], [137, 7, 1, "cmdoption-matflow-demo-software-doSomething-i1", "-i1"], [137, 7, 1, "cmdoption-matflow-demo-software-doSomething-i2", "-i2"], [137, 7, 1, "cmdoption-matflow-demo-software-doSomething-o", "-o"], [137, 7, 1, "cmdoption-matflow-demo-software-doSomething-v", "-v"]], "matflow-demo-workflow-copy": [[137, 7, 1, "cmdoption-matflow-demo-workflow-copy-doc", "--doc"], [137, 7, 1, "cmdoption-matflow-demo-workflow-copy-doc", "--no-doc"], [137, 7, 1, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION", "DESTINATION"], [137, 7, 1, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-go": [[137, 7, 1, "cmdoption-matflow-demo-workflow-go-add-to-known", "--add-to-known"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-format", "--format"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-js-parallelism", "--js-parallelism"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-name", "--name"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-add-to-known", "--no-add-to-known"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-overwrite", "--overwrite"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-path", "--path"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-print-idx", "--print-idx"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-store", "--store"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-tasks", "--tasks"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-ts-fmt", "--ts-fmt"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-ts-name-fmt", "--ts-name-fmt"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-wait", "--wait"], [137, 7, 1, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-make": [[137, 7, 1, "cmdoption-matflow-demo-workflow-make-format", "--format"], [137, 7, 1, "cmdoption-matflow-demo-workflow-make-name", "--name"], [137, 7, 1, "cmdoption-matflow-demo-workflow-make-overwrite", "--overwrite"], [137, 7, 1, "cmdoption-matflow-demo-workflow-make-path", "--path"], [137, 7, 1, "cmdoption-matflow-demo-workflow-make-store", "--store"], [137, 7, 1, "cmdoption-matflow-demo-workflow-make-ts-fmt", "--ts-fmt"], [137, 7, 1, "cmdoption-matflow-demo-workflow-make-ts-name-fmt", "--ts-name-fmt"], [137, 7, 1, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-show": [[137, 7, 1, "cmdoption-matflow-demo-workflow-show-doc", "--doc"], [137, 7, 1, "cmdoption-matflow-demo-workflow-show-doc", "--no-doc"], [137, 7, 1, "cmdoption-matflow-demo-workflow-show-syntax", "--no-syntax"], [137, 7, 1, "cmdoption-matflow-demo-workflow-show-syntax", "--syntax"], [137, 7, 1, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow": [[137, 7, 1, "cmdoption-matflow-demo-workflow-l", "--list"], [137, 7, 1, "cmdoption-matflow-demo-workflow-l", "-l"]], "matflow-go": [[137, 7, 1, "cmdoption-matflow-go-add-to-known", "--add-to-known"], [137, 7, 1, "cmdoption-matflow-go-format", "--format"], [137, 7, 1, "cmdoption-matflow-go-js-parallelism", "--js-parallelism"], [137, 7, 1, "cmdoption-matflow-go-name", "--name"], [137, 7, 1, "cmdoption-matflow-go-add-to-known", "--no-add-to-known"], [137, 7, 1, "cmdoption-matflow-go-overwrite", "--overwrite"], [137, 7, 1, "cmdoption-matflow-go-path", "--path"], [137, 7, 1, "cmdoption-matflow-go-print-idx", "--print-idx"], [137, 7, 1, "cmdoption-matflow-go-store", "--store"], [137, 7, 1, "cmdoption-matflow-go-string", "--string"], [137, 7, 1, "cmdoption-matflow-go-tasks", "--tasks"], [137, 7, 1, "cmdoption-matflow-go-ts-fmt", "--ts-fmt"], [137, 7, 1, "cmdoption-matflow-go-ts-name-fmt", "--ts-name-fmt"], [137, 7, 1, "cmdoption-matflow-go-wait", "--wait"], [137, 7, 1, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR", "TEMPLATE_FILE_OR_STR"]], "matflow-helper-pid": [[137, 7, 1, "cmdoption-matflow-helper-pid-f", "--file"], [137, 7, 1, "cmdoption-matflow-helper-pid-f", "-f"]], "matflow-helper-restart": [[137, 7, 1, "cmdoption-matflow-helper-restart-timeout", "--timeout"], [137, 7, 1, "cmdoption-matflow-helper-restart-timeout-check-interval", "--timeout-check-interval"], [137, 7, 1, "cmdoption-matflow-helper-restart-watch-interval", "--watch-interval"]], "matflow-helper-run": [[137, 7, 1, "cmdoption-matflow-helper-run-timeout", "--timeout"], [137, 7, 1, "cmdoption-matflow-helper-run-timeout-check-interval", "--timeout-check-interval"], [137, 7, 1, "cmdoption-matflow-helper-run-watch-interval", "--watch-interval"]], "matflow-helper-start": [[137, 7, 1, "cmdoption-matflow-helper-start-timeout", "--timeout"], [137, 7, 1, "cmdoption-matflow-helper-start-timeout-check-interval", "--timeout-check-interval"], [137, 7, 1, "cmdoption-matflow-helper-start-watch-interval", "--watch-interval"]], "matflow-internal-workflow-PATH-check-loop": [[137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-check-loop-arg-EAR_ID", "EAR_ID"], [137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-check-loop-arg-LOOP_NAME", "LOOP_NAME"]], "matflow-internal-workflow-PATH-get-ear-skipped": [[137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-get-ear-skipped-arg-EAR_ID", "EAR_ID"]], "matflow-internal-workflow-PATH-save-parameter": [[137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-stderr", "--stderr"], [137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-CMD_IDX", "CMD_IDX"], [137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID", "EAR_ID"], [137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME", "NAME"], [137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE", "VALUE"]], "matflow-internal-workflow-PATH-set-ear-end": [[137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EAR_ID", "EAR_ID"], [137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EXIT_CODE", "EXIT_CODE"], [137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_ACT_IDX", "JS_ACT_IDX"], [137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_IDX", "JS_IDX"]], "matflow-internal-workflow-PATH-set-ear-skip": [[137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-skip-arg-EAR_ID", "EAR_ID"]], "matflow-internal-workflow-PATH-set-ear-start": [[137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-start-arg-EAR_ID", "EAR_ID"]], "matflow-internal-workflow-PATH-write-commands": [[137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-EAR_ID", "EAR_ID"], [137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JOBSCRIPT_IDX", "JOBSCRIPT_IDX"], [137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JS_ACTION_IDX", "JS_ACTION_IDX"], [137, 7, 1, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-SUBMISSION_IDX", "SUBMISSION_IDX"]], "matflow-internal-workflow": [[137, 7, 1, "cmdoption-matflow-internal-workflow-arg-PATH", "PATH"]], "matflow-make": [[137, 7, 1, "cmdoption-matflow-make-format", "--format"], [137, 7, 1, "cmdoption-matflow-make-name", "--name"], [137, 7, 1, "cmdoption-matflow-make-overwrite", "--overwrite"], [137, 7, 1, "cmdoption-matflow-make-path", "--path"], [137, 7, 1, "cmdoption-matflow-make-store", "--store"], [137, 7, 1, "cmdoption-matflow-make-string", "--string"], [137, 7, 1, "cmdoption-matflow-make-ts-fmt", "--ts-fmt"], [137, 7, 1, "cmdoption-matflow-make-ts-name-fmt", "--ts-name-fmt"], [137, 7, 1, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR", "TEMPLATE_FILE_OR_STR"]], "matflow-manage-clear-cache": [[137, 7, 1, "cmdoption-matflow-manage-clear-cache-hostname", "--hostname"]], "matflow-manage-get-config-path": [[137, 7, 1, "cmdoption-matflow-manage-get-config-path-config-dir", "--config-dir"]], "matflow-manage-reset-config": [[137, 7, 1, "cmdoption-matflow-manage-reset-config-config-dir", "--config-dir"]], "matflow-open-config": [[137, 7, 1, "cmdoption-matflow-open-config-path", "--path"]], "matflow-open-demo-data-cache-dir": [[137, 7, 1, "cmdoption-matflow-open-demo-data-cache-dir-path", "--path"]], "matflow-open-env-source": [[137, 7, 1, "cmdoption-matflow-open-env-source-name", "--name"], [137, 7, 1, "cmdoption-matflow-open-env-source-path", "--path"]], "matflow-open-known-subs": [[137, 7, 1, "cmdoption-matflow-open-known-subs-path", "--path"]], "matflow-open-log": [[137, 7, 1, "cmdoption-matflow-open-log-path", "--path"]], "matflow-open-user-cache-dir": [[137, 7, 1, "cmdoption-matflow-open-user-cache-dir-path", "--path"]], "matflow-open-user-cache-hostname-dir": [[137, 7, 1, "cmdoption-matflow-open-user-cache-hostname-dir-path", "--path"]], "matflow-open-user-data-dir": [[137, 7, 1, "cmdoption-matflow-open-user-data-dir-path", "--path"]], "matflow-open-user-data-hostname-dir": [[137, 7, 1, "cmdoption-matflow-open-user-data-hostname-dir-path", "--path"]], "matflow-open-user-runtime-dir": [[137, 7, 1, "cmdoption-matflow-open-user-runtime-dir-path", "--path"]], "matflow-open-workflow": [[137, 7, 1, "cmdoption-matflow-open-workflow-path", "--path"], [137, 7, 1, "cmdoption-matflow-open-workflow-r", "--ref-type"], [137, 7, 1, "cmdoption-matflow-open-workflow-r", "-r"], [137, 7, 1, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-show": [[137, 7, 1, "cmdoption-matflow-show-f", "--full"], [137, 7, 1, "cmdoption-matflow-show-legend", "--legend"], [137, 7, 1, "cmdoption-matflow-show-r", "--max-recent"], [137, 7, 1, "cmdoption-matflow-show-no-update", "--no-update"], [137, 7, 1, "cmdoption-matflow-show-f", "-f"], [137, 7, 1, "cmdoption-matflow-show-r", "-r"]], "matflow-submission-get-known": [[137, 7, 1, "cmdoption-matflow-submission-get-known-json", "--json"]], "matflow-submission-scheduler": [[137, 7, 1, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME", "SCHEDULER_NAME"]], "matflow-submission-shell-info": [[137, 7, 1, "cmdoption-matflow-submission-shell-info-exclude-os", "--exclude-os"], [137, 7, 1, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME", "SHELL_NAME"]], "matflow-submission": [[137, 7, 1, "cmdoption-matflow-submission-os-info", "--os-info"]], "matflow-test-hpcflow": [[137, 7, 1, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS", "PY_TEST_ARGS"]], "matflow-test": [[137, 7, 1, "cmdoption-matflow-test-arg-PY_TEST_ARGS", "PY_TEST_ARGS"]], "matflow-unzip": [[137, 7, 1, "cmdoption-matflow-unzip-log", "--log"], [137, 7, 1, "cmdoption-matflow-unzip-arg-WORKFLOW_PATH", "WORKFLOW_PATH"]], "matflow-workflow-WORKFLOW_REF-abort-run": [[137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element", "--element"], [137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission", "--submission"], [137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task", "--task"]], "matflow-workflow-WORKFLOW_REF-get-param-source": [[137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-get-param": [[137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-is-param-set": [[137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js": [[137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX", "JS_IDX"]], "matflow-workflow-WORKFLOW_REF-sub": [[137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX", "SUB_IDX"]], "matflow-workflow-WORKFLOW_REF-submit": [[137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known", "--add-to-known"], [137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism", "--js-parallelism"], [137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known", "--no-add-to-known"], [137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-print-idx", "--print-idx"], [137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-tasks", "--tasks"], [137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait", "--wait"]], "matflow-workflow-WORKFLOW_REF-unzip": [[137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-log", "--log"]], "matflow-workflow-WORKFLOW_REF-wait": [[137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j", "--jobscripts"], [137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j", "-j"]], "matflow-workflow-WORKFLOW_REF-zip": [[137, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log", "--log"]], "matflow-workflow": [[137, 7, 1, "cmdoption-matflow-workflow-r", "--ref-type"], [137, 7, 1, "cmdoption-matflow-workflow-r", "-r"], [137, 7, 1, "cmdoption-matflow-workflow-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-zip": [[137, 7, 1, "cmdoption-matflow-zip-log", "--log"], [137, 7, 1, "cmdoption-matflow-zip-r", "--ref-type"], [137, 7, 1, "cmdoption-matflow-zip-r", "-r"], [137, 7, 1, "cmdoption-matflow-zip-arg-WORKFLOW_REF", "WORKFLOW_REF"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:data", "6": "py:function", "7": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"], "7": ["std", "cmdoption", "program option"]}, "titleterms": {"environ": [0, 30], "matlab_env": [0, 143], "exampl": 0, "definit": 0, "window": 0, "linux": 0, "maco": 0, "damask_pars": 0, "damask": 0, "develop": 1, "welcom": 2, "matflow": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "": 2, "document": 2, "content": 2, "indic": 2, "tabl": 2, "instal": 3, "cli": [3, 88], "what": 3, "doe": 3, "thi": 3, "script": 3, "do": 3, "python": [3, 136], "packag": 3, "us": 3, "pip": 3, "conda": 3, "download": 3, "binari": 3, "advanc": 3, "releas": 3, "note": 3, "action": 5, "actionenviron": 6, "actionrul": 7, "actionscop": 8, "actionscopetyp": 9, "command": [10, 137, 142], "commandfileslist": 11, "directposix": 12, "directwindow": 13, "element": [14, 29], "elementact": 15, "elementactionrun": 16, "elementfilt": 17, "elementgroup": 18, "elementinputfil": 19, "elementinput": 20, "elementiter": 21, "elementoutputfil": 22, "elementoutput": 23, "elementparamet": 24, "elementpropag": 25, "elementrepeat": 26, "elementresourc": 27, "elementset": 28, "environmentslist": 31, "execut": 32, "executableinst": 33, "executableslist": 34, "filenameext": 35, "filenamespec": 36, "filenamestem": 37, "filespec": 38, "grouplist": 39, "inputfil": 40, "inputfilegener": 41, "inputfilegeneratorsourc": 42, "inputsourc": 43, "inputsourcetyp": 44, "inputvalu": 45, "jobscript": [46, 137], "loop": [47, 137], "numcor": 48, "outputfilepars": 49, "outputfileparsersourc": 50, "outputlabel": 51, "paramet": [52, 56, 137, 144, 150], "parameterpath": 53, "parameterpropagationmod": 54, "parametervalu": 55, "parameterslist": 57, "resourcelist": 58, "resourcespec": 59, "rule": 60, "sgeposix": 61, "schemainput": 62, "schemaoutput": 63, "schemaparamet": 64, "slurmposix": 65, "subparamet": 66, "submiss": [67, 137, 147], "task": [68, 143, 145, 149, 150], "taskinputparamet": 69, "tasklist": 70, "taskobject": 71, "taskoutputparamet": 72, "taskschema": 73, "taskschemaslist": 74, "tasksourcetyp": 75, "tasktemplatelist": 76, "valueperturb": 77, "valuesequ": 78, "workflow": [79, 137, 139, 146, 151, 152], "workflowblueprint": 80, "workflowloop": 81, "workflowlooplist": 82, "workflowtask": 83, "workflowtasklist": 84, "workflowtempl": 85, "app": 86, "cancel": [87, 137], "get_os_info": 89, "get_known_submiss": 90, "get_shell_info": 91, "make_and_submit_demo_workflow": 92, "make_and_submit_workflow": 93, "make_demo_workflow": 94, "make_workflow": 95, "param_class": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "load": [97, 98, 99, 100, 137, 151, 152], "loadcas": 98, "loadstep": 99, "strainratemod": 100, "orient": [101, 102, 103, 104, 105, 106, 107, 108, 144], "eulerdefinit": 102, "latticedirect": 103, "orientationrepresent": 104, "orientationrepresentationtyp": 105, "quatord": 107, "unitcellalign": 108, "seed": [109, 110], "microstructurese": 110, "single_crystal_paramet": [111, 112], "singlecrystalparamet": 112, "util": [113, 114], "masked_array_from_list": 114, "run_hpcflow_test": 115, "run_test": 116, "show": [117, 137, 149], "show_legend": 118, "submit_workflow": 119, "test": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "conftest": [121, 122, 123, 124, 125, 126, 127], "new_null_config": 122, "null_config": 123, "pytest_addopt": 124, "pytest_collection_modifyitem": 125, "pytest_configur": 126, "pytest_unconfigur": 127, "test_cli": [128, 129, 130], "test_hpcflow_vers": 129, "test_vers": 130, "test_util": [131, 132, 133, 134, 135], "test_masked_array_from_list_1d": 132, "test_masked_array_from_list_1d_mask": 133, "test_masked_array_from_list_2d": 134, "test_masked_array_from_list_2d_mask": 135, "api": 136, "line": 137, "interfac": 137, "config": [137, 138, 147], "add": 137, "schedul": 137, "shell": 137, "wsl": 137, "append": 137, "get": [137, 147], "import": 137, "init": 137, "list": 137, "data": 137, "file": [137, 138, 142, 147], "open": 137, "pop": 137, "prepend": 137, "set": [137, 147], "github": 137, "demo": [137, 146], "dir": 137, "unset": 137, "updat": 137, "configur": [137, 138, 147], "env": 137, "cach": 137, "copi": 137, "softwar": 137, "dosometh": 137, "go": 137, "make": 137, "helper": 137, "clear": [137, 147], "log": 137, "path": 137, "pid": 137, "restart": 137, "run": 137, "start": 137, "stop": 137, "uptim": 137, "watch": 137, "intern": 137, "invoc": 137, "cmd": 137, "check": 137, "ear": 137, "skip": 137, "save": 137, "end": 137, "write": 137, "manag": 137, "known": [137, 147], "sub": 137, "temp": 137, "reset": [137, 147], "sourc": 137, "user": [137, 153], "hostnam": 137, "runtim": 137, "login": 137, "node": 137, "info": 137, "tc": 137, "hpcflow": 137, "unzip": 137, "abort": 137, "all": 137, "param": 137, "i": 137, "statu": 137, "activ": 137, "j": 137, "dep": 137, "re": 137, "need": 137, "submit": 137, "outstand": 137, "wait": 137, "zip": 137, "default": [138, 147], "valid": 138, "schema": [138, 143, 145, 149, 150], "glossari": 139, "refer": 140, "templat": [141, 150, 151, 152], "compon": [141, 150], "damask_geom_fil": 142, "damask_load_fil": 142, "damask_material_fil": 142, "damask_stdout_fil": 142, "damask_stderr_fil": 142, "damask_hdf5_fil": 142, "damask_viz_fil": 142, "mtex_pole_figur": 142, "mtex_ipf_figur": 142, "lammps_atoms_fil": 142, "lammps_input_script": 142, "lammps_dump_fil": 142, "t1_outfile_1": 142, "t1_infile_1": 142, "my_fil": 142, "null_env": 143, "python_env": 143, "damask_env": 143, "damask_parse_env": 143, "formable_env": 143, "ve_siz": 144, "ve_grid_s": 144, "my_nam": 144, "number_1": 144, "number_2": 144, "sum": 144, "phase_label": 144, "num_grain": 144, "microstructure_se": 144, "volume_el": 144, "ctf_file_path": 144, "odf_mat_file_path": 144, "specimen_symmetri": 144, "ebsd_phas": 144, "ebsd_reference_frame_transform": 144, "ebsd_rot": 144, "num_orient": 144, "homog_label": 144, "ve_respons": 144, "ve_response_data": 144, "load_cas": 144, "homogen": 144, "damask_phas": 144, "damask_log": 144, "damask_post_process": 144, "damask_post_processing_result": 144, "damask_viz": 144, "damask_viz_result": 144, "damask_solv": 144, "p1": 144, "p2": 144, "p3": 144, "p4": 144, "p5": 144, "number_atom": 144, "box": 144, "atom": 144, "empirical_potenti": 144, "optimised_atom": 144, "compil": 144, "dump_path": 144, "yield_point": 144, "yield_function_nam": 144, "yield_point_criteria": 144, "fit_yield_fixed_paramet": 144, "fit_yield_initial_paramet": 144, "fit_yield_opt_paramet": 144, "fitted_yield_funct": 144, "max_sleep_tim": 144, "sleep_tim": 144, "b": 144, "c": 144, "f_c": 144, "mu": 144, "sigma": 144, "geom_file_path": 144, "geom_data": 144, "num_incr": 144, "magnitud": 144, "test_t1_bash": 145, "test_t1_p": 145, "test_t2_bash": 145, "test_t2_p": 145, "generate_microstructure_se": 145, "generate_volume_el": 145, "sample_textur": 145, "visualise_orient": 145, "generate_orient": 145, "define_p1": 145, "define_load_cas": 145, "simulate_ve_load": 145, "read_tensile_test": 145, "fit_single_crystal_paramet": [145, 146], "dump_all_yield_stress": 145, "fit_yield_funct": 145, "print_hello": 145, "demo_add": 145, "demo_sleep": 145, "sample_texture_odf_mat": 146, "yaml": 146, "read_tensile_test_csv": 146, "sample_texture_ctf_fil": 146, "tension_damask_": 146, "tension_damask_mg": 146, "fit_yield_func": 146, "how": [147, 148, 149, 150, 151, 152], "tos": [147, 149, 151, 152], "item": 147, "valu": 147, "To": 148, "guid": [148, 153], "inform": 149, "about": 149, "name": 150, "gener": 152, "persist": 152, "from": 152, "tutori": 154}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Environments": [[0, "environments"]], "matlab_env": [[0, "matlab-env"], [143, "matlab-env"]], "Example environment definition - Windows": [[0, "example-environment-definition-windows"]], "Example environment definition - Linux/MacOS": [[0, "example-environment-definition-linux-macos"]], "damask_parse": [[0, "damask-parse"]], "Example environment definition": [[0, "example-environment-definition"], [0, "id1"]], "damask": [[0, "damask"]], "Development": [[1, "development"]], "Welcome to MatFlow\u2019s documentation!": [[2, "welcome-to-matflow-s-documentation"]], "Contents:": [[2, null]], "Indices and tables": [[2, "indices-and-tables"]], "Installation": [[3, "installation"]], "MatFlow CLI": [[3, "matflow-cli"]], "What does this script do?": [[3, null]], "MatFlow Python package": [[3, "matflow-python-package"]], "Using pip": [[3, "using-pip"]], "Using conda": [[3, "using-conda"]], "Download CLI binaries (advanced)": [[3, "download-cli-binaries-advanced"]], "Release notes": [[3, "release-notes"]], "matflow": [[4, "matflow"], [137, "matflow"]], "matflow.Action": [[5, "matflow-action"]], "matflow.ActionEnvironment": [[6, "matflow-actionenvironment"]], "matflow.ActionRule": [[7, "matflow-actionrule"]], "matflow.ActionScope": [[8, "matflow-actionscope"]], "matflow.ActionScopeType": [[9, "matflow-actionscopetype"]], "matflow.Command": [[10, "matflow-command"]], "matflow.CommandFilesList": [[11, "matflow-commandfileslist"]], "matflow.DirectPosix": [[12, "matflow-directposix"]], "matflow.DirectWindows": [[13, "matflow-directwindows"]], "matflow.Element": [[14, "matflow-element"]], "matflow.ElementAction": [[15, "matflow-elementaction"]], "matflow.ElementActionRun": [[16, "matflow-elementactionrun"]], "matflow.ElementFilter": [[17, "matflow-elementfilter"]], "matflow.ElementGroup": [[18, "matflow-elementgroup"]], "matflow.ElementInputFiles": [[19, "matflow-elementinputfiles"]], "matflow.ElementInputs": [[20, "matflow-elementinputs"]], "matflow.ElementIteration": [[21, "matflow-elementiteration"]], "matflow.ElementOutputFiles": [[22, "matflow-elementoutputfiles"]], "matflow.ElementOutputs": [[23, "matflow-elementoutputs"]], "matflow.ElementParameter": [[24, "matflow-elementparameter"]], "matflow.ElementPropagation": [[25, "matflow-elementpropagation"]], "matflow.ElementRepeats": [[26, "matflow-elementrepeats"]], "matflow.ElementResources": [[27, "matflow-elementresources"]], "matflow.ElementSet": [[28, "matflow-elementset"]], "matflow.Elements": [[29, "matflow-elements"]], "matflow.Environment": [[30, "matflow-environment"]], "matflow.EnvironmentsList": [[31, "matflow-environmentslist"]], "matflow.Executable": [[32, "matflow-executable"]], "matflow.ExecutableInstance": [[33, "matflow-executableinstance"]], "matflow.ExecutablesList": [[34, "matflow-executableslist"]], "matflow.FileNameExt": [[35, "matflow-filenameext"]], "matflow.FileNameSpec": [[36, "matflow-filenamespec"]], "matflow.FileNameStem": [[37, "matflow-filenamestem"]], "matflow.FileSpec": [[38, "matflow-filespec"]], "matflow.GroupList": [[39, "matflow-grouplist"]], "matflow.InputFile": [[40, "matflow-inputfile"]], "matflow.InputFileGenerator": [[41, "matflow-inputfilegenerator"]], "matflow.InputFileGeneratorSource": [[42, "matflow-inputfilegeneratorsource"]], "matflow.InputSource": [[43, "matflow-inputsource"]], "matflow.InputSourceType": [[44, "matflow-inputsourcetype"]], "matflow.InputValue": [[45, "matflow-inputvalue"]], "matflow.Jobscript": [[46, "matflow-jobscript"]], "matflow.Loop": [[47, "matflow-loop"]], "matflow.NumCores": [[48, "matflow-numcores"]], "matflow.OutputFileParser": [[49, "matflow-outputfileparser"]], "matflow.OutputFileParserSource": [[50, "matflow-outputfileparsersource"]], "matflow.OutputLabel": [[51, "matflow-outputlabel"]], "matflow.Parameter": [[52, "matflow-parameter"]], "matflow.ParameterPath": [[53, "matflow-parameterpath"]], "matflow.ParameterPropagationMode": [[54, "matflow-parameterpropagationmode"]], "matflow.ParameterValue": [[55, "matflow-parametervalue"]], "matflow.Parameters": [[56, "matflow-parameters"]], "matflow.ParametersList": [[57, "matflow-parameterslist"]], "matflow.ResourceList": [[58, "matflow-resourcelist"]], "matflow.ResourceSpec": [[59, "matflow-resourcespec"]], "matflow.Rule": [[60, "matflow-rule"]], "matflow.SGEPosix": [[61, "matflow-sgeposix"]], "matflow.SchemaInput": [[62, "matflow-schemainput"]], "matflow.SchemaOutput": [[63, "matflow-schemaoutput"]], "matflow.SchemaParameter": [[64, "matflow-schemaparameter"]], "matflow.SlurmPosix": [[65, "matflow-slurmposix"]], "matflow.SubParameter": [[66, "matflow-subparameter"]], "matflow.Submission": [[67, "matflow-submission"]], "matflow.Task": [[68, "matflow-task"]], "matflow.TaskInputParameters": [[69, "matflow-taskinputparameters"]], "matflow.TaskList": [[70, "matflow-tasklist"]], "matflow.TaskObjective": [[71, "matflow-taskobjective"]], "matflow.TaskOutputParameters": [[72, "matflow-taskoutputparameters"]], "matflow.TaskSchema": [[73, "matflow-taskschema"]], "matflow.TaskSchemasList": [[74, "matflow-taskschemaslist"]], "matflow.TaskSourceType": [[75, "matflow-tasksourcetype"]], "matflow.TaskTemplateList": [[76, "matflow-tasktemplatelist"]], "matflow.ValuePerturbation": [[77, "matflow-valueperturbation"]], "matflow.ValueSequence": [[78, "matflow-valuesequence"]], "matflow.Workflow": [[79, "matflow-workflow"]], "matflow.WorkflowBlueprint": [[80, "matflow-workflowblueprint"]], "matflow.WorkflowLoop": [[81, "matflow-workflowloop"]], "matflow.WorkflowLoopList": [[82, "matflow-workflowlooplist"]], "matflow.WorkflowTask": [[83, "matflow-workflowtask"]], "matflow.WorkflowTaskList": [[84, "matflow-workflowtasklist"]], "matflow.WorkflowTemplate": [[85, "matflow-workflowtemplate"]], "matflow.app": [[86, "matflow-app"]], "matflow.cancel": [[87, "matflow-cancel"]], "matflow.cli": [[88, "matflow-cli"]], "matflow.get_OS_info": [[89, "matflow-get-os-info"]], "matflow.get_known_submissions": [[90, "matflow-get-known-submissions"]], "matflow.get_shell_info": [[91, "matflow-get-shell-info"]], "matflow.make_and_submit_demo_workflow": [[92, "matflow-make-and-submit-demo-workflow"]], "matflow.make_and_submit_workflow": [[93, "matflow-make-and-submit-workflow"]], "matflow.make_demo_workflow": [[94, "matflow-make-demo-workflow"]], "matflow.make_workflow": [[95, "matflow-make-workflow"]], "matflow.param_classes": [[96, "matflow-param-classes"]], "matflow.param_classes.load": [[97, "matflow-param-classes-load"]], "matflow.param_classes.load.LoadCase": [[98, "matflow-param-classes-load-loadcase"]], "matflow.param_classes.load.LoadStep": [[99, "matflow-param-classes-load-loadstep"]], "matflow.param_classes.load.StrainRateMode": [[100, "matflow-param-classes-load-strainratemode"]], "matflow.param_classes.orientations": [[101, "matflow-param-classes-orientations"]], "matflow.param_classes.orientations.EulerDefinition": [[102, "matflow-param-classes-orientations-eulerdefinition"]], "matflow.param_classes.orientations.LatticeDirection": [[103, "matflow-param-classes-orientations-latticedirection"]], "matflow.param_classes.orientations.OrientationRepresentation": [[104, "matflow-param-classes-orientations-orientationrepresentation"]], "matflow.param_classes.orientations.OrientationRepresentationType": [[105, "matflow-param-classes-orientations-orientationrepresentationtype"]], "matflow.param_classes.orientations.Orientations": [[106, "matflow-param-classes-orientations-orientations"]], "matflow.param_classes.orientations.QuatOrder": [[107, "matflow-param-classes-orientations-quatorder"]], "matflow.param_classes.orientations.UnitCellAlignment": [[108, "matflow-param-classes-orientations-unitcellalignment"]], "matflow.param_classes.seeds": [[109, "matflow-param-classes-seeds"]], "matflow.param_classes.seeds.MicrostructureSeeds": [[110, "matflow-param-classes-seeds-microstructureseeds"]], "matflow.param_classes.single_crystal_parameters": [[111, "matflow-param-classes-single-crystal-parameters"]], "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters": [[112, "matflow-param-classes-single-crystal-parameters-singlecrystalparameters"]], "matflow.param_classes.utils": [[113, "matflow-param-classes-utils"]], "matflow.param_classes.utils.masked_array_from_list": [[114, "matflow-param-classes-utils-masked-array-from-list"]], "matflow.run_hpcflow_tests": [[115, "matflow-run-hpcflow-tests"]], "matflow.run_tests": [[116, "matflow-run-tests"]], "matflow.show": [[117, "matflow-show"]], "matflow.show_legend": [[118, "matflow-show-legend"]], "matflow.submit_workflow": [[119, "matflow-submit-workflow"]], "matflow.tests": [[120, "matflow-tests"]], "matflow.tests.conftest": [[121, "matflow-tests-conftest"]], "matflow.tests.conftest.new_null_config": [[122, "matflow-tests-conftest-new-null-config"]], "matflow.tests.conftest.null_config": [[123, "matflow-tests-conftest-null-config"]], "matflow.tests.conftest.pytest_addoption": [[124, "matflow-tests-conftest-pytest-addoption"]], "matflow.tests.conftest.pytest_collection_modifyitems": [[125, "matflow-tests-conftest-pytest-collection-modifyitems"]], "matflow.tests.conftest.pytest_configure": [[126, "matflow-tests-conftest-pytest-configure"]], "matflow.tests.conftest.pytest_unconfigure": [[127, "matflow-tests-conftest-pytest-unconfigure"]], "matflow.tests.test_cli": [[128, "matflow-tests-test-cli"]], "matflow.tests.test_cli.test_hpcflow_version": [[129, "matflow-tests-test-cli-test-hpcflow-version"]], "matflow.tests.test_cli.test_version": [[130, "matflow-tests-test-cli-test-version"]], "matflow.tests.test_utils": [[131, "matflow-tests-test-utils"]], "matflow.tests.test_utils.test_masked_array_from_list_1D": [[132, "matflow-tests-test-utils-test-masked-array-from-list-1d"]], "matflow.tests.test_utils.test_masked_array_from_list_1D_masked": [[133, "matflow-tests-test-utils-test-masked-array-from-list-1d-masked"]], "matflow.tests.test_utils.test_masked_array_from_list_2D": [[134, "matflow-tests-test-utils-test-masked-array-from-list-2d"]], "matflow.tests.test_utils.test_masked_array_from_list_2D_masked": [[135, "matflow-tests-test-utils-test-masked-array-from-list-2d-masked"]], "Python API": [[136, "python-api"]], "Command-line interface": [[137, "command-line-interface"]], "cancel": [[137, "matflow-cancel"]], "config": [[137, "matflow-config"], [137, "matflow-open-config"]], "add-scheduler": [[137, "matflow-config-add-scheduler"]], "add-shell": [[137, "matflow-config-add-shell"]], "add-shell-wsl": [[137, "matflow-config-add-shell-wsl"]], "append": [[137, "matflow-config-append"]], "get": [[137, "matflow-config-get"]], "import": [[137, "matflow-config-import"]], "init": [[137, "matflow-config-init"]], "list": [[137, "matflow-config-list"]], "load-data-files": [[137, "matflow-config-load-data-files"]], "open": [[137, "matflow-config-open"], [137, "matflow-open"]], "pop": [[137, "matflow-config-pop"]], "prepend": [[137, "matflow-config-prepend"]], "set": [[137, "matflow-config-set"]], "set-github-demo-data-dir": [[137, "matflow-config-set-github-demo-data-dir"]], "unset": [[137, "matflow-config-unset"]], "update": [[137, "matflow-config-update"]], "configure-env": [[137, "matflow-configure-env"]], "demo-data": [[137, "matflow-demo-data"]], "cache": [[137, "matflow-demo-data-cache"]], "copy": [[137, "matflow-demo-data-copy"], [137, "matflow-demo-workflow-copy"]], "demo-software": [[137, "matflow-demo-software"]], "doSomething": [[137, "matflow-demo-software-dosomething"]], "demo-workflow": [[137, "matflow-demo-workflow"]], "go": [[137, "matflow-demo-workflow-go"], [137, "matflow-go"]], "make": [[137, "matflow-demo-workflow-make"], [137, "matflow-make"]], "show": [[137, "matflow-demo-workflow-show"], [137, "matflow-show"], [137, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-show"]], "helper": [[137, "matflow-helper"]], "clear": [[137, "matflow-helper-clear"]], "log-path": [[137, "matflow-helper-log-path"]], "pid": [[137, "matflow-helper-pid"]], "restart": [[137, "matflow-helper-restart"]], "run": [[137, "matflow-helper-run"]], "start": [[137, "matflow-helper-start"]], "stop": [[137, "matflow-helper-stop"]], "uptime": [[137, "matflow-helper-uptime"]], "watch-list": [[137, "matflow-helper-watch-list"]], "watch-list-path": [[137, "matflow-helper-watch-list-path"]], "internal": [[137, "matflow-internal"]], "get-invoc-cmd": [[137, "matflow-internal-get-invoc-cmd"]], "workflow": [[137, "matflow-internal-workflow"], [137, "matflow-open-workflow"], [137, "matflow-workflow"], [139, "workflow"]], "check-loop": [[137, "matflow-internal-workflow-path-check-loop"]], "get-ear-skipped": [[137, "matflow-internal-workflow-path-get-ear-skipped"]], "save-parameter": [[137, "matflow-internal-workflow-path-save-parameter"]], "set-ear-end": [[137, "matflow-internal-workflow-path-set-ear-end"]], "set-ear-skip": [[137, "matflow-internal-workflow-path-set-ear-skip"]], "set-ear-start": [[137, "matflow-internal-workflow-path-set-ear-start"]], "write-commands": [[137, "matflow-internal-workflow-path-write-commands"]], "manage": [[137, "matflow-manage"]], "clear-cache": [[137, "matflow-manage-clear-cache"]], "clear-demo-data-cache": [[137, "matflow-manage-clear-demo-data-cache"]], "clear-known-subs": [[137, "matflow-manage-clear-known-subs"]], "clear-temp-dir": [[137, "matflow-manage-clear-temp-dir"]], "get-config-path": [[137, "matflow-manage-get-config-path"]], "reset-config": [[137, "matflow-manage-reset-config"]], "demo-data-cache-dir": [[137, "matflow-open-demo-data-cache-dir"]], "env-source": [[137, "matflow-open-env-source"]], "known-subs": [[137, "matflow-open-known-subs"]], "log": [[137, "matflow-open-log"]], "user-cache-dir": [[137, "matflow-open-user-cache-dir"]], "user-cache-hostname-dir": [[137, "matflow-open-user-cache-hostname-dir"]], "user-data-dir": [[137, "matflow-open-user-data-dir"]], "user-data-hostname-dir": [[137, "matflow-open-user-data-hostname-dir"]], "user-runtime-dir": [[137, "matflow-open-user-runtime-dir"]], "submission": [[137, "matflow-submission"]], "get-known": [[137, "matflow-submission-get-known"]], "scheduler": [[137, "matflow-submission-scheduler"]], "get-login-nodes": [[137, "matflow-submission-scheduler-scheduler-name-get-login-nodes"]], "shell-info": [[137, "matflow-submission-shell-info"]], "tc": [[137, "matflow-tc"]], "test": [[137, "matflow-test"]], "test-hpcflow": [[137, "matflow-test-hpcflow"]], "unzip": [[137, "matflow-unzip"], [137, "matflow-workflow-workflow-ref-unzip"]], "abort-run": [[137, "matflow-workflow-workflow-ref-abort-run"]], "get-all-params": [[137, "matflow-workflow-workflow-ref-get-all-params"]], "get-param": [[137, "matflow-workflow-workflow-ref-get-param"]], "get-param-source": [[137, "matflow-workflow-workflow-ref-get-param-source"]], "is-param-set": [[137, "matflow-workflow-workflow-ref-is-param-set"]], "show-all-status": [[137, "matflow-workflow-workflow-ref-show-all-status"]], "sub": [[137, "matflow-workflow-workflow-ref-sub"]], "get-active-jobscripts": [[137, "matflow-workflow-workflow-ref-sub-sub-idx-get-active-jobscripts"]], "js": [[137, "matflow-workflow-workflow-ref-sub-sub-idx-js"]], "deps": [[137, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-deps"]], "path": [[137, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-path"]], "res": [[137, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-res"]], "needs-submit": [[137, "matflow-workflow-workflow-ref-sub-sub-idx-needs-submit"]], "outstanding-js": [[137, "matflow-workflow-workflow-ref-sub-sub-idx-outstanding-js"]], "status": [[137, "matflow-workflow-workflow-ref-sub-sub-idx-status"]], "submitted-js": [[137, "matflow-workflow-workflow-ref-sub-sub-idx-submitted-js"]], "submit": [[137, "matflow-workflow-workflow-ref-submit"]], "wait": [[137, "matflow-workflow-workflow-ref-wait"]], "zip": [[137, "matflow-workflow-workflow-ref-zip"], [137, "matflow-zip"]], "Configuration file": [[138, "configuration-file"]], "Default config file": [[138, "default-config-file"]], "Validation schema": [[138, "validation-schema"]], "Glossary": [[139, "glossary"]], "Reference": [[140, "reference"]], "Template components": [[141, "template-components"], [150, "template-components"]], "Command files": [[142, "command-files"]], "damask_geom_file": [[142, "damask-geom-file"]], "damask_load_file": [[142, "damask-load-file"]], "damask_material_file": [[142, "damask-material-file"]], "damask_stdout_file": [[142, "damask-stdout-file"]], "damask_stderr_file": [[142, "damask-stderr-file"]], "damask_hdf5_file": [[142, "damask-hdf5-file"]], "damask_viz_files": [[142, "damask-viz-files"]], "mtex_pole_figures": [[142, "mtex-pole-figures"]], "mtex_IPF_figure": [[142, "mtex-ipf-figure"]], "lammps_atoms_file": [[142, "lammps-atoms-file"]], "lammps_input_script": [[142, "lammps-input-script"]], "lammps_dump_files": [[142, "lammps-dump-files"]], "t1_outfile_1": [[142, "t1-outfile-1"]], "t1_infile_1": [[142, "t1-infile-1"]], "my_file": [[142, "my-file"]], "Task schemas": [[143, "task-schemas"], [145, "task-schemas"]], "null_env": [[143, "null-env"]], "python_env": [[143, "python-env"]], "damask_env": [[143, "damask-env"]], "damask_parse_env": [[143, "damask-parse-env"]], "formable_env": [[143, "formable-env"]], "Parameters": [[144, "parameters"]], "VE_size": [[144, "ve-size"]], "VE_grid_size": [[144, "ve-grid-size"]], "my_name": [[144, "my-name"]], "number_1": [[144, "number-1"]], "number_2": [[144, "number-2"]], "sum": [[144, "sum"]], "phase_label": [[144, "phase-label"]], "num_grains": [[144, "num-grains"]], "microstructure_seeds": [[144, "microstructure-seeds"]], "volume_element": [[144, "volume-element"]], "CTF_file_path": [[144, "ctf-file-path"]], "ODF_mat_file_path": [[144, "odf-mat-file-path"]], "specimen_symmetry": [[144, "specimen-symmetry"]], "EBSD_phase": [[144, "ebsd-phase"]], "EBSD_reference_frame_transformation": [[144, "ebsd-reference-frame-transformation"]], "EBSD_rotation": [[144, "ebsd-rotation"]], "num_orientations": [[144, "num-orientations"]], "orientations": [[144, "orientations"]], "homog_label": [[144, "homog-label"]], "VE_response": [[144, "ve-response"]], "VE_response_data": [[144, "ve-response-data"]], "load_case": [[144, "load-case"]], "homogenization": [[144, "homogenization"]], "damask_phases": [[144, "damask-phases"]], "damask_log": [[144, "damask-log"]], "damask_post_processing": [[144, "damask-post-processing"]], "damask_post_processing_result": [[144, "damask-post-processing-result"]], "damask_viz": [[144, "damask-viz"]], "damask_viz_result": [[144, "damask-viz-result"]], "damask_solver": [[144, "damask-solver"]], "p1": [[144, "p1"]], "p2": [[144, "p2"]], "p3": [[144, "p3"]], "p4": [[144, "p4"]], "p5": [[144, "p5"]], "number_atoms": [[144, "number-atoms"]], "box": [[144, "box"]], "atoms": [[144, "atoms"]], "empirical_potential": [[144, "empirical-potential"]], "optimised_atoms": [[144, "optimised-atoms"]], "compile": [[144, "compile"]], "dump_path": [[144, "dump-path"]], "yield_point": [[144, "yield-point"]], "yield_function_name": [[144, "yield-function-name"]], "yield_point_criteria": [[144, "yield-point-criteria"]], "fit_yield_fixed_parameters": [[144, "fit-yield-fixed-parameters"]], "fit_yield_initial_parameters": [[144, "fit-yield-initial-parameters"]], "fit_yield_opt_parameters": [[144, "fit-yield-opt-parameters"]], "fitted_yield_functions": [[144, "fitted-yield-functions"]], "max_sleep_time": [[144, "max-sleep-time"]], "sleep_time": [[144, "sleep-time"]], "a": [[144, "a"]], "b": [[144, "b"]], "c": [[144, "c"]], "f_c": [[144, "f-c"]], "mu": [[144, "mu"]], "sigma": [[144, "sigma"]], "geom_file_path": [[144, "geom-file-path"]], "geom_data": [[144, "geom-data"]], "num_increments": [[144, "num-increments"]], "magnitude": [[144, "magnitude"]], "test_t1_bash": [[145, "test-t1-bash"]], "test_t1_ps": [[145, "test-t1-ps"]], "test_t2_bash": [[145, "test-t2-bash"]], "test_t2_ps": [[145, "test-t2-ps"]], "generate_microstructure_seeds": [[145, "generate-microstructure-seeds"]], "generate_volume_element": [[145, "generate-volume-element"]], "sample_texture": [[145, "sample-texture"], [145, "id1"]], "visualise_orientations": [[145, "visualise-orientations"]], "generate_orientations": [[145, "generate-orientations"]], "define_p1": [[145, "define-p1"]], "define_load_case": [[145, "define-load-case"]], "simulate_VE_loading": [[145, "simulate-ve-loading"]], "read_tensile_test": [[145, "read-tensile-test"]], "fit_single_crystal_parameters": [[145, "fit-single-crystal-parameters"], [146, "fit-single-crystal-parameters"]], "dump_all_yield_stresses": [[145, "dump-all-yield-stresses"]], "fit_yield_function": [[145, "fit-yield-function"]], "print_hello": [[145, "print-hello"]], "demo_adder": [[145, "demo-adder"]], "demo_sleep": [[145, "demo-sleep"]], "Demo workflows": [[146, "demo-workflows"]], "sample_texture_ODF_mat": [[146, "sample-texture-odf-mat"]], "sample_texture_ODF_mat.yaml": [[146, null]], "read_tensile_test_CSV": [[146, "read-tensile-test-csv"]], "read_tensile_test_CSV.yaml": [[146, null]], "fit_single_crystal_parameters.yaml": [[146, null]], "sample_texture_CTF_file": [[146, "sample-texture-ctf-file"]], "sample_texture_CTF_file.yaml": [[146, null]], "tension_DAMASK_Al": [[146, "tension-damask-al"]], "tension_DAMASK_Al.yaml": [[146, null]], "tension_DAMASK_Mg": [[146, "tension-damask-mg"]], "tension_DAMASK_Mg.yaml": [[146, null]], "fit_yield_funcs": [[146, "fit-yield-funcs"]], "fit_yield_funcs.yaml": [[146, null]], "Configuration how-tos": [[147, "configuration-how-tos"]], "Get and set config items": [[147, "get-and-set-config-items"]], "Reset the config to default values": [[147, "reset-the-config-to-default-values"]], "Clear the known-submissions file": [[147, "clear-the-known-submissions-file"]], "How-To Guides": [[148, "how-to-guides"]], "Task schema how-tos": [[149, "task-schema-how-tos"]], "Show information about a task schema": [[149, "show-information-about-a-task-schema"]], "How to name parameters and task schemas": [[150, "how-to-name-parameters-and-task-schemas"]], "Workflow templates how-tos": [[151, "workflow-templates-how-tos"]], "Loading workflow templates": [[151, "loading-workflow-templates"]], "Workflow how-tos": [[152, "workflow-how-tos"]], "Generating a persistent workflow from a workflow template": [[152, "generating-a-persistent-workflow-from-a-workflow-template"]], "Loading workflows": [[152, "loading-workflows"]], "User Guide": [[153, "user-guide"]], "Tutorials": [[154, "tutorials"]]}, "indexentries": {"matflow": [[4, "module-matflow"]], "module": [[4, "module-matflow"], [88, "module-matflow.cli"], [96, "module-matflow.param_classes"], [97, "module-matflow.param_classes.load"], [101, "module-matflow.param_classes.orientations"], [109, "module-matflow.param_classes.seeds"], [111, "module-matflow.param_classes.single_crystal_parameters"], [113, "module-matflow.param_classes.utils"], [120, "module-matflow.tests"], [121, "module-matflow.tests.conftest"], [128, "module-matflow.tests.test_cli"], [131, "module-matflow.tests.test_utils"]], "action (class in matflow)": [[5, "matflow.Action"]], "app (matflow.action attribute)": [[5, "matflow.Action.app"]], "compose_source() (matflow.action method)": [[5, "matflow.Action.compose_source"]], "expand() (matflow.action method)": [[5, "matflow.Action.expand"]], "from_json_like() (matflow.action class method)": [[5, "matflow.Action.from_json_like"]], "generate_data_index() (matflow.action method)": [[5, "matflow.Action.generate_data_index"]], "get_command_input_file_labels() (matflow.action method)": [[5, "matflow.Action.get_command_input_file_labels"]], "get_command_input_types() (matflow.action method)": [[5, "matflow.Action.get_command_input_types"]], "get_command_output_types() (matflow.action method)": [[5, "matflow.Action.get_command_output_types"]], "get_commands_action_env() (matflow.action method)": [[5, "matflow.Action.get_commands_action_env"]], "get_environment() (matflow.action method)": [[5, "matflow.Action.get_environment"]], "get_environment_label() (matflow.action method)": [[5, "matflow.Action.get_environment_label"]], "get_input_file_generator_action_env() (matflow.action method)": [[5, "matflow.Action.get_input_file_generator_action_env"]], "get_input_file_labels() (matflow.action method)": [[5, "matflow.Action.get_input_file_labels"]], "get_input_types() (matflow.action method)": [[5, "matflow.Action.get_input_types"]], "get_output_file_labels() (matflow.action method)": [[5, "matflow.Action.get_output_file_labels"]], "get_output_file_parser_action_env() (matflow.action method)": [[5, "matflow.Action.get_output_file_parser_action_env"]], "get_output_types() (matflow.action method)": [[5, "matflow.Action.get_output_types"]], "get_param_dump_file_path_hdf5() (matflow.action method)": [[5, "matflow.Action.get_param_dump_file_path_HDF5"]], "get_param_dump_file_path_json() (matflow.action method)": [[5, "matflow.Action.get_param_dump_file_path_JSON"]], "get_param_dump_file_stem() (matflow.action static method)": [[5, "matflow.Action.get_param_dump_file_stem"]], "get_param_load_file_path_hdf5() (matflow.action method)": [[5, "matflow.Action.get_param_load_file_path_HDF5"]], "get_param_load_file_path_json() (matflow.action method)": [[5, "matflow.Action.get_param_load_file_path_JSON"]], "get_param_load_file_stem() (matflow.action static method)": [[5, "matflow.Action.get_param_load_file_stem"]], "get_parameter_dependence() (matflow.action method)": [[5, "matflow.Action.get_parameter_dependence"]], "get_parameter_names() (matflow.action method)": [[5, "matflow.Action.get_parameter_names"]], "get_possible_scopes() (matflow.action method)": [[5, "matflow.Action.get_possible_scopes"]], "get_precise_scope() (matflow.action method)": [[5, "matflow.Action.get_precise_scope"]], "get_required_executables() (matflow.action method)": [[5, "matflow.Action.get_required_executables"]], "get_resolved_action_env() (matflow.action method)": [[5, "matflow.Action.get_resolved_action_env"]], "get_script_name() (matflow.action class method)": [[5, "matflow.Action.get_script_name"]], "get_snippet_script_path() (matflow.action class method)": [[5, "matflow.Action.get_snippet_script_path"]], "get_snippet_script_str() (matflow.action class method)": [[5, "matflow.Action.get_snippet_script_str"]], "is_input_type_required() (matflow.action method)": [[5, "matflow.Action.is_input_type_required"]], "is_snippet_script() (matflow.action static method)": [[5, "matflow.Action.is_snippet_script"]], "process_script_data_formats() (matflow.action method)": [[5, "matflow.Action.process_script_data_formats"]], "script_data_in_grouped (matflow.action property)": [[5, "matflow.Action.script_data_in_grouped"]], "script_data_in_has_direct (matflow.action property)": [[5, "matflow.Action.script_data_in_has_direct"]], "script_data_in_has_files (matflow.action property)": [[5, "matflow.Action.script_data_in_has_files"]], "script_data_out_grouped (matflow.action property)": [[5, "matflow.Action.script_data_out_grouped"]], "script_data_out_has_direct (matflow.action property)": [[5, "matflow.Action.script_data_out_has_direct"]], "script_data_out_has_files (matflow.action property)": [[5, "matflow.Action.script_data_out_has_files"]], "script_is_python (matflow.action property)": [[5, "matflow.Action.script_is_python"]], "task_schema (matflow.action property)": [[5, "matflow.Action.task_schema"]], "test_rules() (matflow.action method)": [[5, "matflow.Action.test_rules"]], "to_dict() (matflow.action method)": [[5, "matflow.Action.to_dict"]], "to_json_like() (matflow.action method)": [[5, "matflow.Action.to_json_like"]], "actionenvironment (class in matflow)": [[6, "matflow.ActionEnvironment"]], "app (matflow.actionenvironment attribute)": [[6, "matflow.ActionEnvironment.app"]], "environment (matflow.actionenvironment attribute)": [[6, "matflow.ActionEnvironment.environment"]], "from_json_like() (matflow.actionenvironment class method)": [[6, "matflow.ActionEnvironment.from_json_like"]], "scope (matflow.actionenvironment attribute)": [[6, "matflow.ActionEnvironment.scope"]], "to_dict() (matflow.actionenvironment method)": [[6, "matflow.ActionEnvironment.to_dict"]], "to_json_like() (matflow.actionenvironment method)": [[6, "matflow.ActionEnvironment.to_json_like"]], "actionrule (class in matflow)": [[7, "matflow.ActionRule"]], "app (matflow.actionrule attribute)": [[7, "matflow.ActionRule.app"]], "check_exists() (matflow.actionrule class method)": [[7, "matflow.ActionRule.check_exists"]], "check_missing() (matflow.actionrule class method)": [[7, "matflow.ActionRule.check_missing"]], "from_json_like() (matflow.actionrule class method)": [[7, "matflow.ActionRule.from_json_like"]], "test() (matflow.actionrule method)": [[7, "matflow.ActionRule.test"]], "to_dict() (matflow.actionrule method)": [[7, "matflow.ActionRule.to_dict"]], "to_json_like() (matflow.actionrule method)": [[7, "matflow.ActionRule.to_json_like"]], "actionscope (class in matflow)": [[8, "matflow.ActionScope"]], "any() (matflow.actionscope class method)": [[8, "matflow.ActionScope.any"]], "app (matflow.actionscope attribute)": [[8, "matflow.ActionScope.app"]], "from_json_like() (matflow.actionscope class method)": [[8, "matflow.ActionScope.from_json_like"]], "input_file_generator() (matflow.actionscope class method)": [[8, "matflow.ActionScope.input_file_generator"]], "main() (matflow.actionscope class method)": [[8, "matflow.ActionScope.main"]], "output_file_parser() (matflow.actionscope class method)": [[8, "matflow.ActionScope.output_file_parser"]], "processing() (matflow.actionscope class method)": [[8, "matflow.ActionScope.processing"]], "to_dict() (matflow.actionscope method)": [[8, "matflow.ActionScope.to_dict"]], "to_json_like() (matflow.actionscope method)": [[8, "matflow.ActionScope.to_json_like"]], "to_string() (matflow.actionscope method)": [[8, "matflow.ActionScope.to_string"]], "any (matflow.actionscopetype attribute)": [[9, "matflow.ActionScopeType.ANY"]], "actionscopetype (class in matflow)": [[9, "matflow.ActionScopeType"]], "input_file_generator (matflow.actionscopetype attribute)": [[9, "matflow.ActionScopeType.INPUT_FILE_GENERATOR"]], "main (matflow.actionscopetype attribute)": [[9, "matflow.ActionScopeType.MAIN"]], "output_file_parser (matflow.actionscopetype attribute)": [[9, "matflow.ActionScopeType.OUTPUT_FILE_PARSER"]], "processing (matflow.actionscopetype attribute)": [[9, "matflow.ActionScopeType.PROCESSING"]], "command (class in matflow)": [[10, "matflow.Command"]], "app (matflow.command attribute)": [[10, "matflow.Command.app"]], "arguments (matflow.command attribute)": [[10, "matflow.Command.arguments"]], "command (matflow.command attribute)": [[10, "matflow.Command.command"]], "executable (matflow.command attribute)": [[10, "matflow.Command.executable"]], "from_json_like() (matflow.command class method)": [[10, "matflow.Command.from_json_like"]], "get_command_line() (matflow.command method)": [[10, "matflow.Command.get_command_line"]], "get_output_types() (matflow.command method)": [[10, "matflow.Command.get_output_types"]], "get_required_executables() (matflow.command method)": [[10, "matflow.Command.get_required_executables"]], "process_std_stream() (matflow.command method)": [[10, "matflow.Command.process_std_stream"]], "stderr (matflow.command attribute)": [[10, "matflow.Command.stderr"]], "stdin (matflow.command attribute)": [[10, "matflow.Command.stdin"]], "stdout (matflow.command attribute)": [[10, "matflow.Command.stdout"]], "to_dict() (matflow.command method)": [[10, "matflow.Command.to_dict"]], "to_json_like() (matflow.command method)": [[10, "matflow.Command.to_json_like"]], "variables (matflow.command attribute)": [[10, "matflow.Command.variables"]], "commandfileslist (class in matflow)": [[11, "matflow.CommandFilesList"]], "add_object() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.add_object"]], "add_objects() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.add_objects"]], "from_json_like() (matflow.commandfileslist class method)": [[11, "matflow.CommandFilesList.from_json_like"]], "get() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.get"]], "get_all() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.get_all"]], "list_attrs() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.list_attrs"]], "to_dict() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.to_dict"]], "to_json_like() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.to_json_like"]], "default_shebang_args (matflow.directposix attribute)": [[12, "matflow.DirectPosix.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.directposix attribute)": [[12, "matflow.DirectPosix.DEFAULT_SHELL_ARGS"]], "default_shell_executable (matflow.directposix attribute)": [[12, "matflow.DirectPosix.DEFAULT_SHELL_EXECUTABLE"]], "directposix (class in matflow)": [[12, "matflow.DirectPosix"]], "app (matflow.directposix attribute)": [[12, "matflow.DirectPosix.app"]], "cancel_jobs() (matflow.directposix method)": [[12, "matflow.DirectPosix.cancel_jobs"]], "get_job_state_info() (matflow.directposix method)": [[12, "matflow.DirectPosix.get_job_state_info"]], "get_submit_command() (matflow.directposix method)": [[12, "matflow.DirectPosix.get_submit_command"]], "get_version_info() (matflow.directposix method)": [[12, "matflow.DirectPosix.get_version_info"]], "is_jobscript_active() (matflow.directposix method)": [[12, "matflow.DirectPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.directposix static method)": [[12, "matflow.DirectPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.directposix method)": [[12, "matflow.DirectPosix.parse_submission_output"]], "process_resources() (matflow.directposix class method)": [[12, "matflow.DirectPosix.process_resources"]], "wait_for_jobscripts() (matflow.directposix class method)": [[12, "matflow.DirectPosix.wait_for_jobscripts"]], "default_shebang_args (matflow.directwindows attribute)": [[13, "matflow.DirectWindows.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.directwindows attribute)": [[13, "matflow.DirectWindows.DEFAULT_SHELL_ARGS"]], "default_shell_executable (matflow.directwindows attribute)": [[13, "matflow.DirectWindows.DEFAULT_SHELL_EXECUTABLE"]], "directwindows (class in matflow)": [[13, "matflow.DirectWindows"]], "app (matflow.directwindows attribute)": [[13, "matflow.DirectWindows.app"]], "cancel_jobs() (matflow.directwindows method)": [[13, "matflow.DirectWindows.cancel_jobs"]], "get_job_state_info() (matflow.directwindows method)": [[13, "matflow.DirectWindows.get_job_state_info"]], "get_submit_command() (matflow.directwindows method)": [[13, "matflow.DirectWindows.get_submit_command"]], "get_version_info() (matflow.directwindows method)": [[13, "matflow.DirectWindows.get_version_info"]], "is_jobscript_active() (matflow.directwindows method)": [[13, "matflow.DirectWindows.is_jobscript_active"]], "is_num_cores_supported() (matflow.directwindows static method)": [[13, "matflow.DirectWindows.is_num_cores_supported"]], "parse_submission_output() (matflow.directwindows method)": [[13, "matflow.DirectWindows.parse_submission_output"]], "process_resources() (matflow.directwindows class method)": [[13, "matflow.DirectWindows.process_resources"]], "wait_for_jobscripts() (matflow.directwindows class method)": [[13, "matflow.DirectWindows.wait_for_jobscripts"]], "element (class in matflow)": [[14, "matflow.Element"]], "action_runs (matflow.element property)": [[14, "matflow.Element.action_runs"]], "actions (matflow.element property)": [[14, "matflow.Element.actions"]], "app (matflow.element attribute)": [[14, "matflow.Element.app"]], "dir_name (matflow.element property)": [[14, "matflow.Element.dir_name"]], "element_set (matflow.element property)": [[14, "matflow.Element.element_set"]], "element_set_idx (matflow.element property)": [[14, "matflow.Element.element_set_idx"]], "get() (matflow.element method)": [[14, "matflow.Element.get"]], "get_ear_dependencies() (matflow.element method)": [[14, "matflow.Element.get_EAR_dependencies"]], "get_data_idx() (matflow.element method)": [[14, "matflow.Element.get_data_idx"]], "get_dependent_ears() (matflow.element method)": [[14, "matflow.Element.get_dependent_EARs"]], "get_dependent_element_iterations() (matflow.element method)": [[14, "matflow.Element.get_dependent_element_iterations"]], "get_dependent_elements() (matflow.element method)": [[14, "matflow.Element.get_dependent_elements"]], "get_dependent_elements_recursively() (matflow.element method)": [[14, "matflow.Element.get_dependent_elements_recursively"]], "get_dependent_tasks() (matflow.element method)": [[14, "matflow.Element.get_dependent_tasks"]], "get_element_dependencies() (matflow.element method)": [[14, "matflow.Element.get_element_dependencies"]], "get_element_iteration_dependencies() (matflow.element method)": [[14, "matflow.Element.get_element_iteration_dependencies"]], "get_input_dependencies() (matflow.element method)": [[14, "matflow.Element.get_input_dependencies"]], "get_parameter_sources() (matflow.element method)": [[14, "matflow.Element.get_parameter_sources"]], "get_sequence_value() (matflow.element method)": [[14, "matflow.Element.get_sequence_value"]], "get_task_dependencies() (matflow.element method)": [[14, "matflow.Element.get_task_dependencies"]], "id_ (matflow.element property)": [[14, "matflow.Element.id_"]], "index (matflow.element property)": [[14, "matflow.Element.index"]], "init_loop_index() (matflow.element method)": [[14, "matflow.Element.init_loop_index"]], "input_files (matflow.element property)": [[14, "matflow.Element.input_files"]], "input_source_idx (matflow.element property)": [[14, "matflow.Element.input_source_idx"]], "input_sources (matflow.element property)": [[14, "matflow.Element.input_sources"]], "inputs (matflow.element property)": [[14, "matflow.Element.inputs"]], "is_pending (matflow.element property)": [[14, "matflow.Element.is_pending"]], "iteration_ids (matflow.element property)": [[14, "matflow.Element.iteration_IDs"]], "iterations (matflow.element property)": [[14, "matflow.Element.iterations"]], "latest_iteration (matflow.element property)": [[14, "matflow.Element.latest_iteration"]], "output_files (matflow.element property)": [[14, "matflow.Element.output_files"]], "outputs (matflow.element property)": [[14, "matflow.Element.outputs"]], "schema_parameters (matflow.element property)": [[14, "matflow.Element.schema_parameters"]], "sequence_idx (matflow.element property)": [[14, "matflow.Element.sequence_idx"]], "task (matflow.element property)": [[14, "matflow.Element.task"]], "to_element_set_data() (matflow.element method)": [[14, "matflow.Element.to_element_set_data"]], "workflow (matflow.element property)": [[14, "matflow.Element.workflow"]], "elementaction (class in matflow)": [[15, "matflow.ElementAction"]], "action (matflow.elementaction property)": [[15, "matflow.ElementAction.action"]], "action_idx (matflow.elementaction property)": [[15, "matflow.ElementAction.action_idx"]], "app (matflow.elementaction attribute)": [[15, "matflow.ElementAction.app"]], "element (matflow.elementaction property)": [[15, "matflow.ElementAction.element"]], "element_iteration (matflow.elementaction property)": [[15, "matflow.ElementAction.element_iteration"]], "get() (matflow.elementaction method)": [[15, "matflow.ElementAction.get"]], "get_data_idx() (matflow.elementaction method)": [[15, "matflow.ElementAction.get_data_idx"]], "get_parameter_names() (matflow.elementaction method)": [[15, "matflow.ElementAction.get_parameter_names"]], "get_parameter_sources() (matflow.elementaction method)": [[15, "matflow.ElementAction.get_parameter_sources"]], "input_files (matflow.elementaction property)": [[15, "matflow.ElementAction.input_files"]], "inputs (matflow.elementaction property)": [[15, "matflow.ElementAction.inputs"]], "num_runs (matflow.elementaction property)": [[15, "matflow.ElementAction.num_runs"]], "output_files (matflow.elementaction property)": [[15, "matflow.ElementAction.output_files"]], "outputs (matflow.elementaction property)": [[15, "matflow.ElementAction.outputs"]], "runs (matflow.elementaction property)": [[15, "matflow.ElementAction.runs"]], "task (matflow.elementaction property)": [[15, "matflow.ElementAction.task"]], "elementactionrun (class in matflow)": [[16, "matflow.ElementActionRun"]], "action (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.action"]], "app (matflow.elementactionrun attribute)": [[16, "matflow.ElementActionRun.app"]], "compose_commands() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.compose_commands"]], "data_idx (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.data_idx"]], "dir_diff (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.dir_diff"]], "element (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.element"]], "element_action (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.element_action"]], "element_iteration (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.element_iteration"]], "end_time (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.end_time"]], "exit_code (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.exit_code"]], "get() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get"]], "get_ear_dependencies() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_EAR_dependencies"]], "get_ifg_input_values() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_IFG_input_values"]], "get_ofp_inputs() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_OFP_inputs"]], "get_ofp_output_files() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_OFP_output_files"]], "get_ofp_outputs() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_OFP_outputs"]], "get_all_previous_iteration_runs() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_all_previous_iteration_runs"]], "get_data_idx() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_data_idx"]], "get_dependent_ears() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_dependent_EARs"]], "get_environment() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_environment"]], "get_environment_label() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_environment_label"]], "get_input_dependencies() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_input_dependencies"]], "get_input_values() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_input_values"]], "get_input_values_direct() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_input_values_direct"]], "get_parameter_names() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_parameter_names"]], "get_parameter_sources() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_parameter_sources"]], "get_resources() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_resources"]], "id_ (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.id_"]], "index (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.index"]], "input_files (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.input_files"]], "inputs (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.inputs"]], "is_pending (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.is_pending"]], "metadata (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.metadata"]], "output_files (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.output_files"]], "outputs (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.outputs"]], "resources (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.resources"]], "skip (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.skip"]], "snapshot_end (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.snapshot_end"]], "snapshot_start (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.snapshot_start"]], "start_time (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.start_time"]], "status (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.status"]], "submission_idx (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.submission_idx"]], "success (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.success"]], "task (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.task"]], "workflow (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.workflow"]], "write_source() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.write_source"]], "elementfilter (class in matflow)": [[17, "matflow.ElementFilter"]], "app (matflow.elementfilter attribute)": [[17, "matflow.ElementFilter.app"]], "filter() (matflow.elementfilter method)": [[17, "matflow.ElementFilter.filter"]], "from_json_like() (matflow.elementfilter class method)": [[17, "matflow.ElementFilter.from_json_like"]], "rules (matflow.elementfilter attribute)": [[17, "matflow.ElementFilter.rules"]], "to_dict() (matflow.elementfilter method)": [[17, "matflow.ElementFilter.to_dict"]], "to_json_like() (matflow.elementfilter method)": [[17, "matflow.ElementFilter.to_json_like"]], "elementgroup (class in matflow)": [[18, "matflow.ElementGroup"]], "app (matflow.elementgroup attribute)": [[18, "matflow.ElementGroup.app"]], "from_json_like() (matflow.elementgroup class method)": [[18, "matflow.ElementGroup.from_json_like"]], "group_by_distinct (matflow.elementgroup attribute)": [[18, "matflow.ElementGroup.group_by_distinct"]], "name (matflow.elementgroup attribute)": [[18, "matflow.ElementGroup.name"]], "to_dict() (matflow.elementgroup method)": [[18, "matflow.ElementGroup.to_dict"]], "to_json_like() (matflow.elementgroup method)": [[18, "matflow.ElementGroup.to_json_like"]], "where (matflow.elementgroup attribute)": [[18, "matflow.ElementGroup.where"]], "elementinputfiles (class in matflow)": [[19, "matflow.ElementInputFiles"]], "prefixed_names_unlabelled (matflow.elementinputfiles property)": [[19, "matflow.ElementInputFiles.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementinputfiles property)": [[19, "matflow.ElementInputFiles.prefixed_names_unlabelled_str"]], "elementinputs (class in matflow)": [[20, "matflow.ElementInputs"]], "prefixed_names_unlabelled (matflow.elementinputs property)": [[20, "matflow.ElementInputs.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementinputs property)": [[20, "matflow.ElementInputs.prefixed_names_unlabelled_str"]], "ear_ids (matflow.elementiteration property)": [[21, "matflow.ElementIteration.EAR_IDs"]], "ear_ids_flat (matflow.elementiteration property)": [[21, "matflow.ElementIteration.EAR_IDs_flat"]], "ears_initialised (matflow.elementiteration property)": [[21, "matflow.ElementIteration.EARs_initialised"]], "elementiteration (class in matflow)": [[21, "matflow.ElementIteration"]], "action_runs (matflow.elementiteration property)": [[21, "matflow.ElementIteration.action_runs"]], "actions (matflow.elementiteration property)": [[21, "matflow.ElementIteration.actions"]], "app (matflow.elementiteration attribute)": [[21, "matflow.ElementIteration.app"]], "data_idx (matflow.elementiteration property)": [[21, "matflow.ElementIteration.data_idx"]], "element (matflow.elementiteration property)": [[21, "matflow.ElementIteration.element"]], "get() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get"]], "get_ear_dependencies() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_EAR_dependencies"]], "get_data_idx() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_data_idx"]], "get_dependent_ears() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_dependent_EARs"]], "get_dependent_element_iterations() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_dependent_element_iterations"]], "get_dependent_elements() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_dependent_elements"]], "get_dependent_tasks() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_dependent_tasks"]], "get_element_dependencies() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_element_dependencies"]], "get_element_iteration_dependencies() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_element_iteration_dependencies"]], "get_input_dependencies() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_input_dependencies"]], "get_parameter_names() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_parameter_names"]], "get_parameter_sources() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_parameter_sources"]], "get_resources() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_resources"]], "get_resources_obj() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_resources_obj"]], "get_task_dependencies() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_task_dependencies"]], "get_template_resources() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_template_resources"]], "id_ (matflow.elementiteration property)": [[21, "matflow.ElementIteration.id_"]], "index (matflow.elementiteration property)": [[21, "matflow.ElementIteration.index"]], "input_files (matflow.elementiteration property)": [[21, "matflow.ElementIteration.input_files"]], "inputs (matflow.elementiteration property)": [[21, "matflow.ElementIteration.inputs"]], "is_pending (matflow.elementiteration property)": [[21, "matflow.ElementIteration.is_pending"]], "loop_idx (matflow.elementiteration property)": [[21, "matflow.ElementIteration.loop_idx"]], "output_files (matflow.elementiteration property)": [[21, "matflow.ElementIteration.output_files"]], "outputs (matflow.elementiteration property)": [[21, "matflow.ElementIteration.outputs"]], "schema_parameters (matflow.elementiteration property)": [[21, "matflow.ElementIteration.schema_parameters"]], "task (matflow.elementiteration property)": [[21, "matflow.ElementIteration.task"]], "workflow (matflow.elementiteration property)": [[21, "matflow.ElementIteration.workflow"]], "elementoutputfiles (class in matflow)": [[22, "matflow.ElementOutputFiles"]], "prefixed_names_unlabelled (matflow.elementoutputfiles property)": [[22, "matflow.ElementOutputFiles.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementoutputfiles property)": [[22, "matflow.ElementOutputFiles.prefixed_names_unlabelled_str"]], "elementoutputs (class in matflow)": [[23, "matflow.ElementOutputs"]], "prefixed_names_unlabelled (matflow.elementoutputs property)": [[23, "matflow.ElementOutputs.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementoutputs property)": [[23, "matflow.ElementOutputs.prefixed_names_unlabelled_str"]], "elementparameter (class in matflow)": [[24, "matflow.ElementParameter"]], "app (matflow.elementparameter attribute)": [[24, "matflow.ElementParameter.app"]], "data_idx (matflow.elementparameter property)": [[24, "matflow.ElementParameter.data_idx"]], "data_idx_is_set (matflow.elementparameter property)": [[24, "matflow.ElementParameter.data_idx_is_set"]], "element (matflow.elementparameter attribute)": [[24, "matflow.ElementParameter.element"]], "get_size() (matflow.elementparameter method)": [[24, "matflow.ElementParameter.get_size"]], "is_set (matflow.elementparameter property)": [[24, "matflow.ElementParameter.is_set"]], "parent (matflow.elementparameter attribute)": [[24, "matflow.ElementParameter.parent"]], "path (matflow.elementparameter attribute)": [[24, "matflow.ElementParameter.path"]], "task (matflow.elementparameter attribute)": [[24, "matflow.ElementParameter.task"]], "value (matflow.elementparameter property)": [[24, "matflow.ElementParameter.value"]], "elementpropagation (class in matflow)": [[25, "matflow.ElementPropagation"]], "app (matflow.elementpropagation attribute)": [[25, "matflow.ElementPropagation.app"]], "element_set (matflow.elementpropagation property)": [[25, "matflow.ElementPropagation.element_set"]], "nesting_order (matflow.elementpropagation attribute)": [[25, "matflow.ElementPropagation.nesting_order"]], "task (matflow.elementpropagation attribute)": [[25, "matflow.ElementPropagation.task"]], "elementrepeats (class in matflow)": [[26, "matflow.ElementRepeats"]], "number (matflow.elementrepeats attribute)": [[26, "matflow.ElementRepeats.number"]], "where (matflow.elementrepeats attribute)": [[26, "matflow.ElementRepeats.where"]], "elementresources (class in matflow)": [[27, "matflow.ElementResources"]], "sge_parallel_env (matflow.elementresources attribute)": [[27, "matflow.ElementResources.SGE_parallel_env"]], "slurm_is_parallel (matflow.elementresources property)": [[27, "matflow.ElementResources.SLURM_is_parallel"]], "slurm_num_cpus_per_task (matflow.elementresources attribute)": [[27, "matflow.ElementResources.SLURM_num_cpus_per_task"]], "slurm_num_nodes (matflow.elementresources attribute)": [[27, "matflow.ElementResources.SLURM_num_nodes"]], "slurm_num_tasks (matflow.elementresources attribute)": [[27, "matflow.ElementResources.SLURM_num_tasks"]], "slurm_num_tasks_per_node (matflow.elementresources attribute)": [[27, "matflow.ElementResources.SLURM_num_tasks_per_node"]], "slurm_partition (matflow.elementresources attribute)": [[27, "matflow.ElementResources.SLURM_partition"]], "app (matflow.elementresources attribute)": [[27, "matflow.ElementResources.app"]], "from_json_like() (matflow.elementresources class method)": [[27, "matflow.ElementResources.from_json_like"]], "get_default_os_name() (matflow.elementresources static method)": [[27, "matflow.ElementResources.get_default_os_name"]], "get_default_scheduler() (matflow.elementresources class method)": [[27, "matflow.ElementResources.get_default_scheduler"]], "get_default_shell() (matflow.elementresources class method)": [[27, "matflow.ElementResources.get_default_shell"]], "get_jobscript_hash() (matflow.elementresources method)": [[27, "matflow.ElementResources.get_jobscript_hash"]], "is_parallel (matflow.elementresources property)": [[27, "matflow.ElementResources.is_parallel"]], "max_array_items (matflow.elementresources attribute)": [[27, "matflow.ElementResources.max_array_items"]], "num_cores (matflow.elementresources attribute)": [[27, "matflow.ElementResources.num_cores"]], "num_cores_per_node (matflow.elementresources attribute)": [[27, "matflow.ElementResources.num_cores_per_node"]], "num_nodes (matflow.elementresources attribute)": [[27, "matflow.ElementResources.num_nodes"]], "num_threads (matflow.elementresources attribute)": [[27, "matflow.ElementResources.num_threads"]], "os_name (matflow.elementresources attribute)": [[27, "matflow.ElementResources.os_name"]], "parallel_mode (matflow.elementresources attribute)": [[27, "matflow.ElementResources.parallel_mode"]], "scheduler (matflow.elementresources attribute)": [[27, "matflow.ElementResources.scheduler"]], "scheduler_args (matflow.elementresources attribute)": [[27, "matflow.ElementResources.scheduler_args"]], "scratch (matflow.elementresources attribute)": [[27, "matflow.ElementResources.scratch"]], "set_defaults() (matflow.elementresources method)": [[27, "matflow.ElementResources.set_defaults"]], "shell (matflow.elementresources attribute)": [[27, "matflow.ElementResources.shell"]], "shell_args (matflow.elementresources attribute)": [[27, "matflow.ElementResources.shell_args"]], "time_limit (matflow.elementresources attribute)": [[27, "matflow.ElementResources.time_limit"]], "to_dict() (matflow.elementresources method)": [[27, "matflow.ElementResources.to_dict"]], "to_json_like() (matflow.elementresources method)": [[27, "matflow.ElementResources.to_json_like"]], "use_job_array (matflow.elementresources attribute)": [[27, "matflow.ElementResources.use_job_array"]], "validate_against_machine() (matflow.elementresources method)": [[27, "matflow.ElementResources.validate_against_machine"]], "elementset (class in matflow)": [[28, "matflow.ElementSet"]], "app (matflow.elementset attribute)": [[28, "matflow.ElementSet.app"]], "defined_input_types (matflow.elementset property)": [[28, "matflow.ElementSet.defined_input_types"]], "elem_iter_ids (matflow.elementset property)": [[28, "matflow.ElementSet.elem_iter_IDs"]], "element_iterations (matflow.elementset property)": [[28, "matflow.ElementSet.element_iterations"]], "element_local_idx_range (matflow.elementset property)": [[28, "matflow.ElementSet.element_local_idx_range"]], "elements (matflow.elementset property)": [[28, "matflow.ElementSet.elements"]], "ensure_element_sets() (matflow.elementset class method)": [[28, "matflow.ElementSet.ensure_element_sets"]], "from_json_like() (matflow.elementset class method)": [[28, "matflow.ElementSet.from_json_like"]], "get_defined_parameter_types() (matflow.elementset method)": [[28, "matflow.ElementSet.get_defined_parameter_types"]], "get_defined_sub_parameter_types() (matflow.elementset method)": [[28, "matflow.ElementSet.get_defined_sub_parameter_types"]], "get_locally_defined_inputs() (matflow.elementset method)": [[28, "matflow.ElementSet.get_locally_defined_inputs"]], "get_sequence_by_path() (matflow.elementset method)": [[28, "matflow.ElementSet.get_sequence_by_path"]], "get_sequence_from_path() (matflow.elementset method)": [[28, "matflow.ElementSet.get_sequence_from_path"]], "get_task_dependencies() (matflow.elementset method)": [[28, "matflow.ElementSet.get_task_dependencies"]], "index (matflow.elementset property)": [[28, "matflow.ElementSet.index"]], "input_types (matflow.elementset property)": [[28, "matflow.ElementSet.input_types"]], "is_input_type_provided() (matflow.elementset method)": [[28, "matflow.ElementSet.is_input_type_provided"]], "prepare_persistent_copy() (matflow.elementset method)": [[28, "matflow.ElementSet.prepare_persistent_copy"]], "task (matflow.elementset property)": [[28, "matflow.ElementSet.task"]], "task_template (matflow.elementset property)": [[28, "matflow.ElementSet.task_template"]], "to_dict() (matflow.elementset method)": [[28, "matflow.ElementSet.to_dict"]], "to_json_like() (matflow.elementset method)": [[28, "matflow.ElementSet.to_json_like"]], "undefined_input_types (matflow.elementset property)": [[28, "matflow.ElementSet.undefined_input_types"]], "elements (class in matflow)": [[29, "matflow.Elements"]], "task (matflow.elements property)": [[29, "matflow.Elements.task"]], "environment (class in matflow)": [[30, "matflow.Environment"]], "app (matflow.environment attribute)": [[30, "matflow.Environment.app"]], "from_json_like() (matflow.environment class method)": [[30, "matflow.Environment.from_json_like"]], "to_dict() (matflow.environment method)": [[30, "matflow.Environment.to_dict"]], "to_json_like() (matflow.environment method)": [[30, "matflow.Environment.to_json_like"]], "environmentslist (class in matflow)": [[31, "matflow.EnvironmentsList"]], "add_object() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.add_object"]], "add_objects() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.add_objects"]], "from_json_like() (matflow.environmentslist class method)": [[31, "matflow.EnvironmentsList.from_json_like"]], "get() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.get"]], "get_all() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.get_all"]], "list_attrs() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.list_attrs"]], "to_dict() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.to_dict"]], "to_json_like() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.to_json_like"]], "executable (class in matflow)": [[32, "matflow.Executable"]], "app (matflow.executable attribute)": [[32, "matflow.Executable.app"]], "environment (matflow.executable property)": [[32, "matflow.Executable.environment"]], "filter_instances() (matflow.executable method)": [[32, "matflow.Executable.filter_instances"]], "from_json_like() (matflow.executable class method)": [[32, "matflow.Executable.from_json_like"]], "to_dict() (matflow.executable method)": [[32, "matflow.Executable.to_dict"]], "to_json_like() (matflow.executable method)": [[32, "matflow.Executable.to_json_like"]], "executableinstance (class in matflow)": [[33, "matflow.ExecutableInstance"]], "app (matflow.executableinstance attribute)": [[33, "matflow.ExecutableInstance.app"]], "command (matflow.executableinstance attribute)": [[33, "matflow.ExecutableInstance.command"]], "from_json_like() (matflow.executableinstance class method)": [[33, "matflow.ExecutableInstance.from_json_like"]], "from_spec() (matflow.executableinstance class method)": [[33, "matflow.ExecutableInstance.from_spec"]], "num_cores (matflow.executableinstance attribute)": [[33, "matflow.ExecutableInstance.num_cores"]], "parallel_mode (matflow.executableinstance attribute)": [[33, "matflow.ExecutableInstance.parallel_mode"]], "to_dict() (matflow.executableinstance method)": [[33, "matflow.ExecutableInstance.to_dict"]], "to_json_like() (matflow.executableinstance method)": [[33, "matflow.ExecutableInstance.to_json_like"]], "executableslist (class in matflow)": [[34, "matflow.ExecutablesList"]], "add_object() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.add_object"]], "add_objects() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.add_objects"]], "environment (matflow.executableslist attribute)": [[34, "matflow.ExecutablesList.environment"]], "from_json_like() (matflow.executableslist class method)": [[34, "matflow.ExecutablesList.from_json_like"]], "get() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.get"]], "get_all() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.get_all"]], "list_attrs() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.list_attrs"]], "to_dict() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.to_dict"]], "to_json_like() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.to_json_like"]], "filenameext (class in matflow)": [[35, "matflow.FileNameExt"]], "app (matflow.filenameext attribute)": [[35, "matflow.FileNameExt.app"]], "file_name (matflow.filenameext attribute)": [[35, "matflow.FileNameExt.file_name"]], "from_json_like() (matflow.filenameext class method)": [[35, "matflow.FileNameExt.from_json_like"]], "to_dict() (matflow.filenameext method)": [[35, "matflow.FileNameExt.to_dict"]], "to_json_like() (matflow.filenameext method)": [[35, "matflow.FileNameExt.to_json_like"]], "value() (matflow.filenameext method)": [[35, "matflow.FileNameExt.value"]], "filenamespec (class in matflow)": [[36, "matflow.FileNameSpec"]], "app (matflow.filenamespec attribute)": [[36, "matflow.FileNameSpec.app"]], "ext (matflow.filenamespec property)": [[36, "matflow.FileNameSpec.ext"]], "from_json_like() (matflow.filenamespec class method)": [[36, "matflow.FileNameSpec.from_json_like"]], "stem (matflow.filenamespec property)": [[36, "matflow.FileNameSpec.stem"]], "to_dict() (matflow.filenamespec method)": [[36, "matflow.FileNameSpec.to_dict"]], "to_json_like() (matflow.filenamespec method)": [[36, "matflow.FileNameSpec.to_json_like"]], "value() (matflow.filenamespec method)": [[36, "matflow.FileNameSpec.value"]], "filenamestem (class in matflow)": [[37, "matflow.FileNameStem"]], "app (matflow.filenamestem attribute)": [[37, "matflow.FileNameStem.app"]], "file_name (matflow.filenamestem attribute)": [[37, "matflow.FileNameStem.file_name"]], "from_json_like() (matflow.filenamestem class method)": [[37, "matflow.FileNameStem.from_json_like"]], "to_dict() (matflow.filenamestem method)": [[37, "matflow.FileNameStem.to_dict"]], "to_json_like() (matflow.filenamestem method)": [[37, "matflow.FileNameStem.to_json_like"]], "value() (matflow.filenamestem method)": [[37, "matflow.FileNameStem.value"]], "filespec (class in matflow)": [[38, "matflow.FileSpec"]], "app (matflow.filespec attribute)": [[38, "matflow.FileSpec.app"]], "ext (matflow.filespec property)": [[38, "matflow.FileSpec.ext"]], "from_json_like() (matflow.filespec class method)": [[38, "matflow.FileSpec.from_json_like"]], "label (matflow.filespec attribute)": [[38, "matflow.FileSpec.label"]], "name (matflow.filespec attribute)": [[38, "matflow.FileSpec.name"]], "stem (matflow.filespec property)": [[38, "matflow.FileSpec.stem"]], "to_dict() (matflow.filespec method)": [[38, "matflow.FileSpec.to_dict"]], "to_json_like() (matflow.filespec method)": [[38, "matflow.FileSpec.to_json_like"]], "value() (matflow.filespec method)": [[38, "matflow.FileSpec.value"]], "grouplist (class in matflow)": [[39, "matflow.GroupList"]], "add_object() (matflow.grouplist method)": [[39, "matflow.GroupList.add_object"]], "add_objects() (matflow.grouplist method)": [[39, "matflow.GroupList.add_objects"]], "from_json_like() (matflow.grouplist class method)": [[39, "matflow.GroupList.from_json_like"]], "get() (matflow.grouplist method)": [[39, "matflow.GroupList.get"]], "get_all() (matflow.grouplist method)": [[39, "matflow.GroupList.get_all"]], "list_attrs() (matflow.grouplist method)": [[39, "matflow.GroupList.list_attrs"]], "to_dict() (matflow.grouplist method)": [[39, "matflow.GroupList.to_dict"]], "to_json_like() (matflow.grouplist method)": [[39, "matflow.GroupList.to_json_like"]], "inputfile (class in matflow)": [[40, "matflow.InputFile"]], "app (matflow.inputfile attribute)": [[40, "matflow.InputFile.app"]], "contents (matflow.inputfile property)": [[40, "matflow.InputFile.contents"]], "extension (matflow.inputfile property)": [[40, "matflow.InputFile.extension"]], "from_json_like() (matflow.inputfile class method)": [[40, "matflow.InputFile.from_json_like"]], "make_persistent() (matflow.inputfile method)": [[40, "matflow.InputFile.make_persistent"]], "normalised_files_path (matflow.inputfile property)": [[40, "matflow.InputFile.normalised_files_path"]], "normalised_path (matflow.inputfile property)": [[40, "matflow.InputFile.normalised_path"]], "path (matflow.inputfile property)": [[40, "matflow.InputFile.path"]], "read_contents() (matflow.inputfile method)": [[40, "matflow.InputFile.read_contents"]], "store_contents (matflow.inputfile property)": [[40, "matflow.InputFile.store_contents"]], "to_dict() (matflow.inputfile method)": [[40, "matflow.InputFile.to_dict"]], "to_json_like() (matflow.inputfile method)": [[40, "matflow.InputFile.to_json_like"]], "workflow (matflow.inputfile property)": [[40, "matflow.InputFile.workflow"]], "inputfilegenerator (class in matflow)": [[41, "matflow.InputFileGenerator"]], "abortable (matflow.inputfilegenerator attribute)": [[41, "matflow.InputFileGenerator.abortable"]], "app (matflow.inputfilegenerator attribute)": [[41, "matflow.InputFileGenerator.app"]], "compose_source() (matflow.inputfilegenerator method)": [[41, "matflow.InputFileGenerator.compose_source"]], "environment (matflow.inputfilegenerator attribute)": [[41, "matflow.InputFileGenerator.environment"]], "from_json_like() (matflow.inputfilegenerator class method)": [[41, "matflow.InputFileGenerator.from_json_like"]], "get_action_rule() (matflow.inputfilegenerator method)": [[41, "matflow.InputFileGenerator.get_action_rule"]], "input_file (matflow.inputfilegenerator attribute)": [[41, "matflow.InputFileGenerator.input_file"]], "inputs (matflow.inputfilegenerator attribute)": [[41, "matflow.InputFileGenerator.inputs"]], "script (matflow.inputfilegenerator attribute)": [[41, "matflow.InputFileGenerator.script"]], "to_dict() (matflow.inputfilegenerator method)": [[41, "matflow.InputFileGenerator.to_dict"]], "to_json_like() (matflow.inputfilegenerator method)": [[41, "matflow.InputFileGenerator.to_json_like"]], "write_source() (matflow.inputfilegenerator method)": [[41, "matflow.InputFileGenerator.write_source"]], "inputfilegeneratorsource (class in matflow)": [[42, "matflow.InputFileGeneratorSource"]], "app (matflow.inputfilegeneratorsource attribute)": [[42, "matflow.InputFileGeneratorSource.app"]], "contents (matflow.inputfilegeneratorsource property)": [[42, "matflow.InputFileGeneratorSource.contents"]], "extension (matflow.inputfilegeneratorsource property)": [[42, "matflow.InputFileGeneratorSource.extension"]], "from_json_like() (matflow.inputfilegeneratorsource class method)": [[42, "matflow.InputFileGeneratorSource.from_json_like"]], "make_persistent() (matflow.inputfilegeneratorsource method)": [[42, "matflow.InputFileGeneratorSource.make_persistent"]], "path (matflow.inputfilegeneratorsource property)": [[42, "matflow.InputFileGeneratorSource.path"]], "read_contents() (matflow.inputfilegeneratorsource method)": [[42, "matflow.InputFileGeneratorSource.read_contents"]], "store_contents (matflow.inputfilegeneratorsource property)": [[42, "matflow.InputFileGeneratorSource.store_contents"]], "to_dict() (matflow.inputfilegeneratorsource method)": [[42, "matflow.InputFileGeneratorSource.to_dict"]], "to_json_like() (matflow.inputfilegeneratorsource method)": [[42, "matflow.InputFileGeneratorSource.to_json_like"]], "workflow (matflow.inputfilegeneratorsource property)": [[42, "matflow.InputFileGeneratorSource.workflow"]], "inputsource (class in matflow)": [[43, "matflow.InputSource"]], "app (matflow.inputsource attribute)": [[43, "matflow.InputSource.app"]], "default() (matflow.inputsource class method)": [[43, "matflow.InputSource.default"]], "from_json_like() (matflow.inputsource class method)": [[43, "matflow.InputSource.from_json_like"]], "from_string() (matflow.inputsource class method)": [[43, "matflow.InputSource.from_string"]], "get_task() (matflow.inputsource method)": [[43, "matflow.InputSource.get_task"]], "import_() (matflow.inputsource class method)": [[43, "matflow.InputSource.import_"]], "is_in() (matflow.inputsource method)": [[43, "matflow.InputSource.is_in"]], "local() (matflow.inputsource class method)": [[43, "matflow.InputSource.local"]], "task() (matflow.inputsource class method)": [[43, "matflow.InputSource.task"]], "to_dict() (matflow.inputsource method)": [[43, "matflow.InputSource.to_dict"]], "to_json_like() (matflow.inputsource method)": [[43, "matflow.InputSource.to_json_like"]], "to_string() (matflow.inputsource method)": [[43, "matflow.InputSource.to_string"]], "default (matflow.inputsourcetype attribute)": [[44, "matflow.InputSourceType.DEFAULT"]], "import (matflow.inputsourcetype attribute)": [[44, "matflow.InputSourceType.IMPORT"]], "inputsourcetype (class in matflow)": [[44, "matflow.InputSourceType"]], "local (matflow.inputsourcetype attribute)": [[44, "matflow.InputSourceType.LOCAL"]], "task (matflow.inputsourcetype attribute)": [[44, "matflow.InputSourceType.TASK"]], "inputvalue (class in matflow)": [[45, "matflow.InputValue"]], "app (matflow.inputvalue attribute)": [[45, "matflow.InputValue.app"]], "from_json_like() (matflow.inputvalue class method)": [[45, "matflow.InputValue.from_json_like"]], "is_sub_value (matflow.inputvalue property)": [[45, "matflow.InputValue.is_sub_value"]], "labelled_type (matflow.inputvalue property)": [[45, "matflow.InputValue.labelled_type"]], "make_persistent() (matflow.inputvalue method)": [[45, "matflow.InputValue.make_persistent"]], "normalised_inputs_path (matflow.inputvalue property)": [[45, "matflow.InputValue.normalised_inputs_path"]], "normalised_path (matflow.inputvalue property)": [[45, "matflow.InputValue.normalised_path"]], "to_dict() (matflow.inputvalue method)": [[45, "matflow.InputValue.to_dict"]], "to_json_like() (matflow.inputvalue method)": [[45, "matflow.InputValue.to_json_like"]], "value (matflow.inputvalue property)": [[45, "matflow.InputValue.value"]], "workflow (matflow.inputvalue property)": [[45, "matflow.InputValue.workflow"]], "ear_id (matflow.jobscript property)": [[46, "matflow.Jobscript.EAR_ID"]], "ear_id_file_name (matflow.jobscript property)": [[46, "matflow.Jobscript.EAR_ID_file_name"]], "ear_id_file_path (matflow.jobscript property)": [[46, "matflow.Jobscript.EAR_ID_file_path"]], "jobscript (class in matflow)": [[46, "matflow.Jobscript"]], "all_ear_ids (matflow.jobscript property)": [[46, "matflow.Jobscript.all_EAR_IDs"]], "all_ears (matflow.jobscript property)": [[46, "matflow.Jobscript.all_EARs"]], "app (matflow.jobscript attribute)": [[46, "matflow.Jobscript.app"]], "cancel() (matflow.jobscript method)": [[46, "matflow.Jobscript.cancel"]], "compose_jobscript() (matflow.jobscript method)": [[46, "matflow.Jobscript.compose_jobscript"]], "dependencies (matflow.jobscript property)": [[46, "matflow.Jobscript.dependencies"]], "direct_stderr_file_name (matflow.jobscript property)": [[46, "matflow.Jobscript.direct_stderr_file_name"]], "direct_stderr_path (matflow.jobscript property)": [[46, "matflow.Jobscript.direct_stderr_path"]], "direct_stdout_file_name (matflow.jobscript property)": [[46, "matflow.Jobscript.direct_stdout_file_name"]], "direct_stdout_path (matflow.jobscript property)": [[46, "matflow.Jobscript.direct_stdout_path"]], "direct_win_pid_file_name (matflow.jobscript property)": [[46, "matflow.Jobscript.direct_win_pid_file_name"]], "direct_win_pid_file_path (matflow.jobscript property)": [[46, "matflow.Jobscript.direct_win_pid_file_path"]], "element_run_dir_file_name (matflow.jobscript property)": [[46, "matflow.Jobscript.element_run_dir_file_name"]], "element_run_dir_file_path (matflow.jobscript property)": [[46, "matflow.Jobscript.element_run_dir_file_path"]], "end_time (matflow.jobscript property)": [[46, "matflow.Jobscript.end_time"]], "from_json_like() (matflow.jobscript class method)": [[46, "matflow.Jobscript.from_json_like"]], "get_active_states() (matflow.jobscript method)": [[46, "matflow.Jobscript.get_active_states"]], "get_commands_file_name() (matflow.jobscript method)": [[46, "matflow.Jobscript.get_commands_file_name"]], "get_task_loop_idx_array() (matflow.jobscript method)": [[46, "matflow.Jobscript.get_task_loop_idx_array"]], "index (matflow.jobscript property)": [[46, "matflow.Jobscript.index"]], "is_array (matflow.jobscript property)": [[46, "matflow.Jobscript.is_array"]], "is_submitted (matflow.jobscript property)": [[46, "matflow.Jobscript.is_submitted"]], "jobscript_name (matflow.jobscript property)": [[46, "matflow.Jobscript.jobscript_name"]], "jobscript_path (matflow.jobscript property)": [[46, "matflow.Jobscript.jobscript_path"]], "make_artifact_dirs() (matflow.jobscript method)": [[46, "matflow.Jobscript.make_artifact_dirs"]], "num_actions (matflow.jobscript property)": [[46, "matflow.Jobscript.num_actions"]], "num_elements (matflow.jobscript property)": [[46, "matflow.Jobscript.num_elements"]], "os_name (matflow.jobscript property)": [[46, "matflow.Jobscript.os_name"]], "process_id (matflow.jobscript property)": [[46, "matflow.Jobscript.process_ID"]], "resources (matflow.jobscript property)": [[46, "matflow.Jobscript.resources"]], "scheduler (matflow.jobscript property)": [[46, "matflow.Jobscript.scheduler"]], "scheduler_job_id (matflow.jobscript property)": [[46, "matflow.Jobscript.scheduler_job_ID"]], "scheduler_js_ref (matflow.jobscript property)": [[46, "matflow.Jobscript.scheduler_js_ref"]], "scheduler_name (matflow.jobscript property)": [[46, "matflow.Jobscript.scheduler_name"]], "scheduler_ref (matflow.jobscript property)": [[46, "matflow.Jobscript.scheduler_ref"]], "shell (matflow.jobscript property)": [[46, "matflow.Jobscript.shell"]], "shell_name (matflow.jobscript property)": [[46, "matflow.Jobscript.shell_name"]], "start_time (matflow.jobscript property)": [[46, "matflow.Jobscript.start_time"]], "submission (matflow.jobscript property)": [[46, "matflow.Jobscript.submission"]], "submit() (matflow.jobscript method)": [[46, "matflow.Jobscript.submit"]], "submit_cmdline (matflow.jobscript property)": [[46, "matflow.Jobscript.submit_cmdline"]], "submit_hostname (matflow.jobscript property)": [[46, "matflow.Jobscript.submit_hostname"]], "submit_machine (matflow.jobscript property)": [[46, "matflow.Jobscript.submit_machine"]], "submit_time (matflow.jobscript property)": [[46, "matflow.Jobscript.submit_time"]], "task_actions (matflow.jobscript property)": [[46, "matflow.Jobscript.task_actions"]], "task_elements (matflow.jobscript property)": [[46, "matflow.Jobscript.task_elements"]], "task_insert_ids (matflow.jobscript property)": [[46, "matflow.Jobscript.task_insert_IDs"]], "task_loop_idx (matflow.jobscript property)": [[46, "matflow.Jobscript.task_loop_idx"]], "to_dict() (matflow.jobscript method)": [[46, "matflow.Jobscript.to_dict"]], "to_json_like() (matflow.jobscript method)": [[46, "matflow.Jobscript.to_json_like"]], "version_info (matflow.jobscript property)": [[46, "matflow.Jobscript.version_info"]], "workflow (matflow.jobscript property)": [[46, "matflow.Jobscript.workflow"]], "workflow_app_alias (matflow.jobscript property)": [[46, "matflow.Jobscript.workflow_app_alias"]], "write_ear_id_file() (matflow.jobscript method)": [[46, "matflow.Jobscript.write_EAR_ID_file"]], "write_element_run_dir_file() (matflow.jobscript method)": [[46, "matflow.Jobscript.write_element_run_dir_file"]], "write_jobscript() (matflow.jobscript method)": [[46, "matflow.Jobscript.write_jobscript"]], "loop (class in matflow)": [[47, "matflow.Loop"]], "app (matflow.loop attribute)": [[47, "matflow.Loop.app"]], "from_json_like() (matflow.loop class method)": [[47, "matflow.Loop.from_json_like"]], "name (matflow.loop property)": [[47, "matflow.Loop.name"]], "non_iterable_parameters (matflow.loop property)": [[47, "matflow.Loop.non_iterable_parameters"]], "num_iterations (matflow.loop property)": [[47, "matflow.Loop.num_iterations"]], "task_insert_ids (matflow.loop property)": [[47, "matflow.Loop.task_insert_IDs"]], "task_objects (matflow.loop property)": [[47, "matflow.Loop.task_objects"]], "termination (matflow.loop property)": [[47, "matflow.Loop.termination"]], "to_dict() (matflow.loop method)": [[47, "matflow.Loop.to_dict"]], "to_json_like() (matflow.loop method)": [[47, "matflow.Loop.to_json_like"]], "workflow_template (matflow.loop property)": [[47, "matflow.Loop.workflow_template"]], "numcores (class in matflow)": [[48, "matflow.NumCores"]], "app (matflow.numcores attribute)": [[48, "matflow.NumCores.app"]], "from_json_like() (matflow.numcores class method)": [[48, "matflow.NumCores.from_json_like"]], "start (matflow.numcores attribute)": [[48, "matflow.NumCores.start"]], "step (matflow.numcores attribute)": [[48, "matflow.NumCores.step"]], "stop (matflow.numcores attribute)": [[48, "matflow.NumCores.stop"]], "to_dict() (matflow.numcores method)": [[48, "matflow.NumCores.to_dict"]], "to_json_like() (matflow.numcores method)": [[48, "matflow.NumCores.to_json_like"]], "outputfileparser (class in matflow)": [[49, "matflow.OutputFileParser"]], "abortable (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.abortable"]], "app (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.app"]], "clean_up (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.clean_up"]], "compose_source() (matflow.outputfileparser method)": [[49, "matflow.OutputFileParser.compose_source"]], "environment (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.environment"]], "from_json_like() (matflow.outputfileparser class method)": [[49, "matflow.OutputFileParser.from_json_like"]], "inputs (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.inputs"]], "options (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.options"]], "output (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.output"]], "output_files (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.output_files"]], "outputs (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.outputs"]], "save_files (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.save_files"]], "script (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.script"]], "to_dict() (matflow.outputfileparser method)": [[49, "matflow.OutputFileParser.to_dict"]], "to_json_like() (matflow.outputfileparser method)": [[49, "matflow.OutputFileParser.to_json_like"]], "write_source() (matflow.outputfileparser method)": [[49, "matflow.OutputFileParser.write_source"]], "outputfileparsersource (class in matflow)": [[50, "matflow.OutputFileParserSource"]], "app (matflow.outputfileparsersource attribute)": [[50, "matflow.OutputFileParserSource.app"]], "contents (matflow.outputfileparsersource property)": [[50, "matflow.OutputFileParserSource.contents"]], "extension (matflow.outputfileparsersource property)": [[50, "matflow.OutputFileParserSource.extension"]], "from_json_like() (matflow.outputfileparsersource class method)": [[50, "matflow.OutputFileParserSource.from_json_like"]], "make_persistent() (matflow.outputfileparsersource method)": [[50, "matflow.OutputFileParserSource.make_persistent"]], "path (matflow.outputfileparsersource property)": [[50, "matflow.OutputFileParserSource.path"]], "read_contents() (matflow.outputfileparsersource method)": [[50, "matflow.OutputFileParserSource.read_contents"]], "store_contents (matflow.outputfileparsersource property)": [[50, "matflow.OutputFileParserSource.store_contents"]], "to_dict() (matflow.outputfileparsersource method)": [[50, "matflow.OutputFileParserSource.to_dict"]], "to_json_like() (matflow.outputfileparsersource method)": [[50, "matflow.OutputFileParserSource.to_json_like"]], "workflow (matflow.outputfileparsersource property)": [[50, "matflow.OutputFileParserSource.workflow"]], "outputlabel (class in matflow)": [[51, "matflow.OutputLabel"]], "app (matflow.outputlabel attribute)": [[51, "matflow.OutputLabel.app"]], "from_json_like() (matflow.outputlabel class method)": [[51, "matflow.OutputLabel.from_json_like"]], "to_dict() (matflow.outputlabel method)": [[51, "matflow.OutputLabel.to_dict"]], "to_json_like() (matflow.outputlabel method)": [[51, "matflow.OutputLabel.to_json_like"]], "parameter (class in matflow)": [[52, "matflow.Parameter"]], "app (matflow.parameter attribute)": [[52, "matflow.Parameter.app"]], "from_json_like() (matflow.parameter class method)": [[52, "matflow.Parameter.from_json_like"]], "is_file (matflow.parameter attribute)": [[52, "matflow.Parameter.is_file"]], "sub_parameters (matflow.parameter attribute)": [[52, "matflow.Parameter.sub_parameters"]], "to_dict() (matflow.parameter method)": [[52, "matflow.Parameter.to_dict"]], "to_json_like() (matflow.parameter method)": [[52, "matflow.Parameter.to_json_like"]], "typ (matflow.parameter attribute)": [[52, "matflow.Parameter.typ"]], "url_slug (matflow.parameter property)": [[52, "matflow.Parameter.url_slug"]], "parameterpath (class in matflow)": [[53, "matflow.ParameterPath"]], "app (matflow.parameterpath attribute)": [[53, "matflow.ParameterPath.app"]], "from_json_like() (matflow.parameterpath class method)": [[53, "matflow.ParameterPath.from_json_like"]], "path (matflow.parameterpath attribute)": [[53, "matflow.ParameterPath.path"]], "task (matflow.parameterpath attribute)": [[53, "matflow.ParameterPath.task"]], "to_dict() (matflow.parameterpath method)": [[53, "matflow.ParameterPath.to_dict"]], "to_json_like() (matflow.parameterpath method)": [[53, "matflow.ParameterPath.to_json_like"]], "explicit (matflow.parameterpropagationmode attribute)": [[54, "matflow.ParameterPropagationMode.EXPLICIT"]], "implicit (matflow.parameterpropagationmode attribute)": [[54, "matflow.ParameterPropagationMode.IMPLICIT"]], "never (matflow.parameterpropagationmode attribute)": [[54, "matflow.ParameterPropagationMode.NEVER"]], "parameterpropagationmode (class in matflow)": [[54, "matflow.ParameterPropagationMode"]], "parametervalue (class in matflow)": [[55, "matflow.ParameterValue"]], "dump_to_hdf5_group() (matflow.parametervalue method)": [[55, "matflow.ParameterValue.dump_to_HDF5_group"]], "prepare_json_dump() (matflow.parametervalue method)": [[55, "matflow.ParameterValue.prepare_JSON_dump"]], "save_from_hdf5_group() (matflow.parametervalue class method)": [[55, "matflow.ParameterValue.save_from_HDF5_group"]], "save_from_json() (matflow.parametervalue class method)": [[55, "matflow.ParameterValue.save_from_JSON"]], "to_dict() (matflow.parametervalue method)": [[55, "matflow.ParameterValue.to_dict"]], "parameters (class in matflow)": [[56, "matflow.Parameters"]], "default (matflow.parameters attribute)": [[56, "matflow.Parameters.default"]], "path (matflow.parameters attribute)": [[56, "matflow.Parameters.path"]], "raise_on_missing (matflow.parameters attribute)": [[56, "matflow.Parameters.raise_on_missing"]], "raise_on_unset (matflow.parameters attribute)": [[56, "matflow.Parameters.raise_on_unset"]], "return_element_parameters (matflow.parameters attribute)": [[56, "matflow.Parameters.return_element_parameters"]], "task (matflow.parameters attribute)": [[56, "matflow.Parameters.task"]], "parameterslist (class in matflow)": [[57, "matflow.ParametersList"]], "add_object() (matflow.parameterslist method)": [[57, "matflow.ParametersList.add_object"]], "add_objects() (matflow.parameterslist method)": [[57, "matflow.ParametersList.add_objects"]], "from_json_like() (matflow.parameterslist class method)": [[57, "matflow.ParametersList.from_json_like"]], "get() (matflow.parameterslist method)": [[57, "matflow.ParametersList.get"]], "get_all() (matflow.parameterslist method)": [[57, "matflow.ParametersList.get_all"]], "list_attrs() (matflow.parameterslist method)": [[57, "matflow.ParametersList.list_attrs"]], "to_dict() (matflow.parameterslist method)": [[57, "matflow.ParametersList.to_dict"]], "to_json_like() (matflow.parameterslist method)": [[57, "matflow.ParametersList.to_json_like"]], "resourcelist (class in matflow)": [[58, "matflow.ResourceList"]], "add_object() (matflow.resourcelist method)": [[58, "matflow.ResourceList.add_object"]], "element_set (matflow.resourcelist property)": [[58, "matflow.ResourceList.element_set"]], "from_json_like() (matflow.resourcelist class method)": [[58, "matflow.ResourceList.from_json_like"]], "get() (matflow.resourcelist method)": [[58, "matflow.ResourceList.get"]], "get_all() (matflow.resourcelist method)": [[58, "matflow.ResourceList.get_all"]], "get_scopes() (matflow.resourcelist method)": [[58, "matflow.ResourceList.get_scopes"]], "list_attrs() (matflow.resourcelist method)": [[58, "matflow.ResourceList.list_attrs"]], "merge_template_resources() (matflow.resourcelist method)": [[58, "matflow.ResourceList.merge_template_resources"]], "normalise() (matflow.resourcelist class method)": [[58, "matflow.ResourceList.normalise"]], "to_dict() (matflow.resourcelist method)": [[58, "matflow.ResourceList.to_dict"]], "to_json_like() (matflow.resourcelist method)": [[58, "matflow.ResourceList.to_json_like"]], "workflow_template (matflow.resourcelist property)": [[58, "matflow.ResourceList.workflow_template"]], "allowed_parameters (matflow.resourcespec attribute)": [[59, "matflow.ResourceSpec.ALLOWED_PARAMETERS"]], "resourcespec (class in matflow)": [[59, "matflow.ResourceSpec"]], "sge_parallel_env (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.SGE_parallel_env"]], "slurm_num_cpus_per_task (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.SLURM_num_cpus_per_task"]], "slurm_num_nodes (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.SLURM_num_nodes"]], "slurm_num_tasks (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.SLURM_num_tasks"]], "slurm_num_tasks_per_node (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.SLURM_num_tasks_per_node"]], "slurm_partition (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.SLURM_partition"]], "app (matflow.resourcespec attribute)": [[59, "matflow.ResourceSpec.app"]], "copy_non_persistent() (matflow.resourcespec method)": [[59, "matflow.ResourceSpec.copy_non_persistent"]], "element_set (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.element_set"]], "from_json_like() (matflow.resourcespec class method)": [[59, "matflow.ResourceSpec.from_json_like"]], "make_persistent() (matflow.resourcespec method)": [[59, "matflow.ResourceSpec.make_persistent"]], "max_array_items (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.max_array_items"]], "normalised_path (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.normalised_path"]], "normalised_resources_path (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.normalised_resources_path"]], "num_cores (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.num_cores"]], "num_cores_per_node (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.num_cores_per_node"]], "num_nodes (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.num_nodes"]], "num_threads (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.num_threads"]], "os_name (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.os_name"]], "parallel_mode (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.parallel_mode"]], "scheduler (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.scheduler"]], "scheduler_args (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.scheduler_args"]], "scratch (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.scratch"]], "shell (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.shell"]], "shell_args (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.shell_args"]], "time_limit (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.time_limit"]], "to_dict() (matflow.resourcespec method)": [[59, "matflow.ResourceSpec.to_dict"]], "to_json_like() (matflow.resourcespec method)": [[59, "matflow.ResourceSpec.to_json_like"]], "use_job_array (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.use_job_array"]], "workflow (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.workflow"]], "workflow_template (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.workflow_template"]], "rule (class in matflow)": [[60, "matflow.Rule"]], "app (matflow.rule attribute)": [[60, "matflow.Rule.app"]], "from_json_like() (matflow.rule class method)": [[60, "matflow.Rule.from_json_like"]], "test() (matflow.rule method)": [[60, "matflow.Rule.test"]], "to_dict() (matflow.rule method)": [[60, "matflow.Rule.to_dict"]], "to_json_like() (matflow.rule method)": [[60, "matflow.Rule.to_json_like"]], "default_array_item_var (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.DEFAULT_ARRAY_ITEM_VAR"]], "default_array_switch (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.DEFAULT_ARRAY_SWITCH"]], "default_cwd_switch (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.DEFAULT_CWD_SWITCH"]], "default_del_cmd (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.DEFAULT_DEL_CMD"]], "default_js_cmd (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.DEFAULT_JS_CMD"]], "default_login_nodes_cmd (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.DEFAULT_LOGIN_NODES_CMD"]], "default_login_node_match (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.DEFAULT_LOGIN_NODE_MATCH"]], "default_shebang_args (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.DEFAULT_SHELL_ARGS"]], "default_show_cmd (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.DEFAULT_SHOW_CMD"]], "default_submit_cmd (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.DEFAULT_SUBMIT_CMD"]], "sgeposix (class in matflow)": [[61, "matflow.SGEPosix"]], "app (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.app"]], "cancel_jobs() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.cancel_jobs"]], "format_array_request() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.format_array_request"]], "format_core_request_lines() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.format_core_request_lines"]], "format_options() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.format_options"]], "format_std_stream_file_option_lines() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.format_std_stream_file_option_lines"]], "format_switch() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.format_switch"]], "get_job_state_info() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.get_job_state_info"]], "get_job_statuses() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.get_job_statuses"]], "get_login_nodes() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.get_login_nodes"]], "get_submit_command() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.get_submit_command"]], "get_version_info() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.get_version_info"]], "is_jobscript_active() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.sgeposix static method)": [[61, "matflow.SGEPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.parse_submission_output"]], "process_resources() (matflow.sgeposix class method)": [[61, "matflow.SGEPosix.process_resources"]], "state_lookup (matflow.sgeposix attribute)": [[61, "matflow.SGEPosix.state_lookup"]], "wait_for_jobscripts() (matflow.sgeposix method)": [[61, "matflow.SGEPosix.wait_for_jobscripts"]], "schemainput (class in matflow)": [[62, "matflow.SchemaInput"]], "all_labelled_types (matflow.schemainput property)": [[62, "matflow.SchemaInput.all_labelled_types"]], "app (matflow.schemainput attribute)": [[62, "matflow.SchemaInput.app"]], "default_value (matflow.schemainput property)": [[62, "matflow.SchemaInput.default_value"]], "from_json_like() (matflow.schemainput class method)": [[62, "matflow.SchemaInput.from_json_like"]], "input_or_output (matflow.schemainput property)": [[62, "matflow.SchemaInput.input_or_output"]], "labelled_info() (matflow.schemainput method)": [[62, "matflow.SchemaInput.labelled_info"]], "name (matflow.schemainput property)": [[62, "matflow.SchemaInput.name"]], "single_label (matflow.schemainput property)": [[62, "matflow.SchemaInput.single_label"]], "single_labelled_data (matflow.schemainput property)": [[62, "matflow.SchemaInput.single_labelled_data"]], "single_labelled_type (matflow.schemainput property)": [[62, "matflow.SchemaInput.single_labelled_type"]], "task_schema (matflow.schemainput property)": [[62, "matflow.SchemaInput.task_schema"]], "to_dict() (matflow.schemainput method)": [[62, "matflow.SchemaInput.to_dict"]], "to_json_like() (matflow.schemainput method)": [[62, "matflow.SchemaInput.to_json_like"]], "typ (matflow.schemainput property)": [[62, "matflow.SchemaInput.typ"]], "schemaoutput (class in matflow)": [[63, "matflow.SchemaOutput"]], "app (matflow.schemaoutput attribute)": [[63, "matflow.SchemaOutput.app"]], "from_json_like() (matflow.schemaoutput class method)": [[63, "matflow.SchemaOutput.from_json_like"]], "input_or_output (matflow.schemaoutput property)": [[63, "matflow.SchemaOutput.input_or_output"]], "name (matflow.schemaoutput property)": [[63, "matflow.SchemaOutput.name"]], "parameter (matflow.schemaoutput attribute)": [[63, "matflow.SchemaOutput.parameter"]], "propagation_mode (matflow.schemaoutput attribute)": [[63, "matflow.SchemaOutput.propagation_mode"]], "to_dict() (matflow.schemaoutput method)": [[63, "matflow.SchemaOutput.to_dict"]], "to_json_like() (matflow.schemaoutput method)": [[63, "matflow.SchemaOutput.to_json_like"]], "typ (matflow.schemaoutput property)": [[63, "matflow.SchemaOutput.typ"]], "schemaparameter (class in matflow)": [[64, "matflow.SchemaParameter"]], "app (matflow.schemaparameter attribute)": [[64, "matflow.SchemaParameter.app"]], "from_json_like() (matflow.schemaparameter class method)": [[64, "matflow.SchemaParameter.from_json_like"]], "name (matflow.schemaparameter property)": [[64, "matflow.SchemaParameter.name"]], "to_dict() (matflow.schemaparameter method)": [[64, "matflow.SchemaParameter.to_dict"]], "to_json_like() (matflow.schemaparameter method)": [[64, "matflow.SchemaParameter.to_json_like"]], "typ (matflow.schemaparameter property)": [[64, "matflow.SchemaParameter.typ"]], "default_array_item_var (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.DEFAULT_ARRAY_ITEM_VAR"]], "default_array_switch (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.DEFAULT_ARRAY_SWITCH"]], "default_del_cmd (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.DEFAULT_DEL_CMD"]], "default_js_cmd (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.DEFAULT_JS_CMD"]], "default_login_nodes_cmd (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.DEFAULT_LOGIN_NODES_CMD"]], "default_login_node_match (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.DEFAULT_LOGIN_NODE_MATCH"]], "default_shebang_args (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.DEFAULT_SHELL_ARGS"]], "default_shell_executable (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.DEFAULT_SHELL_EXECUTABLE"]], "default_show_cmd (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.DEFAULT_SHOW_CMD"]], "default_submit_cmd (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.DEFAULT_SUBMIT_CMD"]], "slurmposix (class in matflow)": [[65, "matflow.SlurmPosix"]], "app (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.app"]], "cancel_jobs() (matflow.slurmposix method)": [[65, "matflow.SlurmPosix.cancel_jobs"]], "format_array_request() (matflow.slurmposix method)": [[65, "matflow.SlurmPosix.format_array_request"]], "format_core_request_lines() (matflow.slurmposix method)": [[65, "matflow.SlurmPosix.format_core_request_lines"]], "format_options() (matflow.slurmposix method)": [[65, "matflow.SlurmPosix.format_options"]], "format_std_stream_file_option_lines() (matflow.slurmposix method)": [[65, "matflow.SlurmPosix.format_std_stream_file_option_lines"]], "format_switch() (matflow.slurmposix method)": [[65, "matflow.SlurmPosix.format_switch"]], "get_job_state_info() (matflow.slurmposix method)": [[65, "matflow.SlurmPosix.get_job_state_info"]], "get_submit_command() (matflow.slurmposix method)": [[65, "matflow.SlurmPosix.get_submit_command"]], "get_version_info() (matflow.slurmposix method)": [[65, "matflow.SlurmPosix.get_version_info"]], "is_jobscript_active() (matflow.slurmposix method)": [[65, "matflow.SlurmPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.slurmposix static method)": [[65, "matflow.SlurmPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.slurmposix method)": [[65, "matflow.SlurmPosix.parse_submission_output"]], "process_resources() (matflow.slurmposix class method)": [[65, "matflow.SlurmPosix.process_resources"]], "state_lookup (matflow.slurmposix attribute)": [[65, "matflow.SlurmPosix.state_lookup"]], "wait_for_jobscripts() (matflow.slurmposix method)": [[65, "matflow.SlurmPosix.wait_for_jobscripts"]], "subparameter (class in matflow)": [[66, "matflow.SubParameter"]], "address (matflow.subparameter attribute)": [[66, "matflow.SubParameter.address"]], "parameter (matflow.subparameter attribute)": [[66, "matflow.SubParameter.parameter"]], "ears_by_elements (matflow.submission property)": [[67, "matflow.Submission.EARs_by_elements"]], "js_parallelism (matflow.submission property)": [[67, "matflow.Submission.JS_parallelism"]], "submission (class in matflow)": [[67, "matflow.Submission"]], "abort_ears_file_name (matflow.submission property)": [[67, "matflow.Submission.abort_EARs_file_name"]], "abort_ears_file_path (matflow.submission property)": [[67, "matflow.Submission.abort_EARs_file_path"]], "all_ear_ids (matflow.submission property)": [[67, "matflow.Submission.all_EAR_IDs"]], "all_ears (matflow.submission property)": [[67, "matflow.Submission.all_EARs"]], "app (matflow.submission attribute)": [[67, "matflow.Submission.app"]], "cancel() (matflow.submission method)": [[67, "matflow.Submission.cancel"]], "end_time (matflow.submission property)": [[67, "matflow.Submission.end_time"]], "environments (matflow.submission property)": [[67, "matflow.Submission.environments"]], "from_json_like() (matflow.submission class method)": [[67, "matflow.Submission.from_json_like"]], "get_active_jobscripts() (matflow.submission method)": [[67, "matflow.Submission.get_active_jobscripts"]], "get_end_time() (matflow.submission method)": [[67, "matflow.Submission.get_end_time"]], "get_start_time() (matflow.submission method)": [[67, "matflow.Submission.get_start_time"]], "get_unique_schedulers() (matflow.submission method)": [[67, "matflow.Submission.get_unique_schedulers"]], "get_unique_schedulers_of_jobscripts() (matflow.submission static method)": [[67, "matflow.Submission.get_unique_schedulers_of_jobscripts"]], "get_unique_shells() (matflow.submission method)": [[67, "matflow.Submission.get_unique_shells"]], "index (matflow.submission property)": [[67, "matflow.Submission.index"]], "jobscript_indices (matflow.submission property)": [[67, "matflow.Submission.jobscript_indices"]], "jobscripts (matflow.submission property)": [[67, "matflow.Submission.jobscripts"]], "needs_submit (matflow.submission property)": [[67, "matflow.Submission.needs_submit"]], "outstanding_jobscripts (matflow.submission property)": [[67, "matflow.Submission.outstanding_jobscripts"]], "path (matflow.submission property)": [[67, "matflow.Submission.path"]], "start_time (matflow.submission property)": [[67, "matflow.Submission.start_time"]], "status (matflow.submission property)": [[67, "matflow.Submission.status"]], "submission_parts (matflow.submission property)": [[67, "matflow.Submission.submission_parts"]], "submit() (matflow.submission method)": [[67, "matflow.Submission.submit"]], "submitted_jobscripts (matflow.submission property)": [[67, "matflow.Submission.submitted_jobscripts"]], "to_dict() (matflow.submission method)": [[67, "matflow.Submission.to_dict"]], "to_json_like() (matflow.submission method)": [[67, "matflow.Submission.to_json_like"]], "workflow (matflow.submission property)": [[67, "matflow.Submission.workflow"]], "task (class in matflow)": [[68, "matflow.Task"]], "add_group() (matflow.task method)": [[68, "matflow.Task.add_group"]], "all_schema_actions() (matflow.task method)": [[68, "matflow.Task.all_schema_actions"]], "all_schema_input_normalised_paths (matflow.task property)": [[68, "matflow.Task.all_schema_input_normalised_paths"]], "all_schema_input_types (matflow.task property)": [[68, "matflow.Task.all_schema_input_types"]], "all_schema_inputs (matflow.task property)": [[68, "matflow.Task.all_schema_inputs"]], "all_schema_output_types (matflow.task property)": [[68, "matflow.Task.all_schema_output_types"]], "all_schema_outputs (matflow.task property)": [[68, "matflow.Task.all_schema_outputs"]], "all_sourced_normalised_paths (matflow.task property)": [[68, "matflow.Task.all_sourced_normalised_paths"]], "app (matflow.task attribute)": [[68, "matflow.Task.app"]], "defined_input_types (matflow.task property)": [[68, "matflow.Task.defined_input_types"]], "dir_name (matflow.task property)": [[68, "matflow.Task.dir_name"]], "element_sets (matflow.task property)": [[68, "matflow.Task.element_sets"]], "from_json_like() (matflow.task class method)": [[68, "matflow.Task.from_json_like"]], "get_available_task_input_sources() (matflow.task method)": [[68, "matflow.Task.get_available_task_input_sources"]], "get_input_statuses() (matflow.task method)": [[68, "matflow.Task.get_input_statuses"]], "get_param_provided_element_sets() (matflow.task method)": [[68, "matflow.Task.get_param_provided_element_sets"]], "get_schema_action() (matflow.task method)": [[68, "matflow.Task.get_schema_action"]], "get_task_unique_names() (matflow.task static method)": [[68, "matflow.Task.get_task_unique_names"]], "index (matflow.task property)": [[68, "matflow.Task.index"]], "insert_id (matflow.task property)": [[68, "matflow.Task.insert_ID"]], "is_input_type_required() (matflow.task method)": [[68, "matflow.Task.is_input_type_required"]], "name (matflow.task property)": [[68, "matflow.Task.name"]], "non_universal_input_types (matflow.task property)": [[68, "matflow.Task.non_universal_input_types"]], "num_all_schema_actions (matflow.task property)": [[68, "matflow.Task.num_all_schema_actions"]], "num_element_sets (matflow.task property)": [[68, "matflow.Task.num_element_sets"]], "objective (matflow.task property)": [[68, "matflow.Task.objective"]], "output_labels (matflow.task property)": [[68, "matflow.Task.output_labels"]], "prepare_element_resolution() (matflow.task method)": [[68, "matflow.Task.prepare_element_resolution"]], "provides_parameters() (matflow.task method)": [[68, "matflow.Task.provides_parameters"]], "schema (matflow.task property)": [[68, "matflow.Task.schema"]], "schemas (matflow.task property)": [[68, "matflow.Task.schemas"]], "set_sequence_parameters() (matflow.task method)": [[68, "matflow.Task.set_sequence_parameters"]], "to_dict() (matflow.task method)": [[68, "matflow.Task.to_dict"]], "to_json_like() (matflow.task method)": [[68, "matflow.Task.to_json_like"]], "to_persistent() (matflow.task method)": [[68, "matflow.Task.to_persistent"]], "undefined_input_types (matflow.task property)": [[68, "matflow.Task.undefined_input_types"]], "undefined_inputs (matflow.task property)": [[68, "matflow.Task.undefined_inputs"]], "universal_input_types (matflow.task property)": [[68, "matflow.Task.universal_input_types"]], "taskinputparameters (class in matflow)": [[69, "matflow.TaskInputParameters"]], "task (matflow.taskinputparameters attribute)": [[69, "matflow.TaskInputParameters.task"]], "tasklist (class in matflow)": [[70, "matflow.TaskList"]], "add_object() (matflow.tasklist method)": [[70, "matflow.TaskList.add_object"]], "add_objects() (matflow.tasklist method)": [[70, "matflow.TaskList.add_objects"]], "from_json_like() (matflow.tasklist class method)": [[70, "matflow.TaskList.from_json_like"]], "get() (matflow.tasklist method)": [[70, "matflow.TaskList.get"]], "get_all() (matflow.tasklist method)": [[70, "matflow.TaskList.get_all"]], "list_attrs() (matflow.tasklist method)": [[70, "matflow.TaskList.list_attrs"]], "to_dict() (matflow.tasklist method)": [[70, "matflow.TaskList.to_dict"]], "to_json_like() (matflow.tasklist method)": [[70, "matflow.TaskList.to_json_like"]], "taskobjective (class in matflow)": [[71, "matflow.TaskObjective"]], "app (matflow.taskobjective attribute)": [[71, "matflow.TaskObjective.app"]], "from_json_like() (matflow.taskobjective class method)": [[71, "matflow.TaskObjective.from_json_like"]], "name (matflow.taskobjective attribute)": [[71, "matflow.TaskObjective.name"]], "to_dict() (matflow.taskobjective method)": [[71, "matflow.TaskObjective.to_dict"]], "to_json_like() (matflow.taskobjective method)": [[71, "matflow.TaskObjective.to_json_like"]], "taskoutputparameters (class in matflow)": [[72, "matflow.TaskOutputParameters"]], "task (matflow.taskoutputparameters attribute)": [[72, "matflow.TaskOutputParameters.task"]], "taskschema (class in matflow)": [[73, "matflow.TaskSchema"]], "app (matflow.taskschema attribute)": [[73, "matflow.TaskSchema.app"]], "basic_info (matflow.taskschema property)": [[73, "matflow.TaskSchema.basic_info"]], "from_json_like() (matflow.taskschema class method)": [[73, "matflow.TaskSchema.from_json_like"]], "get_by_key() (matflow.taskschema class method)": [[73, "matflow.TaskSchema.get_by_key"]], "get_key() (matflow.taskschema method)": [[73, "matflow.TaskSchema.get_key"]], "get_parameter_dependence() (matflow.taskschema method)": [[73, "matflow.TaskSchema.get_parameter_dependence"]], "ignore_invalid_actions() (matflow.taskschema class method)": [[73, "matflow.TaskSchema.ignore_invalid_actions"]], "info (matflow.taskschema property)": [[73, "matflow.TaskSchema.info"]], "input_types (matflow.taskschema property)": [[73, "matflow.TaskSchema.input_types"]], "make_persistent() (matflow.taskschema method)": [[73, "matflow.TaskSchema.make_persistent"]], "multi_input_types (matflow.taskschema property)": [[73, "matflow.TaskSchema.multi_input_types"]], "name (matflow.taskschema property)": [[73, "matflow.TaskSchema.name"]], "output_types (matflow.taskschema property)": [[73, "matflow.TaskSchema.output_types"]], "provides_parameters (matflow.taskschema property)": [[73, "matflow.TaskSchema.provides_parameters"]], "task_template (matflow.taskschema property)": [[73, "matflow.TaskSchema.task_template"]], "to_dict() (matflow.taskschema method)": [[73, "matflow.TaskSchema.to_dict"]], "to_json_like() (matflow.taskschema method)": [[73, "matflow.TaskSchema.to_json_like"]], "taskschemaslist (class in matflow)": [[74, "matflow.TaskSchemasList"]], "add_object() (matflow.taskschemaslist method)": [[74, "matflow.TaskSchemasList.add_object"]], "add_objects() (matflow.taskschemaslist method)": [[74, "matflow.TaskSchemasList.add_objects"]], "from_json_like() (matflow.taskschemaslist class method)": [[74, "matflow.TaskSchemasList.from_json_like"]], "get() (matflow.taskschemaslist method)": [[74, "matflow.TaskSchemasList.get"]], "get_all() (matflow.taskschemaslist method)": [[74, "matflow.TaskSchemasList.get_all"]], "list_attrs() (matflow.taskschemaslist method)": [[74, "matflow.TaskSchemasList.list_attrs"]], "to_dict() (matflow.taskschemaslist method)": [[74, "matflow.TaskSchemasList.to_dict"]], "to_json_like() (matflow.taskschemaslist method)": [[74, "matflow.TaskSchemasList.to_json_like"]], "any (matflow.tasksourcetype attribute)": [[75, "matflow.TaskSourceType.ANY"]], "input (matflow.tasksourcetype attribute)": [[75, "matflow.TaskSourceType.INPUT"]], "output (matflow.tasksourcetype attribute)": [[75, "matflow.TaskSourceType.OUTPUT"]], "tasksourcetype (class in matflow)": [[75, "matflow.TaskSourceType"]], "tasktemplatelist (class in matflow)": [[76, "matflow.TaskTemplateList"]], "add_object() (matflow.tasktemplatelist method)": [[76, "matflow.TaskTemplateList.add_object"]], "add_objects() (matflow.tasktemplatelist method)": [[76, "matflow.TaskTemplateList.add_objects"]], "from_json_like() (matflow.tasktemplatelist class method)": [[76, "matflow.TaskTemplateList.from_json_like"]], "get() (matflow.tasktemplatelist method)": [[76, "matflow.TaskTemplateList.get"]], "get_all() (matflow.tasktemplatelist method)": [[76, "matflow.TaskTemplateList.get_all"]], "list_attrs() (matflow.tasktemplatelist method)": [[76, "matflow.TaskTemplateList.list_attrs"]], "to_dict() (matflow.tasktemplatelist method)": [[76, "matflow.TaskTemplateList.to_dict"]], "to_json_like() (matflow.tasktemplatelist method)": [[76, "matflow.TaskTemplateList.to_json_like"]], "valueperturbation (class in matflow)": [[77, "matflow.ValuePerturbation"]], "additive_factor (matflow.valueperturbation attribute)": [[77, "matflow.ValuePerturbation.additive_factor"]], "app (matflow.valueperturbation attribute)": [[77, "matflow.ValuePerturbation.app"]], "from_json_like() (matflow.valueperturbation class method)": [[77, "matflow.ValuePerturbation.from_json_like"]], "from_spec() (matflow.valueperturbation class method)": [[77, "matflow.ValuePerturbation.from_spec"]], "make_persistent() (matflow.valueperturbation method)": [[77, "matflow.ValuePerturbation.make_persistent"]], "multiplicative_factor (matflow.valueperturbation attribute)": [[77, "matflow.ValuePerturbation.multiplicative_factor"]], "name (matflow.valueperturbation attribute)": [[77, "matflow.ValuePerturbation.name"]], "path (matflow.valueperturbation attribute)": [[77, "matflow.ValuePerturbation.path"]], "to_dict() (matflow.valueperturbation method)": [[77, "matflow.ValuePerturbation.to_dict"]], "to_json_like() (matflow.valueperturbation method)": [[77, "matflow.ValuePerturbation.to_json_like"]], "value (matflow.valueperturbation property)": [[77, "matflow.ValuePerturbation.value"]], "workflow (matflow.valueperturbation property)": [[77, "matflow.ValuePerturbation.workflow"]], "valuesequence (class in matflow)": [[78, "matflow.ValueSequence"]], "app (matflow.valuesequence attribute)": [[78, "matflow.ValueSequence.app"]], "from_file() (matflow.valuesequence class method)": [[78, "matflow.ValueSequence.from_file"]], "from_geometric_space() (matflow.valuesequence class method)": [[78, "matflow.ValueSequence.from_geometric_space"]], "from_json_like() (matflow.valuesequence class method)": [[78, "matflow.ValueSequence.from_json_like"]], "from_linear_space() (matflow.valuesequence class method)": [[78, "matflow.ValueSequence.from_linear_space"]], "from_log_space() (matflow.valuesequence class method)": [[78, "matflow.ValueSequence.from_log_space"]], "from_range() (matflow.valuesequence class method)": [[78, "matflow.ValueSequence.from_range"]], "from_rectangle() (matflow.valuesequence class method)": [[78, "matflow.ValueSequence.from_rectangle"]], "input_path (matflow.valuesequence property)": [[78, "matflow.ValueSequence.input_path"]], "input_type (matflow.valuesequence property)": [[78, "matflow.ValueSequence.input_type"]], "is_sub_value (matflow.valuesequence property)": [[78, "matflow.ValueSequence.is_sub_value"]], "labelled_type (matflow.valuesequence property)": [[78, "matflow.ValueSequence.labelled_type"]], "make_persistent() (matflow.valuesequence method)": [[78, "matflow.ValueSequence.make_persistent"]], "normalised_inputs_path (matflow.valuesequence property)": [[78, "matflow.ValueSequence.normalised_inputs_path"]], "normalised_path (matflow.valuesequence property)": [[78, "matflow.ValueSequence.normalised_path"]], "parameter (matflow.valuesequence property)": [[78, "matflow.ValueSequence.parameter"]], "path_split (matflow.valuesequence property)": [[78, "matflow.ValueSequence.path_split"]], "path_type (matflow.valuesequence property)": [[78, "matflow.ValueSequence.path_type"]], "resource_scope (matflow.valuesequence property)": [[78, "matflow.ValueSequence.resource_scope"]], "to_dict() (matflow.valuesequence method)": [[78, "matflow.ValueSequence.to_dict"]], "to_json_like() (matflow.valuesequence method)": [[78, "matflow.ValueSequence.to_json_like"]], "values (matflow.valuesequence property)": [[78, "matflow.ValueSequence.values"]], "workflow (matflow.valuesequence property)": [[78, "matflow.ValueSequence.workflow"]], "workflow (class in matflow)": [[79, "matflow.Workflow"]], "abort_run() (matflow.workflow method)": [[79, "matflow.Workflow.abort_run"]], "add_loop() (matflow.workflow method)": [[79, "matflow.Workflow.add_loop"]], "add_submission() (matflow.workflow method)": [[79, "matflow.Workflow.add_submission"]], "add_task() (matflow.workflow method)": [[79, "matflow.Workflow.add_task"]], "add_task_after() (matflow.workflow method)": [[79, "matflow.Workflow.add_task_after"]], "add_task_before() (matflow.workflow method)": [[79, "matflow.Workflow.add_task_before"]], "app (matflow.workflow attribute)": [[79, "matflow.Workflow.app"]], "artifacts_path (matflow.workflow property)": [[79, "matflow.Workflow.artifacts_path"]], "batch_update() (matflow.workflow method)": [[79, "matflow.Workflow.batch_update"]], "cancel() (matflow.workflow method)": [[79, "matflow.Workflow.cancel"]], "check_loop_termination() (matflow.workflow method)": [[79, "matflow.Workflow.check_loop_termination"]], "check_parameters_exist() (matflow.workflow method)": [[79, "matflow.Workflow.check_parameters_exist"]], "copy() (matflow.workflow method)": [[79, "matflow.Workflow.copy"]], "creation_info (matflow.workflow property)": [[79, "matflow.Workflow.creation_info"]], "delete() (matflow.workflow method)": [[79, "matflow.Workflow.delete"]], "elements() (matflow.workflow method)": [[79, "matflow.Workflow.elements"]], "execution_path (matflow.workflow property)": [[79, "matflow.Workflow.execution_path"]], "from_json_file() (matflow.workflow class method)": [[79, "matflow.Workflow.from_JSON_file"]], "from_json_string() (matflow.workflow class method)": [[79, "matflow.Workflow.from_JSON_string"]], "from_yaml_file() (matflow.workflow class method)": [[79, "matflow.Workflow.from_YAML_file"]], "from_yaml_string() (matflow.workflow class method)": [[79, "matflow.Workflow.from_YAML_string"]], "from_file() (matflow.workflow class method)": [[79, "matflow.Workflow.from_file"]], "from_template() (matflow.workflow class method)": [[79, "matflow.Workflow.from_template"]], "from_template_data() (matflow.workflow class method)": [[79, "matflow.Workflow.from_template_data"]], "fs_path (matflow.workflow property)": [[79, "matflow.Workflow.fs_path"]], "get_ear_ids_of_tasks() (matflow.workflow method)": [[79, "matflow.Workflow.get_EAR_IDs_of_tasks"]], "get_ear_skipped() (matflow.workflow method)": [[79, "matflow.Workflow.get_EAR_skipped"]], "get_ears_from_ids() (matflow.workflow method)": [[79, "matflow.Workflow.get_EARs_from_IDs"]], "get_ears_of_tasks() (matflow.workflow method)": [[79, "matflow.Workflow.get_EARs_of_tasks"]], "get_all_ears() (matflow.workflow method)": [[79, "matflow.Workflow.get_all_EARs"]], "get_all_element_iterations() (matflow.workflow method)": [[79, "matflow.Workflow.get_all_element_iterations"]], "get_all_elements() (matflow.workflow method)": [[79, "matflow.Workflow.get_all_elements"]], "get_all_parameter_data() (matflow.workflow method)": [[79, "matflow.Workflow.get_all_parameter_data"]], "get_all_parameters() (matflow.workflow method)": [[79, "matflow.Workflow.get_all_parameters"]], "get_all_submission_run_ids() (matflow.workflow method)": [[79, "matflow.Workflow.get_all_submission_run_IDs"]], "get_element_ids_from_ear_ids() (matflow.workflow method)": [[79, "matflow.Workflow.get_element_IDs_from_EAR_IDs"]], "get_element_iteration_ids_from_ear_ids() (matflow.workflow method)": [[79, "matflow.Workflow.get_element_iteration_IDs_from_EAR_IDs"]], "get_element_iterations_from_ids() (matflow.workflow method)": [[79, "matflow.Workflow.get_element_iterations_from_IDs"]], "get_element_iterations_of_tasks() (matflow.workflow method)": [[79, "matflow.Workflow.get_element_iterations_of_tasks"]], "get_elements_from_ids() (matflow.workflow method)": [[79, "matflow.Workflow.get_elements_from_IDs"]], "get_iteration_final_run_ids() (matflow.workflow method)": [[79, "matflow.Workflow.get_iteration_final_run_IDs"]], "get_iteration_task_pathway() (matflow.workflow method)": [[79, "matflow.Workflow.get_iteration_task_pathway"]], "get_loop_map() (matflow.workflow method)": [[79, "matflow.Workflow.get_loop_map"]], "get_parameter() (matflow.workflow method)": [[79, "matflow.Workflow.get_parameter"]], "get_parameter_data() (matflow.workflow method)": [[79, "matflow.Workflow.get_parameter_data"]], "get_parameter_set_statuses() (matflow.workflow method)": [[79, "matflow.Workflow.get_parameter_set_statuses"]], "get_parameter_source() (matflow.workflow method)": [[79, "matflow.Workflow.get_parameter_source"]], "get_parameter_sources() (matflow.workflow method)": [[79, "matflow.Workflow.get_parameter_sources"]], "get_parameters() (matflow.workflow method)": [[79, "matflow.Workflow.get_parameters"]], "get_running_elements() (matflow.workflow method)": [[79, "matflow.Workflow.get_running_elements"]], "get_running_runs() (matflow.workflow method)": [[79, "matflow.Workflow.get_running_runs"]], "get_store_ears() (matflow.workflow method)": [[79, "matflow.Workflow.get_store_EARs"]], "get_store_element_iterations() (matflow.workflow method)": [[79, "matflow.Workflow.get_store_element_iterations"]], "get_store_elements() (matflow.workflow method)": [[79, "matflow.Workflow.get_store_elements"]], "get_store_tasks() (matflow.workflow method)": [[79, "matflow.Workflow.get_store_tasks"]], "get_task_ids_from_element_ids() (matflow.workflow method)": [[79, "matflow.Workflow.get_task_IDs_from_element_IDs"]], "get_task_elements() (matflow.workflow method)": [[79, "matflow.Workflow.get_task_elements"]], "get_task_unique_names() (matflow.workflow method)": [[79, "matflow.Workflow.get_task_unique_names"]], "id_ (matflow.workflow property)": [[79, "matflow.Workflow.id_"]], "input_files_path (matflow.workflow property)": [[79, "matflow.Workflow.input_files_path"]], "is_parameter_set() (matflow.workflow method)": [[79, "matflow.Workflow.is_parameter_set"]], "loops (matflow.workflow property)": [[79, "matflow.Workflow.loops"]], "name (matflow.workflow property)": [[79, "matflow.Workflow.name"]], "num_ears (matflow.workflow property)": [[79, "matflow.Workflow.num_EARs"]], "num_added_tasks (matflow.workflow property)": [[79, "matflow.Workflow.num_added_tasks"]], "num_element_iterations (matflow.workflow property)": [[79, "matflow.Workflow.num_element_iterations"]], "num_elements (matflow.workflow property)": [[79, "matflow.Workflow.num_elements"]], "num_loops (matflow.workflow property)": [[79, "matflow.Workflow.num_loops"]], "num_submissions (matflow.workflow property)": [[79, "matflow.Workflow.num_submissions"]], "num_tasks (matflow.workflow property)": [[79, "matflow.Workflow.num_tasks"]], "process_shell_parameter_output() (matflow.workflow method)": [[79, "matflow.Workflow.process_shell_parameter_output"]], "reload() (matflow.workflow method)": [[79, "matflow.Workflow.reload"]], "resolve_jobscripts() (matflow.workflow method)": [[79, "matflow.Workflow.resolve_jobscripts"]], "save_parameter() (matflow.workflow method)": [[79, "matflow.Workflow.save_parameter"]], "set_ear_end() (matflow.workflow method)": [[79, "matflow.Workflow.set_EAR_end"]], "set_ear_skip() (matflow.workflow method)": [[79, "matflow.Workflow.set_EAR_skip"]], "set_ear_start() (matflow.workflow method)": [[79, "matflow.Workflow.set_EAR_start"]], "set_ear_submission_index() (matflow.workflow method)": [[79, "matflow.Workflow.set_EAR_submission_index"]], "set_ears_initialised() (matflow.workflow method)": [[79, "matflow.Workflow.set_EARs_initialised"]], "set_parameter_value() (matflow.workflow method)": [[79, "matflow.Workflow.set_parameter_value"]], "show_all_ear_statuses() (matflow.workflow method)": [[79, "matflow.Workflow.show_all_EAR_statuses"]], "store_format (matflow.workflow property)": [[79, "matflow.Workflow.store_format"]], "submissions (matflow.workflow property)": [[79, "matflow.Workflow.submissions"]], "submissions_path (matflow.workflow property)": [[79, "matflow.Workflow.submissions_path"]], "submit() (matflow.workflow method)": [[79, "matflow.Workflow.submit"]], "task_artifacts_path (matflow.workflow property)": [[79, "matflow.Workflow.task_artifacts_path"]], "tasks (matflow.workflow property)": [[79, "matflow.Workflow.tasks"]], "template (matflow.workflow property)": [[79, "matflow.Workflow.template"]], "template_components (matflow.workflow property)": [[79, "matflow.Workflow.template_components"]], "temporary_rename() (matflow.workflow class method)": [[79, "matflow.Workflow.temporary_rename"]], "ts_fmt (matflow.workflow property)": [[79, "matflow.Workflow.ts_fmt"]], "ts_name_fmt (matflow.workflow property)": [[79, "matflow.Workflow.ts_name_fmt"]], "unzip() (matflow.workflow method)": [[79, "matflow.Workflow.unzip"]], "wait() (matflow.workflow method)": [[79, "matflow.Workflow.wait"]], "write_commands() (matflow.workflow method)": [[79, "matflow.Workflow.write_commands"]], "zip() (matflow.workflow method)": [[79, "matflow.Workflow.zip"]], "workflowblueprint (class in matflow)": [[80, "matflow.WorkflowBlueprint"]], "workflow_template (matflow.workflowblueprint attribute)": [[80, "matflow.WorkflowBlueprint.workflow_template"]], "workflowloop (class in matflow)": [[81, "matflow.WorkflowLoop"]], "add_iteration() (matflow.workflowloop method)": [[81, "matflow.WorkflowLoop.add_iteration"]], "app (matflow.workflowloop attribute)": [[81, "matflow.WorkflowLoop.app"]], "get_child_loops() (matflow.workflowloop method)": [[81, "matflow.WorkflowLoop.get_child_loops"]], "get_parent_loops() (matflow.workflowloop method)": [[81, "matflow.WorkflowLoop.get_parent_loops"]], "index (matflow.workflowloop property)": [[81, "matflow.WorkflowLoop.index"]], "iterable_parameters (matflow.workflowloop property)": [[81, "matflow.WorkflowLoop.iterable_parameters"]], "name (matflow.workflowloop property)": [[81, "matflow.WorkflowLoop.name"]], "new_empty_loop() (matflow.workflowloop class method)": [[81, "matflow.WorkflowLoop.new_empty_loop"]], "num_added_iterations (matflow.workflowloop property)": [[81, "matflow.WorkflowLoop.num_added_iterations"]], "num_iterations (matflow.workflowloop property)": [[81, "matflow.WorkflowLoop.num_iterations"]], "task_indices (matflow.workflowloop property)": [[81, "matflow.WorkflowLoop.task_indices"]], "task_insert_ids (matflow.workflowloop property)": [[81, "matflow.WorkflowLoop.task_insert_IDs"]], "task_objects (matflow.workflowloop property)": [[81, "matflow.WorkflowLoop.task_objects"]], "template (matflow.workflowloop property)": [[81, "matflow.WorkflowLoop.template"]], "test_termination() (matflow.workflowloop method)": [[81, "matflow.WorkflowLoop.test_termination"]], "workflow (matflow.workflowloop property)": [[81, "matflow.WorkflowLoop.workflow"]], "workflowlooplist (class in matflow)": [[82, "matflow.WorkflowLoopList"]], "add_object() (matflow.workflowlooplist method)": [[82, "matflow.WorkflowLoopList.add_object"]], "add_objects() (matflow.workflowlooplist method)": [[82, "matflow.WorkflowLoopList.add_objects"]], "app (matflow.workflowlooplist attribute)": [[82, "matflow.WorkflowLoopList.app"]], "from_json_like() (matflow.workflowlooplist class method)": [[82, "matflow.WorkflowLoopList.from_json_like"]], "get() (matflow.workflowlooplist method)": [[82, "matflow.WorkflowLoopList.get"]], "get_all() (matflow.workflowlooplist method)": [[82, "matflow.WorkflowLoopList.get_all"]], "list_attrs() (matflow.workflowlooplist method)": [[82, "matflow.WorkflowLoopList.list_attrs"]], "to_dict() (matflow.workflowlooplist method)": [[82, "matflow.WorkflowLoopList.to_dict"]], "to_json_like() (matflow.workflowlooplist method)": [[82, "matflow.WorkflowLoopList.to_json_like"]], "workflowtask (class in matflow)": [[83, "matflow.WorkflowTask"]], "add_elements() (matflow.workflowtask method)": [[83, "matflow.WorkflowTask.add_elements"]], "app (matflow.workflowtask attribute)": [[83, "matflow.WorkflowTask.app"]], "dir_name (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.dir_name"]], "downstream_tasks (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.downstream_tasks"]], "element_ids (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.element_IDs"]], "elements (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.elements"]], "ensure_input_sources() (matflow.workflowtask method)": [[83, "matflow.WorkflowTask.ensure_input_sources"]], "generate_new_elements() (matflow.workflowtask method)": [[83, "matflow.WorkflowTask.generate_new_elements"]], "get() (matflow.workflowtask method)": [[83, "matflow.WorkflowTask.get"]], "get_all_element_iterations() (matflow.workflowtask method)": [[83, "matflow.WorkflowTask.get_all_element_iterations"]], "get_dependent_elements() (matflow.workflowtask method)": [[83, "matflow.WorkflowTask.get_dependent_elements"]], "get_dependent_tasks() (matflow.workflowtask method)": [[83, "matflow.WorkflowTask.get_dependent_tasks"]], "get_dir_name() (matflow.workflowtask method)": [[83, "matflow.WorkflowTask.get_dir_name"]], "get_element_dependencies() (matflow.workflowtask method)": [[83, "matflow.WorkflowTask.get_element_dependencies"]], "get_task_dependencies() (matflow.workflowtask method)": [[83, "matflow.WorkflowTask.get_task_dependencies"]], "index (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.index"]], "initialise_ears() (matflow.workflowtask method)": [[83, "matflow.WorkflowTask.initialise_EARs"]], "inputs (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.inputs"]], "insert_id (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.insert_ID"]], "name (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.name"]], "new_empty_task() (matflow.workflowtask class method)": [[83, "matflow.WorkflowTask.new_empty_task"]], "num_actions (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.num_actions"]], "num_element_sets (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.num_element_sets"]], "num_elements (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.num_elements"]], "outputs (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.outputs"]], "resolve_element_data_indices() (matflow.workflowtask static method)": [[83, "matflow.WorkflowTask.resolve_element_data_indices"]], "template (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.template"]], "unique_name (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.unique_name"]], "upstream_tasks (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.upstream_tasks"]], "workflow (matflow.workflowtask property)": [[83, "matflow.WorkflowTask.workflow"]], "workflowtasklist (class in matflow)": [[84, "matflow.WorkflowTaskList"]], "add_object() (matflow.workflowtasklist method)": [[84, "matflow.WorkflowTaskList.add_object"]], "add_objects() (matflow.workflowtasklist method)": [[84, "matflow.WorkflowTaskList.add_objects"]], "app (matflow.workflowtasklist attribute)": [[84, "matflow.WorkflowTaskList.app"]], "from_json_like() (matflow.workflowtasklist class method)": [[84, "matflow.WorkflowTaskList.from_json_like"]], "get() (matflow.workflowtasklist method)": [[84, "matflow.WorkflowTaskList.get"]], "get_all() (matflow.workflowtasklist method)": [[84, "matflow.WorkflowTaskList.get_all"]], "list_attrs() (matflow.workflowtasklist method)": [[84, "matflow.WorkflowTaskList.list_attrs"]], "to_dict() (matflow.workflowtasklist method)": [[84, "matflow.WorkflowTaskList.to_dict"]], "to_json_like() (matflow.workflowtasklist method)": [[84, "matflow.WorkflowTaskList.to_json_like"]], "workflowtemplate (class in matflow)": [[85, "matflow.WorkflowTemplate"]], "app (matflow.workflowtemplate attribute)": [[85, "matflow.WorkflowTemplate.app"]], "doc (matflow.workflowtemplate attribute)": [[85, "matflow.WorkflowTemplate.doc"]], "from_json_file() (matflow.workflowtemplate class method)": [[85, "matflow.WorkflowTemplate.from_JSON_file"]], "from_json_string() (matflow.workflowtemplate class method)": [[85, "matflow.WorkflowTemplate.from_JSON_string"]], "from_yaml_file() (matflow.workflowtemplate class method)": [[85, "matflow.WorkflowTemplate.from_YAML_file"]], "from_yaml_string() (matflow.workflowtemplate class method)": [[85, "matflow.WorkflowTemplate.from_YAML_string"]], "from_file() (matflow.workflowtemplate class method)": [[85, "matflow.WorkflowTemplate.from_file"]], "from_json_like() (matflow.workflowtemplate class method)": [[85, "matflow.WorkflowTemplate.from_json_like"]], "loops (matflow.workflowtemplate attribute)": [[85, "matflow.WorkflowTemplate.loops"]], "merge_resources (matflow.workflowtemplate attribute)": [[85, "matflow.WorkflowTemplate.merge_resources"]], "name (matflow.workflowtemplate attribute)": [[85, "matflow.WorkflowTemplate.name"]], "resources (matflow.workflowtemplate attribute)": [[85, "matflow.WorkflowTemplate.resources"]], "source_file (matflow.workflowtemplate attribute)": [[85, "matflow.WorkflowTemplate.source_file"]], "store_kwargs (matflow.workflowtemplate attribute)": [[85, "matflow.WorkflowTemplate.store_kwargs"]], "tasks (matflow.workflowtemplate attribute)": [[85, "matflow.WorkflowTemplate.tasks"]], "to_dict() (matflow.workflowtemplate method)": [[85, "matflow.WorkflowTemplate.to_dict"]], "to_json_like() (matflow.workflowtemplate method)": [[85, "matflow.WorkflowTemplate.to_json_like"]], "workflow (matflow.workflowtemplate attribute)": [[85, "matflow.WorkflowTemplate.workflow"]], "app (in module matflow)": [[86, "matflow.app"]], "cancel() (in module matflow)": [[87, "matflow.cancel"]], "matflow.cli": [[88, "module-matflow.cli"]], "get_os_info() (in module matflow)": [[89, "matflow.get_OS_info"]], "get_known_submissions() (in module matflow)": [[90, "matflow.get_known_submissions"]], "get_shell_info() (in module matflow)": [[91, "matflow.get_shell_info"]], "make_and_submit_demo_workflow() (in module matflow)": [[92, "matflow.make_and_submit_demo_workflow"]], "make_and_submit_workflow() (in module matflow)": [[93, "matflow.make_and_submit_workflow"]], "make_demo_workflow() (in module matflow)": [[94, "matflow.make_demo_workflow"]], "make_workflow() (in module matflow)": [[95, "matflow.make_workflow"]], "matflow.param_classes": [[96, "module-matflow.param_classes"]], "matflow.param_classes.load": [[97, "module-matflow.param_classes.load"]], "loadcase (class in matflow.param_classes.load)": [[98, "matflow.param_classes.load.LoadCase"]], "biaxial() (matflow.param_classes.load.loadcase class method)": [[98, "matflow.param_classes.load.LoadCase.biaxial"]], "dump_to_hdf5_group() (matflow.param_classes.load.loadcase method)": [[98, "matflow.param_classes.load.LoadCase.dump_to_HDF5_group"]], "example_uniaxial() (matflow.param_classes.load.loadcase class method)": [[98, "matflow.param_classes.load.LoadCase.example_uniaxial"]], "multistep() (matflow.param_classes.load.loadcase class method)": [[98, "matflow.param_classes.load.LoadCase.multistep"]], "num_steps (matflow.param_classes.load.loadcase property)": [[98, "matflow.param_classes.load.LoadCase.num_steps"]], "planar_2d() (matflow.param_classes.load.loadcase class method)": [[98, "matflow.param_classes.load.LoadCase.planar_2D"]], "plane_strain() (matflow.param_classes.load.loadcase class method)": [[98, "matflow.param_classes.load.LoadCase.plane_strain"]], "prepare_json_dump() (matflow.param_classes.load.loadcase method)": [[98, "matflow.param_classes.load.LoadCase.prepare_JSON_dump"]], "random_2d() (matflow.param_classes.load.loadcase class method)": [[98, "matflow.param_classes.load.LoadCase.random_2D"]], "random_3d() (matflow.param_classes.load.loadcase class method)": [[98, "matflow.param_classes.load.LoadCase.random_3D"]], "save_from_hdf5_group() (matflow.param_classes.load.loadcase class method)": [[98, "matflow.param_classes.load.LoadCase.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.load.loadcase class method)": [[98, "matflow.param_classes.load.LoadCase.save_from_JSON"]], "steps (matflow.param_classes.load.loadcase attribute)": [[98, "matflow.param_classes.load.LoadCase.steps"]], "to_dict() (matflow.param_classes.load.loadcase method)": [[98, "matflow.param_classes.load.LoadCase.to_dict"]], "type (matflow.param_classes.load.loadcase property)": [[98, "matflow.param_classes.load.LoadCase.type"]], "types (matflow.param_classes.load.loadcase property)": [[98, "matflow.param_classes.load.LoadCase.types"]], "uniaxial() (matflow.param_classes.load.loadcase class method)": [[98, "matflow.param_classes.load.LoadCase.uniaxial"]], "uniaxial_cyclic() (matflow.param_classes.load.loadcase class method)": [[98, "matflow.param_classes.load.LoadCase.uniaxial_cyclic"]], "loadstep (class in matflow.param_classes.load)": [[99, "matflow.param_classes.load.LoadStep"]], "biaxial() (matflow.param_classes.load.loadstep class method)": [[99, "matflow.param_classes.load.LoadStep.biaxial"]], "dump_to_hdf5_group() (matflow.param_classes.load.loadstep method)": [[99, "matflow.param_classes.load.LoadStep.dump_to_HDF5_group"]], "example_uniaxial() (matflow.param_classes.load.loadstep class method)": [[99, "matflow.param_classes.load.LoadStep.example_uniaxial"]], "method_args (matflow.param_classes.load.loadstep property)": [[99, "matflow.param_classes.load.LoadStep.method_args"]], "method_name (matflow.param_classes.load.loadstep property)": [[99, "matflow.param_classes.load.LoadStep.method_name"]], "planar_2d() (matflow.param_classes.load.loadstep class method)": [[99, "matflow.param_classes.load.LoadStep.planar_2D"]], "plane_strain() (matflow.param_classes.load.loadstep class method)": [[99, "matflow.param_classes.load.LoadStep.plane_strain"]], "prepare_json_dump() (matflow.param_classes.load.loadstep method)": [[99, "matflow.param_classes.load.LoadStep.prepare_JSON_dump"]], "random_2d() (matflow.param_classes.load.loadstep class method)": [[99, "matflow.param_classes.load.LoadStep.random_2D"]], "random_3d() (matflow.param_classes.load.loadstep class method)": [[99, "matflow.param_classes.load.LoadStep.random_3D"]], "save_from_hdf5_group() (matflow.param_classes.load.loadstep class method)": [[99, "matflow.param_classes.load.LoadStep.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.load.loadstep class method)": [[99, "matflow.param_classes.load.LoadStep.save_from_JSON"]], "strain_like_tensor (matflow.param_classes.load.loadstep property)": [[99, "matflow.param_classes.load.LoadStep.strain_like_tensor"]], "to_dict() (matflow.param_classes.load.loadstep method)": [[99, "matflow.param_classes.load.LoadStep.to_dict"]], "type (matflow.param_classes.load.loadstep property)": [[99, "matflow.param_classes.load.LoadStep.type"]], "uniaxial() (matflow.param_classes.load.loadstep class method)": [[99, "matflow.param_classes.load.LoadStep.uniaxial"]], "uniaxial_cyclic() (matflow.param_classes.load.loadstep class method)": [[99, "matflow.param_classes.load.LoadStep.uniaxial_cyclic"]], "def_grad_rate (matflow.param_classes.load.strainratemode attribute)": [[100, "matflow.param_classes.load.StrainRateMode.DEF_GRAD_RATE"]], "strainratemode (class in matflow.param_classes.load)": [[100, "matflow.param_classes.load.StrainRateMode"]], "vel_grad (matflow.param_classes.load.strainratemode attribute)": [[100, "matflow.param_classes.load.StrainRateMode.VEL_GRAD"]], "vel_grad_approx (matflow.param_classes.load.strainratemode attribute)": [[100, "matflow.param_classes.load.StrainRateMode.VEL_GRAD_APPROX"]], "matflow.param_classes.orientations": [[101, "module-matflow.param_classes.orientations"]], "bunge (matflow.param_classes.orientations.eulerdefinition attribute)": [[102, "matflow.param_classes.orientations.EulerDefinition.BUNGE"]], "eulerdefinition (class in matflow.param_classes.orientations)": [[102, "matflow.param_classes.orientations.EulerDefinition"]], "a (matflow.param_classes.orientations.latticedirection attribute)": [[103, "matflow.param_classes.orientations.LatticeDirection.A"]], "a_star (matflow.param_classes.orientations.latticedirection attribute)": [[103, "matflow.param_classes.orientations.LatticeDirection.A_STAR"]], "b (matflow.param_classes.orientations.latticedirection attribute)": [[103, "matflow.param_classes.orientations.LatticeDirection.B"]], "b_star (matflow.param_classes.orientations.latticedirection attribute)": [[103, "matflow.param_classes.orientations.LatticeDirection.B_STAR"]], "c (matflow.param_classes.orientations.latticedirection attribute)": [[103, "matflow.param_classes.orientations.LatticeDirection.C"]], "c_star (matflow.param_classes.orientations.latticedirection attribute)": [[103, "matflow.param_classes.orientations.LatticeDirection.C_STAR"]], "latticedirection (class in matflow.param_classes.orientations)": [[103, "matflow.param_classes.orientations.LatticeDirection"]], "orientationrepresentation (class in matflow.param_classes.orientations)": [[104, "matflow.param_classes.orientations.OrientationRepresentation"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.orientationrepresentation method)": [[104, "matflow.param_classes.orientations.OrientationRepresentation.dump_to_HDF5_group"]], "euler_definition (matflow.param_classes.orientations.orientationrepresentation attribute)": [[104, "matflow.param_classes.orientations.OrientationRepresentation.euler_definition"]], "euler_is_degrees (matflow.param_classes.orientations.orientationrepresentation attribute)": [[104, "matflow.param_classes.orientations.OrientationRepresentation.euler_is_degrees"]], "prepare_json_dump() (matflow.param_classes.orientations.orientationrepresentation method)": [[104, "matflow.param_classes.orientations.OrientationRepresentation.prepare_JSON_dump"]], "quat_order (matflow.param_classes.orientations.orientationrepresentation attribute)": [[104, "matflow.param_classes.orientations.OrientationRepresentation.quat_order"]], "save_from_hdf5_group() (matflow.param_classes.orientations.orientationrepresentation class method)": [[104, "matflow.param_classes.orientations.OrientationRepresentation.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.orientations.orientationrepresentation class method)": [[104, "matflow.param_classes.orientations.OrientationRepresentation.save_from_JSON"]], "to_dict() (matflow.param_classes.orientations.orientationrepresentation method)": [[104, "matflow.param_classes.orientations.OrientationRepresentation.to_dict"]], "type (matflow.param_classes.orientations.orientationrepresentation attribute)": [[104, "matflow.param_classes.orientations.OrientationRepresentation.type"]], "euler (matflow.param_classes.orientations.orientationrepresentationtype attribute)": [[105, "matflow.param_classes.orientations.OrientationRepresentationType.EULER"]], "orientationrepresentationtype (class in matflow.param_classes.orientations)": [[105, "matflow.param_classes.orientations.OrientationRepresentationType"]], "quaternion (matflow.param_classes.orientations.orientationrepresentationtype attribute)": [[105, "matflow.param_classes.orientations.OrientationRepresentationType.QUATERNION"]], "orientations (class in matflow.param_classes.orientations)": [[106, "matflow.param_classes.orientations.Orientations"]], "data (matflow.param_classes.orientations.orientations attribute)": [[106, "matflow.param_classes.orientations.Orientations.data"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.orientations method)": [[106, "matflow.param_classes.orientations.Orientations.dump_to_HDF5_group"]], "from_json_like() (matflow.param_classes.orientations.orientations class method)": [[106, "matflow.param_classes.orientations.Orientations.from_JSON_like"]], "from_file() (matflow.param_classes.orientations.orientations class method)": [[106, "matflow.param_classes.orientations.Orientations.from_file"]], "from_random() (matflow.param_classes.orientations.orientations class method)": [[106, "matflow.param_classes.orientations.Orientations.from_random"]], "prepare_json_dump() (matflow.param_classes.orientations.orientations method)": [[106, "matflow.param_classes.orientations.Orientations.prepare_JSON_dump"]], "quat_sample_random() (matflow.param_classes.orientations.orientations static method)": [[106, "matflow.param_classes.orientations.Orientations.quat_sample_random"]], "representation (matflow.param_classes.orientations.orientations attribute)": [[106, "matflow.param_classes.orientations.Orientations.representation"]], "save_from_hdf5_group() (matflow.param_classes.orientations.orientations class method)": [[106, "matflow.param_classes.orientations.Orientations.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.orientations.orientations class method)": [[106, "matflow.param_classes.orientations.Orientations.save_from_JSON"]], "to_dict() (matflow.param_classes.orientations.orientations method)": [[106, "matflow.param_classes.orientations.Orientations.to_dict"]], "unit_cell_alignment (matflow.param_classes.orientations.orientations attribute)": [[106, "matflow.param_classes.orientations.Orientations.unit_cell_alignment"]], "quatorder (class in matflow.param_classes.orientations)": [[107, "matflow.param_classes.orientations.QuatOrder"]], "scalar_vector (matflow.param_classes.orientations.quatorder attribute)": [[107, "matflow.param_classes.orientations.QuatOrder.SCALAR_VECTOR"]], "vector_scalar (matflow.param_classes.orientations.quatorder attribute)": [[107, "matflow.param_classes.orientations.QuatOrder.VECTOR_SCALAR"]], "unitcellalignment (class in matflow.param_classes.orientations)": [[108, "matflow.param_classes.orientations.UnitCellAlignment"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.unitcellalignment method)": [[108, "matflow.param_classes.orientations.UnitCellAlignment.dump_to_HDF5_group"]], "from_hex_convention_damask() (matflow.param_classes.orientations.unitcellalignment class method)": [[108, "matflow.param_classes.orientations.UnitCellAlignment.from_hex_convention_DAMASK"]], "from_hex_convention_mtex() (matflow.param_classes.orientations.unitcellalignment class method)": [[108, "matflow.param_classes.orientations.UnitCellAlignment.from_hex_convention_MTEX"]], "prepare_json_dump() (matflow.param_classes.orientations.unitcellalignment method)": [[108, "matflow.param_classes.orientations.UnitCellAlignment.prepare_JSON_dump"]], "save_from_hdf5_group() (matflow.param_classes.orientations.unitcellalignment class method)": [[108, "matflow.param_classes.orientations.UnitCellAlignment.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.orientations.unitcellalignment class method)": [[108, "matflow.param_classes.orientations.UnitCellAlignment.save_from_JSON"]], "to_dict() (matflow.param_classes.orientations.unitcellalignment method)": [[108, "matflow.param_classes.orientations.UnitCellAlignment.to_dict"]], "x (matflow.param_classes.orientations.unitcellalignment attribute)": [[108, "matflow.param_classes.orientations.UnitCellAlignment.x"]], "y (matflow.param_classes.orientations.unitcellalignment attribute)": [[108, "matflow.param_classes.orientations.UnitCellAlignment.y"]], "z (matflow.param_classes.orientations.unitcellalignment attribute)": [[108, "matflow.param_classes.orientations.UnitCellAlignment.z"]], "matflow.param_classes.seeds": [[109, "module-matflow.param_classes.seeds"]], "microstructureseeds (class in matflow.param_classes.seeds)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds"]], "box_size (matflow.param_classes.seeds.microstructureseeds attribute)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.box_size"]], "dump_to_hdf5_group() (matflow.param_classes.seeds.microstructureseeds method)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.dump_to_HDF5_group"]], "from_json_like() (matflow.param_classes.seeds.microstructureseeds class method)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.from_JSON_like"]], "from_file() (matflow.param_classes.seeds.microstructureseeds class method)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.from_file"]], "from_random() (matflow.param_classes.seeds.microstructureseeds class method)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.from_random"]], "num_seeds (matflow.param_classes.seeds.microstructureseeds property)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.num_seeds"]], "orientations (matflow.param_classes.seeds.microstructureseeds attribute)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.orientations"]], "phase_label (matflow.param_classes.seeds.microstructureseeds attribute)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.phase_label"]], "position (matflow.param_classes.seeds.microstructureseeds attribute)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.position"]], "prepare_json_dump() (matflow.param_classes.seeds.microstructureseeds method)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.prepare_JSON_dump"]], "random_seed (matflow.param_classes.seeds.microstructureseeds attribute)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.random_seed"]], "save_from_hdf5_group() (matflow.param_classes.seeds.microstructureseeds class method)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.seeds.microstructureseeds class method)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.save_from_JSON"]], "show() (matflow.param_classes.seeds.microstructureseeds method)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.show"]], "to_dict() (matflow.param_classes.seeds.microstructureseeds method)": [[110, "matflow.param_classes.seeds.MicrostructureSeeds.to_dict"]], "matflow.param_classes.single_crystal_parameters": [[111, "module-matflow.param_classes.single_crystal_parameters"]], "singlecrystalparameters (class in matflow.param_classes.single_crystal_parameters)": [[112, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters"]], "as_base() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[112, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.as_base"]], "base (matflow.param_classes.single_crystal_parameters.singlecrystalparameters property)": [[112, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.base"]], "dump_to_hdf5_group() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[112, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.dump_to_HDF5_group"]], "perturbations (matflow.param_classes.single_crystal_parameters.singlecrystalparameters property)": [[112, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.perturbations"]], "phases (matflow.param_classes.single_crystal_parameters.singlecrystalparameters property)": [[112, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.phases"]], "prepare_json_dump() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[112, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.prepare_JSON_dump"]], "save_from_hdf5_group() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters class method)": [[112, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters class method)": [[112, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.save_from_JSON"]], "to_dict() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[112, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.to_dict"]], "matflow.param_classes.utils": [[113, "module-matflow.param_classes.utils"]], "masked_array_from_list() (in module matflow.param_classes.utils)": [[114, "matflow.param_classes.utils.masked_array_from_list"]], "run_hpcflow_tests() (in module matflow)": [[115, "matflow.run_hpcflow_tests"]], "run_tests() (in module matflow)": [[116, "matflow.run_tests"]], "show() (in module matflow)": [[117, "matflow.show"]], "show_legend() (in module matflow)": [[118, "matflow.show_legend"]], "submit_workflow() (in module matflow)": [[119, "matflow.submit_workflow"]], "matflow.tests": [[120, "module-matflow.tests"]], "matflow.tests.conftest": [[121, "module-matflow.tests.conftest"]], "new_null_config() (in module matflow.tests.conftest)": [[122, "matflow.tests.conftest.new_null_config"]], "null_config() (in module matflow.tests.conftest)": [[123, "matflow.tests.conftest.null_config"]], "pytest_addoption() (in module matflow.tests.conftest)": [[124, "matflow.tests.conftest.pytest_addoption"]], "pytest_collection_modifyitems() (in module matflow.tests.conftest)": [[125, "matflow.tests.conftest.pytest_collection_modifyitems"]], "pytest_configure() (in module matflow.tests.conftest)": [[126, "matflow.tests.conftest.pytest_configure"]], "pytest_unconfigure() (in module matflow.tests.conftest)": [[127, "matflow.tests.conftest.pytest_unconfigure"]], "matflow.tests.test_cli": [[128, "module-matflow.tests.test_cli"]], "test_hpcflow_version() (in module matflow.tests.test_cli)": [[129, "matflow.tests.test_cli.test_hpcflow_version"]], "test_version() (in module matflow.tests.test_cli)": [[130, "matflow.tests.test_cli.test_version"]], "matflow.tests.test_utils": [[131, "module-matflow.tests.test_utils"]], "test_masked_array_from_list_1d() (in module matflow.tests.test_utils)": [[132, "matflow.tests.test_utils.test_masked_array_from_list_1D"]], "test_masked_array_from_list_1d_masked() (in module matflow.tests.test_utils)": [[133, "matflow.tests.test_utils.test_masked_array_from_list_1D_masked"]], "test_masked_array_from_list_2d() (in module matflow.tests.test_utils)": [[134, "matflow.tests.test_utils.test_masked_array_from_list_2D"]], "test_masked_array_from_list_2d_masked() (in module matflow.tests.test_utils)": [[135, "matflow.tests.test_utils.test_masked_array_from_list_2D_masked"]], "--add-to-known": [[137, "cmdoption-matflow-demo-workflow-go-add-to-known"], [137, "cmdoption-matflow-go-add-to-known"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"]], "--all": [[137, "cmdoption-matflow-config-get-all"], [137, "cmdoption-matflow-demo-data-cache-all"]], "--config-dir": [[137, "cmdoption-matflow-config-dir"], [137, "cmdoption-matflow-manage-get-config-path-config-dir"], [137, "cmdoption-matflow-manage-reset-config-config-dir"]], "--config-key": [[137, "cmdoption-matflow-config-key"]], "--defaults": [[137, "cmdoption-matflow-config-add-scheduler-defaults"], [137, "cmdoption-matflow-config-add-shell-defaults"], [137, "cmdoption-matflow-config-add-shell-wsl-defaults"]], "--doc": [[137, "cmdoption-matflow-demo-workflow-copy-doc"], [137, "cmdoption-matflow-demo-workflow-show-doc"]], "--element": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element"]], "--env-source-file": [[137, "cmdoption-matflow-configure-env-env-source-file"]], "--exclude-os": [[137, "cmdoption-matflow-submission-shell-info-exclude-os"]], "--file": [[137, "cmdoption-matflow-config-get-file"], [137, "cmdoption-matflow-helper-pid-f"]], "--format": [[137, "cmdoption-matflow-demo-workflow-go-format"], [137, "cmdoption-matflow-demo-workflow-make-format"], [137, "cmdoption-matflow-go-format"], [137, "cmdoption-matflow-make-format"]], "--full": [[137, "cmdoption-matflow-show-f"]], "--help": [[137, "cmdoption-matflow-help"]], "--hostname": [[137, "cmdoption-matflow-manage-clear-cache-hostname"]], "--hpcflow-version": [[137, "cmdoption-matflow-hpcflow-version"]], "--infile1": [[137, "cmdoption-matflow-demo-software-doSomething-i1"]], "--infile2": [[137, "cmdoption-matflow-demo-software-doSomething-i2"]], "--jobscripts": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "--js-parallelism": [[137, "cmdoption-matflow-demo-workflow-go-js-parallelism"], [137, "cmdoption-matflow-go-js-parallelism"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism"]], "--json": [[137, "cmdoption-matflow-config-append-json"], [137, "cmdoption-matflow-config-prepend-json"], [137, "cmdoption-matflow-config-set-json"], [137, "cmdoption-matflow-config-update-json"], [137, "cmdoption-matflow-submission-get-known-json"]], "--legend": [[137, "cmdoption-matflow-show-legend"]], "--list": [[137, "cmdoption-matflow-demo-data-l"], [137, "cmdoption-matflow-demo-workflow-l"]], "--log": [[137, "cmdoption-matflow-unzip-log"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-log"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log"], [137, "cmdoption-matflow-zip-log"]], "--max-recent": [[137, "cmdoption-matflow-show-r"]], "--metadata": [[137, "cmdoption-matflow-config-get-metadata"]], "--name": [[137, "cmdoption-matflow-demo-workflow-go-name"], [137, "cmdoption-matflow-demo-workflow-make-name"], [137, "cmdoption-matflow-go-name"], [137, "cmdoption-matflow-make-name"], [137, "cmdoption-matflow-open-env-source-name"]], "--new": [[137, "cmdoption-matflow-config-import-new"]], "--no-add-to-known": [[137, "cmdoption-matflow-demo-workflow-go-add-to-known"], [137, "cmdoption-matflow-go-add-to-known"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"]], "--no-callback": [[137, "cmdoption-matflow-config-no-callback"]], "--no-doc": [[137, "cmdoption-matflow-demo-workflow-copy-doc"], [137, "cmdoption-matflow-demo-workflow-show-doc"]], "--no-rename": [[137, "cmdoption-matflow-config-import-rename"]], "--no-syntax": [[137, "cmdoption-matflow-demo-workflow-show-syntax"]], "--no-update": [[137, "cmdoption-matflow-show-no-update"]], "--os-info": [[137, "cmdoption-matflow-submission-os-info"]], "--out": [[137, "cmdoption-matflow-demo-software-doSomething-o"]], "--overwrite": [[137, "cmdoption-matflow-demo-workflow-go-overwrite"], [137, "cmdoption-matflow-demo-workflow-make-overwrite"], [137, "cmdoption-matflow-go-overwrite"], [137, "cmdoption-matflow-make-overwrite"]], "--path": [[137, "cmdoption-matflow-config-init-path"], [137, "cmdoption-matflow-config-open-path"], [137, "cmdoption-matflow-demo-workflow-go-path"], [137, "cmdoption-matflow-demo-workflow-make-path"], [137, "cmdoption-matflow-go-path"], [137, "cmdoption-matflow-make-path"], [137, "cmdoption-matflow-open-config-path"], [137, "cmdoption-matflow-open-demo-data-cache-dir-path"], [137, "cmdoption-matflow-open-env-source-path"], [137, "cmdoption-matflow-open-known-subs-path"], [137, "cmdoption-matflow-open-log-path"], [137, "cmdoption-matflow-open-user-cache-dir-path"], [137, "cmdoption-matflow-open-user-cache-hostname-dir-path"], [137, "cmdoption-matflow-open-user-data-dir-path"], [137, "cmdoption-matflow-open-user-data-hostname-dir-path"], [137, "cmdoption-matflow-open-user-runtime-dir-path"], [137, "cmdoption-matflow-open-workflow-path"]], "--print-idx": [[137, "cmdoption-matflow-demo-workflow-go-print-idx"], [137, "cmdoption-matflow-go-print-idx"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-print-idx"]], "--ref-type": [[137, "cmdoption-matflow-cancel-r"], [137, "cmdoption-matflow-open-workflow-r"], [137, "cmdoption-matflow-workflow-r"], [137, "cmdoption-matflow-zip-r"]], "--rename": [[137, "cmdoption-matflow-config-import-rename"]], "--run-time-info": [[137, "cmdoption-matflow-run-time-info"]], "--setup": [[137, "cmdoption-matflow-configure-env-setup"]], "--stderr": [[137, "cmdoption-matflow-internal-workflow-PATH-save-parameter-stderr"]], "--store": [[137, "cmdoption-matflow-demo-workflow-go-store"], [137, "cmdoption-matflow-demo-workflow-make-store"], [137, "cmdoption-matflow-go-store"], [137, "cmdoption-matflow-make-store"]], "--string": [[137, "cmdoption-matflow-go-string"], [137, "cmdoption-matflow-make-string"]], "--submission": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission"]], "--syntax": [[137, "cmdoption-matflow-demo-workflow-show-syntax"]], "--task": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task"]], "--tasks": [[137, "cmdoption-matflow-demo-workflow-go-tasks"], [137, "cmdoption-matflow-go-tasks"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-tasks"]], "--timeout": [[137, "cmdoption-matflow-helper-restart-timeout"], [137, "cmdoption-matflow-helper-run-timeout"], [137, "cmdoption-matflow-helper-start-timeout"]], "--timeout-check-interval": [[137, "cmdoption-matflow-helper-restart-timeout-check-interval"], [137, "cmdoption-matflow-helper-run-timeout-check-interval"], [137, "cmdoption-matflow-helper-start-timeout-check-interval"]], "--ts-fmt": [[137, "cmdoption-matflow-demo-workflow-go-ts-fmt"], [137, "cmdoption-matflow-demo-workflow-make-ts-fmt"], [137, "cmdoption-matflow-go-ts-fmt"], [137, "cmdoption-matflow-make-ts-fmt"]], "--ts-name-fmt": [[137, "cmdoption-matflow-demo-workflow-go-ts-name-fmt"], [137, "cmdoption-matflow-demo-workflow-make-ts-name-fmt"], [137, "cmdoption-matflow-go-ts-name-fmt"], [137, "cmdoption-matflow-make-ts-name-fmt"]], "--use-current-env": [[137, "cmdoption-matflow-configure-env-use-current-env"]], "--value": [[137, "cmdoption-matflow-demo-software-doSomething-v"]], "--version": [[137, "cmdoption-matflow-version"]], "--wait": [[137, "cmdoption-matflow-demo-workflow-go-wait"], [137, "cmdoption-matflow-go-wait"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait"]], "--watch-interval": [[137, "cmdoption-matflow-helper-restart-watch-interval"], [137, "cmdoption-matflow-helper-run-watch-interval"], [137, "cmdoption-matflow-helper-start-watch-interval"]], "--with-config": [[137, "cmdoption-matflow-with-config"]], "-f": [[137, "cmdoption-matflow-helper-pid-f"], [137, "cmdoption-matflow-show-f"]], "-i1": [[137, "cmdoption-matflow-demo-software-doSomething-i1"]], "-i2": [[137, "cmdoption-matflow-demo-software-doSomething-i2"]], "-j": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "-l": [[137, "cmdoption-matflow-demo-data-l"], [137, "cmdoption-matflow-demo-workflow-l"]], "-o": [[137, "cmdoption-matflow-demo-software-doSomething-o"]], "-r": [[137, "cmdoption-matflow-cancel-r"], [137, "cmdoption-matflow-open-workflow-r"], [137, "cmdoption-matflow-show-r"], [137, "cmdoption-matflow-workflow-r"], [137, "cmdoption-matflow-zip-r"]], "-v": [[137, "cmdoption-matflow-demo-software-doSomething-v"]], "cmd_idx": [[137, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-CMD_IDX"]], "destination": [[137, "cmdoption-matflow-demo-data-copy-arg-DESTINATION"], [137, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION"]], "ear_id": [[137, "cmdoption-matflow-internal-workflow-PATH-check-loop-arg-EAR_ID"], [137, "cmdoption-matflow-internal-workflow-PATH-get-ear-skipped-arg-EAR_ID"], [137, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID"], [137, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EAR_ID"], [137, "cmdoption-matflow-internal-workflow-PATH-set-ear-skip-arg-EAR_ID"], [137, "cmdoption-matflow-internal-workflow-PATH-set-ear-start-arg-EAR_ID"], [137, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-EAR_ID"]], "exit_code": [[137, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EXIT_CODE"]], "file_name": [[137, "cmdoption-matflow-demo-data-cache-arg-FILE_NAME"], [137, "cmdoption-matflow-demo-data-copy-arg-FILE_NAME"]], "file_path": [[137, "cmdoption-matflow-config-import-arg-FILE_PATH"]], "index": [[137, "cmdoption-matflow-config-pop-arg-INDEX"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX"]], "jobscript_idx": [[137, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JOBSCRIPT_IDX"]], "js_action_idx": [[137, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JS_ACTION_IDX"]], "js_act_idx": [[137, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_ACT_IDX"]], "js_idx": [[137, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_IDX"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX"]], "known_name": [[137, "cmdoption-matflow-config-init-arg-KNOWN_NAME"]], "loop_name": [[137, "cmdoption-matflow-internal-workflow-PATH-check-loop-arg-LOOP_NAME"]], "name": [[137, "cmdoption-matflow-config-add-scheduler-arg-NAME"], [137, "cmdoption-matflow-config-add-shell-arg-NAME"], [137, "cmdoption-matflow-config-append-arg-NAME"], [137, "cmdoption-matflow-config-get-arg-NAME"], [137, "cmdoption-matflow-config-pop-arg-NAME"], [137, "cmdoption-matflow-config-prepend-arg-NAME"], [137, "cmdoption-matflow-config-set-arg-NAME"], [137, "cmdoption-matflow-config-unset-arg-NAME"], [137, "cmdoption-matflow-config-update-arg-NAME"], [137, "cmdoption-matflow-configure-env-arg-NAME"], [137, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME"]], "path": [[137, "cmdoption-matflow-internal-workflow-arg-PATH"]], "py_test_args": [[137, "cmdoption-matflow-test-arg-PY_TEST_ARGS"], [137, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS"]], "scheduler_name": [[137, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME"]], "sha": [[137, "cmdoption-matflow-config-set-github-demo-data-dir-arg-SHA"]], "shell_name": [[137, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME"]], "submission_idx": [[137, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-SUBMISSION_IDX"]], "sub_idx": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX"]], "template_file_or_str": [[137, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR"], [137, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR"]], "value": [[137, "cmdoption-matflow-config-append-arg-VALUE"], [137, "cmdoption-matflow-config-prepend-arg-VALUE"], [137, "cmdoption-matflow-config-set-arg-VALUE"], [137, "cmdoption-matflow-config-update-arg-VALUE"], [137, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE"]], "workflow_name": [[137, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME"], [137, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME"], [137, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME"], [137, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME"]], "workflow_path": [[137, "cmdoption-matflow-unzip-arg-WORKFLOW_PATH"]], "workflow_ref": [[137, "cmdoption-matflow-cancel-arg-WORKFLOW_REF"], [137, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF"], [137, "cmdoption-matflow-workflow-arg-WORKFLOW_REF"], [137, "cmdoption-matflow-zip-arg-WORKFLOW_REF"]], "matflow command line option": [[137, "cmdoption-matflow-config-dir"], [137, "cmdoption-matflow-config-key"], [137, "cmdoption-matflow-help"], [137, "cmdoption-matflow-hpcflow-version"], [137, "cmdoption-matflow-run-time-info"], [137, "cmdoption-matflow-version"], [137, "cmdoption-matflow-with-config"]], "matflow-cancel command line option": [[137, "cmdoption-matflow-cancel-arg-WORKFLOW_REF"], [137, "cmdoption-matflow-cancel-r"]], "matflow-config command line option": [[137, "cmdoption-matflow-config-no-callback"]], "matflow-config-add-scheduler command line option": [[137, "cmdoption-matflow-config-add-scheduler-arg-NAME"], [137, "cmdoption-matflow-config-add-scheduler-defaults"]], "matflow-config-add-shell command line option": [[137, "cmdoption-matflow-config-add-shell-arg-NAME"], [137, "cmdoption-matflow-config-add-shell-defaults"]], "matflow-config-add-shell-wsl command line option": [[137, "cmdoption-matflow-config-add-shell-wsl-defaults"]], "matflow-config-append command line option": [[137, "cmdoption-matflow-config-append-arg-NAME"], [137, "cmdoption-matflow-config-append-arg-VALUE"], [137, "cmdoption-matflow-config-append-json"]], "matflow-config-get command line option": [[137, "cmdoption-matflow-config-get-all"], [137, "cmdoption-matflow-config-get-arg-NAME"], [137, "cmdoption-matflow-config-get-file"], [137, "cmdoption-matflow-config-get-metadata"]], "matflow-config-import command line option": [[137, "cmdoption-matflow-config-import-arg-FILE_PATH"], [137, "cmdoption-matflow-config-import-new"], [137, "cmdoption-matflow-config-import-rename"]], "matflow-config-init command line option": [[137, "cmdoption-matflow-config-init-arg-KNOWN_NAME"], [137, "cmdoption-matflow-config-init-path"]], "matflow-config-open command line option": [[137, "cmdoption-matflow-config-open-path"]], "matflow-config-pop command line option": [[137, "cmdoption-matflow-config-pop-arg-INDEX"], [137, "cmdoption-matflow-config-pop-arg-NAME"]], "matflow-config-prepend command line option": [[137, "cmdoption-matflow-config-prepend-arg-NAME"], [137, "cmdoption-matflow-config-prepend-arg-VALUE"], [137, "cmdoption-matflow-config-prepend-json"]], "matflow-config-set command line option": [[137, "cmdoption-matflow-config-set-arg-NAME"], [137, "cmdoption-matflow-config-set-arg-VALUE"], [137, "cmdoption-matflow-config-set-json"]], "matflow-config-set-github-demo-data-dir command line option": [[137, "cmdoption-matflow-config-set-github-demo-data-dir-arg-SHA"]], "matflow-config-unset command line option": [[137, "cmdoption-matflow-config-unset-arg-NAME"]], "matflow-config-update command line option": [[137, "cmdoption-matflow-config-update-arg-NAME"], [137, "cmdoption-matflow-config-update-arg-VALUE"], [137, "cmdoption-matflow-config-update-json"]], "matflow-configure-env command line option": [[137, "cmdoption-matflow-configure-env-arg-NAME"], [137, "cmdoption-matflow-configure-env-env-source-file"], [137, "cmdoption-matflow-configure-env-setup"], [137, "cmdoption-matflow-configure-env-use-current-env"]], "matflow-demo-data command line option": [[137, "cmdoption-matflow-demo-data-l"]], "matflow-demo-data-cache command line option": [[137, "cmdoption-matflow-demo-data-cache-all"], [137, "cmdoption-matflow-demo-data-cache-arg-FILE_NAME"]], "matflow-demo-data-copy command line option": [[137, "cmdoption-matflow-demo-data-copy-arg-DESTINATION"], [137, "cmdoption-matflow-demo-data-copy-arg-FILE_NAME"]], "matflow-demo-software-dosomething command line option": [[137, "cmdoption-matflow-demo-software-doSomething-i1"], [137, "cmdoption-matflow-demo-software-doSomething-i2"], [137, "cmdoption-matflow-demo-software-doSomething-o"], [137, "cmdoption-matflow-demo-software-doSomething-v"]], "matflow-demo-workflow command line option": [[137, "cmdoption-matflow-demo-workflow-l"]], "matflow-demo-workflow-copy command line option": [[137, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION"], [137, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME"], [137, "cmdoption-matflow-demo-workflow-copy-doc"]], "matflow-demo-workflow-go command line option": [[137, "cmdoption-matflow-demo-workflow-go-add-to-known"], [137, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME"], [137, "cmdoption-matflow-demo-workflow-go-format"], [137, "cmdoption-matflow-demo-workflow-go-js-parallelism"], [137, "cmdoption-matflow-demo-workflow-go-name"], [137, "cmdoption-matflow-demo-workflow-go-overwrite"], [137, "cmdoption-matflow-demo-workflow-go-path"], [137, "cmdoption-matflow-demo-workflow-go-print-idx"], [137, "cmdoption-matflow-demo-workflow-go-store"], [137, "cmdoption-matflow-demo-workflow-go-tasks"], [137, "cmdoption-matflow-demo-workflow-go-ts-fmt"], [137, "cmdoption-matflow-demo-workflow-go-ts-name-fmt"], [137, "cmdoption-matflow-demo-workflow-go-wait"]], "matflow-demo-workflow-make command line option": [[137, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME"], [137, "cmdoption-matflow-demo-workflow-make-format"], [137, "cmdoption-matflow-demo-workflow-make-name"], [137, "cmdoption-matflow-demo-workflow-make-overwrite"], [137, "cmdoption-matflow-demo-workflow-make-path"], [137, "cmdoption-matflow-demo-workflow-make-store"], [137, "cmdoption-matflow-demo-workflow-make-ts-fmt"], [137, "cmdoption-matflow-demo-workflow-make-ts-name-fmt"]], "matflow-demo-workflow-show command line option": [[137, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME"], [137, "cmdoption-matflow-demo-workflow-show-doc"], [137, "cmdoption-matflow-demo-workflow-show-syntax"]], "matflow-go command line option": [[137, "cmdoption-matflow-go-add-to-known"], [137, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR"], [137, "cmdoption-matflow-go-format"], [137, "cmdoption-matflow-go-js-parallelism"], [137, "cmdoption-matflow-go-name"], [137, "cmdoption-matflow-go-overwrite"], [137, "cmdoption-matflow-go-path"], [137, "cmdoption-matflow-go-print-idx"], [137, "cmdoption-matflow-go-store"], [137, "cmdoption-matflow-go-string"], [137, "cmdoption-matflow-go-tasks"], [137, "cmdoption-matflow-go-ts-fmt"], [137, "cmdoption-matflow-go-ts-name-fmt"], [137, "cmdoption-matflow-go-wait"]], "matflow-helper-pid command line option": [[137, "cmdoption-matflow-helper-pid-f"]], "matflow-helper-restart command line option": [[137, "cmdoption-matflow-helper-restart-timeout"], [137, "cmdoption-matflow-helper-restart-timeout-check-interval"], [137, "cmdoption-matflow-helper-restart-watch-interval"]], "matflow-helper-run command line option": [[137, "cmdoption-matflow-helper-run-timeout"], [137, "cmdoption-matflow-helper-run-timeout-check-interval"], [137, "cmdoption-matflow-helper-run-watch-interval"]], "matflow-helper-start command line option": [[137, "cmdoption-matflow-helper-start-timeout"], [137, "cmdoption-matflow-helper-start-timeout-check-interval"], [137, "cmdoption-matflow-helper-start-watch-interval"]], "matflow-internal-workflow command line option": [[137, "cmdoption-matflow-internal-workflow-arg-PATH"]], "matflow-internal-workflow-path-check-loop command line option": [[137, "cmdoption-matflow-internal-workflow-PATH-check-loop-arg-EAR_ID"], [137, "cmdoption-matflow-internal-workflow-PATH-check-loop-arg-LOOP_NAME"]], "matflow-internal-workflow-path-get-ear-skipped command line option": [[137, "cmdoption-matflow-internal-workflow-PATH-get-ear-skipped-arg-EAR_ID"]], "matflow-internal-workflow-path-save-parameter command line option": [[137, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-CMD_IDX"], [137, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID"], [137, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME"], [137, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE"], [137, "cmdoption-matflow-internal-workflow-PATH-save-parameter-stderr"]], "matflow-internal-workflow-path-set-ear-end command line option": [[137, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EAR_ID"], [137, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EXIT_CODE"], [137, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_ACT_IDX"], [137, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_IDX"]], "matflow-internal-workflow-path-set-ear-skip command line option": [[137, "cmdoption-matflow-internal-workflow-PATH-set-ear-skip-arg-EAR_ID"]], "matflow-internal-workflow-path-set-ear-start command line option": [[137, "cmdoption-matflow-internal-workflow-PATH-set-ear-start-arg-EAR_ID"]], "matflow-internal-workflow-path-write-commands command line option": [[137, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-EAR_ID"], [137, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JOBSCRIPT_IDX"], [137, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JS_ACTION_IDX"], [137, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-SUBMISSION_IDX"]], "matflow-make command line option": [[137, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR"], [137, "cmdoption-matflow-make-format"], [137, "cmdoption-matflow-make-name"], [137, "cmdoption-matflow-make-overwrite"], [137, "cmdoption-matflow-make-path"], [137, "cmdoption-matflow-make-store"], [137, "cmdoption-matflow-make-string"], [137, "cmdoption-matflow-make-ts-fmt"], [137, "cmdoption-matflow-make-ts-name-fmt"]], "matflow-manage-clear-cache command line option": [[137, "cmdoption-matflow-manage-clear-cache-hostname"]], "matflow-manage-get-config-path command line option": [[137, "cmdoption-matflow-manage-get-config-path-config-dir"]], "matflow-manage-reset-config command line option": [[137, "cmdoption-matflow-manage-reset-config-config-dir"]], "matflow-open-config command line option": [[137, "cmdoption-matflow-open-config-path"]], "matflow-open-demo-data-cache-dir command line option": [[137, "cmdoption-matflow-open-demo-data-cache-dir-path"]], "matflow-open-env-source command line option": [[137, "cmdoption-matflow-open-env-source-name"], [137, "cmdoption-matflow-open-env-source-path"]], "matflow-open-known-subs command line option": [[137, "cmdoption-matflow-open-known-subs-path"]], "matflow-open-log command line option": [[137, "cmdoption-matflow-open-log-path"]], "matflow-open-user-cache-dir command line option": [[137, "cmdoption-matflow-open-user-cache-dir-path"]], "matflow-open-user-cache-hostname-dir command line option": [[137, "cmdoption-matflow-open-user-cache-hostname-dir-path"]], "matflow-open-user-data-dir command line option": [[137, "cmdoption-matflow-open-user-data-dir-path"]], "matflow-open-user-data-hostname-dir command line option": [[137, "cmdoption-matflow-open-user-data-hostname-dir-path"]], "matflow-open-user-runtime-dir command line option": [[137, "cmdoption-matflow-open-user-runtime-dir-path"]], "matflow-open-workflow command line option": [[137, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF"], [137, "cmdoption-matflow-open-workflow-path"], [137, "cmdoption-matflow-open-workflow-r"]], "matflow-show command line option": [[137, "cmdoption-matflow-show-f"], [137, "cmdoption-matflow-show-legend"], [137, "cmdoption-matflow-show-no-update"], [137, "cmdoption-matflow-show-r"]], "matflow-submission command line option": [[137, "cmdoption-matflow-submission-os-info"]], "matflow-submission-get-known command line option": [[137, "cmdoption-matflow-submission-get-known-json"]], "matflow-submission-scheduler command line option": [[137, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME"]], "matflow-submission-shell-info command line option": [[137, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME"], [137, "cmdoption-matflow-submission-shell-info-exclude-os"]], "matflow-test command line option": [[137, "cmdoption-matflow-test-arg-PY_TEST_ARGS"]], "matflow-test-hpcflow command line option": [[137, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS"]], "matflow-unzip command line option": [[137, "cmdoption-matflow-unzip-arg-WORKFLOW_PATH"], [137, "cmdoption-matflow-unzip-log"]], "matflow-workflow command line option": [[137, "cmdoption-matflow-workflow-arg-WORKFLOW_REF"], [137, "cmdoption-matflow-workflow-r"]], "matflow-workflow-workflow_ref-abort-run command line option": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task"]], "matflow-workflow-workflow_ref-get-param command line option": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX"]], "matflow-workflow-workflow_ref-get-param-source command line option": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX"]], "matflow-workflow-workflow_ref-is-param-set command line option": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX"]], "matflow-workflow-workflow_ref-sub command line option": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX"]], "matflow-workflow-workflow_ref-sub-sub_idx-js command line option": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX"]], "matflow-workflow-workflow_ref-submit command line option": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-print-idx"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-tasks"], [137, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait"]], "matflow-workflow-workflow_ref-unzip command line option": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-log"]], "matflow-workflow-workflow_ref-wait command line option": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "matflow-workflow-workflow_ref-zip command line option": [[137, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log"]], "matflow-zip command line option": [[137, "cmdoption-matflow-zip-arg-WORKFLOW_REF"], [137, "cmdoption-matflow-zip-log"], [137, "cmdoption-matflow-zip-r"]]}})