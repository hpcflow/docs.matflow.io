Search.setIndex({"docnames": ["development/environments", "development/index", "index", "installation", "reference/_autosummary/matflow", "reference/_autosummary/matflow.Action", "reference/_autosummary/matflow.ActionEnvironment", "reference/_autosummary/matflow.ActionRule", "reference/_autosummary/matflow.ActionScope", "reference/_autosummary/matflow.ActionScopeType", "reference/_autosummary/matflow.Command", "reference/_autosummary/matflow.CommandFilesList", "reference/_autosummary/matflow.DirectPosix", "reference/_autosummary/matflow.DirectWindows", "reference/_autosummary/matflow.Element", "reference/_autosummary/matflow.ElementAction", "reference/_autosummary/matflow.ElementActionRun", "reference/_autosummary/matflow.ElementFilter", "reference/_autosummary/matflow.ElementGroup", "reference/_autosummary/matflow.ElementInputFiles", "reference/_autosummary/matflow.ElementInputs", "reference/_autosummary/matflow.ElementIteration", "reference/_autosummary/matflow.ElementOutputFiles", "reference/_autosummary/matflow.ElementOutputs", "reference/_autosummary/matflow.ElementParameter", "reference/_autosummary/matflow.ElementPropagation", "reference/_autosummary/matflow.ElementRepeats", "reference/_autosummary/matflow.ElementResources", "reference/_autosummary/matflow.ElementSet", "reference/_autosummary/matflow.Elements", "reference/_autosummary/matflow.Environment", "reference/_autosummary/matflow.EnvironmentsList", "reference/_autosummary/matflow.Executable", "reference/_autosummary/matflow.ExecutableInstance", "reference/_autosummary/matflow.ExecutablesList", "reference/_autosummary/matflow.FileNameExt", "reference/_autosummary/matflow.FileNameSpec", "reference/_autosummary/matflow.FileNameStem", "reference/_autosummary/matflow.FileSpec", "reference/_autosummary/matflow.GroupList", "reference/_autosummary/matflow.InputFile", "reference/_autosummary/matflow.InputFileGenerator", "reference/_autosummary/matflow.InputFileGeneratorSource", "reference/_autosummary/matflow.InputSource", "reference/_autosummary/matflow.InputSourceType", "reference/_autosummary/matflow.InputValue", "reference/_autosummary/matflow.Jobscript", "reference/_autosummary/matflow.Loop", "reference/_autosummary/matflow.NumCores", "reference/_autosummary/matflow.OutputFileParser", "reference/_autosummary/matflow.OutputFileParserSource", "reference/_autosummary/matflow.OutputLabel", "reference/_autosummary/matflow.Parameter", "reference/_autosummary/matflow.ParameterPath", "reference/_autosummary/matflow.ParameterPropagationMode", "reference/_autosummary/matflow.ParameterValue", "reference/_autosummary/matflow.Parameters", "reference/_autosummary/matflow.ParametersList", "reference/_autosummary/matflow.ResourceList", "reference/_autosummary/matflow.ResourceSpec", "reference/_autosummary/matflow.SGEPosix", "reference/_autosummary/matflow.SchemaInput", "reference/_autosummary/matflow.SchemaOutput", "reference/_autosummary/matflow.SchemaParameter", "reference/_autosummary/matflow.SlurmPosix", "reference/_autosummary/matflow.SubParameter", "reference/_autosummary/matflow.Submission", "reference/_autosummary/matflow.Task", "reference/_autosummary/matflow.TaskInputParameters", "reference/_autosummary/matflow.TaskList", "reference/_autosummary/matflow.TaskObjective", "reference/_autosummary/matflow.TaskOutputParameters", "reference/_autosummary/matflow.TaskSchema", "reference/_autosummary/matflow.TaskSchemasList", "reference/_autosummary/matflow.TaskSourceType", "reference/_autosummary/matflow.TaskTemplateList", "reference/_autosummary/matflow.ValuePerturbation", "reference/_autosummary/matflow.ValueSequence", "reference/_autosummary/matflow.Workflow", "reference/_autosummary/matflow.WorkflowBlueprint", "reference/_autosummary/matflow.WorkflowLoop", "reference/_autosummary/matflow.WorkflowLoopList", "reference/_autosummary/matflow.WorkflowTask", "reference/_autosummary/matflow.WorkflowTaskList", "reference/_autosummary/matflow.WorkflowTemplate", "reference/_autosummary/matflow.app", "reference/_autosummary/matflow.cancel", "reference/_autosummary/matflow.cli", "reference/_autosummary/matflow.get_OS_info", "reference/_autosummary/matflow.get_known_submissions", "reference/_autosummary/matflow.get_shell_info", "reference/_autosummary/matflow.make_and_submit_demo_workflow", "reference/_autosummary/matflow.make_and_submit_workflow", "reference/_autosummary/matflow.make_demo_workflow", "reference/_autosummary/matflow.make_workflow", "reference/_autosummary/matflow.param_classes", "reference/_autosummary/matflow.param_classes.load", "reference/_autosummary/matflow.param_classes.load.LoadCase", "reference/_autosummary/matflow.param_classes.load.LoadStep", "reference/_autosummary/matflow.param_classes.load.StrainRateMode", "reference/_autosummary/matflow.param_classes.orientations", "reference/_autosummary/matflow.param_classes.orientations.EulerDefinition", "reference/_autosummary/matflow.param_classes.orientations.LatticeDirection", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentation", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentationType", "reference/_autosummary/matflow.param_classes.orientations.Orientations", "reference/_autosummary/matflow.param_classes.orientations.QuatOrder", "reference/_autosummary/matflow.param_classes.orientations.UnitCellAlignment", "reference/_autosummary/matflow.param_classes.seeds", "reference/_autosummary/matflow.param_classes.seeds.MicrostructureSeeds", "reference/_autosummary/matflow.param_classes.utils", "reference/_autosummary/matflow.run_hpcflow_tests", "reference/_autosummary/matflow.run_tests", "reference/_autosummary/matflow.show", "reference/_autosummary/matflow.show_legend", "reference/_autosummary/matflow.submit_workflow", "reference/_autosummary/matflow.tests", "reference/_autosummary/matflow.tests.conftest", "reference/_autosummary/matflow.tests.conftest.null_config", "reference/_autosummary/matflow.tests.conftest.pytest_configure", "reference/_autosummary/matflow.tests.conftest.pytest_unconfigure", "reference/_autosummary/matflow.tests.test_cli", "reference/_autosummary/matflow.tests.test_cli.test_hpcflow_version", "reference/_autosummary/matflow.tests.test_cli.test_version", "reference/api", "reference/cli", "reference/config_file", "reference/index", "reference/template_components", "reference/template_components/command_files", "reference/template_components/environments", "reference/template_components/parameters", "reference/template_components/task_schemas", "reference/workflows", "user/how_to/config", "user/how_to/index", "user/how_to/task_schemas", "user/how_to/template_components", "user/how_to/workflow_templates", "user/how_to/workflows", "user/index", "user/tutorials"], "filenames": ["development/environments.rst", "development/index.rst", "index.rst", "installation.rst", "reference/_autosummary/matflow.rst", "reference/_autosummary/matflow.Action.rst", "reference/_autosummary/matflow.ActionEnvironment.rst", "reference/_autosummary/matflow.ActionRule.rst", "reference/_autosummary/matflow.ActionScope.rst", "reference/_autosummary/matflow.ActionScopeType.rst", "reference/_autosummary/matflow.Command.rst", "reference/_autosummary/matflow.CommandFilesList.rst", "reference/_autosummary/matflow.DirectPosix.rst", "reference/_autosummary/matflow.DirectWindows.rst", "reference/_autosummary/matflow.Element.rst", "reference/_autosummary/matflow.ElementAction.rst", "reference/_autosummary/matflow.ElementActionRun.rst", "reference/_autosummary/matflow.ElementFilter.rst", "reference/_autosummary/matflow.ElementGroup.rst", "reference/_autosummary/matflow.ElementInputFiles.rst", "reference/_autosummary/matflow.ElementInputs.rst", "reference/_autosummary/matflow.ElementIteration.rst", "reference/_autosummary/matflow.ElementOutputFiles.rst", "reference/_autosummary/matflow.ElementOutputs.rst", "reference/_autosummary/matflow.ElementParameter.rst", "reference/_autosummary/matflow.ElementPropagation.rst", "reference/_autosummary/matflow.ElementRepeats.rst", "reference/_autosummary/matflow.ElementResources.rst", "reference/_autosummary/matflow.ElementSet.rst", "reference/_autosummary/matflow.Elements.rst", "reference/_autosummary/matflow.Environment.rst", "reference/_autosummary/matflow.EnvironmentsList.rst", "reference/_autosummary/matflow.Executable.rst", "reference/_autosummary/matflow.ExecutableInstance.rst", "reference/_autosummary/matflow.ExecutablesList.rst", "reference/_autosummary/matflow.FileNameExt.rst", "reference/_autosummary/matflow.FileNameSpec.rst", "reference/_autosummary/matflow.FileNameStem.rst", "reference/_autosummary/matflow.FileSpec.rst", "reference/_autosummary/matflow.GroupList.rst", "reference/_autosummary/matflow.InputFile.rst", "reference/_autosummary/matflow.InputFileGenerator.rst", "reference/_autosummary/matflow.InputFileGeneratorSource.rst", "reference/_autosummary/matflow.InputSource.rst", "reference/_autosummary/matflow.InputSourceType.rst", "reference/_autosummary/matflow.InputValue.rst", "reference/_autosummary/matflow.Jobscript.rst", "reference/_autosummary/matflow.Loop.rst", "reference/_autosummary/matflow.NumCores.rst", "reference/_autosummary/matflow.OutputFileParser.rst", "reference/_autosummary/matflow.OutputFileParserSource.rst", "reference/_autosummary/matflow.OutputLabel.rst", "reference/_autosummary/matflow.Parameter.rst", "reference/_autosummary/matflow.ParameterPath.rst", "reference/_autosummary/matflow.ParameterPropagationMode.rst", "reference/_autosummary/matflow.ParameterValue.rst", "reference/_autosummary/matflow.Parameters.rst", "reference/_autosummary/matflow.ParametersList.rst", "reference/_autosummary/matflow.ResourceList.rst", "reference/_autosummary/matflow.ResourceSpec.rst", "reference/_autosummary/matflow.SGEPosix.rst", "reference/_autosummary/matflow.SchemaInput.rst", "reference/_autosummary/matflow.SchemaOutput.rst", "reference/_autosummary/matflow.SchemaParameter.rst", "reference/_autosummary/matflow.SlurmPosix.rst", "reference/_autosummary/matflow.SubParameter.rst", "reference/_autosummary/matflow.Submission.rst", "reference/_autosummary/matflow.Task.rst", "reference/_autosummary/matflow.TaskInputParameters.rst", "reference/_autosummary/matflow.TaskList.rst", "reference/_autosummary/matflow.TaskObjective.rst", "reference/_autosummary/matflow.TaskOutputParameters.rst", "reference/_autosummary/matflow.TaskSchema.rst", "reference/_autosummary/matflow.TaskSchemasList.rst", "reference/_autosummary/matflow.TaskSourceType.rst", "reference/_autosummary/matflow.TaskTemplateList.rst", "reference/_autosummary/matflow.ValuePerturbation.rst", "reference/_autosummary/matflow.ValueSequence.rst", "reference/_autosummary/matflow.Workflow.rst", "reference/_autosummary/matflow.WorkflowBlueprint.rst", "reference/_autosummary/matflow.WorkflowLoop.rst", "reference/_autosummary/matflow.WorkflowLoopList.rst", "reference/_autosummary/matflow.WorkflowTask.rst", "reference/_autosummary/matflow.WorkflowTaskList.rst", "reference/_autosummary/matflow.WorkflowTemplate.rst", "reference/_autosummary/matflow.app.rst", "reference/_autosummary/matflow.cancel.rst", "reference/_autosummary/matflow.cli.rst", "reference/_autosummary/matflow.get_OS_info.rst", "reference/_autosummary/matflow.get_known_submissions.rst", "reference/_autosummary/matflow.get_shell_info.rst", "reference/_autosummary/matflow.make_and_submit_demo_workflow.rst", "reference/_autosummary/matflow.make_and_submit_workflow.rst", "reference/_autosummary/matflow.make_demo_workflow.rst", "reference/_autosummary/matflow.make_workflow.rst", "reference/_autosummary/matflow.param_classes.rst", "reference/_autosummary/matflow.param_classes.load.rst", "reference/_autosummary/matflow.param_classes.load.LoadCase.rst", "reference/_autosummary/matflow.param_classes.load.LoadStep.rst", "reference/_autosummary/matflow.param_classes.load.StrainRateMode.rst", "reference/_autosummary/matflow.param_classes.orientations.rst", "reference/_autosummary/matflow.param_classes.orientations.EulerDefinition.rst", "reference/_autosummary/matflow.param_classes.orientations.LatticeDirection.rst", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentation.rst", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentationType.rst", "reference/_autosummary/matflow.param_classes.orientations.Orientations.rst", "reference/_autosummary/matflow.param_classes.orientations.QuatOrder.rst", "reference/_autosummary/matflow.param_classes.orientations.UnitCellAlignment.rst", "reference/_autosummary/matflow.param_classes.seeds.rst", "reference/_autosummary/matflow.param_classes.seeds.MicrostructureSeeds.rst", "reference/_autosummary/matflow.param_classes.utils.rst", "reference/_autosummary/matflow.run_hpcflow_tests.rst", "reference/_autosummary/matflow.run_tests.rst", "reference/_autosummary/matflow.show.rst", "reference/_autosummary/matflow.show_legend.rst", "reference/_autosummary/matflow.submit_workflow.rst", "reference/_autosummary/matflow.tests.rst", "reference/_autosummary/matflow.tests.conftest.rst", "reference/_autosummary/matflow.tests.conftest.null_config.rst", "reference/_autosummary/matflow.tests.conftest.pytest_configure.rst", "reference/_autosummary/matflow.tests.conftest.pytest_unconfigure.rst", "reference/_autosummary/matflow.tests.test_cli.rst", "reference/_autosummary/matflow.tests.test_cli.test_hpcflow_version.rst", "reference/_autosummary/matflow.tests.test_cli.test_version.rst", "reference/api.rst", "reference/cli.rst", "reference/config_file.rst", "reference/index.rst", "reference/template_components.rst", "reference/template_components/command_files.rst", "reference/template_components/environments.rst", "reference/template_components/parameters.rst", "reference/template_components/task_schemas.rst", "reference/workflows.rst", "user/how_to/config.rst", "user/how_to/index.rst", "user/how_to/task_schemas.rst", "user/how_to/template_components.rst", "user/how_to/workflow_templates.rst", "user/how_to/workflows.rst", "user/index.rst", "user/tutorials.rst"], "titles": ["Environments", "Development", "Welcome to MatFlow\u2019s documentation!", "Installation", "matflow", "matflow.Action", "matflow.ActionEnvironment", "matflow.ActionRule", "matflow.ActionScope", "matflow.ActionScopeType", "matflow.Command", "matflow.CommandFilesList", "matflow.DirectPosix", "matflow.DirectWindows", "matflow.Element", "matflow.ElementAction", "matflow.ElementActionRun", "matflow.ElementFilter", "matflow.ElementGroup", "matflow.ElementInputFiles", "matflow.ElementInputs", "matflow.ElementIteration", "matflow.ElementOutputFiles", "matflow.ElementOutputs", "matflow.ElementParameter", "matflow.ElementPropagation", "matflow.ElementRepeats", "matflow.ElementResources", "matflow.ElementSet", "matflow.Elements", "matflow.Environment", "matflow.EnvironmentsList", "matflow.Executable", "matflow.ExecutableInstance", "matflow.ExecutablesList", "matflow.FileNameExt", "matflow.FileNameSpec", "matflow.FileNameStem", "matflow.FileSpec", "matflow.GroupList", "matflow.InputFile", "matflow.InputFileGenerator", "matflow.InputFileGeneratorSource", "matflow.InputSource", "matflow.InputSourceType", "matflow.InputValue", "matflow.Jobscript", "matflow.Loop", "matflow.NumCores", "matflow.OutputFileParser", "matflow.OutputFileParserSource", "matflow.OutputLabel", "matflow.Parameter", "matflow.ParameterPath", "matflow.ParameterPropagationMode", "matflow.ParameterValue", "matflow.Parameters", "matflow.ParametersList", "matflow.ResourceList", "matflow.ResourceSpec", "matflow.SGEPosix", "matflow.SchemaInput", "matflow.SchemaOutput", "matflow.SchemaParameter", "matflow.SlurmPosix", "matflow.SubParameter", "matflow.Submission", "matflow.Task", "matflow.TaskInputParameters", "matflow.TaskList", "matflow.TaskObjective", "matflow.TaskOutputParameters", "matflow.TaskSchema", "matflow.TaskSchemasList", "matflow.TaskSourceType", "matflow.TaskTemplateList", "matflow.ValuePerturbation", "matflow.ValueSequence", "matflow.Workflow", "matflow.WorkflowBlueprint", "matflow.WorkflowLoop", "matflow.WorkflowLoopList", "matflow.WorkflowTask", "matflow.WorkflowTaskList", "matflow.WorkflowTemplate", "matflow.app", "matflow.cancel", "matflow.cli", "matflow.get_OS_info", "matflow.get_known_submissions", "matflow.get_shell_info", "matflow.make_and_submit_demo_workflow", "matflow.make_and_submit_workflow", "matflow.make_demo_workflow", "matflow.make_workflow", "matflow.param_classes", "matflow.param_classes.load", "matflow.param_classes.load.LoadCase", "matflow.param_classes.load.LoadStep", "matflow.param_classes.load.StrainRateMode", "matflow.param_classes.orientations", "matflow.param_classes.orientations.EulerDefinition", "matflow.param_classes.orientations.LatticeDirection", "matflow.param_classes.orientations.OrientationRepresentation", "matflow.param_classes.orientations.OrientationRepresentationType", "matflow.param_classes.orientations.Orientations", "matflow.param_classes.orientations.QuatOrder", "matflow.param_classes.orientations.UnitCellAlignment", "matflow.param_classes.seeds", "matflow.param_classes.seeds.MicrostructureSeeds", "matflow.param_classes.utils", "matflow.run_hpcflow_tests", "matflow.run_tests", "matflow.show", "matflow.show_legend", "matflow.submit_workflow", "matflow.tests", "matflow.tests.conftest", "matflow.tests.conftest.null_config", "matflow.tests.conftest.pytest_configure", "matflow.tests.conftest.pytest_unconfigure", "matflow.tests.test_cli", "matflow.tests.test_cli.test_hpcflow_version", "matflow.tests.test_cli.test_version", "Python API", "Command-line interface", "Configuration file", "Reference", "Template components", "Command files", "Task schemas", "Parameters", "Task schemas", "Demo workflows", "Configuration how-tos", "How-To Guides", "Task schema how-tos", "Template components", "Workflow templates how-tos", "Workflow how-tos", "User Guide", "Tutorials"], "terms": {"mtex": [0, 107], "task": [0, 8, 14, 15, 16, 21, 24, 25, 28, 29, 39, 40, 42, 43, 44, 45, 46, 47, 50, 51, 53, 56, 59, 61, 62, 68, 69, 71, 72, 73, 75, 76, 78, 80, 82, 84, 125, 127, 128, 133, 135, 140], "have": [0, 12, 13, 21, 66, 80, 125, 134, 139], "input": [0, 5, 14, 15, 16, 21, 28, 40, 41, 42, 43, 45, 49, 50, 51, 58, 59, 61, 67, 68, 72, 74, 76, 77, 78, 82, 131, 132, 133, 136], "paramet": [0, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 90, 91, 92, 93, 94, 95, 97, 98, 103, 105, 107, 109, 113, 115, 127, 128, 132, 136], "which": [0, 14, 16, 28, 45, 61, 66, 67, 78, 91, 92, 93, 94, 95, 97, 106, 125, 126, 133, 134], "i": [0, 3, 5, 7, 12, 13, 14, 16, 21, 28, 40, 42, 43, 45, 46, 50, 59, 60, 61, 64, 67, 72, 76, 77, 78, 80, 82, 91, 92, 95, 98, 111, 129, 131, 133, 134, 137, 139, 140], "fals": [0, 5, 11, 14, 15, 16, 21, 28, 31, 34, 36, 39, 41, 46, 49, 52, 56, 57, 58, 61, 66, 69, 73, 75, 78, 81, 82, 83, 89, 90, 91, 92, 93, 94, 113, 115, 125, 132], "default": [0, 14, 15, 16, 21, 43, 44, 56, 59, 60, 61, 64, 67, 78, 82, 84, 86, 98, 107, 125, 127, 135, 140], "when": [0, 59, 78, 84, 91, 92, 93, 94, 125, 134], "run_mtex": 0, "execut": [0, 3, 10, 16, 30, 34, 46, 72, 78, 86, 91, 92, 115, 125, 126, 132], "must": [0, 7, 16, 41, 46, 61, 67, 126, 134, 137], "defin": [0, 14, 16, 21, 47, 61, 72, 78, 80, 82, 95], "shown": [0, 3], "below": [0, 3, 134], "The": [0, 3, 14, 21, 45, 49, 61, 67, 78, 84, 91, 92, 93, 94, 95, 98, 125, 126, 134], "matlab": 0, "batch": [0, 64, 78], "switch": [0, 60, 64], "us": [0, 5, 14, 21, 28, 45, 59, 61, 72, 78, 84, 91, 92, 93, 94, 98, 106, 107, 115, 125, 126, 131, 133, 134, 136, 138, 139], "document": [0, 97, 125, 134, 139], "here": [0, 78, 126], "window": [0, 3, 59, 125], "maco": [0, 3], "linux": [0, 3], "so": [0, 46, 78, 91, 92, 93, 94, 125], "far": 0, "thi": [0, 5, 12, 13, 14, 16, 21, 27, 28, 40, 41, 42, 43, 45, 46, 49, 50, 58, 59, 60, 61, 64, 66, 67, 72, 76, 78, 80, 82, 84, 89, 91, 92, 93, 94, 95, 107, 111, 125, 126, 128, 132, 133, 134, 135, 137, 139], "test": [0, 17, 41, 107, 111, 112], "onli": [0, 14, 21, 67, 78, 89, 111, 125, 134], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141], "label": [0, 11, 32, 34, 38, 45, 51, 61, 67, 72, 77, 126, 129, 132], "instanc": [0, 32, 89, 125, 139], "command": [0, 2, 3, 5, 11, 16, 33, 72, 78, 91, 92, 107, 114, 127, 128, 132, 134], "script_name_no_ext": 0, "arg": [0, 12, 13, 17, 36, 60, 64, 111, 112, 125, 133], "num_cor": [0, 12, 13, 27, 32, 33, 59, 60, 64, 84, 126], "1": [0, 9, 11, 14, 15, 21, 31, 34, 39, 44, 54, 57, 58, 60, 64, 69, 73, 74, 75, 76, 77, 78, 81, 83, 98, 99, 101, 102, 104, 106, 125, 131, 132, 133], "parallel_mod": [0, 27, 32, 33, 59, 126], "null": [0, 61], "true": [0, 7, 11, 14, 21, 27, 31, 34, 39, 40, 45, 46, 49, 57, 61, 66, 69, 73, 75, 77, 78, 89, 90, 91, 92, 93, 94, 113, 115, 125, 126, 132, 133], "both": [0, 3, 98], "compile_mtex": 0, "run_compiled_mtex": 0, "setup": [0, 30], "set": [0, 25, 28, 45, 59, 67, 78, 82, 89, 91, 92, 115, 126, 135, 140], "up": [0, 78], "e": [0, 45, 59, 61, 79, 84, 125, 131, 133, 137], "g": [0, 79, 84, 125, 133], "modul": [0, 2, 3, 4, 9, 44, 54, 74, 99, 101, 102, 104, 106], "load": [0, 3, 72, 84, 105, 129, 132, 133, 134, 135, 140], "script_nam": 0, "step": [0, 48, 77, 97, 98, 133], "run_": 0, "sh": [0, 3, 60], "matlab_hom": 0, "we": [0, 46, 78, 105, 125, 133, 134, 139], "our": 0, "cento": 0, "docker": 0, "imag": 0, "org": [0, 60, 64, 139], "hpcflow": [0, 3, 111, 137], "produc": [0, 5, 67], "relocat": 0, "conda": 0, "matflow": [0, 1, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "pack": 0, "requir": [0, 49, 59, 67, 78, 125], "becaus": [0, 16, 61, 78, 91, 92, 93, 94, 95, 125], "glibc": 0, "compat": [0, 61, 89, 125], "In": [0, 3, 133, 134, 136, 139], "contain": [0, 3, 11, 31, 34, 39, 40, 42, 45, 50, 57, 59, 69, 73, 75, 76, 78, 84, 91, 92, 94, 95, 125, 126], "instal": [0, 2], "miniconda": 0, "via": [0, 3, 105, 109, 139], "bash": [0, 3, 12, 64, 125, 126], "http": [0, 3, 60, 64, 105, 106, 139], "doc": [0, 17, 84, 125], "io": 0, "project": 0, "en": 0, "latest": [0, 3, 14], "user": [0, 2, 3, 12, 13, 60, 64, 98, 139], "guid": [0, 2], "html": [0, 60, 105], "initialis": [0, 21, 61, 82, 105, 109], "shell": [0, 3, 10, 12, 13, 16, 21, 27, 46, 59, 60, 64, 66, 90, 126], "init": 0, "reload": [0, 126], "bashrc": [0, 3], "sourc": [0, 14, 16, 40, 41, 42, 43, 45, 49, 50, 59, 61, 67, 72, 76, 77, 82, 134, 138], "creat": [0, 3, 78, 105], "new": [0, 3, 14, 28, 78, 82, 91, 92, 93, 94, 125, 139], "pars": [0, 49, 78, 91, 92, 93, 94, 125], "n": 0, "matflow_damask_parse_v3a7_env": 0, "python": [0, 2, 125, 126, 127, 133, 134, 136, 137, 139], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "10": [0, 77, 125, 133], "libgl": 0, "vtk": 0, "packag": [0, 2, 95, 140], "yum": 0, "mesa": 0, "activ": [0, 46, 66, 89, 125], "add": [0, 78, 91, 92], "pip": 0, "deactiv": 0, "tarbal": 0, "save": [0, 16, 28, 40, 42, 45, 50, 59, 67, 76, 77, 78, 105, 126, 134], "result": [0, 98], "compress": 0, "file": [0, 2, 3, 5, 8, 11, 16, 40, 41, 46, 49, 67, 78, 84, 89, 91, 92, 94, 113, 127, 128, 133, 135, 138, 139, 140], "outsid": 0, "transfer": 0, "target": [0, 98, 133], "machin": [0, 21, 27, 46, 66, 89, 126, 134], "On": [0, 61], "unpack": 0, "mkdir": 0, "tar": 0, "xzf": 0, "gz": 0, "c": [0, 102, 105], "bin": [0, 12, 64], "run": [0, 3, 12, 13, 14, 15, 16, 21, 41, 46, 60, 64, 78, 111, 112, 113, 134], "can": [0, 3, 45, 58, 78, 84, 125, 126, 133, 134, 138, 139], "now": [0, 89], "normal": [0, 98, 125], "abov": [0, 3], "resourc": [0, 3, 12, 13, 16, 21, 28, 46, 58, 59, 60, 64, 67, 78, 82, 84, 125], "github": [0, 3, 138], "index": [0, 2, 5, 11, 14, 16, 21, 28, 31, 34, 39, 45, 46, 57, 58, 66, 67, 69, 73, 75, 76, 78, 80, 81, 82, 83, 125], "manag": [0, 78, 134, 140], "an": [0, 3, 5, 7, 28, 61, 67, 72, 77, 78, 105, 115, 125, 138], "160": 0, "damask_parse_env": [0, 132], "matflow_damask_parse_env": 0, "damask_env": [0, 132], "damask_grid": [0, 132], "rm": [0, 3], "interact": [0, 125, 134], "volum": [0, 98, 133], "pwd": 0, "wd": 0, "env": [0, 10], "omp_num_thread": 0, "eisenforschung": 0, "grid": 0, "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "alpha7": 0, "app": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "0a61": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "environ": [1, 2, 5, 6, 31, 32, 34, 41, 49, 125, 127, 128, 130, 132, 134], "matlab_env": [1, 132], "exampl": [1, 3, 61, 97, 98, 125, 131, 138], "definit": 1, "non": [1, 59, 66, 67, 78, 97, 98, 126], "compil": [1, 132], "script": [1, 5, 41, 49, 125], "damask_pars": 1, "damask": [1, 133], "cli": [2, 125, 133, 134, 139], "download": 2, "binari": 2, "advanc": 2, "releas": 2, "note": [2, 12, 13, 14, 16, 59, 60, 64, 67, 95, 134], "how": [2, 25, 61, 105, 140], "tutori": [2, 140], "refer": [2, 60, 64, 82, 105, 106, 125, 126, 134, 139], "api": [2, 3, 127, 133, 134, 136], "line": [2, 3, 10, 46, 113, 127], "interfac": [2, 3, 127], "templat": [2, 16, 21, 58, 78, 79, 80, 82, 84, 91, 92, 93, 94, 125, 127, 133, 134, 135, 140], "compon": [2, 98, 106, 125, 127, 134], "demo": [2, 91, 93, 127], "workflow": [2, 3, 5, 14, 16, 21, 28, 40, 42, 43, 45, 46, 50, 59, 61, 66, 67, 72, 76, 77, 79, 80, 82, 84, 86, 89, 91, 92, 93, 94, 105, 113, 115, 127, 134, 135, 140], "configur": [2, 27, 125, 127, 135, 140], "develop": [2, 3], "search": 2, "page": [2, 3], "There": [3, 139], "ar": [3, 5, 11, 12, 13, 14, 31, 34, 39, 45, 49, 57, 60, 61, 64, 66, 67, 69, 72, 73, 75, 77, 78, 79, 82, 89, 91, 92, 93, 94, 95, 98, 113, 114, 125, 126, 133, 139], "two": [3, 80, 98], "wai": [3, 58], "option": [3, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 22, 23, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 72, 73, 75, 76, 77, 78, 81, 83, 84, 98, 125, 126, 134, 139], "allow": [3, 41, 61, 78, 91, 92, 115, 125], "design": 3, "recommend": 3, "beginn": 3, "strongli": 3, "you": [3, 133, 134, 135, 139], "want": [3, 134], "cluster": 3, "explor": [3, 125], "comfort": 3, "work": [3, 16, 46, 64, 133], "If": [3, 11, 14, 21, 31, 34, 39, 43, 46, 57, 61, 69, 73, 75, 78, 80, 82, 89, 90, 91, 92, 93, 94, 98, 113, 115, 125, 126, 134, 139], "interest": 3, "contribut": 3, "place": 3, "start": [3, 9, 29, 44, 46, 48, 54, 56, 66, 74, 77, 78, 99, 101, 102, 104, 106, 132, 133, 137], "simultan": [3, 78, 91, 92, 115, 125], "through": [3, 61, 135], "termin": 3, "prompt": 3, "open": 3, "past": 3, "press": 3, "enter": 3, "touch": 3, "tmp": 3, "curl": 3, "fssl": 3, "raw": 3, "githubusercont": 3, "com": [3, 64, 105], "main": [3, 8, 9, 132], "src": 3, "prereleas": 3, "path": [3, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 21, 24, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 61, 62, 63, 66, 67, 69, 70, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 86, 91, 92, 93, 94, 105, 109, 115, 126, 133, 134, 139], "univlink": 3, "powershel": [3, 13, 125, 126], "scriptblock": 3, "object": [3, 11, 14, 21, 31, 34, 39, 46, 57, 58, 67, 69, 72, 73, 75, 78, 81, 82, 83, 84, 95, 97, 105, 125, 136, 137, 139], "net": [3, 60, 106], "webclient": 3, "downloadstr": 3, "ps1": 3, "from": [3, 5, 11, 14, 16, 21, 27, 31, 34, 39, 43, 46, 49, 57, 58, 61, 62, 67, 69, 72, 73, 75, 78, 81, 82, 83, 84, 89, 91, 92, 93, 94, 105, 107, 111, 125, 126, 135, 138, 140], "repositori": [3, 138], "follow": [3, 125, 126, 134, 138], "It": 3, "zip": [3, 139], "archiv": 3, "singl": [3, 11, 31, 34, 39, 45, 57, 58, 61, 69, 73, 75, 76, 81, 82, 83, 97, 98, 139], "folder": 3, "extract": [3, 60, 64], "access": [3, 11, 31, 34, 39, 57, 58, 69, 73, 75, 81, 83, 98, 133], "locat": [3, 133], "depend": [3, 14, 16, 21, 28, 46, 78, 82, 84, 125], "oper": [3, 88, 90, 125], "system": [3, 88, 90, 125], "local": [3, 14, 16, 21, 28, 43, 44, 67, 82, 125, 139], "share": 3, "librari": 3, "applic": [3, 16, 21, 125], "support": [3, 27, 78, 90, 91, 92, 115, 125, 139], "usernam": 3, "appdata": 3, "A": [3, 11, 31, 34, 39, 45, 57, 61, 62, 67, 69, 72, 73, 75, 78, 84, 97, 98, 102, 126, 133], "symbol": 3, "link": 3, "alia": [3, 125], "point": 3, "simpl": [3, 133], "ad": [3, 25, 45, 78, 82], "zshrc": 3, "profil": 3, "ani": [3, 8, 9, 14, 15, 16, 21, 27, 33, 45, 52, 56, 60, 64, 67, 74, 77, 78, 82, 84, 132, 134], "detect": 3, "try": [3, 82], "alreadi": [3, 78, 91, 92, 93, 94, 125], "stop": [3, 48, 77, 133], "exit": [3, 78, 125], "hpc": [3, 60], "check": [3, 28, 43, 67, 78, 82, 125], "connect": 3, "internet": 3, "first": [3, 46, 66, 80, 98, 125, 134], "might": [3, 12, 13, 134], "need": [3, 46, 67, 134], "proxi": 3, "pypi": 3, "come": [3, 14, 21, 82], "soon": 3, "avail": [3, 67, 111, 125, 126], "format": [3, 78, 84, 91, 92, 93, 94, 125, 138, 139], "correspond": [3, 66, 82, 97, 98], "differ": [3, 78], "pyinstal": 3, "gener": [3, 5, 14, 16, 41, 42, 46, 49, 58, 66, 67, 78, 84, 91, 92, 93, 94, 98, 105, 107, 125, 126, 135, 140], "everyth": 3, "click": 3, "your": [3, 134], "platform": 3, "executablematflow": 3, "v0": 3, "linuxlinux": 3, "foldermatflow": 3, "dir": 3, "zipmaco": 3, "macosmaco": 3, "zipwindow": 3, "win": 3, "ex": [3, 13], "switcher": 3, "top": 3, "right": 3, "corner": 3, "other": [3, 14, 21, 43, 61, 67, 78, 106], "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 137], "function": [4, 111, 117, 121, 125, 126, 139], "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 126, 131], "none": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 113, 115, 132], "script_data_in": 5, "script_data_out": 5, "script_ex": 5, "abort": [5, 41, 49, 78], "input_file_gener": [5, 8, 9], "output_file_pars": [5, 8, 9], "input_fil": [5, 14, 15, 16, 21, 28, 41, 67, 82], "output_fil": [5, 14, 15, 16, 21, 49], "rule": [5, 7, 41, 137], "base": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109], "method": [5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 97, 98, 103, 105, 107, 109, 137], "list": [5, 6, 7, 10, 11, 12, 13, 14, 16, 18, 21, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 95, 97, 98, 106, 126, 131, 134], "actionenviron": 5, "str": [5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 21, 24, 27, 28, 30, 32, 33, 35, 36, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 76, 77, 78, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 98, 109, 126], "bool": [5, 11, 14, 15, 16, 21, 27, 28, 31, 34, 39, 40, 41, 42, 45, 46, 49, 50, 52, 56, 57, 59, 61, 66, 67, 69, 73, 75, 76, 77, 78, 82, 89, 90, 91, 92, 93, 94, 103, 113, 115, 126], "inputfilegener": [5, 42], "outputfilepars": [5, 50], "filespec": [5, 40, 41, 49, 129], "actionrul": [5, 82], "expand": 5, "classmethod": [5, 6, 7, 8, 10, 11, 12, 13, 17, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 97, 98, 105, 107, 109], "from_json_lik": [5, 6, 7, 8, 10, 11, 17, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 61, 62, 63, 66, 67, 69, 70, 72, 73, 75, 76, 77, 81, 83, 84, 105, 109, 131], "json_lik": [5, 6, 7, 8, 10, 11, 17, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 61, 62, 63, 66, 67, 69, 70, 72, 73, 75, 76, 77, 81, 83, 84], "shared_data": [5, 6, 7, 8, 10, 11, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 61, 62, 63, 66, 67, 69, 70, 72, 73, 75, 76, 77, 81, 83, 84], "union": [5, 6, 7, 8, 10, 16, 18, 21, 24, 27, 28, 30, 32, 33, 35, 36, 37, 38, 40, 41, 42, 45, 47, 48, 50, 51, 52, 53, 58, 59, 61, 62, 63, 66, 67, 70, 72, 76, 78, 81, 83, 84], "dict": [5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 21, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 88, 90, 91, 92, 97, 115, 126], "objectlist": [5, 6, 7, 10, 18, 27, 28, 30, 32, 33, 35, 36, 37, 38, 40, 41, 42, 47, 48, 50, 51, 52, 53, 58, 59, 62, 63, 66, 67, 70, 72, 76, 81, 83, 84], "generate_data_index": 5, "act_idx": 5, "ear_id": [5, 21, 46, 78, 125], "schema_data_idx": 5, "all_data_idx": 5, "param_sourc": 5, "data": [5, 14, 16, 17, 21, 40, 42, 45, 50, 59, 67, 76, 78, 82, 105], "element": [5, 12, 13, 15, 16, 21, 24, 25, 28, 41, 46, 60, 61, 64, 67, 68, 71, 78, 82, 98, 114, 125, 133], "iter": [5, 14, 21, 29, 67, 78], "whose": [5, 11, 31, 34, 39, 45, 57, 61, 67, 69, 72, 73, 75, 78, 80, 82, 125], "overal": [5, 21], "pass": [5, 66, 67, 94, 98, 125, 133], "mutat": [5, 12, 13, 60, 64, 82], "return": [5, 10, 12, 13, 14, 16, 21, 27, 28, 29, 40, 41, 42, 43, 45, 46, 49, 50, 59, 60, 64, 66, 67, 72, 76, 77, 78, 80, 82, 84, 88, 90, 91, 92, 93, 94, 97, 98, 105, 115, 125, 126], "type": [5, 9, 10, 12, 13, 14, 16, 21, 28, 29, 40, 41, 42, 43, 44, 45, 46, 49, 50, 54, 57, 59, 60, 61, 64, 66, 67, 72, 74, 76, 77, 78, 80, 82, 84, 88, 90, 91, 92, 93, 94, 97, 98, 99, 101, 102, 103, 104, 105, 106, 115, 125, 126, 131, 133, 137], "int": [5, 12, 13, 14, 15, 16, 21, 24, 26, 27, 28, 29, 40, 42, 43, 45, 46, 47, 48, 50, 53, 59, 60, 64, 65, 66, 67, 72, 76, 77, 78, 80, 82, 86, 89, 91, 92, 98, 105, 109, 113, 115, 131], "get_app_data_script_path": 5, "get_command_input_file_label": 5, "get": [5, 11, 12, 13, 14, 15, 16, 21, 27, 28, 31, 34, 39, 41, 46, 47, 57, 58, 60, 64, 66, 67, 69, 72, 73, 75, 78, 80, 81, 82, 83, 88, 90, 98, 126, 135, 140], "tupl": [5, 10, 11, 12, 13, 16, 31, 34, 39, 40, 42, 45, 46, 47, 50, 57, 58, 59, 60, 64, 66, 67, 69, 72, 73, 75, 76, 77, 80, 81, 83], "get_command_input_typ": 5, "get_command_output_typ": 5, "stdout": [5, 10, 12, 13, 46, 60, 64, 129, 132], "stderr": [5, 10, 46, 129, 132], "argument": [5, 10, 11, 27, 31, 34, 39, 45, 57, 58, 61, 69, 73, 75, 81, 83, 97, 125], "get_commands_action_env": 5, "get_input_file_generator_action_env": 5, "get_input_file_label": 5, "get_input_typ": 5, "consum": 5, "get_output_file_label": 5, "get_output_file_parser_action_env": 5, "get_output_typ": [5, 10], "output": [5, 8, 12, 13, 14, 15, 16, 21, 49, 51, 60, 62, 64, 67, 71, 72, 74, 78, 82, 113, 114, 125, 131, 132, 133, 136], "standard": [5, 78], "error": [5, 60, 64, 78, 126], "parser": [5, 49, 50], "get_param_dump_file_path_json": 5, "js_idx": [5, 16, 78, 125], "js_act_idx": [5, 16, 78, 125], "static": [5, 12, 13, 27, 60, 64, 66, 67, 82, 105], "get_param_dump_file_stem": 5, "get_param_load_file_path_hdf5": 5, "get_param_load_file_path_json": 5, "get_param_load_file_stem": 5, "get_parameter_depend": [5, 72], "find": [5, 72, 82], "where": [5, 14, 18, 21, 26, 40, 42, 43, 45, 50, 51, 59, 67, 72, 76, 78, 91, 92, 93, 94, 98, 125, 133], "given": [5, 25, 41, 43, 46, 66, 67, 72, 78, 82, 90, 125], "schemaparamet": [5, 72], "get_possible_scop": 5, "scope": [5, 6, 16, 21, 58, 59, 78, 84], "inclus": 5, "order": [5, 106], "decreas": 5, "specif": [5, 12, 13, 16, 21, 27, 59, 60, 64], "actionscop": [5, 6, 59], "get_precise_scop": 5, "get_resolved_action_env": 5, "relevant_scop": 5, "actionscopetyp": [5, 8], "get_script_nam": 5, "is_app_data_script": 5, "is_input_type_requir": [5, 67], "typ": [5, 8, 14, 15, 16, 21, 52, 61, 62, 63, 67, 137], "provided_fil": 5, "properti": [5, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 32, 36, 38, 40, 42, 45, 46, 47, 50, 58, 59, 61, 62, 63, 66, 67, 72, 76, 77, 78, 80, 82, 97, 98, 109, 136], "task_schema": [5, 61], "to_dict": [5, 6, 7, 8, 10, 11, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 62, 63, 66, 67, 69, 70, 72, 73, 75, 76, 77, 81, 83, 84, 97, 98, 103, 105, 107, 109], "to_json_lik": [5, 6, 7, 8, 10, 11, 17, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 61, 62, 63, 66, 67, 69, 70, 72, 73, 75, 76, 77, 81, 83, 84], "dct": [5, 6, 7, 8, 10, 11, 18, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 61, 62, 63, 66, 67, 69, 70, 72, 73, 75, 76, 77, 81, 83, 84], "exclud": [5, 6, 7, 8, 10, 11, 18, 21, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 61, 62, 63, 66, 67, 69, 70, 72, 73, 75, 76, 77, 81, 83, 84, 89, 90, 125], "check_exist": 7, "check_miss": 7, "repres": [7, 8, 25, 28, 46, 51, 59, 61, 72, 80, 82, 84, 97, 98], "condit": [7, 17, 98, 126, 131], "action": [7, 8, 14, 15, 16, 21, 41, 46, 49, 58, 59, 67, 72, 78, 82, 84, 132], "includ": [7, 14, 21, 78, 84, 89, 91, 92, 93, 94, 125, 133, 134, 137], "kwarg": [8, 11, 12, 13, 17, 31, 34, 39, 57, 58, 60, 64, 69, 73, 75, 77, 78, 81, 83, 97, 109], "identif": 8, "subset": [8, 51, 67, 78, 80], "schema": [8, 14, 16, 21, 39, 49, 51, 52, 61, 67, 68, 71, 72, 73, 125, 127, 128, 133, 135, 140], "filter": [8, 12, 13, 60, 64, 106], "process": [8, 9, 12, 13, 60, 64, 89, 125, 132], "to_str": [8, 43], "valu": [9, 11, 16, 24, 27, 31, 34, 35, 36, 37, 38, 39, 44, 45, 54, 57, 58, 61, 67, 69, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 98, 99, 101, 102, 104, 106, 125, 126, 131, 132, 133, 135, 140], "qualnam": [9, 44, 54, 74, 99, 101, 102, 104, 106], "boundari": [9, 44, 46, 54, 74, 98, 99, 101, 102, 104, 106], "enum": [9, 44, 54, 74, 99, 101, 102, 104, 106], "4": [9, 102, 105, 132, 133], "2": [9, 44, 54, 60, 64, 74, 84, 98, 99, 102, 131, 132, 133], "variabl": [10, 16, 126], "stdin": 10, "get_command_lin": 10, "ear": [10, 14, 16, 21, 46, 78, 82, 114], "resolv": [10, 14, 16, 21, 126], "_object": [11, 31, 34, 39, 57, 58, 69, 73, 75, 81, 83], "like": [11, 31, 34, 39, 57, 58, 64, 69, 73, 75, 95, 125, 133, 134, 139], "dot": [11, 31, 34, 39, 45, 57, 69, 73, 75, 125], "notat": [11, 31, 34, 39, 57, 69, 73, 75], "add_object": [11, 31, 34, 39, 57, 58, 69, 73, 75, 81, 83], "obj": [11, 31, 34, 39, 57, 58, 69, 73, 75, 81, 83], "skip_dupl": [11, 31, 34, 39, 57, 58, 69, 73, 75, 81, 83], "is_hash": [11, 31, 34, 39, 57, 69, 73, 75], "accept": [11, 31, 34, 39, 45, 57, 69, 73, 75], "kei": [11, 31, 34, 39, 57, 58, 61, 67, 69, 72, 73, 75, 82, 89, 97, 125, 126], "hash": [11, 27, 31, 34, 39, 57, 69, 73, 75], "access_attribute_valu": [11, 31, 34, 39, 57, 69, 73, 75, 81, 83], "specifi": [11, 12, 13, 14, 21, 27, 30, 31, 34, 39, 45, 57, 58, 60, 61, 64, 67, 69, 73, 75, 78, 81, 82, 83, 84, 91, 92, 93, 94, 98, 125, 126, 139], "addit": [11, 31, 34, 39, 57, 58, 69, 73, 75, 81, 83], "keyword": [11, 31, 34, 39, 45, 57, 58, 61, 69, 73, 75, 81, 83], "get_al": [11, 31, 34, 39, 57, 58, 69, 73, 75, 81, 83, 126], "one": [11, 31, 34, 39, 57, 58, 61, 69, 73, 75, 78, 81, 83, 91, 92, 93, 94, 125, 133], "more": [11, 31, 34, 39, 57, 58, 61, 69, 73, 75, 81, 83, 98, 113, 137, 139], "list_attr": [11, 31, 34, 39, 57, 58, 69, 73, 75, 81, 83], "uniqu": [11, 31, 34, 39, 57, 58, 66, 67, 69, 73, 75, 78, 81, 83], "constitu": [11, 31, 34, 39, 57, 58, 69, 73, 75, 81, 83], "default_shebang_arg": [12, 13, 60, 64], "default_shell_arg": [12, 13, 60, 64], "default_shell_execut": [12, 13, 64], "cancel_job": [12, 13, 60, 64], "js_ref": [12, 13, 60, 64], "jobscript": [12, 13, 16, 27, 60, 64, 66, 78, 91, 92, 114, 115, 125], "get_job_state_info": [12, 13, 60, 64], "num_js_el": [12, 13], "queri": [12, 13, 60, 64, 125], "schedul": [12, 13, 21, 27, 46, 59, 60, 64, 66, 78, 89, 126], "state": [12, 13, 16, 46, 60, 64, 66, 114], "all": [12, 13, 14, 16, 21, 27, 46, 60, 61, 64, 66, 67, 68, 71, 78, 82, 84, 105], "": [12, 13, 16, 45, 46, 60, 64, 66, 72, 80, 97, 107, 125, 128], "job": [12, 13, 27, 60, 64], "id": [12, 13, 14, 21, 60, 64, 78, 82, 86, 89, 125], "statu": [12, 13, 16, 60, 64, 66], "appear": [12, 13, 60, 64], "jobscriptelementst": [12, 13, 46, 60, 64, 66], "get_submit_command": [12, 13, 60, 64], "js_path": [12, 13, 60, 64], "dep": [12, 13, 46, 60, 64], "get_version_info": [12, 13, 60, 64], "is_jobscript_act": [12, 13, 60, 64], "process_id": [12, 13, 46], "process_cmdlin": [12, 13], "wait": [12, 13, 60, 78, 91, 92, 115], "upstream": [12, 13, 14, 16, 21, 28, 49, 78, 82], "complet": [12, 13, 64, 78, 91, 92, 125], "is_num_cores_support": [12, 13, 60, 64], "core_rang": [12, 13, 60, 64], "parse_submission_output": [12, 13, 60, 64], "process_resourc": [12, 13, 60, 64], "scheduler_config": [12, 13, 60, 64], "perform": [12, 13, 60, 64], "wait_for_jobscript": [12, 13, 60, 64], "callback": [12, 13, 125], "until": [12, 13, 78, 91, 92, 125], "callabl": [12, 13], "id_": [14, 16, 21, 78], "is_pend": [14, 16, 21], "es_idx": 14, "seq_idx": 14, "src_idx": 14, "iteration_id": 14, "workflowtask": [14, 21, 24, 29, 47, 56, 67, 68, 71], "action_run": [14, 21], "elementactionrun": [14, 19, 20, 21, 22, 23, 24, 78], "final": [14, 21, 66, 78], "taken": [14, 21], "each": [14, 21, 46, 67, 82, 113, 131], "elementact": [14, 19, 20, 21, 22, 23, 24], "dir_nam": [14, 67, 82], "element_set": [14, 25, 28, 58, 59, 67, 82], "element_set_idx": 14, "action_idx": [14, 15, 21], "run_idx": [14, 15, 21], "raise_on_miss": [14, 15, 16, 21, 56, 82], "most": [14, 78, 106], "recent": [14, 78, 89, 91, 92, 125, 134], "persist": [14, 21, 28, 40, 42, 45, 50, 59, 67, 76, 77, 78, 84, 91, 92, 93, 94, 105, 125, 134, 135, 140], "store": [14, 21, 40, 42, 45, 50, 59, 76, 78, 91, 92, 93, 94, 115, 125, 139], "get_ear_depend": [14, 16, 21], "as_object": [14, 16, 21, 28, 82], "get_data_idx": [14, 15, 16, 21], "within": [14, 21, 45, 61, 125, 126, 134], "get_dependent_ear": [14, 16, 21], "get_dependent_element_iter": [14, 21], "elementiter": [14, 19, 20, 22, 23, 78, 82], "get_dependent_el": [14, 21, 82], "get_dependent_elements_recurs": 14, "task_insert_id": [14, 46, 47, 78, 80], "downstream": [14, 16, 21, 25, 61, 78, 82], "recurs": 14, "initi": [14, 84, 137], "identifi": [14, 45, 137], "previou": 14, "should": [14, 25, 45, 51, 59, 61, 67, 78, 91, 92, 93, 94, 125], "parametris": [14, 28, 49, 67, 78, 79, 84, 91, 92, 94, 97, 98], "get_dependent_task": [14, 21, 82], "get_element_depend": [14, 21, 82], "get_element_iteration_depend": [14, 21], "get_input_depend": [14, 16, 21], "sequenc": [14, 16, 21, 28, 45, 53, 67, 76, 77, 82], "get_parameter_sourc": [14, 15, 16, 21, 78], "as_str": [14, 15, 16, 21], "use_task_index": [14, 15, 16, 21], "rather": [14, 21], "than": [14, 21], "insert": [14, 21, 78, 82], "get_sequence_valu": 14, "sequence_path": [14, 28], "get_task_depend": [14, 21, 28, 82], "mai": [14, 21, 28, 46, 61, 67, 78, 82, 113, 125, 126, 137], "either": [14, 21, 78, 82, 84, 92, 94, 98, 125], "global_idx": 14, "across": [14, 68, 71, 125], "init_loop_index": 14, "loop_nam": 14, "elementinputfil": [14, 21], "input_source_idx": 14, "input_sourc": [14, 28, 61, 67, 82], "inputsourc": [14, 28, 67], "elementinput": [14, 21], "latest_iter": 14, "elementoutputfil": [14, 21], "elementoutput": [14, 21], "schema_paramet": [14, 21], "sequence_idx": 14, "to_element_set_data": 14, "bound": [14, 80, 82], "inputvalu": [14, 28, 61, 67, 132], "resourcelist": [14, 84], "element_iter": [15, 16, 19, 20, 22, 23, 28], "get_parameter_nam": [15, 16, 21], "prefix": [15, 16, 21, 67, 77], "num_run": 15, "element_act": [16, 19, 20, 22, 23], "data_idx": [16, 21, 24], "start_tim": [16, 46, 66], "end_tim": [16, 46, 66], "snapshot_start": 16, "snapshot_end": 16, "submission_idx": [16, 78, 125], "success": 16, "skip": [16, 78], "exit_cod": [16, 78, 125], "metadata": [16, 125], "datetim": [16, 46, 66, 78, 91, 92, 93, 94, 125], "compose_command": 16, "js_action_idx": [16, 46, 78, 125], "shell_var": 16, "string": [16, 40, 42, 45, 46, 50, 59, 61, 72, 76, 78, 84, 91, 92, 94, 98, 125, 126], "compose_sourc": [16, 41, 49], "content": [16, 40, 41, 42, 49, 50, 125], "dir_diff": 16, "directorysnapshotdiff": 16, "chang": [16, 28, 78, 134], "directori": [16, 35, 36, 37, 38, 46, 64, 67, 78, 91, 92, 93, 94, 125, 126, 133], "due": [16, 78], "get_ifg_input_valu": 16, "get_ofp_input": 16, "get_ofp_output_fil": 16, "get_ofp_output": 16, "get_environ": 16, "inform": [16, 46, 60, 88, 89, 90, 113, 125, 135, 140], "about": [16, 60, 88, 89, 90, 113, 125, 135, 139, 140], "doe": [16, 61, 78, 91, 92, 93, 94, 115, 125, 134], "aim": [16, 98], "help": [16, 106, 125, 135], "determin": [16, 61, 92, 94, 125], "get_input_valu": 16, "get_resourc": [16, 21], "consid": [16, 21, 43, 64, 67, 78, 80], "level": [16, 21, 58, 84, 134], "write_sourc": [16, 41, 49], "cast": [17, 45], "from_spec": [17, 33, 76], "spec": [17, 33, 58, 76], "_data_copi": 17, "elementfilt": [18, 26, 51, 67], "group_by_distinct": [18, 67], "parameterpath": [18, 67], "element_action_run": [19, 20, 22, 23], "prefixed_names_unlabel": [19, 20, 22, 23], "prefixed_names_unlabelled_str": [19, 20, 22, 23], "ears_initialis": [21, 78], "loop_idx": [21, 82], "ear_ids_flat": 21, "whether": [21, 46, 67, 92], "been": [21, 46, 66, 125], "befor": [21, 78, 134], "resolut": 21, "set_default": [21, 27], "os_nam": [21, 27, 46, 59], "get_resources_obj": 21, "elementresourc": [21, 46], "get_template_resourc": 21, "parent": [24, 78, 80], "data_idx_is_set": 24, "get_siz": 24, "store_kwarg": 24, "is_set": 24, "nesting_ord": [25, 28, 67, 77, 82], "newli": [25, 60, 64, 105], "propag": [25, 61], "number": [26, 76, 89, 98, 105, 109, 113, 125, 131, 137], "scratch": [27, 59], "parallelmod": [27, 59], "num_cores_per_nod": [27, 59, 126], "num_thread": [27, 59], "num_nod": [27, 59, 126], "use_job_arrai": [27, 59], "time_limit": [27, 59], "scheduler_arg": [27, 46, 59], "shell_arg": [27, 46, 59], "sge_parallel_env": [27, 59], "slurm_partit": [27, 59], "slurm_num_task": [27, 59], "slurm_num_tasks_per_nod": [27, 59], "slurm_num_nod": [27, 59], "slurm_num_cpus_per_task": [27, 59], "slurm_is_parallel": 27, "slurm": [27, 64, 126], "indic": [27, 40, 42, 50, 59, 66, 67, 80, 82, 125], "parallel": [27, 78, 91, 92, 115, 125], "get_default_os_nam": 27, "get_default_schedul": 27, "shell_nam": [27, 46, 90, 125], "get_default_shel": 27, "get_jobscript_hash": 27, "distinguish": [27, 61], "is_parallel": 27, "agnost": 27, "validate_against_machin": 27, "valid": [27, 82, 84, 127, 134, 137], "against": 27, "those": [27, 61, 78, 126], "repeat": [28, 67, 82], "group": [28, 39, 40, 42, 45, 50, 59, 61, 67, 76, 82, 105, 132], "sourceable_elem_it": [28, 67, 82], "allow_non_coincident_task_sourc": 28, "inputfil": [28, 67], "valuesequ": [28, 67], "elementgroup": [28, 67], "defined_input_typ": [28, 67], "elem_iter_id": 28, "element_local_idx_rang": 28, "retriev": [28, 46, 59, 68, 71, 78, 89, 125, 134], "belong": [28, 78], "ensure_element_set": 28, "get_defined_parameter_typ": 28, "get_defined_sub_parameter_typ": 28, "get_locally_defined_input": 28, "get_sequence_by_path": 28, "get_sequence_from_path": 28, "input_typ": [28, 72, 77], "is_input_type_provid": 28, "labelled_path": [28, 67], "provid": [28, 46, 67, 113, 125, 134, 138], "prepare_persistent_copi": 28, "copi": [28, 59, 67, 78, 105, 133, 134], "self": 28, "made": [28, 67, 134], "dure": [28, 125], "integr": 28, "task_templ": [28, 72], "undefined_input_typ": [28, 67], "islic": [29, 56], "end": [29, 46, 56, 66, 78], "_hash_valu": [30, 38, 52, 72], "executableinst": 32, "filter_inst": 32, "file_nam": [35, 37], "filenamespec": [35, 37, 129], "is_regex": 36, "ext": [36, 38], "stem": [36, 38], "extens": [40, 42, 50, 78, 84], "store_cont": [40, 42, 50], "make_persist": [40, 42, 45, 50, 59, 72, 76, 77, 82], "integ": [40, 42, 45, 50, 59, 76], "zarr": [40, 42, 45, 50, 59, 76, 78, 82, 91, 92, 93, 94, 105, 125, 139], "normalised_files_path": 40, "normalised_path": [40, 45, 59, 77], "read_cont": [40, 42, 50], "get_action_rul": 41, "source_typ": 43, "import_ref": 43, "task_ref": [43, 78], "task_source_typ": 43, "element_it": 43, "from_str": 43, "str_defn": 43, "get_task": 43, "referenc": 43, "import_": 43, "is_in": 43, "other_input_sourc": 43, "without": [43, 67, 77, 125], "import": [44, 67, 133, 134, 138, 139], "value_class_method": [45, 77], "associ": [45, 66, 67, 78, 125], "schemainput": [45, 67, 72], "multipl": [45, 49, 61, 78, 82, 91, 92, 97, 113, 115, 125], "invok": [45, 97, 125, 134], "delimit": [45, 46, 105, 109, 125], "nest": [45, 98, 126], "structur": [45, 78], "is_sub_valu": [45, 77], "sub": [45, 77, 95, 134], "part": [45, 66, 77], "interpret": [45, 125], "labelled_typ": [45, 77], "item": [45, 61, 76, 82, 97, 125, 135, 140], "normalised_inputs_path": [45, 77], "task_act": 46, "task_el": 46, "task_loop_idx": 46, "submit_tim": [46, 66], "submit_hostnam": 46, "submit_machin": 46, "submit_cmdlin": 46, "scheduler_job_id": 46, "version_info": 46, "scheduler_nam": [46, 125], "ndarrai": [46, 98, 105, 109], "ear_id_file_nam": 46, "ear_id_file_path": 46, "all_ear": [46, 66], "cancel": [46, 60, 64, 66, 78], "compose_jobscript": 46, "os_arg": [46, 126], "prepar": 46, "direct_stderr_file_nam": 46, "For": [46, 61, 67, 68, 71, 78, 105, 109, 125, 131, 138, 139], "direct": [46, 98, 126, 131, 133], "direct_stderr_path": 46, "direct_stdout_file_nam": 46, "direct_stdout_path": 46, "direct_win_pid_file_nam": 46, "direct_win_pid_file_path": 46, "element_run_dir_file_nam": 46, "element_run_dir_file_path": 46, "last": 46, "time": [46, 66, 78, 84, 91, 92, 93, 94, 98, 125], "get_active_st": 46, "as_json": [46, 66, 89], "get_commands_file_nam": 46, "get_task_loop_idx_arrai": 46, "is_arrai": [46, 60, 64], "is_submit": 46, "ha": [46, 61, 97, 125], "submit": [46, 60, 64, 66, 78, 91, 92, 115], "jobscript_nam": 46, "jobscript_path": 46, "make_artifact_dir": 46, "num_act": [46, 82], "num_el": [46, 60, 64, 78, 82], "submiss": [46, 78, 86, 89, 91, 92, 113, 135, 140], "scheduler_js_ref": 46, "scheduler_ref": 46, "print_stdout": [46, 66, 78], "workflow_app_alia": 46, "write_ear_id_fil": 46, "write": [46, 58, 78, 132], "text": [46, 125], "token": 46, "per": [46, 125], "write_element_run_dir_fil": 46, "run_dir": 46, "assum": [46, 86, 125], "same": [46, 78], "cross": 46, "combin": [46, 78, 84, 91, 92, 93, 94, 125], "write_jobscript": 46, "num_iter": [47, 80], "non_iterable_paramet": 47, "insert_id": [47, 67, 82], "extent": [47, 80], "task_object": [47, 80], "workflow_templ": [47, 58, 59, 79], "save_fil": 49, "clean_up": 49, "singular": 49, "Not": 49, "confus": 49, "plural": 49, "appli": [51, 61, 78, 84, 137], "is_fil": 52, "sub_paramet": 52, "subparamet": 52, "factori": [52, 84], "_value_class": 52, "_valid": 52, "valida": 52, "float": [53, 65, 76, 98, 131], "tasktempl": 53, "taskschema": [53, 67, 136], "explicit": [54, 61, 132], "implicit": [54, 61, 62, 132], "never": [54, 61], "return_element_paramet": 56, "get_scop": 58, "merge_template_resourc": 58, "temp_res_lst": 58, "merg": 58, "lower": [58, 137], "preced": [58, 78], "normalis": [58, 67, 77], "potenti": 58, "sever": [58, 139], "overridden": 58, "out": [58, 98, 125], "yaml": [58, 78, 84, 91, 92, 93, 94, 105, 109, 125, 129, 132, 138, 139], "instead": [58, 125], "correct": 59, "wsl": [59, 125, 126], "still": 59, "nt": 59, "timedelta": 59, "allowed_paramet": 59, "copy_non_persist": 59, "make": [59, 78, 91, 93, 134, 139], "normalised_resources_path": 59, "cwd_switch": [60, 126], "serial": 60, "gridschedul": 60, "sourceforg": 60, "htmlman": 60, "htmlman1": 60, "qsub": 60, "softpanorama": 60, "grid_engin": 60, "queue": 60, "queue_stat": 60, "shtml": 60, "default_array_item_var": [60, 64], "sge_task_id": 60, "default_array_switch": [60, 64], "t": [60, 82, 125, 133], "default_cwd_switch": 60, "cwd": 60, "default_del_cmd": [60, 64], "qdel": 60, "default_js_cmd": [60, 64], "default_login_nodes_cmd": [60, 64], "qconf": 60, "default_login_node_match": [60, 64], "login": [60, 64], "default_show_cmd": [60, 64], "qstat": 60, "default_submit_cmd": [60, 64], "format_array_request": [60, 64], "format_core_request_lin": [60, 64], "format_opt": [60, 64], "sub_idx": [60, 64, 78, 125], "format_std_stream_file_option_lin": [60, 64], "format_switch": [60, 64], "get_job_status": 60, "current": [60, 64, 67, 78, 91, 92, 93, 94, 125, 126, 133, 134], "get_login_nod": 60, "hostnam": [60, 126], "administr": 60, "node": 60, "report": 60, "job_id": [60, 64], "pend": [60, 64], "state_lookup": [60, 64], "eh": 60, "eq": 60, "r": [60, 125, 129], "rt": 60, "rr": 60, "dr": 60, "d": [60, 129], "dt": 60, "hr": 60, "hq": 60, "qw": 60, "tt": 60, "default_valu": [61, 132], "nulldefault": 61, "propagation_mod": [61, 62, 132], "parameterpropagationmod": [61, 62, 132], "particular": [61, 62, 78, 91, 92, 93, 94, 125], "expect": [61, 67, 84], "squar": 61, "bracket": 61, "p1": [61, 132], "mean": [61, 78, 98, 137], "match": [61, 126], "empti": 61, "catch": 61, "remain": [61, 67, 98], "treat": 61, "itself": 61, "exist": [61, 67, 78, 91, 92, 93, 94, 115, 125, 126, 134], "By": [61, 84, 98, 126, 137], "simpli": 61, "mode": 61, "explicitli": 61, "inaccess": 61, "all_labelled_typ": 61, "input_or_output": [61, 62], "labelled_info": 61, "single_label": 61, "single_labelled_data": 61, "single_labelled_typ": 61, "todo": [64, 82, 98, 139], "memori": [64, 105], "usag": 64, "stackoverflow": [64, 105], "44143229": 64, "5042280": [64, 105], "manpag": 64, "sbatch": 64, "ri": 64, "itservic": 64, "manchest": 64, "ac": 64, "uk": 64, "csf4": 64, "sge": [64, 126], "slurm_array_task_id": 64, "arrai": [64, 98, 105], "scancel": 64, "squeue": 64, "me": 64, "finish": [64, 89, 125], "fail": [64, 78, 134], "out_of_memori": 64, "timeout": [64, 125], "address": 65, "submission_part": 66, "js_parallel": [66, 78, 91, 92, 115, 125], "ears_by_el": 66, "abort_ears_file_nam": 66, "abort_ears_file_path": 66, "all_ear_id": 66, "over": [66, 67], "get_active_jobscript": 66, "get_end_tim": 66, "get_start_tim": 66, "get_unique_schedul": 66, "thei": [66, 67, 137], "get_unique_schedulers_of_jobscript": 66, "get_unique_shel": 66, "jobscript_indic": 66, "needs_submit": 66, "outstanding_jobscript": 66, "yet": [66, 125], "successfulli": [66, 78], "ignore_error": [66, 78], "add_to_known": [66, 78, 91, 92], "submitted_jobscript": 66, "output_label": 67, "isol": 67, "satisfi": 67, "elementset": 67, "outputlabel": 67, "add_group": 67, "all_schema_act": 67, "all_schema_input_normalised_path": 67, "all_schema_input_typ": 67, "all_schema_input": 67, "all_schema_output_typ": 67, "all_schema_output": 67, "schemaoutput": [67, 72], "all_sourced_normalised_path": 67, "artefact": 67, "get_available_task_input_sourc": 67, "source_task": 67, "possibl": 67, "deriv": [67, 111], "get_input_status": 67, "elem_set": 67, "inputstatu": 67, "status": 67, "get_param_provided_element_set": 67, "get_schema_act": 67, "idx": 67, "get_task_unique_nam": [67, 78], "directli": [67, 105], "non_universal_input_typ": 67, "univers": 67, "num_all_schema_act": 67, "num_element_set": [67, 82], "prepare_element_resolut": 67, "input_data_indic": [67, 82], "provides_paramet": [67, 72], "set_sequence_paramet": 67, "to_persist": 67, "undefined_input": 67, "universal_input_typ": 67, "unsourced_input": 67, "implement": [72, 137], "mechan": [72, 133], "taskobject": 72, "its": [72, 134], "get_by_kei": 72, "config": [72, 119, 120, 127, 135, 140], "get_kei": 72, "ignore_invalid_act": 72, "info": [72, 78, 91, 92, 93, 94, 126, 136], "show": [72, 78, 91, 92, 114, 134, 135, 140], "output_typ": 72, "multiplicative_factor": 76, "numer": 76, "additive_factor": 76, "from_geometric_spac": 77, "num": 77, "endpoint": 77, "from_linear_spac": 77, "from_log_spac": 77, "from_rang": 77, "input_path": 77, "els": [77, 125], "path_split": 77, "path_typ": 77, "resource_scop": 77, "store_fmt": 78, "fs_kwarg": 78, "abort_run": 78, "task_idx": 78, "element_idx": 78, "multi": 78, "add_loop": 78, "loop": [78, 80, 84], "parent_loop_indic": [78, 80], "add_submiss": 78, "add_task": 78, "new_index": 78, "add_task_aft": 78, "new_task": 78, "after": 78, "add_task_befor": 78, "begin": 78, "artifacts_path": 78, "batch_upd": 78, "is_workflow_cr": 78, "context": 78, "commit": 78, "them": [78, 82], "disk": 78, "togeth": 78, "hard": 78, "check_parameters_exist": 78, "id_lst": 78, "creation_info": 78, "delet": [78, 125], "execution_path": 78, "from_json_fil": [78, 84], "json_path": 78, "overwrit": [78, 91, 92, 93, 94, 125], "ts_fmt": [78, 91, 92, 93, 94, 125], "ts_name_fmt": [78, 91, 92, 93, 94, 125], "json": [78, 84, 89, 91, 92, 93, 94, 105, 109, 125, 139], "pathlik": [78, 84, 86, 91, 92, 93, 94, 115], "join": [78, 91, 92, 93, 94, 125], "workflowtempl": [78, 79, 91, 92, 138], "date": [78, 84, 91, 92, 93, 94, 125], "timestamp": [78, 91, 92, 93, 94, 125], "overwritten": [78, 91, 92, 93, 94, 125], "alwai": [78, 91, 92, 93, 94, 125], "utc": [78, 91, 92, 93, 94, 125], "numpi": [78, 91, 92, 93, 94, 98, 105, 109, 125], "zone": [78, 91, 92, 93, 94, 125], "from_json_str": [78, 84], "json_str": 78, "from_yaml_fil": [78, 84, 138], "yaml_path": 78, "from_yaml_str": [78, 84], "yaml_str": 78, "from_fil": [78, 84, 105, 109, 131], "template_path": 78, "template_format": [78, 84, 91, 92, 93, 94], "yml": 78, "forc": [78, 91, 92, 93, 94, 125], "regardless": 78, "from_templ": [78, 139], "from_template_data": 78, "template_nam": 78, "workflow_nam": [78, 91, 93, 125, 133], "map": [78, 84, 125, 126], "take": 78, "whole": 78, "fs_path": 78, "get_ear_ids_of_task": 78, "get_ear_skip": 78, "get_ears_from_id": 78, "get_ears_of_task": 78, "get_all_ear": 78, "get_all_element_iter": [78, 82], "get_all_el": 78, "get_all_parameter_data": 78, "get_all_paramet": 78, "anysparamet": 78, "get_element_ids_from_ear_id": 78, "get_element_iteration_ids_from_ear_id": 78, "get_element_iterations_from_id": 78, "get_element_iterations_of_task": 78, "get_elements_from_id": 78, "get_iteration_task_pathwai": 78, "get_paramet": 78, "get_parameter_data": 78, "get_parameter_set_status": 78, "get_running_el": 78, "accord": [78, 82, 89, 125], "get_running_run": 78, "get_store_ear": 78, "anysear": 78, "get_store_element_iter": 78, "anyselementit": 78, "get_store_el": 78, "anysel": 78, "get_store_task": 78, "anystask": 78, "get_task_ids_from_element_id": 78, "get_task_el": 78, "select": 78, "slice": 78, "map_to_insert_id": 78, "otherwis": [78, 134], "input_files_path": 78, "is_parameter_set": 78, "workflowlooplist": 78, "creation": 78, "num_ear": 78, "num_added_task": 78, "num_element_iter": 78, "num_loop": 78, "num_submiss": 78, "num_task": 78, "resolve_jobscript": 78, "save_paramet": 78, "set_ear_end": 78, "code": 78, "zero": [78, 98], "also": [78, 134, 137], "set_ear_skip": 78, "record": [78, 139], "failur": 78, "set_ear_start": 78, "set_ear_submission_index": 78, "set_ears_initialis": 78, "iter_id": 78, "set_parameter_valu": 78, "param_id": [78, 105], "show_all_ear_status": 78, "store_format": 78, "submissions_path": 78, "ignor": [78, 125], "halt": 78, "rais": [78, 91, 92, 115, 125], "jobscript_parallel": [78, 91, 92, 115, 125], "featur": [78, 91, 92, 115, 125], "print": [78, 125, 134, 136], "hide": 78, "block": [78, 91, 92, 125], "known": [78, 89, 91, 92, 113, 135, 140], "monitor": [78, 91, 92], "task_artifacts_path": 78, "workflowtasklist": 78, "template_compon": 78, "temporary_renam": 78, "f": [78, 125, 133], "renam": [78, 125], "restor": 78, "occur": 78, "to_zip": [78, 139], "log": [78, 126, 129, 132, 134], "sub_j": 78, "write_command": 78, "jobscript_idx": [78, 125], "pre": 79, "built": [79, 128], "simpler": 79, "fit": 79, "num_added_iter": 80, "iterable_paramet": 80, "add_iter": 80, "get_child_loop": 80, "ident": 80, "get_parent_loop": 80, "superset": 80, "new_empty_loop": 80, "task_indic": 80, "element_id": 82, "add_el": 82, "base_el": 82, "propagate_to": 82, "return_indic": 82, "downstream_task": 82, "ensure_input_sourc": 82, "posit": [82, 109], "behaviour": 82, "generate_new_el": 82, "output_data_indic": 82, "element_data_indic": 82, "sequence_indic": 82, "source_indic": 82, "get_dir_nam": 82, "initialise_ear": 82, "uninitialis": 82, "new_empty_task": 82, "resolve_element_data_indic": 82, "updat": [82, 89, 113, 134], "docstr": 82, "shouldn": 82, "element_dat_idx": 82, "test_action_rul": 82, "act_rul": 82, "elem_it": 82, "unique_nam": 82, "upstream_task": 82, "limit": 84, "logic": 84, "stamp": 84, "resourcespec": 84, "One": [84, 86, 90, 98], "workflow_ref": [86, 125], "ref_is_path": 86, "max_rec": [89, 113, 125], "no_upd": [89, 113], "inact": [89, 113, 125], "remov": [89, 113, 125, 134], "found": 89, "maximum": [89, 98, 113, 125], "do": [89, 113, 125, 132], "exclude_o": 90, "template_file_or_str": [92, 94, 125], "is_str": [92, 94], "template_path_or_str": [92, 94], "builtin": [93, 125], "call": [95, 134], "would": 95, "conflict": 95, "parametervalu": [95, 97, 98, 103, 105, 107, 109], "loadstep": 97, "biaxial": [97, 98, 131], "case": [97, 98, 126, 134, 137], "see": [97, 134, 137, 139], "example_uniaxi": [97, 98, 131], "uniaxi": [97, 98, 131, 132, 133], "multistep": [97, 131], "remaind": 97, "num_step": 97, "planar_2d": [97, 98, 131], "planar": [97, 98], "2d": [97, 98], "plane_strain": [97, 98, 131], "plane": [97, 98], "strain": [97, 98], "random_2d": [97, 98, 131], "random": [97, 98, 105], "random_3d": [97, 98, 131], "3d": 97, "uniaxial_cycl": [97, 98, 131], "cyclic": 97, "total_tim": [98, 133], "num_incr": [98, 133], "normal_direct": 98, "target_def_grad": 98, "target_def_grad_r": [98, 133], "target_vel_grad": 98, "stress": 98, "dump_frequ": 98, "rotat": 98, "total": 98, "simul": [98, 131, 133], "increment": [98, 133], "ma": 98, "core": [98, 137], "maskedarrai": 98, "shape": [98, 105], "deform": 98, "gradient": 98, "tensor": 98, "mask": 98, "unmask": 98, "np": 98, "arraylik": 98, "rate": 98, "written": 98, "everi": 98, "charact": 98, "ij": 98, "j": 98, "x": [98, 107, 131, 133], "y": [98, 107, 131], "z": [98, 107, 131], "achiev": 98, "along": 98, "method_arg": 98, "method_nam": 98, "flat": 98, "fourth": 98, "second": [98, 125], "row": 98, "column": [98, 113], "shear": 98, "third": 98, "strain_rate_mod": 98, "strainratemod": 98, "def_grad_r": [98, 99], "vel_grad": [98, 99], "vel_grad_approx": [98, 99], "mix": 98, "sampl": 98, "randomli": 98, "interv": [98, 125], "strain_like_tensor": 98, "friendli": 98, "max_stress": 98, "min_stress": 98, "cycle_frequ": 98, "num_increments_per_cycl": 98, "num_cycl": 98, "waveform": 98, "sine": 98, "bung": 101, "a_star": 102, "b": 102, "b_star": 102, "c_star": 102, "5": [102, 132], "orientationrepresentationtyp": 103, "euler_definit": 103, "eulerdefinit": 103, "euler_is_degre": 103, "quat_ord": 103, "quatord": 103, "euler": 104, "quaternion": [104, 105, 106], "unit_cell_align": 105, "unitcellalign": 105, "represent": 105, "orientationrepresent": 105, "dump_to_hdf5_group": 105, "hdf5_group": 105, "ori_format": 105, "custom": [105, 109, 134], "start_index": [105, 109], "from_random": [105, 109, 131], "quat_sample_random": 105, "uniformli": 105, "distribut": 105, "unit": [105, 107], "mani": 105, "quat": 105, "44031492": 105, "plan": 105, "uiuc": 105, "edu": 105, "node198": 105, "save_from_hdf5_group": [105, 131], "hdf5": [105, 129], "avoid": 105, "onc": 105, "firstli": 105, "small": 105, "four": 106, "dream3d": 106, "vector": 106, "scalar": 106, "wherea": 106, "program": 106, "seem": 106, "bluequartz": 106, "orientationanalysisfilt": 106, "convertquaternion": 106, "scalar_vector": 106, "vector_scalar": 106, "latticedirect": 107, "from_hex_convention_damask": 107, "from_hex_convention_mtex": 107, "cell": 107, "align": 107, "convent": [107, 137], "hexagon": 107, "symmetri": 107, "crystalsymmetri": 107, "box_siz": 109, "phase_label": [109, 132, 133], "orient": [109, 132], "random_se": 109, "num_se": 109, "suit": [111, 112, 125], "full": [113, 125, 133], "span": 113, "longer": [113, 125], "legend": [114, 125], "displai": [114, 125], "workflow_path": 115, "tmp_path": 118, "messag": [125, 132], "config_dir": 125, "config_kei": [125, 126], "with_config": 125, "overrid": 125, "ref": 125, "ref_typ": 125, "no_callback": 125, "file_path": 125, "being": 125, "modifi": [125, 134], "known_nam": 125, "fsspec": [125, 138], "look": 125, "i1": 125, "infile1": 125, "i2": 125, "infile2": 125, "v": [125, 133], "o": [125, 133], "l": [125, 133], "destin": [125, 133], "fmt": 125, "syntax": 125, "kill": 125, "3600": 125, "timeout_check_interv": 125, "between": 125, "exceed": 125, "60": 125, "watch_interv": 125, "poll": 125, "infrequ": 125, "runtim": 125, "app_nam": [125, 126], "invalid": 125, "max": 125, "relat": 125, "py_test_arg": 125, "pytest": 125, "colon": 125, "comma": 125, "separ": 125, "space": 125, "To": 125, "semicolon": 125, "pattern": 125, "invoc": 126, "environment_setup": 126, "telemetri": 126, "log_file_path": 126, "matflow_v0": 126, "environment_sourc": 126, "task_schema_sourc": 126, "command_file_sourc": 126, "parameter_sourc": 126, "default_schedul": 126, "default_shel": 126, "conform": 126, "conditionand": [126, 131], "valuedatatyp": [126, 131], "equal_to": [126, 131], "lt": [126, 131], "x27": [126, 131], "gt": [126, 131], "keys_is_inst": 126, "quot": 126, "optionalcondit": 126, "required_kei": 126, "requiredcondit": 126, "allowed_kei": 126, "noneconfig": 126, "forbidden_kei": 126, "config_directori": 126, "config_file_nam": 126, "config_file_path": 126, "config_file_cont": 126, "config_schema": 126, "invoking_user_id": 126, "host_user_id": 126, "host_user_id_file_path": 126, "config_callback": 126, "_set": 126, "unset": 126, "user_orcid": 126, "user_nam": 126, "user_affili": 126, "wsl_execut": 126, "wsl_distribut": 126, "wsl_user": 126, "noneexecut": 126, "nonewsl_us": 126, "nonewsl_execut": 126, "nonewsl_distribut": 126, "nonewsl": 126, "nonepowershel": 126, "nonebash": 126, "noneschedul": 126, "direct_posix": 126, "parallel_environ": 126, "partit": 126, "noneparallel_environ": 126, "nonedefault": 126, "shebang_arg": 126, "submit_cmd": 126, "show_cmd": 126, "del_cmd": 126, "js_cmd": 126, "array_switch": 126, "array_item_var": 126, "noneshow_cmd": 126, "noneshebang_arg": 126, "noneopt": 126, "nonejs_cmd": 126, "nonedel_cmd": 126, "nonecwd_switch": 126, "nonearray_switch": 126, "nonearray_item_var": 126, "noneslurm": 126, "nonenum_nod": 126, "nonenum_cores_per_nod": 126, "nonenum_cor": 126, "nonesg": 126, "nonedirect_posix": 126, "nonedirect": 126, "noneparameter_sourc": 126, "socket": 126, "gethostnam": 126, "is_inst": 126, "pathlib": 126, "app_vers": 126, "respect": 126, "rel": 126, "log_file_level": 126, "notset": 126, "debug": [126, 134], "warn": 126, "critic": 126, "in_": [126, 131], "log_console_level": [126, 134], "linux_release_fil": 126, "tension_damask_": 127, "section": 128, "detail": [128, 137, 139], "geom": [129, 132], "vti": [129, 132], "materi": [129, 140], "geom_load": 129, "geom_load_incd": 129, "static_output": 129, "vt": 129, "atom": 129, "lammp": 129, "dump": 129, "txt": 129, "length": 131, "valuelength": 131, "size": 131, "twice": 131, "long": 131, "elong": 131, "generate_microstructure_se": 131, "pixel": 131, "voxel": 131, "generate_volume_el": 131, "constructor": 131, "microstructurese": 131, "simulate_ve_load": 131, "sample_textur": 131, "generate_orient": 131, "dump_all_yield_stress": 131, "fit_yield_funct": 131, "define_load_cas": 131, "loadcas": 131, "test_t1_bash": 131, "test_t1_p": 131, "define_p1": 131, "test_t2_bash": 131, "test_t2_p": 131, "p2": 132, "echo": 132, "100": [132, 133], "count": 132, "while": 132, "le": 132, "sleep": 132, "goe": 132, "done": [132, 134], "null_env": 132, "host": [132, 139], "ge": 132, "break": 132, "python_script": 132, "python_env": 132, "p3": 132, "ve_siz": [132, 133], "num_grain": [132, 133], "microstructure_se": 132, "ve_grid_s": [132, 133], "homog_label": [132, 133], "volume_el": 132, "ctf_file_path": 132, "specimen_symmetri": 132, "ebsd_phas": 132, "num_orient": 132, "ebsd_reference_frame_transform": 132, "euler_to_spati": 132, "ebsd_rot": 132, "load_cas": [132, 133], "homogen": [132, 133], "damask_phas": [132, 133], "damask_post_process": [132, 133], "ve_response_data": [132, 133], "damask_viz": [132, 133], "damask_log": 132, "damask_post_processing_result": 132, "ve_respons": 132, "damask_viz_result": 132, "6": [132, 133], "7": 132, "all_simul": 132, "yield_point": 132, "dump_path": 132, "yield_function_nam": 132, "yield_point_criteria": 132, "multiaxi": 132, "multiaxial_load_cas": 132, "fit_yield_fixed_paramet": 132, "fit_yield_initial_paramet": 132, "fit_yield_opt_paramet": 132, "fitted_yield_funct": 132, "formable_env": 132, "These": [133, 137], "demonstr": 133, "somewher": 133, "mf": [133, 134, 138, 139], "copy_demo_workflow": 133, "dst": 133, "crystal": 133, "plastic": 133, "generate_microstructure_seeds_from_random": 133, "al": 133, "generate_volume_element_from_voronoi": 133, "sx": 133, "8": 133, "simulate_ve_loading_damask": 133, "50": 133, "0e": 133, "n_constitu": 133, "lattic": 133, "cf": 133, "p": 133, "f_e": 133, "f_p": 133, "l_p": 133, "elast": 133, "hook": 133, "c_11": 133, "106750000000": 133, "c_12": 133, "60410000000": 133, "c_44": 133, "28340000000": 133, "phenopowerlaw": 133, "n_sl": 133, "12": 133, "a_sl": 133, "25": 133, "atol_xi": 133, "dot_gamma_0_sl": 133, "001": 133, "h_0_sl": 133, "sl": 133, "75": 133, "h_sl": 133, "20": 133, "xi_sl": 133, "xi_0_sl": 133, "31": 133, "xi_inf_sl": 133, "63": 133, "add_stress_cauchi": 133, "opt": 133, "add_mis": 133, "add_strain": 133, "m": 133, "add_ipf_color": 133, "phase_data": 133, "field_nam": 133, "sigma_vm": 133, "phase_nam": 133, "out_nam": 133, "vol_avg_equivalent_stress": 133, "transform": 133, "mean_along_ax": 133, "epsilon_v": 133, "_vm": 133, "vol_avg_equivalent_strain": 133, "vol_avg_equivalent_plastic_strain": 133, "field_data": 133, "phase": 133, "grain_data": 133, "field": 133, "ipfcolor_": 133, "my": 134, "temporari": 134, "temporarili": 134, "just": 134, "session": 134, "load_config": 134, "reload_config": 134, "consol": 134, "usual": 134, "thing": 134, "howev": 134, "newer": 134, "incompat": 134, "sometim": 134, "reset_config": 134, "had": 134, "pointer": 134, "old": 134, "get_config_path": 134, "track": 134, "equival": 134, "clear_known_submissions_fil": 134, "snippet": 135, "common": 135, "quick": 135, "reset": [135, 140], "clear": [135, 140], "cannot": 137, "fulli": 137, "alphanumer": 137, "underscor": 137, "sdk": 137, "util": 137, "check_valid_py_identifi": 137, "prefer": 137, "except": 137, "acronym": 137, "remot": [138, 139], "url": 138, "wkt": [138, 139], "wk": 139, "tell": 139, "control": 139, "ssh": 139, "sandbox": 139, "zenodo": 139, "1210144": 139, "convert": 139, "comput": 140, "scienc": 140}, "objects": {"": [[4, 0, 0, "-", "matflow"]], "matflow": [[5, 1, 1, "", "Action"], [6, 1, 1, "", "ActionEnvironment"], [7, 1, 1, "", "ActionRule"], [8, 1, 1, "", "ActionScope"], [9, 1, 1, "", "ActionScopeType"], [10, 1, 1, "", "Command"], [11, 1, 1, "", "CommandFilesList"], [12, 1, 1, "", "DirectPosix"], [13, 1, 1, "", "DirectWindows"], [14, 1, 1, "", "Element"], [15, 1, 1, "", "ElementAction"], [16, 1, 1, "", "ElementActionRun"], [17, 1, 1, "", "ElementFilter"], [18, 1, 1, "", "ElementGroup"], [19, 1, 1, "", "ElementInputFiles"], [20, 1, 1, "", "ElementInputs"], [21, 1, 1, "", "ElementIteration"], [22, 1, 1, "", "ElementOutputFiles"], [23, 1, 1, "", "ElementOutputs"], [24, 1, 1, "", "ElementParameter"], [25, 1, 1, "", "ElementPropagation"], [26, 1, 1, "", "ElementRepeats"], [27, 1, 1, "", "ElementResources"], [28, 1, 1, "", "ElementSet"], [29, 1, 1, "", "Elements"], [30, 1, 1, "", "Environment"], [31, 1, 1, "", "EnvironmentsList"], [32, 1, 1, "", "Executable"], [33, 1, 1, "", "ExecutableInstance"], [34, 1, 1, "", "ExecutablesList"], [35, 1, 1, "", "FileNameExt"], [36, 1, 1, "", "FileNameSpec"], [37, 1, 1, "", "FileNameStem"], [38, 1, 1, "", "FileSpec"], [39, 1, 1, "", "GroupList"], [40, 1, 1, "", "InputFile"], [41, 1, 1, "", "InputFileGenerator"], [42, 1, 1, "", "InputFileGeneratorSource"], [43, 1, 1, "", "InputSource"], [44, 1, 1, "", "InputSourceType"], [45, 1, 1, "", "InputValue"], [46, 1, 1, "", "Jobscript"], [47, 1, 1, "", "Loop"], [48, 1, 1, "", "NumCores"], [49, 1, 1, "", "OutputFileParser"], [50, 1, 1, "", "OutputFileParserSource"], [51, 1, 1, "", "OutputLabel"], [52, 1, 1, "", "Parameter"], [53, 1, 1, "", "ParameterPath"], [54, 1, 1, "", "ParameterPropagationMode"], [55, 1, 1, "", "ParameterValue"], [56, 1, 1, "", "Parameters"], [57, 1, 1, "", "ParametersList"], [58, 1, 1, "", "ResourceList"], [59, 1, 1, "", "ResourceSpec"], [60, 1, 1, "", "SGEPosix"], [61, 1, 1, "", "SchemaInput"], [62, 1, 1, "", "SchemaOutput"], [63, 1, 1, "", "SchemaParameter"], [64, 1, 1, "", "SlurmPosix"], [65, 1, 1, "", "SubParameter"], [66, 1, 1, "", "Submission"], [67, 1, 1, "", "Task"], [68, 1, 1, "", "TaskInputParameters"], [69, 1, 1, "", "TaskList"], [70, 1, 1, "", "TaskObjective"], [71, 1, 1, "", "TaskOutputParameters"], [72, 1, 1, "", "TaskSchema"], [73, 1, 1, "", "TaskSchemasList"], [74, 1, 1, "", "TaskSourceType"], [75, 1, 1, "", "TaskTemplateList"], [76, 1, 1, "", "ValuePerturbation"], [77, 1, 1, "", "ValueSequence"], [78, 1, 1, "", "Workflow"], [79, 1, 1, "", "WorkflowBlueprint"], [80, 1, 1, "", "WorkflowLoop"], [81, 1, 1, "", "WorkflowLoopList"], [82, 1, 1, "", "WorkflowTask"], [83, 1, 1, "", "WorkflowTaskList"], [84, 1, 1, "", "WorkflowTemplate"], [85, 5, 1, "", "app"], [86, 6, 1, "", "cancel"], [87, 0, 0, "-", "cli"], [88, 6, 1, "", "get_OS_info"], [89, 6, 1, "", "get_known_submissions"], [90, 6, 1, "", "get_shell_info"], [91, 6, 1, "", "make_and_submit_demo_workflow"], [92, 6, 1, "", "make_and_submit_workflow"], [93, 6, 1, "", "make_demo_workflow"], [94, 6, 1, "", "make_workflow"], [95, 0, 0, "-", "param_classes"], [111, 6, 1, "", "run_hpcflow_tests"], [112, 6, 1, "", "run_tests"], [113, 6, 1, "", "show"], [114, 6, 1, "", "show_legend"], [115, 6, 1, "", "submit_workflow"], [116, 0, 0, "-", "tests"], [125, 7, 1, "cmdoption-matflow-config-dir", "--config-dir"], [125, 7, 1, "cmdoption-matflow-config-key", "--config-key"], [125, 7, 1, "cmdoption-matflow-help", "--help"], [125, 7, 1, "cmdoption-matflow-hpcflow-version", "--hpcflow-version"], [125, 7, 1, "cmdoption-matflow-run-time-info", "--run-time-info"], [125, 7, 1, "cmdoption-matflow-version", "--version"], [125, 7, 1, "cmdoption-matflow-with-config", "--with-config"]], "matflow.Action": [[5, 2, 1, "", "app"], [5, 3, 1, "", "expand"], [5, 3, 1, "", "from_json_like"], [5, 3, 1, "", "generate_data_index"], [5, 3, 1, "", "get_app_data_script_path"], [5, 3, 1, "", "get_command_input_file_labels"], [5, 3, 1, "", "get_command_input_types"], [5, 3, 1, "", "get_command_output_types"], [5, 3, 1, "", "get_commands_action_env"], [5, 3, 1, "", "get_input_file_generator_action_env"], [5, 3, 1, "", "get_input_file_labels"], [5, 3, 1, "", "get_input_types"], [5, 3, 1, "", "get_output_file_labels"], [5, 3, 1, "", "get_output_file_parser_action_env"], [5, 3, 1, "", "get_output_types"], [5, 3, 1, "", "get_param_dump_file_path_JSON"], [5, 3, 1, "", "get_param_dump_file_stem"], [5, 3, 1, "", "get_param_load_file_path_HDF5"], [5, 3, 1, "", "get_param_load_file_path_JSON"], [5, 3, 1, "", "get_param_load_file_stem"], [5, 3, 1, "", "get_parameter_dependence"], [5, 3, 1, "", "get_possible_scopes"], [5, 3, 1, "", "get_precise_scope"], [5, 3, 1, "", "get_resolved_action_env"], [5, 3, 1, "", "get_script_name"], [5, 3, 1, "", "is_app_data_script"], [5, 3, 1, "", "is_input_type_required"], [5, 4, 1, "", "task_schema"], [5, 3, 1, "", "to_dict"], [5, 3, 1, "", "to_json_like"]], "matflow.ActionEnvironment": [[6, 2, 1, "", "app"], [6, 2, 1, "", "environment"], [6, 3, 1, "", "from_json_like"], [6, 2, 1, "", "scope"], [6, 3, 1, "", "to_dict"], [6, 3, 1, "", "to_json_like"]], "matflow.ActionRule": [[7, 2, 1, "", "app"], [7, 2, 1, "", "check_exists"], [7, 2, 1, "", "check_missing"], [7, 3, 1, "", "from_json_like"], [7, 2, 1, "", "rule"], [7, 3, 1, "", "to_dict"], [7, 3, 1, "", "to_json_like"]], "matflow.ActionScope": [[8, 3, 1, "", "any"], [8, 2, 1, "", "app"], [8, 3, 1, "", "from_json_like"], [8, 3, 1, "", "input_file_generator"], [8, 3, 1, "", "main"], [8, 3, 1, "", "output_file_parser"], [8, 3, 1, "", "processing"], [8, 3, 1, "", "to_dict"], [8, 3, 1, "", "to_json_like"], [8, 3, 1, "", "to_string"]], "matflow.ActionScopeType": [[9, 2, 1, "", "ANY"], [9, 2, 1, "", "INPUT_FILE_GENERATOR"], [9, 2, 1, "", "MAIN"], [9, 2, 1, "", "OUTPUT_FILE_PARSER"], [9, 2, 1, "", "PROCESSING"]], "matflow.Command": [[10, 2, 1, "", "app"], [10, 2, 1, "", "arguments"], [10, 2, 1, "", "command"], [10, 2, 1, "", "executable"], [10, 3, 1, "", "from_json_like"], [10, 3, 1, "", "get_command_line"], [10, 3, 1, "", "get_output_types"], [10, 2, 1, "", "stderr"], [10, 2, 1, "", "stdin"], [10, 2, 1, "", "stdout"], [10, 3, 1, "", "to_dict"], [10, 3, 1, "", "to_json_like"], [10, 2, 1, "", "variables"]], "matflow.CommandFilesList": [[11, 3, 1, "", "add_object"], [11, 3, 1, "", "add_objects"], [11, 3, 1, "", "from_json_like"], [11, 3, 1, "", "get"], [11, 3, 1, "", "get_all"], [11, 3, 1, "", "list_attrs"], [11, 3, 1, "", "to_dict"], [11, 3, 1, "", "to_json_like"]], "matflow.DirectPosix": [[12, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [12, 2, 1, "", "DEFAULT_SHELL_ARGS"], [12, 2, 1, "", "DEFAULT_SHELL_EXECUTABLE"], [12, 2, 1, "", "app"], [12, 3, 1, "", "cancel_jobs"], [12, 3, 1, "", "get_job_state_info"], [12, 3, 1, "", "get_submit_command"], [12, 3, 1, "", "get_version_info"], [12, 3, 1, "", "is_jobscript_active"], [12, 3, 1, "", "is_num_cores_supported"], [12, 3, 1, "", "parse_submission_output"], [12, 3, 1, "", "process_resources"], [12, 3, 1, "", "wait_for_jobscripts"]], "matflow.DirectWindows": [[13, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [13, 2, 1, "", "DEFAULT_SHELL_ARGS"], [13, 2, 1, "", "DEFAULT_SHELL_EXECUTABLE"], [13, 2, 1, "", "app"], [13, 3, 1, "", "cancel_jobs"], [13, 3, 1, "", "get_job_state_info"], [13, 3, 1, "", "get_submit_command"], [13, 3, 1, "", "get_version_info"], [13, 3, 1, "", "is_jobscript_active"], [13, 3, 1, "", "is_num_cores_supported"], [13, 3, 1, "", "parse_submission_output"], [13, 3, 1, "", "process_resources"], [13, 3, 1, "", "wait_for_jobscripts"]], "matflow.Element": [[14, 4, 1, "", "action_runs"], [14, 4, 1, "", "actions"], [14, 2, 1, "", "app"], [14, 4, 1, "", "dir_name"], [14, 4, 1, "", "element_set"], [14, 4, 1, "", "element_set_idx"], [14, 3, 1, "", "get"], [14, 3, 1, "", "get_EAR_dependencies"], [14, 3, 1, "", "get_data_idx"], [14, 3, 1, "", "get_dependent_EARs"], [14, 3, 1, "", "get_dependent_element_iterations"], [14, 3, 1, "", "get_dependent_elements"], [14, 3, 1, "", "get_dependent_elements_recursively"], [14, 3, 1, "", "get_dependent_tasks"], [14, 3, 1, "", "get_element_dependencies"], [14, 3, 1, "", "get_element_iteration_dependencies"], [14, 3, 1, "", "get_input_dependencies"], [14, 3, 1, "", "get_parameter_sources"], [14, 3, 1, "", "get_sequence_value"], [14, 3, 1, "", "get_task_dependencies"], [14, 4, 1, "", "id_"], [14, 4, 1, "", "index"], [14, 3, 1, "", "init_loop_index"], [14, 4, 1, "", "input_files"], [14, 4, 1, "", "input_source_idx"], [14, 4, 1, "", "input_sources"], [14, 4, 1, "", "inputs"], [14, 4, 1, "", "is_pending"], [14, 4, 1, "", "iteration_IDs"], [14, 4, 1, "", "iterations"], [14, 4, 1, "", "latest_iteration"], [14, 4, 1, "", "output_files"], [14, 4, 1, "", "outputs"], [14, 4, 1, "", "schema_parameters"], [14, 4, 1, "", "sequence_idx"], [14, 4, 1, "", "task"], [14, 3, 1, "", "to_element_set_data"], [14, 4, 1, "", "workflow"]], "matflow.ElementAction": [[15, 4, 1, "", "action"], [15, 4, 1, "", "action_idx"], [15, 2, 1, "", "app"], [15, 4, 1, "", "element"], [15, 4, 1, "", "element_iteration"], [15, 3, 1, "", "get"], [15, 3, 1, "", "get_data_idx"], [15, 3, 1, "", "get_parameter_names"], [15, 3, 1, "", "get_parameter_sources"], [15, 4, 1, "", "input_files"], [15, 4, 1, "", "inputs"], [15, 4, 1, "", "num_runs"], [15, 4, 1, "", "output_files"], [15, 4, 1, "", "outputs"], [15, 4, 1, "", "runs"], [15, 4, 1, "", "task"]], "matflow.ElementActionRun": [[16, 4, 1, "", "action"], [16, 2, 1, "", "app"], [16, 3, 1, "", "compose_commands"], [16, 3, 1, "", "compose_source"], [16, 4, 1, "", "data_idx"], [16, 4, 1, "", "dir_diff"], [16, 4, 1, "", "element"], [16, 4, 1, "", "element_action"], [16, 4, 1, "", "element_iteration"], [16, 4, 1, "", "end_time"], [16, 4, 1, "", "exit_code"], [16, 3, 1, "", "get"], [16, 3, 1, "", "get_EAR_dependencies"], [16, 3, 1, "", "get_IFG_input_values"], [16, 3, 1, "", "get_OFP_inputs"], [16, 3, 1, "", "get_OFP_output_files"], [16, 3, 1, "", "get_OFP_outputs"], [16, 3, 1, "", "get_data_idx"], [16, 3, 1, "", "get_dependent_EARs"], [16, 3, 1, "", "get_environment"], [16, 3, 1, "", "get_input_dependencies"], [16, 3, 1, "", "get_input_values"], [16, 3, 1, "", "get_parameter_names"], [16, 3, 1, "", "get_parameter_sources"], [16, 3, 1, "", "get_resources"], [16, 4, 1, "", "id_"], [16, 4, 1, "", "index"], [16, 4, 1, "", "input_files"], [16, 4, 1, "", "inputs"], [16, 4, 1, "", "is_pending"], [16, 4, 1, "", "metadata"], [16, 4, 1, "", "output_files"], [16, 4, 1, "", "outputs"], [16, 4, 1, "", "resources"], [16, 4, 1, "", "skip"], [16, 4, 1, "", "snapshot_end"], [16, 4, 1, "", "snapshot_start"], [16, 4, 1, "", "start_time"], [16, 4, 1, "", "status"], [16, 4, 1, "", "submission_idx"], [16, 4, 1, "", "success"], [16, 4, 1, "", "task"], [16, 4, 1, "", "workflow"], [16, 3, 1, "", "write_source"]], "matflow.ElementFilter": [[17, 3, 1, "", "from_json_like"], [17, 3, 1, "", "from_spec"], [17, 3, 1, "", "test"], [17, 3, 1, "", "to_json_like"]], "matflow.ElementGroup": [[18, 2, 1, "", "app"], [18, 3, 1, "", "from_json_like"], [18, 2, 1, "", "group_by_distinct"], [18, 2, 1, "", "name"], [18, 3, 1, "", "to_dict"], [18, 3, 1, "", "to_json_like"], [18, 2, 1, "", "where"]], "matflow.ElementInputFiles": [[19, 4, 1, "", "prefixed_names_unlabelled"], [19, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementInputs": [[20, 4, 1, "", "prefixed_names_unlabelled"], [20, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementIteration": [[21, 4, 1, "", "EAR_IDs"], [21, 4, 1, "", "EAR_IDs_flat"], [21, 4, 1, "", "EARs_initialised"], [21, 4, 1, "", "action_runs"], [21, 4, 1, "", "actions"], [21, 2, 1, "", "app"], [21, 4, 1, "", "data_idx"], [21, 4, 1, "", "element"], [21, 3, 1, "", "get"], [21, 3, 1, "", "get_EAR_dependencies"], [21, 3, 1, "", "get_data_idx"], [21, 3, 1, "", "get_dependent_EARs"], [21, 3, 1, "", "get_dependent_element_iterations"], [21, 3, 1, "", "get_dependent_elements"], [21, 3, 1, "", "get_dependent_tasks"], [21, 3, 1, "", "get_element_dependencies"], [21, 3, 1, "", "get_element_iteration_dependencies"], [21, 3, 1, "", "get_input_dependencies"], [21, 3, 1, "", "get_parameter_names"], [21, 3, 1, "", "get_parameter_sources"], [21, 3, 1, "", "get_resources"], [21, 3, 1, "", "get_resources_obj"], [21, 3, 1, "", "get_task_dependencies"], [21, 3, 1, "", "get_template_resources"], [21, 4, 1, "", "id_"], [21, 4, 1, "", "index"], [21, 4, 1, "", "input_files"], [21, 4, 1, "", "inputs"], [21, 4, 1, "", "is_pending"], [21, 4, 1, "", "loop_idx"], [21, 4, 1, "", "output_files"], [21, 4, 1, "", "outputs"], [21, 4, 1, "", "schema_parameters"], [21, 4, 1, "", "task"], [21, 4, 1, "", "workflow"]], "matflow.ElementOutputFiles": [[22, 4, 1, "", "prefixed_names_unlabelled"], [22, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementOutputs": [[23, 4, 1, "", "prefixed_names_unlabelled"], [23, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementParameter": [[24, 2, 1, "", "app"], [24, 2, 1, "", "data_idx"], [24, 4, 1, "", "data_idx_is_set"], [24, 2, 1, "", "element"], [24, 3, 1, "", "get_size"], [24, 4, 1, "", "is_set"], [24, 2, 1, "", "parent"], [24, 2, 1, "", "path"], [24, 2, 1, "", "task"], [24, 4, 1, "", "value"]], "matflow.ElementPropagation": [[25, 2, 1, "", "app"], [25, 4, 1, "", "element_set"], [25, 2, 1, "", "nesting_order"], [25, 2, 1, "", "task"]], "matflow.ElementRepeats": [[26, 2, 1, "", "number"], [26, 2, 1, "", "where"]], "matflow.ElementResources": [[27, 2, 1, "", "SGE_parallel_env"], [27, 4, 1, "", "SLURM_is_parallel"], [27, 2, 1, "", "SLURM_num_cpus_per_task"], [27, 2, 1, "", "SLURM_num_nodes"], [27, 2, 1, "", "SLURM_num_tasks"], [27, 2, 1, "", "SLURM_num_tasks_per_node"], [27, 2, 1, "", "SLURM_partition"], [27, 2, 1, "", "app"], [27, 3, 1, "", "from_json_like"], [27, 3, 1, "", "get_default_os_name"], [27, 3, 1, "", "get_default_scheduler"], [27, 3, 1, "", "get_default_shell"], [27, 3, 1, "", "get_jobscript_hash"], [27, 4, 1, "", "is_parallel"], [27, 2, 1, "", "num_cores"], [27, 2, 1, "", "num_cores_per_node"], [27, 2, 1, "", "num_nodes"], [27, 2, 1, "", "num_threads"], [27, 2, 1, "", "os_name"], [27, 2, 1, "", "parallel_mode"], [27, 2, 1, "", "scheduler"], [27, 2, 1, "", "scheduler_args"], [27, 2, 1, "", "scratch"], [27, 3, 1, "", "set_defaults"], [27, 2, 1, "", "shell"], [27, 2, 1, "", "shell_args"], [27, 2, 1, "", "time_limit"], [27, 3, 1, "", "to_dict"], [27, 3, 1, "", "to_json_like"], [27, 2, 1, "", "use_job_array"], [27, 3, 1, "", "validate_against_machine"]], "matflow.ElementSet": [[28, 2, 1, "", "app"], [28, 4, 1, "", "defined_input_types"], [28, 4, 1, "", "elem_iter_IDs"], [28, 4, 1, "", "element_iterations"], [28, 4, 1, "", "element_local_idx_range"], [28, 4, 1, "", "elements"], [28, 3, 1, "", "ensure_element_sets"], [28, 3, 1, "", "from_json_like"], [28, 3, 1, "", "get_defined_parameter_types"], [28, 3, 1, "", "get_defined_sub_parameter_types"], [28, 3, 1, "", "get_locally_defined_inputs"], [28, 3, 1, "", "get_sequence_by_path"], [28, 3, 1, "", "get_sequence_from_path"], [28, 3, 1, "", "get_task_dependencies"], [28, 4, 1, "", "index"], [28, 4, 1, "", "input_types"], [28, 3, 1, "", "is_input_type_provided"], [28, 3, 1, "", "prepare_persistent_copy"], [28, 4, 1, "", "task"], [28, 4, 1, "", "task_template"], [28, 3, 1, "", "to_dict"], [28, 3, 1, "", "to_json_like"], [28, 4, 1, "", "undefined_input_types"]], "matflow.Elements": [[29, 3, 1, "", "islice"], [29, 4, 1, "", "task"]], "matflow.Environment": [[30, 2, 1, "", "app"], [30, 3, 1, "", "from_json_like"], [30, 3, 1, "", "to_dict"], [30, 3, 1, "", "to_json_like"]], "matflow.EnvironmentsList": [[31, 3, 1, "", "add_object"], [31, 3, 1, "", "add_objects"], [31, 3, 1, "", "from_json_like"], [31, 3, 1, "", "get"], [31, 3, 1, "", "get_all"], [31, 3, 1, "", "list_attrs"], [31, 3, 1, "", "to_dict"], [31, 3, 1, "", "to_json_like"]], "matflow.Executable": [[32, 2, 1, "", "app"], [32, 4, 1, "", "environment"], [32, 3, 1, "", "filter_instances"], [32, 3, 1, "", "from_json_like"], [32, 3, 1, "", "to_dict"], [32, 3, 1, "", "to_json_like"]], "matflow.ExecutableInstance": [[33, 2, 1, "", "app"], [33, 2, 1, "", "command"], [33, 3, 1, "", "from_json_like"], [33, 3, 1, "", "from_spec"], [33, 2, 1, "", "num_cores"], [33, 2, 1, "", "parallel_mode"], [33, 3, 1, "", "to_dict"], [33, 3, 1, "", "to_json_like"]], "matflow.ExecutablesList": [[34, 3, 1, "", "add_object"], [34, 3, 1, "", "add_objects"], [34, 2, 1, "", "environment"], [34, 3, 1, "", "from_json_like"], [34, 3, 1, "", "get"], [34, 3, 1, "", "get_all"], [34, 3, 1, "", "list_attrs"], [34, 3, 1, "", "to_dict"], [34, 3, 1, "", "to_json_like"]], "matflow.FileNameExt": [[35, 2, 1, "", "app"], [35, 2, 1, "", "file_name"], [35, 3, 1, "", "from_json_like"], [35, 3, 1, "", "to_dict"], [35, 3, 1, "", "to_json_like"], [35, 3, 1, "", "value"]], "matflow.FileNameSpec": [[36, 2, 1, "", "app"], [36, 4, 1, "", "ext"], [36, 3, 1, "", "from_json_like"], [36, 4, 1, "", "stem"], [36, 3, 1, "", "to_dict"], [36, 3, 1, "", "to_json_like"], [36, 3, 1, "", "value"]], "matflow.FileNameStem": [[37, 2, 1, "", "app"], [37, 2, 1, "", "file_name"], [37, 3, 1, "", "from_json_like"], [37, 3, 1, "", "to_dict"], [37, 3, 1, "", "to_json_like"], [37, 3, 1, "", "value"]], "matflow.FileSpec": [[38, 2, 1, "", "app"], [38, 4, 1, "", "ext"], [38, 3, 1, "", "from_json_like"], [38, 2, 1, "", "label"], [38, 2, 1, "", "name"], [38, 4, 1, "", "stem"], [38, 3, 1, "", "to_dict"], [38, 3, 1, "", "to_json_like"], [38, 3, 1, "", "value"]], "matflow.GroupList": [[39, 3, 1, "", "add_object"], [39, 3, 1, "", "add_objects"], [39, 3, 1, "", "from_json_like"], [39, 3, 1, "", "get"], [39, 3, 1, "", "get_all"], [39, 3, 1, "", "list_attrs"], [39, 3, 1, "", "to_dict"], [39, 3, 1, "", "to_json_like"]], "matflow.InputFile": [[40, 2, 1, "", "app"], [40, 4, 1, "", "contents"], [40, 4, 1, "", "extension"], [40, 3, 1, "", "from_json_like"], [40, 3, 1, "", "make_persistent"], [40, 4, 1, "", "normalised_files_path"], [40, 4, 1, "", "normalised_path"], [40, 4, 1, "", "path"], [40, 3, 1, "", "read_contents"], [40, 4, 1, "", "store_contents"], [40, 3, 1, "", "to_dict"], [40, 3, 1, "", "to_json_like"], [40, 4, 1, "", "workflow"]], "matflow.InputFileGenerator": [[41, 2, 1, "", "abortable"], [41, 2, 1, "", "app"], [41, 3, 1, "", "compose_source"], [41, 2, 1, "", "environment"], [41, 3, 1, "", "from_json_like"], [41, 3, 1, "", "get_action_rule"], [41, 2, 1, "", "input_file"], [41, 2, 1, "", "inputs"], [41, 2, 1, "", "script"], [41, 3, 1, "", "to_dict"], [41, 3, 1, "", "to_json_like"], [41, 3, 1, "", "write_source"]], "matflow.InputFileGeneratorSource": [[42, 2, 1, "", "app"], [42, 4, 1, "", "contents"], [42, 4, 1, "", "extension"], [42, 3, 1, "", "from_json_like"], [42, 3, 1, "", "make_persistent"], [42, 4, 1, "", "path"], [42, 3, 1, "", "read_contents"], [42, 4, 1, "", "store_contents"], [42, 3, 1, "", "to_dict"], [42, 3, 1, "", "to_json_like"], [42, 4, 1, "", "workflow"]], "matflow.InputSource": [[43, 2, 1, "", "app"], [43, 3, 1, "", "default"], [43, 3, 1, "", "from_json_like"], [43, 3, 1, "", "from_string"], [43, 3, 1, "", "get_task"], [43, 3, 1, "", "import_"], [43, 3, 1, "", "is_in"], [43, 3, 1, "", "local"], [43, 3, 1, "", "task"], [43, 3, 1, "", "to_dict"], [43, 3, 1, "", "to_json_like"], [43, 3, 1, "", "to_string"]], "matflow.InputSourceType": [[44, 2, 1, "", "DEFAULT"], [44, 2, 1, "", "IMPORT"], [44, 2, 1, "", "LOCAL"], [44, 2, 1, "", "TASK"]], "matflow.InputValue": [[45, 2, 1, "", "app"], [45, 3, 1, "", "from_json_like"], [45, 4, 1, "", "is_sub_value"], [45, 4, 1, "", "labelled_type"], [45, 3, 1, "", "make_persistent"], [45, 4, 1, "", "normalised_inputs_path"], [45, 4, 1, "", "normalised_path"], [45, 3, 1, "", "to_dict"], [45, 3, 1, "", "to_json_like"], [45, 4, 1, "", "value"], [45, 4, 1, "", "workflow"]], "matflow.Jobscript": [[46, 4, 1, "", "EAR_ID"], [46, 4, 1, "", "EAR_ID_file_name"], [46, 4, 1, "", "EAR_ID_file_path"], [46, 4, 1, "", "all_EARs"], [46, 2, 1, "", "app"], [46, 3, 1, "", "cancel"], [46, 3, 1, "", "compose_jobscript"], [46, 4, 1, "", "dependencies"], [46, 4, 1, "", "direct_stderr_file_name"], [46, 4, 1, "", "direct_stderr_path"], [46, 4, 1, "", "direct_stdout_file_name"], [46, 4, 1, "", "direct_stdout_path"], [46, 4, 1, "", "direct_win_pid_file_name"], [46, 4, 1, "", "direct_win_pid_file_path"], [46, 4, 1, "", "element_run_dir_file_name"], [46, 4, 1, "", "element_run_dir_file_path"], [46, 4, 1, "", "end_time"], [46, 3, 1, "", "from_json_like"], [46, 3, 1, "", "get_active_states"], [46, 3, 1, "", "get_commands_file_name"], [46, 3, 1, "", "get_task_loop_idx_array"], [46, 4, 1, "", "index"], [46, 4, 1, "", "is_array"], [46, 4, 1, "", "is_submitted"], [46, 4, 1, "", "jobscript_name"], [46, 4, 1, "", "jobscript_path"], [46, 3, 1, "", "make_artifact_dirs"], [46, 4, 1, "", "num_actions"], [46, 4, 1, "", "num_elements"], [46, 4, 1, "", "os_name"], [46, 4, 1, "", "process_ID"], [46, 4, 1, "", "resources"], [46, 4, 1, "", "scheduler"], [46, 4, 1, "", "scheduler_job_ID"], [46, 4, 1, "", "scheduler_js_ref"], [46, 4, 1, "", "scheduler_name"], [46, 4, 1, "", "scheduler_ref"], [46, 4, 1, "", "shell"], [46, 4, 1, "", "shell_name"], [46, 4, 1, "", "start_time"], [46, 4, 1, "", "submission"], [46, 3, 1, "", "submit"], [46, 4, 1, "", "submit_cmdline"], [46, 4, 1, "", "submit_hostname"], [46, 4, 1, "", "submit_machine"], [46, 4, 1, "", "submit_time"], [46, 4, 1, "", "task_actions"], [46, 4, 1, "", "task_elements"], [46, 4, 1, "", "task_insert_IDs"], [46, 4, 1, "", "task_loop_idx"], [46, 3, 1, "", "to_dict"], [46, 3, 1, "", "to_json_like"], [46, 4, 1, "", "version_info"], [46, 4, 1, "", "workflow"], [46, 4, 1, "", "workflow_app_alias"], [46, 3, 1, "", "write_EAR_ID_file"], [46, 3, 1, "", "write_element_run_dir_file"], [46, 3, 1, "", "write_jobscript"]], "matflow.Loop": [[47, 2, 1, "", "app"], [47, 3, 1, "", "from_json_like"], [47, 4, 1, "", "name"], [47, 4, 1, "", "non_iterable_parameters"], [47, 4, 1, "", "num_iterations"], [47, 4, 1, "", "task_insert_IDs"], [47, 4, 1, "", "task_objects"], [47, 3, 1, "", "to_dict"], [47, 3, 1, "", "to_json_like"], [47, 4, 1, "", "workflow_template"]], "matflow.NumCores": [[48, 2, 1, "", "app"], [48, 3, 1, "", "from_json_like"], [48, 2, 1, "", "start"], [48, 2, 1, "", "step"], [48, 2, 1, "", "stop"], [48, 3, 1, "", "to_dict"], [48, 3, 1, "", "to_json_like"]], "matflow.OutputFileParser": [[49, 2, 1, "", "abortable"], [49, 2, 1, "", "app"], [49, 2, 1, "", "clean_up"], [49, 3, 1, "", "compose_source"], [49, 2, 1, "", "environment"], [49, 3, 1, "", "from_json_like"], [49, 2, 1, "", "inputs"], [49, 2, 1, "", "options"], [49, 2, 1, "", "output"], [49, 2, 1, "", "output_files"], [49, 2, 1, "", "outputs"], [49, 2, 1, "", "save_files"], [49, 2, 1, "", "script"], [49, 3, 1, "", "to_dict"], [49, 3, 1, "", "to_json_like"], [49, 3, 1, "", "write_source"]], "matflow.OutputFileParserSource": [[50, 2, 1, "", "app"], [50, 4, 1, "", "contents"], [50, 4, 1, "", "extension"], [50, 3, 1, "", "from_json_like"], [50, 3, 1, "", "make_persistent"], [50, 4, 1, "", "path"], [50, 3, 1, "", "read_contents"], [50, 4, 1, "", "store_contents"], [50, 3, 1, "", "to_dict"], [50, 3, 1, "", "to_json_like"], [50, 4, 1, "", "workflow"]], "matflow.OutputLabel": [[51, 2, 1, "", "app"], [51, 3, 1, "", "from_json_like"], [51, 3, 1, "", "to_dict"], [51, 3, 1, "", "to_json_like"]], "matflow.Parameter": [[52, 2, 1, "", "app"], [52, 3, 1, "", "from_json_like"], [52, 2, 1, "", "is_file"], [52, 2, 1, "", "sub_parameters"], [52, 3, 1, "", "to_dict"], [52, 3, 1, "", "to_json_like"], [52, 2, 1, "", "typ"]], "matflow.ParameterPath": [[53, 2, 1, "", "app"], [53, 3, 1, "", "from_json_like"], [53, 2, 1, "", "path"], [53, 2, 1, "", "task"], [53, 3, 1, "", "to_dict"], [53, 3, 1, "", "to_json_like"]], "matflow.ParameterPropagationMode": [[54, 2, 1, "", "EXPLICIT"], [54, 2, 1, "", "IMPLICIT"], [54, 2, 1, "", "NEVER"]], "matflow.ParameterValue": [[55, 3, 1, "", "to_dict"]], "matflow.Parameters": [[56, 2, 1, "", "default"], [56, 3, 1, "", "islice"], [56, 2, 1, "", "path"], [56, 2, 1, "", "raise_on_missing"], [56, 2, 1, "", "return_element_parameters"], [56, 2, 1, "", "task"]], "matflow.ParametersList": [[57, 3, 1, "", "add_object"], [57, 3, 1, "", "add_objects"], [57, 3, 1, "", "from_json_like"], [57, 3, 1, "", "get"], [57, 3, 1, "", "get_all"], [57, 3, 1, "", "list_attrs"], [57, 3, 1, "", "to_dict"], [57, 3, 1, "", "to_json_like"]], "matflow.ResourceList": [[58, 3, 1, "", "add_object"], [58, 4, 1, "", "element_set"], [58, 3, 1, "", "from_json_like"], [58, 3, 1, "", "get"], [58, 3, 1, "", "get_all"], [58, 3, 1, "", "get_scopes"], [58, 3, 1, "", "list_attrs"], [58, 3, 1, "", "merge_template_resources"], [58, 3, 1, "", "normalise"], [58, 3, 1, "", "to_dict"], [58, 3, 1, "", "to_json_like"], [58, 4, 1, "", "workflow_template"]], "matflow.ResourceSpec": [[59, 2, 1, "", "ALLOWED_PARAMETERS"], [59, 4, 1, "", "SGE_parallel_env"], [59, 4, 1, "", "SLURM_num_cpus_per_task"], [59, 4, 1, "", "SLURM_num_nodes"], [59, 4, 1, "", "SLURM_num_tasks"], [59, 4, 1, "", "SLURM_num_tasks_per_node"], [59, 4, 1, "", "SLURM_partition"], [59, 2, 1, "", "app"], [59, 3, 1, "", "copy_non_persistent"], [59, 4, 1, "", "element_set"], [59, 3, 1, "", "from_json_like"], [59, 3, 1, "", "make_persistent"], [59, 4, 1, "", "normalised_path"], [59, 4, 1, "", "normalised_resources_path"], [59, 4, 1, "", "num_cores"], [59, 4, 1, "", "num_cores_per_node"], [59, 4, 1, "", "num_nodes"], [59, 4, 1, "", "num_threads"], [59, 4, 1, "", "os_name"], [59, 4, 1, "", "parallel_mode"], [59, 4, 1, "", "scheduler"], [59, 4, 1, "", "scheduler_args"], [59, 4, 1, "", "scratch"], [59, 4, 1, "", "shell"], [59, 4, 1, "", "shell_args"], [59, 4, 1, "", "time_limit"], [59, 3, 1, "", "to_dict"], [59, 3, 1, "", "to_json_like"], [59, 4, 1, "", "use_job_array"], [59, 4, 1, "", "workflow"], [59, 4, 1, "", "workflow_template"]], "matflow.SGEPosix": [[60, 2, 1, "", "DEFAULT_ARRAY_ITEM_VAR"], [60, 2, 1, "", "DEFAULT_ARRAY_SWITCH"], [60, 2, 1, "", "DEFAULT_CWD_SWITCH"], [60, 2, 1, "", "DEFAULT_DEL_CMD"], [60, 2, 1, "", "DEFAULT_JS_CMD"], [60, 2, 1, "", "DEFAULT_LOGIN_NODES_CMD"], [60, 2, 1, "", "DEFAULT_LOGIN_NODE_MATCH"], [60, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [60, 2, 1, "", "DEFAULT_SHELL_ARGS"], [60, 2, 1, "", "DEFAULT_SHOW_CMD"], [60, 2, 1, "", "DEFAULT_SUBMIT_CMD"], [60, 2, 1, "", "app"], [60, 3, 1, "", "cancel_jobs"], [60, 3, 1, "", "format_array_request"], [60, 3, 1, "", "format_core_request_lines"], [60, 3, 1, "", "format_options"], [60, 3, 1, "", "format_std_stream_file_option_lines"], [60, 3, 1, "", "format_switch"], [60, 3, 1, "", "get_job_state_info"], [60, 3, 1, "", "get_job_statuses"], [60, 3, 1, "", "get_login_nodes"], [60, 3, 1, "", "get_submit_command"], [60, 3, 1, "", "get_version_info"], [60, 3, 1, "", "is_jobscript_active"], [60, 3, 1, "", "is_num_cores_supported"], [60, 3, 1, "", "parse_submission_output"], [60, 3, 1, "", "process_resources"], [60, 2, 1, "", "state_lookup"], [60, 3, 1, "", "wait_for_jobscripts"]], "matflow.SchemaInput": [[61, 4, 1, "", "all_labelled_types"], [61, 2, 1, "", "app"], [61, 4, 1, "", "default_value"], [61, 3, 1, "", "from_json_like"], [61, 4, 1, "", "input_or_output"], [61, 3, 1, "", "labelled_info"], [61, 4, 1, "", "name"], [61, 4, 1, "", "single_label"], [61, 4, 1, "", "single_labelled_data"], [61, 4, 1, "", "single_labelled_type"], [61, 4, 1, "", "task_schema"], [61, 3, 1, "", "to_dict"], [61, 3, 1, "", "to_json_like"], [61, 4, 1, "", "typ"]], "matflow.SchemaOutput": [[62, 2, 1, "", "app"], [62, 3, 1, "", "from_json_like"], [62, 4, 1, "", "input_or_output"], [62, 4, 1, "", "name"], [62, 2, 1, "", "parameter"], [62, 2, 1, "", "propagation_mode"], [62, 3, 1, "", "to_dict"], [62, 3, 1, "", "to_json_like"], [62, 4, 1, "", "typ"]], "matflow.SchemaParameter": [[63, 2, 1, "", "app"], [63, 3, 1, "", "from_json_like"], [63, 4, 1, "", "name"], [63, 3, 1, "", "to_dict"], [63, 3, 1, "", "to_json_like"], [63, 4, 1, "", "typ"]], "matflow.SlurmPosix": [[64, 2, 1, "", "DEFAULT_ARRAY_ITEM_VAR"], [64, 2, 1, "", "DEFAULT_ARRAY_SWITCH"], [64, 2, 1, "", "DEFAULT_DEL_CMD"], [64, 2, 1, "", "DEFAULT_JS_CMD"], [64, 2, 1, "", "DEFAULT_LOGIN_NODES_CMD"], [64, 2, 1, "", "DEFAULT_LOGIN_NODE_MATCH"], [64, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [64, 2, 1, "", "DEFAULT_SHELL_ARGS"], [64, 2, 1, "", "DEFAULT_SHELL_EXECUTABLE"], [64, 2, 1, "", "DEFAULT_SHOW_CMD"], [64, 2, 1, "", "DEFAULT_SUBMIT_CMD"], [64, 2, 1, "", "app"], [64, 3, 1, "", "cancel_jobs"], [64, 3, 1, "", "format_array_request"], [64, 3, 1, "", "format_core_request_lines"], [64, 3, 1, "", "format_options"], [64, 3, 1, "", "format_std_stream_file_option_lines"], [64, 3, 1, "", "format_switch"], [64, 3, 1, "", "get_job_state_info"], [64, 3, 1, "", "get_submit_command"], [64, 3, 1, "", "get_version_info"], [64, 3, 1, "", "is_jobscript_active"], [64, 3, 1, "", "is_num_cores_supported"], [64, 3, 1, "", "parse_submission_output"], [64, 3, 1, "", "process_resources"], [64, 2, 1, "", "state_lookup"], [64, 3, 1, "", "wait_for_jobscripts"]], "matflow.SubParameter": [[65, 2, 1, "", "address"], [65, 2, 1, "", "parameter"]], "matflow.Submission": [[66, 4, 1, "", "EARs_by_elements"], [66, 4, 1, "", "JS_parallelism"], [66, 4, 1, "", "abort_EARs_file_name"], [66, 4, 1, "", "abort_EARs_file_path"], [66, 4, 1, "", "all_EAR_IDs"], [66, 4, 1, "", "all_EARs"], [66, 2, 1, "", "app"], [66, 3, 1, "", "cancel"], [66, 4, 1, "", "end_time"], [66, 3, 1, "", "from_json_like"], [66, 3, 1, "", "get_active_jobscripts"], [66, 3, 1, "", "get_end_time"], [66, 3, 1, "", "get_start_time"], [66, 3, 1, "", "get_unique_schedulers"], [66, 3, 1, "", "get_unique_schedulers_of_jobscripts"], [66, 3, 1, "", "get_unique_shells"], [66, 4, 1, "", "index"], [66, 4, 1, "", "jobscript_indices"], [66, 4, 1, "", "jobscripts"], [66, 4, 1, "", "needs_submit"], [66, 4, 1, "", "outstanding_jobscripts"], [66, 4, 1, "", "path"], [66, 4, 1, "", "start_time"], [66, 4, 1, "", "status"], [66, 4, 1, "", "submission_parts"], [66, 3, 1, "", "submit"], [66, 4, 1, "", "submitted_jobscripts"], [66, 3, 1, "", "to_dict"], [66, 3, 1, "", "to_json_like"], [66, 4, 1, "", "workflow"]], "matflow.Task": [[67, 3, 1, "", "add_group"], [67, 3, 1, "", "all_schema_actions"], [67, 4, 1, "", "all_schema_input_normalised_paths"], [67, 4, 1, "", "all_schema_input_types"], [67, 4, 1, "", "all_schema_inputs"], [67, 4, 1, "", "all_schema_output_types"], [67, 4, 1, "", "all_schema_outputs"], [67, 4, 1, "", "all_sourced_normalised_paths"], [67, 2, 1, "", "app"], [67, 4, 1, "", "defined_input_types"], [67, 4, 1, "", "dir_name"], [67, 4, 1, "", "element_sets"], [67, 3, 1, "", "from_json_like"], [67, 3, 1, "", "get_available_task_input_sources"], [67, 3, 1, "", "get_input_statuses"], [67, 3, 1, "", "get_param_provided_element_sets"], [67, 3, 1, "", "get_schema_action"], [67, 3, 1, "", "get_task_unique_names"], [67, 4, 1, "", "index"], [67, 4, 1, "", "insert_ID"], [67, 3, 1, "", "is_input_type_required"], [67, 4, 1, "", "name"], [67, 4, 1, "", "non_universal_input_types"], [67, 4, 1, "", "num_all_schema_actions"], [67, 4, 1, "", "num_element_sets"], [67, 4, 1, "", "objective"], [67, 4, 1, "", "output_labels"], [67, 3, 1, "", "prepare_element_resolution"], [67, 3, 1, "", "provides_parameters"], [67, 4, 1, "", "schemas"], [67, 3, 1, "", "set_sequence_parameters"], [67, 3, 1, "", "to_dict"], [67, 3, 1, "", "to_json_like"], [67, 3, 1, "", "to_persistent"], [67, 4, 1, "", "undefined_input_types"], [67, 4, 1, "", "undefined_inputs"], [67, 4, 1, "", "universal_input_types"], [67, 4, 1, "", "unsourced_inputs"]], "matflow.TaskInputParameters": [[68, 2, 1, "", "task"]], "matflow.TaskList": [[69, 3, 1, "", "add_object"], [69, 3, 1, "", "add_objects"], [69, 3, 1, "", "from_json_like"], [69, 3, 1, "", "get"], [69, 3, 1, "", "get_all"], [69, 3, 1, "", "list_attrs"], [69, 3, 1, "", "to_dict"], [69, 3, 1, "", "to_json_like"]], "matflow.TaskObjective": [[70, 2, 1, "", "app"], [70, 3, 1, "", "from_json_like"], [70, 2, 1, "", "name"], [70, 3, 1, "", "to_dict"], [70, 3, 1, "", "to_json_like"]], "matflow.TaskOutputParameters": [[71, 2, 1, "", "task"]], "matflow.TaskSchema": [[72, 2, 1, "", "app"], [72, 3, 1, "", "from_json_like"], [72, 3, 1, "", "get_by_key"], [72, 3, 1, "", "get_key"], [72, 3, 1, "", "get_parameter_dependence"], [72, 3, 1, "", "ignore_invalid_actions"], [72, 4, 1, "", "info"], [72, 4, 1, "", "input_types"], [72, 3, 1, "", "make_persistent"], [72, 4, 1, "", "name"], [72, 4, 1, "", "output_types"], [72, 4, 1, "", "provides_parameters"], [72, 4, 1, "", "task_template"], [72, 3, 1, "", "to_dict"], [72, 3, 1, "", "to_json_like"]], "matflow.TaskSchemasList": [[73, 3, 1, "", "add_object"], [73, 3, 1, "", "add_objects"], [73, 3, 1, "", "from_json_like"], [73, 3, 1, "", "get"], [73, 3, 1, "", "get_all"], [73, 3, 1, "", "list_attrs"], [73, 3, 1, "", "to_dict"], [73, 3, 1, "", "to_json_like"]], "matflow.TaskSourceType": [[74, 2, 1, "", "ANY"], [74, 2, 1, "", "INPUT"], [74, 2, 1, "", "OUTPUT"]], "matflow.TaskTemplateList": [[75, 3, 1, "", "add_object"], [75, 3, 1, "", "add_objects"], [75, 3, 1, "", "from_json_like"], [75, 3, 1, "", "get"], [75, 3, 1, "", "get_all"], [75, 3, 1, "", "list_attrs"], [75, 3, 1, "", "to_dict"], [75, 3, 1, "", "to_json_like"]], "matflow.ValuePerturbation": [[76, 2, 1, "", "additive_factor"], [76, 2, 1, "", "app"], [76, 3, 1, "", "from_json_like"], [76, 3, 1, "", "from_spec"], [76, 3, 1, "", "make_persistent"], [76, 2, 1, "", "multiplicative_factor"], [76, 2, 1, "", "name"], [76, 2, 1, "", "path"], [76, 3, 1, "", "to_dict"], [76, 3, 1, "", "to_json_like"], [76, 4, 1, "", "value"], [76, 4, 1, "", "workflow"]], "matflow.ValueSequence": [[77, 2, 1, "", "app"], [77, 3, 1, "", "from_geometric_space"], [77, 3, 1, "", "from_json_like"], [77, 3, 1, "", "from_linear_space"], [77, 3, 1, "", "from_log_space"], [77, 3, 1, "", "from_range"], [77, 4, 1, "", "input_path"], [77, 4, 1, "", "input_type"], [77, 4, 1, "", "is_sub_value"], [77, 4, 1, "", "labelled_type"], [77, 3, 1, "", "make_persistent"], [77, 4, 1, "", "normalised_inputs_path"], [77, 4, 1, "", "normalised_path"], [77, 4, 1, "", "parameter"], [77, 4, 1, "", "path_split"], [77, 4, 1, "", "path_type"], [77, 4, 1, "", "resource_scope"], [77, 3, 1, "", "to_dict"], [77, 3, 1, "", "to_json_like"], [77, 4, 1, "", "values"], [77, 4, 1, "", "workflow"]], "matflow.Workflow": [[78, 3, 1, "", "abort_run"], [78, 3, 1, "", "add_loop"], [78, 3, 1, "", "add_submission"], [78, 3, 1, "", "add_task"], [78, 3, 1, "", "add_task_after"], [78, 3, 1, "", "add_task_before"], [78, 2, 1, "", "app"], [78, 4, 1, "", "artifacts_path"], [78, 3, 1, "", "batch_update"], [78, 3, 1, "", "cancel"], [78, 3, 1, "", "check_parameters_exist"], [78, 3, 1, "", "copy"], [78, 4, 1, "", "creation_info"], [78, 3, 1, "", "delete"], [78, 3, 1, "", "elements"], [78, 4, 1, "", "execution_path"], [78, 3, 1, "", "from_JSON_file"], [78, 3, 1, "", "from_JSON_string"], [78, 3, 1, "", "from_YAML_file"], [78, 3, 1, "", "from_YAML_string"], [78, 3, 1, "", "from_file"], [78, 3, 1, "", "from_template"], [78, 3, 1, "", "from_template_data"], [78, 4, 1, "", "fs_path"], [78, 3, 1, "", "get_EAR_IDs_of_tasks"], [78, 3, 1, "", "get_EAR_skipped"], [78, 3, 1, "", "get_EARs_from_IDs"], [78, 3, 1, "", "get_EARs_of_tasks"], [78, 3, 1, "", "get_all_EARs"], [78, 3, 1, "", "get_all_element_iterations"], [78, 3, 1, "", "get_all_elements"], [78, 3, 1, "", "get_all_parameter_data"], [78, 3, 1, "", "get_all_parameters"], [78, 3, 1, "", "get_element_IDs_from_EAR_IDs"], [78, 3, 1, "", "get_element_iteration_IDs_from_EAR_IDs"], [78, 3, 1, "", "get_element_iterations_from_IDs"], [78, 3, 1, "", "get_element_iterations_of_tasks"], [78, 3, 1, "", "get_elements_from_IDs"], [78, 3, 1, "", "get_iteration_task_pathway"], [78, 3, 1, "", "get_parameter"], [78, 3, 1, "", "get_parameter_data"], [78, 3, 1, "", "get_parameter_set_statuses"], [78, 3, 1, "", "get_parameter_source"], [78, 3, 1, "", "get_parameter_sources"], [78, 3, 1, "", "get_parameters"], [78, 3, 1, "", "get_running_elements"], [78, 3, 1, "", "get_running_runs"], [78, 3, 1, "", "get_store_EARs"], [78, 3, 1, "", "get_store_element_iterations"], [78, 3, 1, "", "get_store_elements"], [78, 3, 1, "", "get_store_tasks"], [78, 3, 1, "", "get_task_IDs_from_element_IDs"], [78, 3, 1, "", "get_task_elements"], [78, 3, 1, "", "get_task_unique_names"], [78, 4, 1, "", "id_"], [78, 4, 1, "", "input_files_path"], [78, 3, 1, "", "is_parameter_set"], [78, 4, 1, "", "loops"], [78, 4, 1, "", "name"], [78, 4, 1, "", "num_EARs"], [78, 4, 1, "", "num_added_tasks"], [78, 4, 1, "", "num_element_iterations"], [78, 4, 1, "", "num_elements"], [78, 4, 1, "", "num_loops"], [78, 4, 1, "", "num_submissions"], [78, 4, 1, "", "num_tasks"], [78, 3, 1, "", "resolve_jobscripts"], [78, 3, 1, "", "save_parameter"], [78, 3, 1, "", "set_EAR_end"], [78, 3, 1, "", "set_EAR_skip"], [78, 3, 1, "", "set_EAR_start"], [78, 3, 1, "", "set_EAR_submission_index"], [78, 3, 1, "", "set_EARs_initialised"], [78, 3, 1, "", "set_parameter_value"], [78, 3, 1, "", "show_all_EAR_statuses"], [78, 4, 1, "", "store_format"], [78, 4, 1, "", "submissions"], [78, 4, 1, "", "submissions_path"], [78, 3, 1, "", "submit"], [78, 4, 1, "", "task_artifacts_path"], [78, 4, 1, "", "tasks"], [78, 4, 1, "", "template"], [78, 4, 1, "", "template_components"], [78, 3, 1, "", "temporary_rename"], [78, 3, 1, "", "to_zip"], [78, 4, 1, "", "ts_fmt"], [78, 4, 1, "", "ts_name_fmt"], [78, 3, 1, "", "wait"], [78, 3, 1, "", "write_commands"]], "matflow.WorkflowBlueprint": [[79, 2, 1, "", "workflow_template"]], "matflow.WorkflowLoop": [[80, 3, 1, "", "add_iteration"], [80, 2, 1, "", "app"], [80, 3, 1, "", "get_child_loops"], [80, 3, 1, "", "get_parent_loops"], [80, 4, 1, "", "index"], [80, 4, 1, "", "iterable_parameters"], [80, 4, 1, "", "name"], [80, 3, 1, "", "new_empty_loop"], [80, 4, 1, "", "num_added_iterations"], [80, 4, 1, "", "num_iterations"], [80, 4, 1, "", "task_indices"], [80, 4, 1, "", "task_insert_IDs"], [80, 4, 1, "", "task_objects"], [80, 4, 1, "", "template"], [80, 4, 1, "", "workflow"]], "matflow.WorkflowLoopList": [[81, 3, 1, "", "add_object"], [81, 3, 1, "", "add_objects"], [81, 2, 1, "", "app"], [81, 3, 1, "", "from_json_like"], [81, 3, 1, "", "get"], [81, 3, 1, "", "get_all"], [81, 3, 1, "", "list_attrs"], [81, 3, 1, "", "to_dict"], [81, 3, 1, "", "to_json_like"]], "matflow.WorkflowTask": [[82, 3, 1, "", "add_elements"], [82, 2, 1, "", "app"], [82, 4, 1, "", "dir_name"], [82, 4, 1, "", "downstream_tasks"], [82, 4, 1, "", "element_IDs"], [82, 4, 1, "", "elements"], [82, 3, 1, "", "ensure_input_sources"], [82, 3, 1, "", "generate_new_elements"], [82, 3, 1, "", "get"], [82, 3, 1, "", "get_all_element_iterations"], [82, 3, 1, "", "get_dependent_elements"], [82, 3, 1, "", "get_dependent_tasks"], [82, 3, 1, "", "get_dir_name"], [82, 3, 1, "", "get_element_dependencies"], [82, 3, 1, "", "get_task_dependencies"], [82, 4, 1, "", "index"], [82, 3, 1, "", "initialise_EARs"], [82, 4, 1, "", "inputs"], [82, 4, 1, "", "insert_ID"], [82, 4, 1, "", "name"], [82, 3, 1, "", "new_empty_task"], [82, 4, 1, "", "num_actions"], [82, 4, 1, "", "num_element_sets"], [82, 4, 1, "", "num_elements"], [82, 4, 1, "", "outputs"], [82, 3, 1, "", "resolve_element_data_indices"], [82, 4, 1, "", "template"], [82, 3, 1, "", "test_action_rule"], [82, 4, 1, "", "unique_name"], [82, 4, 1, "", "upstream_tasks"], [82, 4, 1, "", "workflow"]], "matflow.WorkflowTaskList": [[83, 3, 1, "", "add_object"], [83, 3, 1, "", "add_objects"], [83, 2, 1, "", "app"], [83, 3, 1, "", "from_json_like"], [83, 3, 1, "", "get"], [83, 3, 1, "", "get_all"], [83, 3, 1, "", "list_attrs"], [83, 3, 1, "", "to_dict"], [83, 3, 1, "", "to_json_like"]], "matflow.WorkflowTemplate": [[84, 2, 1, "", "app"], [84, 2, 1, "", "doc"], [84, 3, 1, "", "from_JSON_file"], [84, 3, 1, "", "from_JSON_string"], [84, 3, 1, "", "from_YAML_file"], [84, 3, 1, "", "from_YAML_string"], [84, 3, 1, "", "from_file"], [84, 3, 1, "", "from_json_like"], [84, 2, 1, "", "loops"], [84, 2, 1, "", "name"], [84, 2, 1, "", "resources"], [84, 2, 1, "", "tasks"], [84, 3, 1, "", "to_dict"], [84, 3, 1, "", "to_json_like"], [84, 2, 1, "", "workflow"]], "matflow.param_classes": [[96, 0, 0, "-", "load"], [100, 0, 0, "-", "orientations"], [108, 0, 0, "-", "seeds"], [110, 0, 0, "-", "utils"]], "matflow.param_classes.load": [[97, 1, 1, "", "LoadCase"], [98, 1, 1, "", "LoadStep"], [99, 1, 1, "", "StrainRateMode"]], "matflow.param_classes.load.LoadCase": [[97, 3, 1, "", "biaxial"], [97, 3, 1, "", "example_uniaxial"], [97, 3, 1, "", "multistep"], [97, 4, 1, "", "num_steps"], [97, 3, 1, "", "planar_2D"], [97, 3, 1, "", "plane_strain"], [97, 3, 1, "", "random_2D"], [97, 3, 1, "", "random_3D"], [97, 2, 1, "", "steps"], [97, 3, 1, "", "to_dict"], [97, 4, 1, "", "type"], [97, 4, 1, "", "types"], [97, 3, 1, "", "uniaxial"], [97, 3, 1, "", "uniaxial_cyclic"]], "matflow.param_classes.load.LoadStep": [[98, 3, 1, "", "biaxial"], [98, 3, 1, "", "example_uniaxial"], [98, 4, 1, "", "method_args"], [98, 4, 1, "", "method_name"], [98, 3, 1, "", "planar_2D"], [98, 3, 1, "", "plane_strain"], [98, 3, 1, "", "random_2D"], [98, 3, 1, "", "random_3D"], [98, 4, 1, "", "strain_like_tensor"], [98, 3, 1, "", "to_dict"], [98, 4, 1, "", "type"], [98, 3, 1, "", "uniaxial"], [98, 3, 1, "", "uniaxial_cyclic"]], "matflow.param_classes.load.StrainRateMode": [[99, 2, 1, "", "DEF_GRAD_RATE"], [99, 2, 1, "", "VEL_GRAD"], [99, 2, 1, "", "VEL_GRAD_APPROX"]], "matflow.param_classes.orientations": [[101, 1, 1, "", "EulerDefinition"], [102, 1, 1, "", "LatticeDirection"], [103, 1, 1, "", "OrientationRepresentation"], [104, 1, 1, "", "OrientationRepresentationType"], [105, 1, 1, "", "Orientations"], [106, 1, 1, "", "QuatOrder"], [107, 1, 1, "", "UnitCellAlignment"]], "matflow.param_classes.orientations.EulerDefinition": [[101, 2, 1, "", "BUNGE"]], "matflow.param_classes.orientations.LatticeDirection": [[102, 2, 1, "", "A"], [102, 2, 1, "", "A_STAR"], [102, 2, 1, "", "B"], [102, 2, 1, "", "B_STAR"], [102, 2, 1, "", "C"], [102, 2, 1, "", "C_STAR"]], "matflow.param_classes.orientations.OrientationRepresentation": [[103, 2, 1, "", "euler_definition"], [103, 2, 1, "", "euler_is_degrees"], [103, 2, 1, "", "quat_order"], [103, 3, 1, "", "to_dict"], [103, 2, 1, "", "type"]], "matflow.param_classes.orientations.OrientationRepresentationType": [[104, 2, 1, "", "EULER"], [104, 2, 1, "", "QUATERNION"]], "matflow.param_classes.orientations.Orientations": [[105, 2, 1, "", "data"], [105, 3, 1, "", "dump_to_HDF5_group"], [105, 3, 1, "", "from_JSON_like"], [105, 3, 1, "", "from_file"], [105, 3, 1, "", "from_random"], [105, 3, 1, "", "quat_sample_random"], [105, 2, 1, "", "representation"], [105, 3, 1, "", "save_from_HDF5_group"], [105, 3, 1, "", "to_dict"], [105, 2, 1, "", "unit_cell_alignment"]], "matflow.param_classes.orientations.QuatOrder": [[106, 2, 1, "", "SCALAR_VECTOR"], [106, 2, 1, "", "VECTOR_SCALAR"]], "matflow.param_classes.orientations.UnitCellAlignment": [[107, 3, 1, "", "from_hex_convention_DAMASK"], [107, 3, 1, "", "from_hex_convention_MTEX"], [107, 3, 1, "", "to_dict"], [107, 2, 1, "", "x"], [107, 2, 1, "", "y"], [107, 2, 1, "", "z"]], "matflow.param_classes.seeds": [[109, 1, 1, "", "MicrostructureSeeds"]], "matflow.param_classes.seeds.MicrostructureSeeds": [[109, 2, 1, "", "box_size"], [109, 3, 1, "", "from_JSON_like"], [109, 3, 1, "", "from_file"], [109, 3, 1, "", "from_random"], [109, 4, 1, "", "num_seeds"], [109, 2, 1, "", "orientations"], [109, 2, 1, "", "phase_label"], [109, 2, 1, "", "position"], [109, 2, 1, "", "random_seed"], [109, 3, 1, "", "to_dict"]], "matflow.tests": [[117, 0, 0, "-", "conftest"], [121, 0, 0, "-", "test_cli"]], "matflow.tests.conftest": [[118, 6, 1, "", "null_config"], [119, 6, 1, "", "pytest_configure"], [120, 6, 1, "", "pytest_unconfigure"]], "matflow.tests.test_cli": [[122, 6, 1, "", "test_hpcflow_version"], [123, 6, 1, "", "test_version"]], "matflow-cancel": [[125, 7, 1, "cmdoption-matflow-cancel-r", "--ref-type"], [125, 7, 1, "cmdoption-matflow-cancel-r", "-r"], [125, 7, 1, "cmdoption-matflow-cancel-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-config-add-scheduler": [[125, 7, 1, "cmdoption-matflow-config-add-scheduler-defaults", "--defaults"], [125, 7, 1, "cmdoption-matflow-config-add-scheduler-arg-NAME", "NAME"]], "matflow-config-append": [[125, 7, 1, "cmdoption-matflow-config-append-json", "--json"], [125, 7, 1, "cmdoption-matflow-config-append-arg-NAME", "NAME"], [125, 7, 1, "cmdoption-matflow-config-append-arg-VALUE", "VALUE"]], "matflow-config-get": [[125, 7, 1, "cmdoption-matflow-config-get-all", "--all"], [125, 7, 1, "cmdoption-matflow-config-get-file", "--file"], [125, 7, 1, "cmdoption-matflow-config-get-metadata", "--metadata"], [125, 7, 1, "cmdoption-matflow-config-get-arg-NAME", "NAME"]], "matflow-config-import": [[125, 7, 1, "cmdoption-matflow-config-import-new", "--new"], [125, 7, 1, "cmdoption-matflow-config-import-rename", "--no-rename"], [125, 7, 1, "cmdoption-matflow-config-import-rename", "--rename"], [125, 7, 1, "cmdoption-matflow-config-import-arg-FILE_PATH", "FILE_PATH"]], "matflow-config-init": [[125, 7, 1, "cmdoption-matflow-config-init-path", "--path"], [125, 7, 1, "cmdoption-matflow-config-init-arg-KNOWN_NAME", "KNOWN_NAME"]], "matflow-config-open": [[125, 7, 1, "cmdoption-matflow-config-open-path", "--path"]], "matflow-config-pop": [[125, 7, 1, "cmdoption-matflow-config-pop-arg-INDEX", "INDEX"], [125, 7, 1, "cmdoption-matflow-config-pop-arg-NAME", "NAME"]], "matflow-config-prepend": [[125, 7, 1, "cmdoption-matflow-config-prepend-json", "--json"], [125, 7, 1, "cmdoption-matflow-config-prepend-arg-NAME", "NAME"], [125, 7, 1, "cmdoption-matflow-config-prepend-arg-VALUE", "VALUE"]], "matflow-config-set": [[125, 7, 1, "cmdoption-matflow-config-set-json", "--json"], [125, 7, 1, "cmdoption-matflow-config-set-arg-NAME", "NAME"], [125, 7, 1, "cmdoption-matflow-config-set-arg-VALUE", "VALUE"]], "matflow-config-unset": [[125, 7, 1, "cmdoption-matflow-config-unset-arg-NAME", "NAME"]], "matflow-config-update": [[125, 7, 1, "cmdoption-matflow-config-update-json", "--json"], [125, 7, 1, "cmdoption-matflow-config-update-arg-NAME", "NAME"], [125, 7, 1, "cmdoption-matflow-config-update-arg-VALUE", "VALUE"]], "matflow-config": [[125, 7, 1, "cmdoption-matflow-config-no-callback", "--no-callback"]], "matflow-demo-software-doSomething": [[125, 7, 1, "cmdoption-matflow-demo-software-doSomething-i1", "--infile1"], [125, 7, 1, "cmdoption-matflow-demo-software-doSomething-i2", "--infile2"], [125, 7, 1, "cmdoption-matflow-demo-software-doSomething-o", "--out"], [125, 7, 1, "cmdoption-matflow-demo-software-doSomething-v", "--value"], [125, 7, 1, "cmdoption-matflow-demo-software-doSomething-i1", "-i1"], [125, 7, 1, "cmdoption-matflow-demo-software-doSomething-i2", "-i2"], [125, 7, 1, "cmdoption-matflow-demo-software-doSomething-o", "-o"], [125, 7, 1, "cmdoption-matflow-demo-software-doSomething-v", "-v"]], "matflow-demo-workflow-copy": [[125, 7, 1, "cmdoption-matflow-demo-workflow-copy-doc", "--doc"], [125, 7, 1, "cmdoption-matflow-demo-workflow-copy-doc", "--no-doc"], [125, 7, 1, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION", "DESTINATION"], [125, 7, 1, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-go": [[125, 7, 1, "cmdoption-matflow-demo-workflow-go-add-to-known", "--add-to-known"], [125, 7, 1, "cmdoption-matflow-demo-workflow-go-format", "--format"], [125, 7, 1, "cmdoption-matflow-demo-workflow-go-js-parallelism", "--js-parallelism"], [125, 7, 1, "cmdoption-matflow-demo-workflow-go-name", "--name"], [125, 7, 1, "cmdoption-matflow-demo-workflow-go-add-to-known", "--no-add-to-known"], [125, 7, 1, "cmdoption-matflow-demo-workflow-go-overwrite", "--overwrite"], [125, 7, 1, "cmdoption-matflow-demo-workflow-go-path", "--path"], [125, 7, 1, "cmdoption-matflow-demo-workflow-go-store", "--store"], [125, 7, 1, "cmdoption-matflow-demo-workflow-go-ts-fmt", "--ts-fmt"], [125, 7, 1, "cmdoption-matflow-demo-workflow-go-ts-name-fmt", "--ts-name-fmt"], [125, 7, 1, "cmdoption-matflow-demo-workflow-go-wait", "--wait"], [125, 7, 1, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-make": [[125, 7, 1, "cmdoption-matflow-demo-workflow-make-format", "--format"], [125, 7, 1, "cmdoption-matflow-demo-workflow-make-name", "--name"], [125, 7, 1, "cmdoption-matflow-demo-workflow-make-overwrite", "--overwrite"], [125, 7, 1, "cmdoption-matflow-demo-workflow-make-path", "--path"], [125, 7, 1, "cmdoption-matflow-demo-workflow-make-store", "--store"], [125, 7, 1, "cmdoption-matflow-demo-workflow-make-ts-fmt", "--ts-fmt"], [125, 7, 1, "cmdoption-matflow-demo-workflow-make-ts-name-fmt", "--ts-name-fmt"], [125, 7, 1, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-show": [[125, 7, 1, "cmdoption-matflow-demo-workflow-show-doc", "--doc"], [125, 7, 1, "cmdoption-matflow-demo-workflow-show-doc", "--no-doc"], [125, 7, 1, "cmdoption-matflow-demo-workflow-show-syntax", "--no-syntax"], [125, 7, 1, "cmdoption-matflow-demo-workflow-show-syntax", "--syntax"], [125, 7, 1, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow": [[125, 7, 1, "cmdoption-matflow-demo-workflow-l", "--list"], [125, 7, 1, "cmdoption-matflow-demo-workflow-l", "-l"]], "matflow-go": [[125, 7, 1, "cmdoption-matflow-go-add-to-known", "--add-to-known"], [125, 7, 1, "cmdoption-matflow-go-format", "--format"], [125, 7, 1, "cmdoption-matflow-go-js-parallelism", "--js-parallelism"], [125, 7, 1, "cmdoption-matflow-go-name", "--name"], [125, 7, 1, "cmdoption-matflow-go-add-to-known", "--no-add-to-known"], [125, 7, 1, "cmdoption-matflow-go-overwrite", "--overwrite"], [125, 7, 1, "cmdoption-matflow-go-path", "--path"], [125, 7, 1, "cmdoption-matflow-go-store", "--store"], [125, 7, 1, "cmdoption-matflow-go-string", "--string"], [125, 7, 1, "cmdoption-matflow-go-ts-fmt", "--ts-fmt"], [125, 7, 1, "cmdoption-matflow-go-ts-name-fmt", "--ts-name-fmt"], [125, 7, 1, "cmdoption-matflow-go-wait", "--wait"], [125, 7, 1, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR", "TEMPLATE_FILE_OR_STR"]], "matflow-helper-pid": [[125, 7, 1, "cmdoption-matflow-helper-pid-f", "--file"], [125, 7, 1, "cmdoption-matflow-helper-pid-f", "-f"]], "matflow-helper-restart": [[125, 7, 1, "cmdoption-matflow-helper-restart-timeout", "--timeout"], [125, 7, 1, "cmdoption-matflow-helper-restart-timeout-check-interval", "--timeout-check-interval"], [125, 7, 1, "cmdoption-matflow-helper-restart-watch-interval", "--watch-interval"]], "matflow-helper-run": [[125, 7, 1, "cmdoption-matflow-helper-run-timeout", "--timeout"], [125, 7, 1, "cmdoption-matflow-helper-run-timeout-check-interval", "--timeout-check-interval"], [125, 7, 1, "cmdoption-matflow-helper-run-watch-interval", "--watch-interval"]], "matflow-helper-start": [[125, 7, 1, "cmdoption-matflow-helper-start-timeout", "--timeout"], [125, 7, 1, "cmdoption-matflow-helper-start-timeout-check-interval", "--timeout-check-interval"], [125, 7, 1, "cmdoption-matflow-helper-start-watch-interval", "--watch-interval"]], "matflow-internal-workflow-PATH-get-ear-skipped": [[125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-get-ear-skipped-arg-EAR_ID", "EAR_ID"]], "matflow-internal-workflow-PATH-save-parameter": [[125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID", "EAR_ID"], [125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME", "NAME"], [125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE", "VALUE"]], "matflow-internal-workflow-PATH-set-ear-end": [[125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EAR_ID", "EAR_ID"], [125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EXIT_CODE", "EXIT_CODE"], [125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_ACT_IDX", "JS_ACT_IDX"], [125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_IDX", "JS_IDX"]], "matflow-internal-workflow-PATH-set-ear-skip": [[125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-skip-arg-EAR_ID", "EAR_ID"]], "matflow-internal-workflow-PATH-set-ear-start": [[125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-start-arg-EAR_ID", "EAR_ID"]], "matflow-internal-workflow-PATH-write-commands": [[125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-EAR_ID", "EAR_ID"], [125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JOBSCRIPT_IDX", "JOBSCRIPT_IDX"], [125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JS_ACTION_IDX", "JS_ACTION_IDX"], [125, 7, 1, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-SUBMISSION_IDX", "SUBMISSION_IDX"]], "matflow-internal-workflow": [[125, 7, 1, "cmdoption-matflow-internal-workflow-arg-PATH", "PATH"]], "matflow-make": [[125, 7, 1, "cmdoption-matflow-make-format", "--format"], [125, 7, 1, "cmdoption-matflow-make-name", "--name"], [125, 7, 1, "cmdoption-matflow-make-overwrite", "--overwrite"], [125, 7, 1, "cmdoption-matflow-make-path", "--path"], [125, 7, 1, "cmdoption-matflow-make-store", "--store"], [125, 7, 1, "cmdoption-matflow-make-string", "--string"], [125, 7, 1, "cmdoption-matflow-make-ts-fmt", "--ts-fmt"], [125, 7, 1, "cmdoption-matflow-make-ts-name-fmt", "--ts-name-fmt"], [125, 7, 1, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR", "TEMPLATE_FILE_OR_STR"]], "matflow-manage-get-config-path": [[125, 7, 1, "cmdoption-matflow-manage-get-config-path-config-dir", "--config-dir"]], "matflow-manage-reset-config": [[125, 7, 1, "cmdoption-matflow-manage-reset-config-config-dir", "--config-dir"]], "matflow-open-config": [[125, 7, 1, "cmdoption-matflow-open-config-path", "--path"]], "matflow-open-env-source": [[125, 7, 1, "cmdoption-matflow-open-env-source-name", "--name"], [125, 7, 1, "cmdoption-matflow-open-env-source-path", "--path"]], "matflow-open-known-subs": [[125, 7, 1, "cmdoption-matflow-open-known-subs-path", "--path"]], "matflow-open-log": [[125, 7, 1, "cmdoption-matflow-open-log-path", "--path"]], "matflow-open-user-data-dir": [[125, 7, 1, "cmdoption-matflow-open-user-data-dir-path", "--path"]], "matflow-open-workflow": [[125, 7, 1, "cmdoption-matflow-open-workflow-path", "--path"], [125, 7, 1, "cmdoption-matflow-open-workflow-r", "--ref-type"], [125, 7, 1, "cmdoption-matflow-open-workflow-r", "-r"], [125, 7, 1, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-show": [[125, 7, 1, "cmdoption-matflow-show-f", "--full"], [125, 7, 1, "cmdoption-matflow-show-legend", "--legend"], [125, 7, 1, "cmdoption-matflow-show-r", "--max-recent"], [125, 7, 1, "cmdoption-matflow-show-no-update", "--no-update"], [125, 7, 1, "cmdoption-matflow-show-f", "-f"], [125, 7, 1, "cmdoption-matflow-show-r", "-r"]], "matflow-submission-get-known": [[125, 7, 1, "cmdoption-matflow-submission-get-known-json", "--json"]], "matflow-submission-scheduler": [[125, 7, 1, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME", "SCHEDULER_NAME"]], "matflow-submission-shell-info": [[125, 7, 1, "cmdoption-matflow-submission-shell-info-exclude-os", "--exclude-os"], [125, 7, 1, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME", "SHELL_NAME"]], "matflow-submission": [[125, 7, 1, "cmdoption-matflow-submission-os-info", "--os-info"]], "matflow-test-hpcflow": [[125, 7, 1, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS", "PY_TEST_ARGS"]], "matflow-test": [[125, 7, 1, "cmdoption-matflow-test-arg-PY_TEST_ARGS", "PY_TEST_ARGS"]], "matflow-workflow-WORKFLOW_REF-abort-run": [[125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element", "--element"], [125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission", "--submission"], [125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task", "--task"]], "matflow-workflow-WORKFLOW_REF-get-param-source": [[125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-get-param": [[125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-is-param-set": [[125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js": [[125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX", "JS_IDX"]], "matflow-workflow-WORKFLOW_REF-sub": [[125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX", "SUB_IDX"]], "matflow-workflow-WORKFLOW_REF-submit": [[125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known", "--add-to-known"], [125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism", "--js-parallelism"], [125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known", "--no-add-to-known"], [125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait", "--wait"]], "matflow-workflow-WORKFLOW_REF-wait": [[125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j", "--jobscripts"], [125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j", "-j"]], "matflow-workflow-WORKFLOW_REF-zip": [[125, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log", "--log"]], "matflow-workflow": [[125, 7, 1, "cmdoption-matflow-workflow-r", "--ref-type"], [125, 7, 1, "cmdoption-matflow-workflow-r", "-r"], [125, 7, 1, "cmdoption-matflow-workflow-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-zip": [[125, 7, 1, "cmdoption-matflow-zip-log", "--log"], [125, 7, 1, "cmdoption-matflow-zip-r", "--ref-type"], [125, 7, 1, "cmdoption-matflow-zip-r", "-r"], [125, 7, 1, "cmdoption-matflow-zip-arg-WORKFLOW_REF", "WORKFLOW_REF"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:data", "6": "py:function", "7": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"], "7": ["std", "cmdoption", "program option"]}, "titleterms": {"environ": [0, 30], "matlab_env": [0, 130], "exampl": 0, "definit": 0, "non": 0, "compil": [0, 131], "script": [0, 3], "damask_pars": 0, "damask": 0, "develop": 1, "welcom": 2, "matflow": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125], "": 2, "document": 2, "content": 2, "indic": 2, "tabl": 2, "instal": 3, "cli": [3, 87], "what": 3, "doe": 3, "thi": 3, "do": 3, "python": [3, 124], "packag": 3, "us": 3, "pip": 3, "conda": 3, "download": 3, "binari": 3, "advanc": 3, "releas": 3, "note": 3, "action": 5, "actionenviron": 6, "actionrul": 7, "actionscop": 8, "actionscopetyp": 9, "command": [10, 125, 129], "commandfileslist": 11, "directposix": 12, "directwindow": 13, "element": [14, 29], "elementact": 15, "elementactionrun": 16, "elementfilt": 17, "elementgroup": 18, "elementinputfil": 19, "elementinput": 20, "elementiter": 21, "elementoutputfil": 22, "elementoutput": 23, "elementparamet": 24, "elementpropag": 25, "elementrepeat": 26, "elementresourc": 27, "elementset": 28, "environmentslist": 31, "execut": 32, "executableinst": 33, "executableslist": 34, "filenameext": 35, "filenamespec": 36, "filenamestem": 37, "filespec": 38, "grouplist": 39, "inputfil": 40, "inputfilegener": 41, "inputfilegeneratorsourc": 42, "inputsourc": 43, "inputsourcetyp": 44, "inputvalu": 45, "jobscript": 46, "loop": 47, "numcor": 48, "outputfilepars": 49, "outputfileparsersourc": 50, "outputlabel": 51, "paramet": [52, 56, 125, 131, 137], "parameterpath": 53, "parameterpropagationmod": 54, "parametervalu": 55, "parameterslist": 57, "resourcelist": 58, "resourcespec": 59, "sgeposix": 60, "schemainput": 61, "schemaoutput": 62, "schemaparamet": 63, "slurmposix": 64, "subparamet": 65, "submiss": [66, 125, 134], "task": [67, 130, 132, 136, 137], "taskinputparamet": 68, "tasklist": 69, "taskobject": 70, "taskoutputparamet": 71, "taskschema": 72, "taskschemaslist": 73, "tasksourcetyp": 74, "tasktemplatelist": 75, "valueperturb": 76, "valuesequ": 77, "workflow": [78, 125, 133, 138, 139], "workflowblueprint": 79, "workflowloop": 80, "workflowlooplist": 81, "workflowtask": 82, "workflowtasklist": 83, "workflowtempl": 84, "app": 85, "cancel": [86, 125], "get_os_info": 88, "get_known_submiss": 89, "get_shell_info": 90, "make_and_submit_demo_workflow": 91, "make_and_submit_workflow": 92, "make_demo_workflow": 93, "make_workflow": 94, "param_class": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "load": [96, 97, 98, 99, 125, 138, 139], "loadcas": 97, "loadstep": 98, "strainratemod": 99, "orient": [100, 101, 102, 103, 104, 105, 106, 107, 131], "eulerdefinit": 101, "latticedirect": 102, "orientationrepresent": 103, "orientationrepresentationtyp": 104, "quatord": 106, "unitcellalign": 107, "seed": [108, 109], "microstructurese": 109, "util": 110, "run_hpcflow_test": 111, "run_test": 112, "show": [113, 125, 136], "show_legend": 114, "submit_workflow": 115, "test": [116, 117, 118, 119, 120, 121, 122, 123, 125], "conftest": [117, 118, 119, 120], "null_config": 118, "pytest_configur": 119, "pytest_unconfigur": 120, "test_cli": [121, 122, 123], "test_hpcflow_vers": 122, "test_vers": 123, "api": 124, "line": 125, "interfac": 125, "config": [125, 126, 134], "add": 125, "schedul": 125, "append": 125, "get": [125, 134], "import": 125, "init": 125, "list": 125, "data": 125, "file": [125, 126, 129, 134], "open": 125, "pop": 125, "prepend": 125, "set": [125, 134], "unset": 125, "updat": 125, "demo": [125, 133], "softwar": 125, "dosometh": 125, "copi": 125, "go": 125, "make": 125, "helper": 125, "clear": [125, 134], "log": 125, "path": 125, "pid": 125, "restart": 125, "run": 125, "start": 125, "stop": 125, "uptim": 125, "watch": 125, "intern": 125, "invoc": 125, "cmd": 125, "ear": 125, "skip": 125, "save": 125, "end": 125, "write": 125, "manag": 125, "known": [125, 134], "sub": 125, "temp": 125, "dir": 125, "reset": [125, 134], "env": 125, "sourc": 125, "user": [125, 140], "login": 125, "node": 125, "shell": 125, "info": 125, "tc": 125, "hpcflow": 125, "abort": 125, "all": 125, "param": 125, "i": 125, "statu": 125, "j": 125, "dep": 125, "re": 125, "need": 125, "submit": 125, "outstand": 125, "wait": 125, "zip": 125, "configur": [126, 134], "default": [126, 134], "valid": 126, "schema": [126, 130, 132, 136, 137], "refer": 127, "templat": [128, 137, 138, 139], "compon": [128, 137], "damask_geom_fil": 129, "damask_load_fil": 129, "damask_material_fil": 129, "damask_stdout_fil": 129, "damask_stderr_fil": 129, "damask_hdf5_fil": 129, "damask_viz_fil": 129, "lammps_atoms_fil": 129, "lammps_input_script": 129, "lammps_dump_fil": 129, "t1_outfile_1": 129, "t1_infile_1": 129, "my_fil": 129, "null_env": 130, "python_env": 130, "damask_env": 130, "damask_parse_env": 130, "formable_env": 130, "ve_siz": 131, "ve_grid_s": 131, "phase_label": 131, "num_grain": 131, "microstructure_se": 131, "volume_el": 131, "ctf_file_path": 131, "specimen_symmetri": 131, "ebsd_phas": 131, "ebsd_reference_frame_transform": 131, "ebsd_rot": 131, "num_orient": 131, "homog_label": 131, "ve_respons": 131, "ve_response_data": 131, "load_cas": 131, "homogen": 131, "damask_phas": 131, "damask_log": 131, "damask_post_process": 131, "damask_post_processing_result": 131, "damask_viz": 131, "damask_viz_result": 131, "p1": 131, "p2": 131, "p3": 131, "p4": 131, "p5": 131, "number_atom": 131, "box": 131, "atom": 131, "empirical_potenti": 131, "optimised_atom": 131, "dump_path": 131, "yield_point": 131, "yield_function_nam": 131, "yield_point_criteria": 131, "fit_yield_fixed_paramet": 131, "fit_yield_initial_paramet": 131, "fit_yield_opt_paramet": 131, "fitted_yield_funct": 131, "test_t1_bash": 132, "test_t1_p": 132, "test_t2_bash": 132, "test_t2_p": 132, "generate_microstructure_se": 132, "generate_volume_el": 132, "sample_textur": 132, "generate_orient": 132, "define_p1": 132, "define_load_cas": 132, "simulate_ve_load": 132, "dump_all_yield_stress": 132, "fit_yield_funct": 132, "tension_damask_": 133, "yaml": 133, "how": [134, 135, 136, 137, 138, 139], "tos": [134, 136, 138, 139], "item": 134, "valu": 134, "To": 135, "guid": [135, 140], "inform": 136, "about": 136, "name": 137, "gener": 139, "persist": 139, "from": 139, "tutori": 141}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Environments": [[0, "environments"]], "matlab_env": [[0, "matlab-env"], [130, "matlab-env"]], "Example environment definition (non-compiled script)": [[0, "example-environment-definition-non-compiled-script"]], "Example environment definition (compiled script)": [[0, "example-environment-definition-compiled-script"]], "damask_parse": [[0, "damask-parse"]], "Example environment definition": [[0, "example-environment-definition"], [0, "id1"]], "damask": [[0, "damask"]], "Development": [[1, "development"]], "Welcome to MatFlow\u2019s documentation!": [[2, "welcome-to-matflow-s-documentation"]], "Contents:": [[2, null]], "Indices and tables": [[2, "indices-and-tables"]], "Installation": [[3, "installation"]], "MatFlow CLI": [[3, "matflow-cli"]], "What does this script do?": [[3, null]], "MatFlow Python package": [[3, "matflow-python-package"]], "Using pip": [[3, "using-pip"]], "Using conda": [[3, "using-conda"]], "Download CLI binaries (advanced)": [[3, "download-cli-binaries-advanced"]], "Release notes": [[3, "release-notes"]], "matflow": [[4, "matflow"], [125, "matflow"]], "matflow.Action": [[5, "matflow-action"]], "matflow.ActionEnvironment": [[6, "matflow-actionenvironment"]], "matflow.ActionRule": [[7, "matflow-actionrule"]], "matflow.ActionScope": [[8, "matflow-actionscope"]], "matflow.ActionScopeType": [[9, "matflow-actionscopetype"]], "matflow.Command": [[10, "matflow-command"]], "matflow.CommandFilesList": [[11, "matflow-commandfileslist"]], "matflow.DirectPosix": [[12, "matflow-directposix"]], "matflow.DirectWindows": [[13, "matflow-directwindows"]], "matflow.Element": [[14, "matflow-element"]], "matflow.ElementAction": [[15, "matflow-elementaction"]], "matflow.ElementActionRun": [[16, "matflow-elementactionrun"]], "matflow.ElementFilter": [[17, "matflow-elementfilter"]], "matflow.ElementGroup": [[18, "matflow-elementgroup"]], "matflow.ElementInputFiles": [[19, "matflow-elementinputfiles"]], "matflow.ElementInputs": [[20, "matflow-elementinputs"]], "matflow.ElementIteration": [[21, "matflow-elementiteration"]], "matflow.ElementOutputFiles": [[22, "matflow-elementoutputfiles"]], "matflow.ElementOutputs": [[23, "matflow-elementoutputs"]], "matflow.ElementParameter": [[24, "matflow-elementparameter"]], "matflow.ElementPropagation": [[25, "matflow-elementpropagation"]], "matflow.ElementRepeats": [[26, "matflow-elementrepeats"]], "matflow.ElementResources": [[27, "matflow-elementresources"]], "matflow.ElementSet": [[28, "matflow-elementset"]], "matflow.Elements": [[29, "matflow-elements"]], "matflow.Environment": [[30, "matflow-environment"]], "matflow.EnvironmentsList": [[31, "matflow-environmentslist"]], "matflow.Executable": [[32, "matflow-executable"]], "matflow.ExecutableInstance": [[33, "matflow-executableinstance"]], "matflow.ExecutablesList": [[34, "matflow-executableslist"]], "matflow.FileNameExt": [[35, "matflow-filenameext"]], "matflow.FileNameSpec": [[36, "matflow-filenamespec"]], "matflow.FileNameStem": [[37, "matflow-filenamestem"]], "matflow.FileSpec": [[38, "matflow-filespec"]], "matflow.GroupList": [[39, "matflow-grouplist"]], "matflow.InputFile": [[40, "matflow-inputfile"]], "matflow.InputFileGenerator": [[41, "matflow-inputfilegenerator"]], "matflow.InputFileGeneratorSource": [[42, "matflow-inputfilegeneratorsource"]], "matflow.InputSource": [[43, "matflow-inputsource"]], "matflow.InputSourceType": [[44, "matflow-inputsourcetype"]], "matflow.InputValue": [[45, "matflow-inputvalue"]], "matflow.Jobscript": [[46, "matflow-jobscript"]], "matflow.Loop": [[47, "matflow-loop"]], "matflow.NumCores": [[48, "matflow-numcores"]], "matflow.OutputFileParser": [[49, "matflow-outputfileparser"]], "matflow.OutputFileParserSource": [[50, "matflow-outputfileparsersource"]], "matflow.OutputLabel": [[51, "matflow-outputlabel"]], "matflow.Parameter": [[52, "matflow-parameter"]], "matflow.ParameterPath": [[53, "matflow-parameterpath"]], "matflow.ParameterPropagationMode": [[54, "matflow-parameterpropagationmode"]], "matflow.ParameterValue": [[55, "matflow-parametervalue"]], "matflow.Parameters": [[56, "matflow-parameters"]], "matflow.ParametersList": [[57, "matflow-parameterslist"]], "matflow.ResourceList": [[58, "matflow-resourcelist"]], "matflow.ResourceSpec": [[59, "matflow-resourcespec"]], "matflow.SGEPosix": [[60, "matflow-sgeposix"]], "matflow.SchemaInput": [[61, "matflow-schemainput"]], "matflow.SchemaOutput": [[62, "matflow-schemaoutput"]], "matflow.SchemaParameter": [[63, "matflow-schemaparameter"]], "matflow.SlurmPosix": [[64, "matflow-slurmposix"]], "matflow.SubParameter": [[65, "matflow-subparameter"]], "matflow.Submission": [[66, "matflow-submission"]], "matflow.Task": [[67, "matflow-task"]], "matflow.TaskInputParameters": [[68, "matflow-taskinputparameters"]], "matflow.TaskList": [[69, "matflow-tasklist"]], "matflow.TaskObjective": [[70, "matflow-taskobjective"]], "matflow.TaskOutputParameters": [[71, "matflow-taskoutputparameters"]], "matflow.TaskSchema": [[72, "matflow-taskschema"]], "matflow.TaskSchemasList": [[73, "matflow-taskschemaslist"]], "matflow.TaskSourceType": [[74, "matflow-tasksourcetype"]], "matflow.TaskTemplateList": [[75, "matflow-tasktemplatelist"]], "matflow.ValuePerturbation": [[76, "matflow-valueperturbation"]], "matflow.ValueSequence": [[77, "matflow-valuesequence"]], "matflow.Workflow": [[78, "matflow-workflow"]], "matflow.WorkflowBlueprint": [[79, "matflow-workflowblueprint"]], "matflow.WorkflowLoop": [[80, "matflow-workflowloop"]], "matflow.WorkflowLoopList": [[81, "matflow-workflowlooplist"]], "matflow.WorkflowTask": [[82, "matflow-workflowtask"]], "matflow.WorkflowTaskList": [[83, "matflow-workflowtasklist"]], "matflow.WorkflowTemplate": [[84, "matflow-workflowtemplate"]], "matflow.app": [[85, "matflow-app"]], "matflow.cancel": [[86, "matflow-cancel"]], "matflow.cli": [[87, "matflow-cli"]], "matflow.get_OS_info": [[88, "matflow-get-os-info"]], "matflow.get_known_submissions": [[89, "matflow-get-known-submissions"]], "matflow.get_shell_info": [[90, "matflow-get-shell-info"]], "matflow.make_and_submit_demo_workflow": [[91, "matflow-make-and-submit-demo-workflow"]], "matflow.make_and_submit_workflow": [[92, "matflow-make-and-submit-workflow"]], "matflow.make_demo_workflow": [[93, "matflow-make-demo-workflow"]], "matflow.make_workflow": [[94, "matflow-make-workflow"]], "matflow.param_classes": [[95, "matflow-param-classes"]], "matflow.param_classes.load": [[96, "matflow-param-classes-load"]], "matflow.param_classes.load.LoadCase": [[97, "matflow-param-classes-load-loadcase"]], "matflow.param_classes.load.LoadStep": [[98, "matflow-param-classes-load-loadstep"]], "matflow.param_classes.load.StrainRateMode": [[99, "matflow-param-classes-load-strainratemode"]], "matflow.param_classes.orientations": [[100, "matflow-param-classes-orientations"]], "matflow.param_classes.orientations.EulerDefinition": [[101, "matflow-param-classes-orientations-eulerdefinition"]], "matflow.param_classes.orientations.LatticeDirection": [[102, "matflow-param-classes-orientations-latticedirection"]], "matflow.param_classes.orientations.OrientationRepresentation": [[103, "matflow-param-classes-orientations-orientationrepresentation"]], "matflow.param_classes.orientations.OrientationRepresentationType": [[104, "matflow-param-classes-orientations-orientationrepresentationtype"]], "matflow.param_classes.orientations.Orientations": [[105, "matflow-param-classes-orientations-orientations"]], "matflow.param_classes.orientations.QuatOrder": [[106, "matflow-param-classes-orientations-quatorder"]], "matflow.param_classes.orientations.UnitCellAlignment": [[107, "matflow-param-classes-orientations-unitcellalignment"]], "matflow.param_classes.seeds": [[108, "matflow-param-classes-seeds"]], "matflow.param_classes.seeds.MicrostructureSeeds": [[109, "matflow-param-classes-seeds-microstructureseeds"]], "matflow.param_classes.utils": [[110, "matflow-param-classes-utils"]], "matflow.run_hpcflow_tests": [[111, "matflow-run-hpcflow-tests"]], "matflow.run_tests": [[112, "matflow-run-tests"]], "matflow.show": [[113, "matflow-show"]], "matflow.show_legend": [[114, "matflow-show-legend"]], "matflow.submit_workflow": [[115, "matflow-submit-workflow"]], "matflow.tests": [[116, "matflow-tests"]], "matflow.tests.conftest": [[117, "matflow-tests-conftest"]], "matflow.tests.conftest.null_config": [[118, "matflow-tests-conftest-null-config"]], "matflow.tests.conftest.pytest_configure": [[119, "matflow-tests-conftest-pytest-configure"]], "matflow.tests.conftest.pytest_unconfigure": [[120, "matflow-tests-conftest-pytest-unconfigure"]], "matflow.tests.test_cli": [[121, "matflow-tests-test-cli"]], "matflow.tests.test_cli.test_hpcflow_version": [[122, "matflow-tests-test-cli-test-hpcflow-version"]], "matflow.tests.test_cli.test_version": [[123, "matflow-tests-test-cli-test-version"]], "Python API": [[124, "python-api"]], "Command-line interface": [[125, "command-line-interface"]], "cancel": [[125, "matflow-cancel"]], "config": [[125, "matflow-config"], [125, "matflow-open-config"]], "add-scheduler": [[125, "matflow-config-add-scheduler"]], "append": [[125, "matflow-config-append"]], "get": [[125, "matflow-config-get"]], "import": [[125, "matflow-config-import"]], "init": [[125, "matflow-config-init"]], "list": [[125, "matflow-config-list"]], "load-data-files": [[125, "matflow-config-load-data-files"]], "open": [[125, "matflow-config-open"], [125, "matflow-open"]], "pop": [[125, "matflow-config-pop"]], "prepend": [[125, "matflow-config-prepend"]], "set": [[125, "matflow-config-set"]], "unset": [[125, "matflow-config-unset"]], "update": [[125, "matflow-config-update"]], "demo-software": [[125, "matflow-demo-software"]], "doSomething": [[125, "matflow-demo-software-dosomething"]], "demo-workflow": [[125, "matflow-demo-workflow"]], "copy": [[125, "matflow-demo-workflow-copy"]], "go": [[125, "matflow-demo-workflow-go"], [125, "matflow-go"]], "make": [[125, "matflow-demo-workflow-make"], [125, "matflow-make"]], "show": [[125, "matflow-demo-workflow-show"], [125, "matflow-show"], [125, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-show"]], "helper": [[125, "matflow-helper"]], "clear": [[125, "matflow-helper-clear"]], "log-path": [[125, "matflow-helper-log-path"]], "pid": [[125, "matflow-helper-pid"]], "restart": [[125, "matflow-helper-restart"]], "run": [[125, "matflow-helper-run"]], "start": [[125, "matflow-helper-start"]], "stop": [[125, "matflow-helper-stop"]], "uptime": [[125, "matflow-helper-uptime"]], "watch-list": [[125, "matflow-helper-watch-list"]], "watch-list-path": [[125, "matflow-helper-watch-list-path"]], "internal": [[125, "matflow-internal"]], "get-invoc-cmd": [[125, "matflow-internal-get-invoc-cmd"]], "workflow": [[125, "matflow-internal-workflow"], [125, "matflow-open-workflow"], [125, "matflow-workflow"]], "get-ear-skipped": [[125, "matflow-internal-workflow-path-get-ear-skipped"]], "save-parameter": [[125, "matflow-internal-workflow-path-save-parameter"]], "set-ear-end": [[125, "matflow-internal-workflow-path-set-ear-end"]], "set-ear-skip": [[125, "matflow-internal-workflow-path-set-ear-skip"]], "set-ear-start": [[125, "matflow-internal-workflow-path-set-ear-start"]], "write-commands": [[125, "matflow-internal-workflow-path-write-commands"]], "manage": [[125, "matflow-manage"]], "clear-known-subs": [[125, "matflow-manage-clear-known-subs"]], "clear-temp-dir": [[125, "matflow-manage-clear-temp-dir"]], "get-config-path": [[125, "matflow-manage-get-config-path"]], "reset-config": [[125, "matflow-manage-reset-config"]], "env-source": [[125, "matflow-open-env-source"]], "known-subs": [[125, "matflow-open-known-subs"]], "log": [[125, "matflow-open-log"]], "user-data-dir": [[125, "matflow-open-user-data-dir"]], "submission": [[125, "matflow-submission"]], "get-known": [[125, "matflow-submission-get-known"]], "scheduler": [[125, "matflow-submission-scheduler"]], "get-login-nodes": [[125, "matflow-submission-scheduler-scheduler-name-get-login-nodes"]], "shell-info": [[125, "matflow-submission-shell-info"]], "tc": [[125, "matflow-tc"]], "test": [[125, "matflow-test"]], "test-hpcflow": [[125, "matflow-test-hpcflow"]], "abort-run": [[125, "matflow-workflow-workflow-ref-abort-run"]], "get-all-params": [[125, "matflow-workflow-workflow-ref-get-all-params"]], "get-param": [[125, "matflow-workflow-workflow-ref-get-param"]], "get-param-source": [[125, "matflow-workflow-workflow-ref-get-param-source"]], "is-param-set": [[125, "matflow-workflow-workflow-ref-is-param-set"]], "show-all-status": [[125, "matflow-workflow-workflow-ref-show-all-status"]], "sub": [[125, "matflow-workflow-workflow-ref-sub"]], "js": [[125, "matflow-workflow-workflow-ref-sub-sub-idx-js"]], "deps": [[125, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-deps"]], "path": [[125, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-path"]], "res": [[125, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-res"]], "needs-submit": [[125, "matflow-workflow-workflow-ref-sub-sub-idx-needs-submit"]], "outstanding-js": [[125, "matflow-workflow-workflow-ref-sub-sub-idx-outstanding-js"]], "status": [[125, "matflow-workflow-workflow-ref-sub-sub-idx-status"]], "submitted-js": [[125, "matflow-workflow-workflow-ref-sub-sub-idx-submitted-js"]], "submit": [[125, "matflow-workflow-workflow-ref-submit"]], "wait": [[125, "matflow-workflow-workflow-ref-wait"]], "zip": [[125, "matflow-workflow-workflow-ref-zip"], [125, "matflow-zip"]], "Configuration file": [[126, "configuration-file"]], "Default config file": [[126, "default-config-file"]], "Validation schema": [[126, "validation-schema"]], "Reference": [[127, "reference"]], "Template components": [[128, "template-components"], [137, "template-components"]], "Command files": [[129, "command-files"]], "damask_geom_file": [[129, "damask-geom-file"]], "damask_load_file": [[129, "damask-load-file"]], "damask_material_file": [[129, "damask-material-file"]], "damask_stdout_file": [[129, "damask-stdout-file"]], "damask_stderr_file": [[129, "damask-stderr-file"]], "damask_hdf5_file": [[129, "damask-hdf5-file"]], "damask_viz_files": [[129, "damask-viz-files"]], "lammps_atoms_file": [[129, "lammps-atoms-file"]], "lammps_input_script": [[129, "lammps-input-script"]], "lammps_dump_files": [[129, "lammps-dump-files"]], "t1_outfile_1": [[129, "t1-outfile-1"]], "t1_infile_1": [[129, "t1-infile-1"]], "my_file": [[129, "my-file"]], "Task schemas": [[130, "task-schemas"], [132, "task-schemas"]], "null_env": [[130, "null-env"]], "python_env": [[130, "python-env"]], "damask_env": [[130, "damask-env"]], "damask_parse_env": [[130, "damask-parse-env"]], "formable_env": [[130, "formable-env"]], "Parameters": [[131, "parameters"]], "VE_size": [[131, "ve-size"]], "VE_grid_size": [[131, "ve-grid-size"]], "phase_label": [[131, "phase-label"]], "num_grains": [[131, "num-grains"]], "microstructure_seeds": [[131, "microstructure-seeds"]], "volume_element": [[131, "volume-element"]], "CTF_file_path": [[131, "ctf-file-path"]], "specimen_symmetry": [[131, "specimen-symmetry"]], "EBSD_phase": [[131, "ebsd-phase"]], "EBSD_reference_frame_transformation": [[131, "ebsd-reference-frame-transformation"]], "EBSD_rotation": [[131, "ebsd-rotation"]], "num_orientations": [[131, "num-orientations"]], "orientations": [[131, "orientations"]], "homog_label": [[131, "homog-label"]], "VE_response": [[131, "ve-response"]], "VE_response_data": [[131, "ve-response-data"]], "load_case": [[131, "load-case"]], "homogenization": [[131, "homogenization"]], "damask_phases": [[131, "damask-phases"]], "damask_log": [[131, "damask-log"]], "damask_post_processing": [[131, "damask-post-processing"]], "damask_post_processing_result": [[131, "damask-post-processing-result"]], "damask_viz": [[131, "damask-viz"]], "damask_viz_result": [[131, "damask-viz-result"]], "p1": [[131, "p1"]], "p2": [[131, "p2"]], "p3": [[131, "p3"]], "p4": [[131, "p4"]], "p5": [[131, "p5"]], "number_atoms": [[131, "number-atoms"]], "box": [[131, "box"]], "atoms": [[131, "atoms"]], "empirical_potential": [[131, "empirical-potential"]], "optimised_atoms": [[131, "optimised-atoms"]], "compile": [[131, "compile"]], "dump_path": [[131, "dump-path"]], "yield_point": [[131, "yield-point"]], "yield_function_name": [[131, "yield-function-name"]], "yield_point_criteria": [[131, "yield-point-criteria"]], "fit_yield_fixed_parameters": [[131, "fit-yield-fixed-parameters"]], "fit_yield_initial_parameters": [[131, "fit-yield-initial-parameters"]], "fit_yield_opt_parameters": [[131, "fit-yield-opt-parameters"]], "fitted_yield_functions": [[131, "fitted-yield-functions"]], "test_t1_bash": [[132, "test-t1-bash"]], "test_t1_ps": [[132, "test-t1-ps"]], "test_t2_bash": [[132, "test-t2-bash"]], "test_t2_ps": [[132, "test-t2-ps"]], "generate_microstructure_seeds": [[132, "generate-microstructure-seeds"]], "generate_volume_element": [[132, "generate-volume-element"]], "sample_texture": [[132, "sample-texture"]], "generate_orientations": [[132, "generate-orientations"]], "define_p1": [[132, "define-p1"]], "define_load_case": [[132, "define-load-case"]], "simulate_VE_loading": [[132, "simulate-ve-loading"]], "dump_all_yield_stresses": [[132, "dump-all-yield-stresses"]], "fit_yield_function": [[132, "fit-yield-function"]], "Demo workflows": [[133, "demo-workflows"]], "tension_DAMASK_Al": [[133, "tension-damask-al"]], "tension_DAMASK_Al.yaml": [[133, null]], "Configuration how-tos": [[134, "configuration-how-tos"]], "Get and set config items": [[134, "get-and-set-config-items"]], "Reset the config to default values": [[134, "reset-the-config-to-default-values"]], "Clear the known-submissions file": [[134, "clear-the-known-submissions-file"]], "How-To Guides": [[135, "how-to-guides"]], "Task schema how-tos": [[136, "task-schema-how-tos"]], "Show information about a task schema": [[136, "show-information-about-a-task-schema"]], "How to name parameters and task schemas": [[137, "how-to-name-parameters-and-task-schemas"]], "Workflow templates how-tos": [[138, "workflow-templates-how-tos"]], "Loading workflow templates": [[138, "loading-workflow-templates"]], "Workflow how-tos": [[139, "workflow-how-tos"]], "Generating a persistent workflow from a workflow template": [[139, "generating-a-persistent-workflow-from-a-workflow-template"]], "Loading workflows": [[139, "loading-workflows"]], "User Guide": [[140, "user-guide"]], "Tutorials": [[141, "tutorials"]]}, "indexentries": {"matflow": [[4, "module-matflow"]], "module": [[4, "module-matflow"], [87, "module-matflow.cli"], [95, "module-matflow.param_classes"], [96, "module-matflow.param_classes.load"], [100, "module-matflow.param_classes.orientations"], [108, "module-matflow.param_classes.seeds"], [110, "module-matflow.param_classes.utils"], [116, "module-matflow.tests"], [117, "module-matflow.tests.conftest"], [121, "module-matflow.tests.test_cli"]], "action (class in matflow)": [[5, "matflow.Action"]], "app (matflow.action attribute)": [[5, "matflow.Action.app"]], "expand() (matflow.action method)": [[5, "matflow.Action.expand"]], "from_json_like() (matflow.action class method)": [[5, "matflow.Action.from_json_like"]], "generate_data_index() (matflow.action method)": [[5, "matflow.Action.generate_data_index"]], "get_app_data_script_path() (matflow.action class method)": [[5, "matflow.Action.get_app_data_script_path"]], "get_command_input_file_labels() (matflow.action method)": [[5, "matflow.Action.get_command_input_file_labels"]], "get_command_input_types() (matflow.action method)": [[5, "matflow.Action.get_command_input_types"]], "get_command_output_types() (matflow.action method)": [[5, "matflow.Action.get_command_output_types"]], "get_commands_action_env() (matflow.action method)": [[5, "matflow.Action.get_commands_action_env"]], "get_input_file_generator_action_env() (matflow.action method)": [[5, "matflow.Action.get_input_file_generator_action_env"]], "get_input_file_labels() (matflow.action method)": [[5, "matflow.Action.get_input_file_labels"]], "get_input_types() (matflow.action method)": [[5, "matflow.Action.get_input_types"]], "get_output_file_labels() (matflow.action method)": [[5, "matflow.Action.get_output_file_labels"]], "get_output_file_parser_action_env() (matflow.action method)": [[5, "matflow.Action.get_output_file_parser_action_env"]], "get_output_types() (matflow.action method)": [[5, "matflow.Action.get_output_types"]], "get_param_dump_file_path_json() (matflow.action method)": [[5, "matflow.Action.get_param_dump_file_path_JSON"]], "get_param_dump_file_stem() (matflow.action static method)": [[5, "matflow.Action.get_param_dump_file_stem"]], "get_param_load_file_path_hdf5() (matflow.action method)": [[5, "matflow.Action.get_param_load_file_path_HDF5"]], "get_param_load_file_path_json() (matflow.action method)": [[5, "matflow.Action.get_param_load_file_path_JSON"]], "get_param_load_file_stem() (matflow.action static method)": [[5, "matflow.Action.get_param_load_file_stem"]], "get_parameter_dependence() (matflow.action method)": [[5, "matflow.Action.get_parameter_dependence"]], "get_possible_scopes() (matflow.action method)": [[5, "matflow.Action.get_possible_scopes"]], "get_precise_scope() (matflow.action method)": [[5, "matflow.Action.get_precise_scope"]], "get_resolved_action_env() (matflow.action method)": [[5, "matflow.Action.get_resolved_action_env"]], "get_script_name() (matflow.action class method)": [[5, "matflow.Action.get_script_name"]], "is_app_data_script() (matflow.action static method)": [[5, "matflow.Action.is_app_data_script"]], "is_input_type_required() (matflow.action method)": [[5, "matflow.Action.is_input_type_required"]], "task_schema (matflow.action property)": [[5, "matflow.Action.task_schema"]], "to_dict() (matflow.action method)": [[5, "matflow.Action.to_dict"]], "to_json_like() (matflow.action method)": [[5, "matflow.Action.to_json_like"]], "actionenvironment (class in matflow)": [[6, "matflow.ActionEnvironment"]], "app (matflow.actionenvironment attribute)": [[6, "matflow.ActionEnvironment.app"]], "environment (matflow.actionenvironment attribute)": [[6, "matflow.ActionEnvironment.environment"]], "from_json_like() (matflow.actionenvironment class method)": [[6, "matflow.ActionEnvironment.from_json_like"]], "scope (matflow.actionenvironment attribute)": [[6, "matflow.ActionEnvironment.scope"]], "to_dict() (matflow.actionenvironment method)": [[6, "matflow.ActionEnvironment.to_dict"]], "to_json_like() (matflow.actionenvironment method)": [[6, "matflow.ActionEnvironment.to_json_like"]], "actionrule (class in matflow)": [[7, "matflow.ActionRule"]], "app (matflow.actionrule attribute)": [[7, "matflow.ActionRule.app"]], "check_exists (matflow.actionrule attribute)": [[7, "matflow.ActionRule.check_exists"]], "check_missing (matflow.actionrule attribute)": [[7, "matflow.ActionRule.check_missing"]], "from_json_like() (matflow.actionrule class method)": [[7, "matflow.ActionRule.from_json_like"]], "rule (matflow.actionrule attribute)": [[7, "matflow.ActionRule.rule"]], "to_dict() (matflow.actionrule method)": [[7, "matflow.ActionRule.to_dict"]], "to_json_like() (matflow.actionrule method)": [[7, "matflow.ActionRule.to_json_like"]], "actionscope (class in matflow)": [[8, "matflow.ActionScope"]], "any() (matflow.actionscope class method)": [[8, "matflow.ActionScope.any"]], "app (matflow.actionscope attribute)": [[8, "matflow.ActionScope.app"]], "from_json_like() (matflow.actionscope class method)": [[8, "matflow.ActionScope.from_json_like"]], "input_file_generator() (matflow.actionscope class method)": [[8, "matflow.ActionScope.input_file_generator"]], "main() (matflow.actionscope class method)": [[8, "matflow.ActionScope.main"]], "output_file_parser() (matflow.actionscope class method)": [[8, "matflow.ActionScope.output_file_parser"]], "processing() (matflow.actionscope class method)": [[8, "matflow.ActionScope.processing"]], "to_dict() (matflow.actionscope method)": [[8, "matflow.ActionScope.to_dict"]], "to_json_like() (matflow.actionscope method)": [[8, "matflow.ActionScope.to_json_like"]], "to_string() (matflow.actionscope method)": [[8, "matflow.ActionScope.to_string"]], "any (matflow.actionscopetype attribute)": [[9, "matflow.ActionScopeType.ANY"]], "actionscopetype (class in matflow)": [[9, "matflow.ActionScopeType"]], "input_file_generator (matflow.actionscopetype attribute)": [[9, "matflow.ActionScopeType.INPUT_FILE_GENERATOR"]], "main (matflow.actionscopetype attribute)": [[9, "matflow.ActionScopeType.MAIN"]], "output_file_parser (matflow.actionscopetype attribute)": [[9, "matflow.ActionScopeType.OUTPUT_FILE_PARSER"]], "processing (matflow.actionscopetype attribute)": [[9, "matflow.ActionScopeType.PROCESSING"]], "command (class in matflow)": [[10, "matflow.Command"]], "app (matflow.command attribute)": [[10, "matflow.Command.app"]], "arguments (matflow.command attribute)": [[10, "matflow.Command.arguments"]], "command (matflow.command attribute)": [[10, "matflow.Command.command"]], "executable (matflow.command attribute)": [[10, "matflow.Command.executable"]], "from_json_like() (matflow.command class method)": [[10, "matflow.Command.from_json_like"]], "get_command_line() (matflow.command method)": [[10, "matflow.Command.get_command_line"]], "get_output_types() (matflow.command method)": [[10, "matflow.Command.get_output_types"]], "stderr (matflow.command attribute)": [[10, "matflow.Command.stderr"]], "stdin (matflow.command attribute)": [[10, "matflow.Command.stdin"]], "stdout (matflow.command attribute)": [[10, "matflow.Command.stdout"]], "to_dict() (matflow.command method)": [[10, "matflow.Command.to_dict"]], "to_json_like() (matflow.command method)": [[10, "matflow.Command.to_json_like"]], "variables (matflow.command attribute)": [[10, "matflow.Command.variables"]], "commandfileslist (class in matflow)": [[11, "matflow.CommandFilesList"]], "add_object() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.add_object"]], "add_objects() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.add_objects"]], "from_json_like() (matflow.commandfileslist class method)": [[11, "matflow.CommandFilesList.from_json_like"]], "get() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.get"]], "get_all() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.get_all"]], "list_attrs() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.list_attrs"]], "to_dict() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.to_dict"]], "to_json_like() (matflow.commandfileslist method)": [[11, "matflow.CommandFilesList.to_json_like"]], "default_shebang_args (matflow.directposix attribute)": [[12, "matflow.DirectPosix.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.directposix attribute)": [[12, "matflow.DirectPosix.DEFAULT_SHELL_ARGS"]], "default_shell_executable (matflow.directposix attribute)": [[12, "matflow.DirectPosix.DEFAULT_SHELL_EXECUTABLE"]], "directposix (class in matflow)": [[12, "matflow.DirectPosix"]], "app (matflow.directposix attribute)": [[12, "matflow.DirectPosix.app"]], "cancel_jobs() (matflow.directposix method)": [[12, "matflow.DirectPosix.cancel_jobs"]], "get_job_state_info() (matflow.directposix method)": [[12, "matflow.DirectPosix.get_job_state_info"]], "get_submit_command() (matflow.directposix method)": [[12, "matflow.DirectPosix.get_submit_command"]], "get_version_info() (matflow.directposix method)": [[12, "matflow.DirectPosix.get_version_info"]], "is_jobscript_active() (matflow.directposix method)": [[12, "matflow.DirectPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.directposix static method)": [[12, "matflow.DirectPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.directposix method)": [[12, "matflow.DirectPosix.parse_submission_output"]], "process_resources() (matflow.directposix class method)": [[12, "matflow.DirectPosix.process_resources"]], "wait_for_jobscripts() (matflow.directposix class method)": [[12, "matflow.DirectPosix.wait_for_jobscripts"]], "default_shebang_args (matflow.directwindows attribute)": [[13, "matflow.DirectWindows.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.directwindows attribute)": [[13, "matflow.DirectWindows.DEFAULT_SHELL_ARGS"]], "default_shell_executable (matflow.directwindows attribute)": [[13, "matflow.DirectWindows.DEFAULT_SHELL_EXECUTABLE"]], "directwindows (class in matflow)": [[13, "matflow.DirectWindows"]], "app (matflow.directwindows attribute)": [[13, "matflow.DirectWindows.app"]], "cancel_jobs() (matflow.directwindows method)": [[13, "matflow.DirectWindows.cancel_jobs"]], "get_job_state_info() (matflow.directwindows method)": [[13, "matflow.DirectWindows.get_job_state_info"]], "get_submit_command() (matflow.directwindows method)": [[13, "matflow.DirectWindows.get_submit_command"]], "get_version_info() (matflow.directwindows method)": [[13, "matflow.DirectWindows.get_version_info"]], "is_jobscript_active() (matflow.directwindows method)": [[13, "matflow.DirectWindows.is_jobscript_active"]], "is_num_cores_supported() (matflow.directwindows static method)": [[13, "matflow.DirectWindows.is_num_cores_supported"]], "parse_submission_output() (matflow.directwindows method)": [[13, "matflow.DirectWindows.parse_submission_output"]], "process_resources() (matflow.directwindows class method)": [[13, "matflow.DirectWindows.process_resources"]], "wait_for_jobscripts() (matflow.directwindows class method)": [[13, "matflow.DirectWindows.wait_for_jobscripts"]], "element (class in matflow)": [[14, "matflow.Element"]], "action_runs (matflow.element property)": [[14, "matflow.Element.action_runs"]], "actions (matflow.element property)": [[14, "matflow.Element.actions"]], "app (matflow.element attribute)": [[14, "matflow.Element.app"]], "dir_name (matflow.element property)": [[14, "matflow.Element.dir_name"]], "element_set (matflow.element property)": [[14, "matflow.Element.element_set"]], "element_set_idx (matflow.element property)": [[14, "matflow.Element.element_set_idx"]], "get() (matflow.element method)": [[14, "matflow.Element.get"]], "get_ear_dependencies() (matflow.element method)": [[14, "matflow.Element.get_EAR_dependencies"]], "get_data_idx() (matflow.element method)": [[14, "matflow.Element.get_data_idx"]], "get_dependent_ears() (matflow.element method)": [[14, "matflow.Element.get_dependent_EARs"]], "get_dependent_element_iterations() (matflow.element method)": [[14, "matflow.Element.get_dependent_element_iterations"]], "get_dependent_elements() (matflow.element method)": [[14, "matflow.Element.get_dependent_elements"]], "get_dependent_elements_recursively() (matflow.element method)": [[14, "matflow.Element.get_dependent_elements_recursively"]], "get_dependent_tasks() (matflow.element method)": [[14, "matflow.Element.get_dependent_tasks"]], "get_element_dependencies() (matflow.element method)": [[14, "matflow.Element.get_element_dependencies"]], "get_element_iteration_dependencies() (matflow.element method)": [[14, "matflow.Element.get_element_iteration_dependencies"]], "get_input_dependencies() (matflow.element method)": [[14, "matflow.Element.get_input_dependencies"]], "get_parameter_sources() (matflow.element method)": [[14, "matflow.Element.get_parameter_sources"]], "get_sequence_value() (matflow.element method)": [[14, "matflow.Element.get_sequence_value"]], "get_task_dependencies() (matflow.element method)": [[14, "matflow.Element.get_task_dependencies"]], "id_ (matflow.element property)": [[14, "matflow.Element.id_"]], "index (matflow.element property)": [[14, "matflow.Element.index"]], "init_loop_index() (matflow.element method)": [[14, "matflow.Element.init_loop_index"]], "input_files (matflow.element property)": [[14, "matflow.Element.input_files"]], "input_source_idx (matflow.element property)": [[14, "matflow.Element.input_source_idx"]], "input_sources (matflow.element property)": [[14, "matflow.Element.input_sources"]], "inputs (matflow.element property)": [[14, "matflow.Element.inputs"]], "is_pending (matflow.element property)": [[14, "matflow.Element.is_pending"]], "iteration_ids (matflow.element property)": [[14, "matflow.Element.iteration_IDs"]], "iterations (matflow.element property)": [[14, "matflow.Element.iterations"]], "latest_iteration (matflow.element property)": [[14, "matflow.Element.latest_iteration"]], "output_files (matflow.element property)": [[14, "matflow.Element.output_files"]], "outputs (matflow.element property)": [[14, "matflow.Element.outputs"]], "schema_parameters (matflow.element property)": [[14, "matflow.Element.schema_parameters"]], "sequence_idx (matflow.element property)": [[14, "matflow.Element.sequence_idx"]], "task (matflow.element property)": [[14, "matflow.Element.task"]], "to_element_set_data() (matflow.element method)": [[14, "matflow.Element.to_element_set_data"]], "workflow (matflow.element property)": [[14, "matflow.Element.workflow"]], "elementaction (class in matflow)": [[15, "matflow.ElementAction"]], "action (matflow.elementaction property)": [[15, "matflow.ElementAction.action"]], "action_idx (matflow.elementaction property)": [[15, "matflow.ElementAction.action_idx"]], "app (matflow.elementaction attribute)": [[15, "matflow.ElementAction.app"]], "element (matflow.elementaction property)": [[15, "matflow.ElementAction.element"]], "element_iteration (matflow.elementaction property)": [[15, "matflow.ElementAction.element_iteration"]], "get() (matflow.elementaction method)": [[15, "matflow.ElementAction.get"]], "get_data_idx() (matflow.elementaction method)": [[15, "matflow.ElementAction.get_data_idx"]], "get_parameter_names() (matflow.elementaction method)": [[15, "matflow.ElementAction.get_parameter_names"]], "get_parameter_sources() (matflow.elementaction method)": [[15, "matflow.ElementAction.get_parameter_sources"]], "input_files (matflow.elementaction property)": [[15, "matflow.ElementAction.input_files"]], "inputs (matflow.elementaction property)": [[15, "matflow.ElementAction.inputs"]], "num_runs (matflow.elementaction property)": [[15, "matflow.ElementAction.num_runs"]], "output_files (matflow.elementaction property)": [[15, "matflow.ElementAction.output_files"]], "outputs (matflow.elementaction property)": [[15, "matflow.ElementAction.outputs"]], "runs (matflow.elementaction property)": [[15, "matflow.ElementAction.runs"]], "task (matflow.elementaction property)": [[15, "matflow.ElementAction.task"]], "elementactionrun (class in matflow)": [[16, "matflow.ElementActionRun"]], "action (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.action"]], "app (matflow.elementactionrun attribute)": [[16, "matflow.ElementActionRun.app"]], "compose_commands() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.compose_commands"]], "compose_source() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.compose_source"]], "data_idx (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.data_idx"]], "dir_diff (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.dir_diff"]], "element (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.element"]], "element_action (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.element_action"]], "element_iteration (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.element_iteration"]], "end_time (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.end_time"]], "exit_code (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.exit_code"]], "get() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get"]], "get_ear_dependencies() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_EAR_dependencies"]], "get_ifg_input_values() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_IFG_input_values"]], "get_ofp_inputs() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_OFP_inputs"]], "get_ofp_output_files() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_OFP_output_files"]], "get_ofp_outputs() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_OFP_outputs"]], "get_data_idx() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_data_idx"]], "get_dependent_ears() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_dependent_EARs"]], "get_environment() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_environment"]], "get_input_dependencies() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_input_dependencies"]], "get_input_values() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_input_values"]], "get_parameter_names() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_parameter_names"]], "get_parameter_sources() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_parameter_sources"]], "get_resources() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.get_resources"]], "id_ (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.id_"]], "index (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.index"]], "input_files (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.input_files"]], "inputs (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.inputs"]], "is_pending (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.is_pending"]], "metadata (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.metadata"]], "output_files (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.output_files"]], "outputs (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.outputs"]], "resources (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.resources"]], "skip (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.skip"]], "snapshot_end (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.snapshot_end"]], "snapshot_start (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.snapshot_start"]], "start_time (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.start_time"]], "status (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.status"]], "submission_idx (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.submission_idx"]], "success (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.success"]], "task (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.task"]], "workflow (matflow.elementactionrun property)": [[16, "matflow.ElementActionRun.workflow"]], "write_source() (matflow.elementactionrun method)": [[16, "matflow.ElementActionRun.write_source"]], "elementfilter (class in matflow)": [[17, "matflow.ElementFilter"]], "from_json_like() (matflow.elementfilter class method)": [[17, "matflow.ElementFilter.from_json_like"]], "from_spec() (matflow.elementfilter class method)": [[17, "matflow.ElementFilter.from_spec"]], "test() (matflow.elementfilter method)": [[17, "matflow.ElementFilter.test"]], "to_json_like() (matflow.elementfilter method)": [[17, "matflow.ElementFilter.to_json_like"]], "elementgroup (class in matflow)": [[18, "matflow.ElementGroup"]], "app (matflow.elementgroup attribute)": [[18, "matflow.ElementGroup.app"]], "from_json_like() (matflow.elementgroup class method)": [[18, "matflow.ElementGroup.from_json_like"]], "group_by_distinct (matflow.elementgroup attribute)": [[18, "matflow.ElementGroup.group_by_distinct"]], "name (matflow.elementgroup attribute)": [[18, "matflow.ElementGroup.name"]], "to_dict() (matflow.elementgroup method)": [[18, "matflow.ElementGroup.to_dict"]], "to_json_like() (matflow.elementgroup method)": [[18, "matflow.ElementGroup.to_json_like"]], "where (matflow.elementgroup attribute)": [[18, "matflow.ElementGroup.where"]], "elementinputfiles (class in matflow)": [[19, "matflow.ElementInputFiles"]], "prefixed_names_unlabelled (matflow.elementinputfiles property)": [[19, "matflow.ElementInputFiles.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementinputfiles property)": [[19, "matflow.ElementInputFiles.prefixed_names_unlabelled_str"]], "elementinputs (class in matflow)": [[20, "matflow.ElementInputs"]], "prefixed_names_unlabelled (matflow.elementinputs property)": [[20, "matflow.ElementInputs.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementinputs property)": [[20, "matflow.ElementInputs.prefixed_names_unlabelled_str"]], "ear_ids (matflow.elementiteration property)": [[21, "matflow.ElementIteration.EAR_IDs"]], "ear_ids_flat (matflow.elementiteration property)": [[21, "matflow.ElementIteration.EAR_IDs_flat"]], "ears_initialised (matflow.elementiteration property)": [[21, "matflow.ElementIteration.EARs_initialised"]], "elementiteration (class in matflow)": [[21, "matflow.ElementIteration"]], "action_runs (matflow.elementiteration property)": [[21, "matflow.ElementIteration.action_runs"]], "actions (matflow.elementiteration property)": [[21, "matflow.ElementIteration.actions"]], "app (matflow.elementiteration attribute)": [[21, "matflow.ElementIteration.app"]], "data_idx (matflow.elementiteration property)": [[21, "matflow.ElementIteration.data_idx"]], "element (matflow.elementiteration property)": [[21, "matflow.ElementIteration.element"]], "get() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get"]], "get_ear_dependencies() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_EAR_dependencies"]], "get_data_idx() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_data_idx"]], "get_dependent_ears() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_dependent_EARs"]], "get_dependent_element_iterations() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_dependent_element_iterations"]], "get_dependent_elements() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_dependent_elements"]], "get_dependent_tasks() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_dependent_tasks"]], "get_element_dependencies() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_element_dependencies"]], "get_element_iteration_dependencies() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_element_iteration_dependencies"]], "get_input_dependencies() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_input_dependencies"]], "get_parameter_names() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_parameter_names"]], "get_parameter_sources() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_parameter_sources"]], "get_resources() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_resources"]], "get_resources_obj() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_resources_obj"]], "get_task_dependencies() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_task_dependencies"]], "get_template_resources() (matflow.elementiteration method)": [[21, "matflow.ElementIteration.get_template_resources"]], "id_ (matflow.elementiteration property)": [[21, "matflow.ElementIteration.id_"]], "index (matflow.elementiteration property)": [[21, "matflow.ElementIteration.index"]], "input_files (matflow.elementiteration property)": [[21, "matflow.ElementIteration.input_files"]], "inputs (matflow.elementiteration property)": [[21, "matflow.ElementIteration.inputs"]], "is_pending (matflow.elementiteration property)": [[21, "matflow.ElementIteration.is_pending"]], "loop_idx (matflow.elementiteration property)": [[21, "matflow.ElementIteration.loop_idx"]], "output_files (matflow.elementiteration property)": [[21, "matflow.ElementIteration.output_files"]], "outputs (matflow.elementiteration property)": [[21, "matflow.ElementIteration.outputs"]], "schema_parameters (matflow.elementiteration property)": [[21, "matflow.ElementIteration.schema_parameters"]], "task (matflow.elementiteration property)": [[21, "matflow.ElementIteration.task"]], "workflow (matflow.elementiteration property)": [[21, "matflow.ElementIteration.workflow"]], "elementoutputfiles (class in matflow)": [[22, "matflow.ElementOutputFiles"]], "prefixed_names_unlabelled (matflow.elementoutputfiles property)": [[22, "matflow.ElementOutputFiles.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementoutputfiles property)": [[22, "matflow.ElementOutputFiles.prefixed_names_unlabelled_str"]], "elementoutputs (class in matflow)": [[23, "matflow.ElementOutputs"]], "prefixed_names_unlabelled (matflow.elementoutputs property)": [[23, "matflow.ElementOutputs.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementoutputs property)": [[23, "matflow.ElementOutputs.prefixed_names_unlabelled_str"]], "elementparameter (class in matflow)": [[24, "matflow.ElementParameter"]], "app (matflow.elementparameter attribute)": [[24, "matflow.ElementParameter.app"]], "data_idx (matflow.elementparameter attribute)": [[24, "matflow.ElementParameter.data_idx"]], "data_idx_is_set (matflow.elementparameter property)": [[24, "matflow.ElementParameter.data_idx_is_set"]], "element (matflow.elementparameter attribute)": [[24, "matflow.ElementParameter.element"]], "get_size() (matflow.elementparameter method)": [[24, "matflow.ElementParameter.get_size"]], "is_set (matflow.elementparameter property)": [[24, "matflow.ElementParameter.is_set"]], "parent (matflow.elementparameter attribute)": [[24, "matflow.ElementParameter.parent"]], "path (matflow.elementparameter attribute)": [[24, "matflow.ElementParameter.path"]], "task (matflow.elementparameter attribute)": [[24, "matflow.ElementParameter.task"]], "value (matflow.elementparameter property)": [[24, "matflow.ElementParameter.value"]], "elementpropagation (class in matflow)": [[25, "matflow.ElementPropagation"]], "app (matflow.elementpropagation attribute)": [[25, "matflow.ElementPropagation.app"]], "element_set (matflow.elementpropagation property)": [[25, "matflow.ElementPropagation.element_set"]], "nesting_order (matflow.elementpropagation attribute)": [[25, "matflow.ElementPropagation.nesting_order"]], "task (matflow.elementpropagation attribute)": [[25, "matflow.ElementPropagation.task"]], "elementrepeats (class in matflow)": [[26, "matflow.ElementRepeats"]], "number (matflow.elementrepeats attribute)": [[26, "matflow.ElementRepeats.number"]], "where (matflow.elementrepeats attribute)": [[26, "matflow.ElementRepeats.where"]], "elementresources (class in matflow)": [[27, "matflow.ElementResources"]], "sge_parallel_env (matflow.elementresources attribute)": [[27, "matflow.ElementResources.SGE_parallel_env"]], "slurm_is_parallel (matflow.elementresources property)": [[27, "matflow.ElementResources.SLURM_is_parallel"]], "slurm_num_cpus_per_task (matflow.elementresources attribute)": [[27, "matflow.ElementResources.SLURM_num_cpus_per_task"]], "slurm_num_nodes (matflow.elementresources attribute)": [[27, "matflow.ElementResources.SLURM_num_nodes"]], "slurm_num_tasks (matflow.elementresources attribute)": [[27, "matflow.ElementResources.SLURM_num_tasks"]], "slurm_num_tasks_per_node (matflow.elementresources attribute)": [[27, "matflow.ElementResources.SLURM_num_tasks_per_node"]], "slurm_partition (matflow.elementresources attribute)": [[27, "matflow.ElementResources.SLURM_partition"]], "app (matflow.elementresources attribute)": [[27, "matflow.ElementResources.app"]], "from_json_like() (matflow.elementresources class method)": [[27, "matflow.ElementResources.from_json_like"]], "get_default_os_name() (matflow.elementresources static method)": [[27, "matflow.ElementResources.get_default_os_name"]], "get_default_scheduler() (matflow.elementresources class method)": [[27, "matflow.ElementResources.get_default_scheduler"]], "get_default_shell() (matflow.elementresources class method)": [[27, "matflow.ElementResources.get_default_shell"]], "get_jobscript_hash() (matflow.elementresources method)": [[27, "matflow.ElementResources.get_jobscript_hash"]], "is_parallel (matflow.elementresources property)": [[27, "matflow.ElementResources.is_parallel"]], "num_cores (matflow.elementresources attribute)": [[27, "matflow.ElementResources.num_cores"]], "num_cores_per_node (matflow.elementresources attribute)": [[27, "matflow.ElementResources.num_cores_per_node"]], "num_nodes (matflow.elementresources attribute)": [[27, "matflow.ElementResources.num_nodes"]], "num_threads (matflow.elementresources attribute)": [[27, "matflow.ElementResources.num_threads"]], "os_name (matflow.elementresources attribute)": [[27, "matflow.ElementResources.os_name"]], "parallel_mode (matflow.elementresources attribute)": [[27, "matflow.ElementResources.parallel_mode"]], "scheduler (matflow.elementresources attribute)": [[27, "matflow.ElementResources.scheduler"]], "scheduler_args (matflow.elementresources attribute)": [[27, "matflow.ElementResources.scheduler_args"]], "scratch (matflow.elementresources attribute)": [[27, "matflow.ElementResources.scratch"]], "set_defaults() (matflow.elementresources method)": [[27, "matflow.ElementResources.set_defaults"]], "shell (matflow.elementresources attribute)": [[27, "matflow.ElementResources.shell"]], "shell_args (matflow.elementresources attribute)": [[27, "matflow.ElementResources.shell_args"]], "time_limit (matflow.elementresources attribute)": [[27, "matflow.ElementResources.time_limit"]], "to_dict() (matflow.elementresources method)": [[27, "matflow.ElementResources.to_dict"]], "to_json_like() (matflow.elementresources method)": [[27, "matflow.ElementResources.to_json_like"]], "use_job_array (matflow.elementresources attribute)": [[27, "matflow.ElementResources.use_job_array"]], "validate_against_machine() (matflow.elementresources method)": [[27, "matflow.ElementResources.validate_against_machine"]], "elementset (class in matflow)": [[28, "matflow.ElementSet"]], "app (matflow.elementset attribute)": [[28, "matflow.ElementSet.app"]], "defined_input_types (matflow.elementset property)": [[28, "matflow.ElementSet.defined_input_types"]], "elem_iter_ids (matflow.elementset property)": [[28, "matflow.ElementSet.elem_iter_IDs"]], "element_iterations (matflow.elementset property)": [[28, "matflow.ElementSet.element_iterations"]], "element_local_idx_range (matflow.elementset property)": [[28, "matflow.ElementSet.element_local_idx_range"]], "elements (matflow.elementset property)": [[28, "matflow.ElementSet.elements"]], "ensure_element_sets() (matflow.elementset class method)": [[28, "matflow.ElementSet.ensure_element_sets"]], "from_json_like() (matflow.elementset class method)": [[28, "matflow.ElementSet.from_json_like"]], "get_defined_parameter_types() (matflow.elementset method)": [[28, "matflow.ElementSet.get_defined_parameter_types"]], "get_defined_sub_parameter_types() (matflow.elementset method)": [[28, "matflow.ElementSet.get_defined_sub_parameter_types"]], "get_locally_defined_inputs() (matflow.elementset method)": [[28, "matflow.ElementSet.get_locally_defined_inputs"]], "get_sequence_by_path() (matflow.elementset method)": [[28, "matflow.ElementSet.get_sequence_by_path"]], "get_sequence_from_path() (matflow.elementset method)": [[28, "matflow.ElementSet.get_sequence_from_path"]], "get_task_dependencies() (matflow.elementset method)": [[28, "matflow.ElementSet.get_task_dependencies"]], "index (matflow.elementset property)": [[28, "matflow.ElementSet.index"]], "input_types (matflow.elementset property)": [[28, "matflow.ElementSet.input_types"]], "is_input_type_provided() (matflow.elementset method)": [[28, "matflow.ElementSet.is_input_type_provided"]], "prepare_persistent_copy() (matflow.elementset method)": [[28, "matflow.ElementSet.prepare_persistent_copy"]], "task (matflow.elementset property)": [[28, "matflow.ElementSet.task"]], "task_template (matflow.elementset property)": [[28, "matflow.ElementSet.task_template"]], "to_dict() (matflow.elementset method)": [[28, "matflow.ElementSet.to_dict"]], "to_json_like() (matflow.elementset method)": [[28, "matflow.ElementSet.to_json_like"]], "undefined_input_types (matflow.elementset property)": [[28, "matflow.ElementSet.undefined_input_types"]], "elements (class in matflow)": [[29, "matflow.Elements"]], "islice() (matflow.elements method)": [[29, "matflow.Elements.islice"]], "task (matflow.elements property)": [[29, "matflow.Elements.task"]], "environment (class in matflow)": [[30, "matflow.Environment"]], "app (matflow.environment attribute)": [[30, "matflow.Environment.app"]], "from_json_like() (matflow.environment class method)": [[30, "matflow.Environment.from_json_like"]], "to_dict() (matflow.environment method)": [[30, "matflow.Environment.to_dict"]], "to_json_like() (matflow.environment method)": [[30, "matflow.Environment.to_json_like"]], "environmentslist (class in matflow)": [[31, "matflow.EnvironmentsList"]], "add_object() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.add_object"]], "add_objects() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.add_objects"]], "from_json_like() (matflow.environmentslist class method)": [[31, "matflow.EnvironmentsList.from_json_like"]], "get() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.get"]], "get_all() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.get_all"]], "list_attrs() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.list_attrs"]], "to_dict() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.to_dict"]], "to_json_like() (matflow.environmentslist method)": [[31, "matflow.EnvironmentsList.to_json_like"]], "executable (class in matflow)": [[32, "matflow.Executable"]], "app (matflow.executable attribute)": [[32, "matflow.Executable.app"]], "environment (matflow.executable property)": [[32, "matflow.Executable.environment"]], "filter_instances() (matflow.executable method)": [[32, "matflow.Executable.filter_instances"]], "from_json_like() (matflow.executable class method)": [[32, "matflow.Executable.from_json_like"]], "to_dict() (matflow.executable method)": [[32, "matflow.Executable.to_dict"]], "to_json_like() (matflow.executable method)": [[32, "matflow.Executable.to_json_like"]], "executableinstance (class in matflow)": [[33, "matflow.ExecutableInstance"]], "app (matflow.executableinstance attribute)": [[33, "matflow.ExecutableInstance.app"]], "command (matflow.executableinstance attribute)": [[33, "matflow.ExecutableInstance.command"]], "from_json_like() (matflow.executableinstance class method)": [[33, "matflow.ExecutableInstance.from_json_like"]], "from_spec() (matflow.executableinstance class method)": [[33, "matflow.ExecutableInstance.from_spec"]], "num_cores (matflow.executableinstance attribute)": [[33, "matflow.ExecutableInstance.num_cores"]], "parallel_mode (matflow.executableinstance attribute)": [[33, "matflow.ExecutableInstance.parallel_mode"]], "to_dict() (matflow.executableinstance method)": [[33, "matflow.ExecutableInstance.to_dict"]], "to_json_like() (matflow.executableinstance method)": [[33, "matflow.ExecutableInstance.to_json_like"]], "executableslist (class in matflow)": [[34, "matflow.ExecutablesList"]], "add_object() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.add_object"]], "add_objects() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.add_objects"]], "environment (matflow.executableslist attribute)": [[34, "matflow.ExecutablesList.environment"]], "from_json_like() (matflow.executableslist class method)": [[34, "matflow.ExecutablesList.from_json_like"]], "get() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.get"]], "get_all() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.get_all"]], "list_attrs() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.list_attrs"]], "to_dict() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.to_dict"]], "to_json_like() (matflow.executableslist method)": [[34, "matflow.ExecutablesList.to_json_like"]], "filenameext (class in matflow)": [[35, "matflow.FileNameExt"]], "app (matflow.filenameext attribute)": [[35, "matflow.FileNameExt.app"]], "file_name (matflow.filenameext attribute)": [[35, "matflow.FileNameExt.file_name"]], "from_json_like() (matflow.filenameext class method)": [[35, "matflow.FileNameExt.from_json_like"]], "to_dict() (matflow.filenameext method)": [[35, "matflow.FileNameExt.to_dict"]], "to_json_like() (matflow.filenameext method)": [[35, "matflow.FileNameExt.to_json_like"]], "value() (matflow.filenameext method)": [[35, "matflow.FileNameExt.value"]], "filenamespec (class in matflow)": [[36, "matflow.FileNameSpec"]], "app (matflow.filenamespec attribute)": [[36, "matflow.FileNameSpec.app"]], "ext (matflow.filenamespec property)": [[36, "matflow.FileNameSpec.ext"]], "from_json_like() (matflow.filenamespec class method)": [[36, "matflow.FileNameSpec.from_json_like"]], "stem (matflow.filenamespec property)": [[36, "matflow.FileNameSpec.stem"]], "to_dict() (matflow.filenamespec method)": [[36, "matflow.FileNameSpec.to_dict"]], "to_json_like() (matflow.filenamespec method)": [[36, "matflow.FileNameSpec.to_json_like"]], "value() (matflow.filenamespec method)": [[36, "matflow.FileNameSpec.value"]], "filenamestem (class in matflow)": [[37, "matflow.FileNameStem"]], "app (matflow.filenamestem attribute)": [[37, "matflow.FileNameStem.app"]], "file_name (matflow.filenamestem attribute)": [[37, "matflow.FileNameStem.file_name"]], "from_json_like() (matflow.filenamestem class method)": [[37, "matflow.FileNameStem.from_json_like"]], "to_dict() (matflow.filenamestem method)": [[37, "matflow.FileNameStem.to_dict"]], "to_json_like() (matflow.filenamestem method)": [[37, "matflow.FileNameStem.to_json_like"]], "value() (matflow.filenamestem method)": [[37, "matflow.FileNameStem.value"]], "filespec (class in matflow)": [[38, "matflow.FileSpec"]], "app (matflow.filespec attribute)": [[38, "matflow.FileSpec.app"]], "ext (matflow.filespec property)": [[38, "matflow.FileSpec.ext"]], "from_json_like() (matflow.filespec class method)": [[38, "matflow.FileSpec.from_json_like"]], "label (matflow.filespec attribute)": [[38, "matflow.FileSpec.label"]], "name (matflow.filespec attribute)": [[38, "matflow.FileSpec.name"]], "stem (matflow.filespec property)": [[38, "matflow.FileSpec.stem"]], "to_dict() (matflow.filespec method)": [[38, "matflow.FileSpec.to_dict"]], "to_json_like() (matflow.filespec method)": [[38, "matflow.FileSpec.to_json_like"]], "value() (matflow.filespec method)": [[38, "matflow.FileSpec.value"]], "grouplist (class in matflow)": [[39, "matflow.GroupList"]], "add_object() (matflow.grouplist method)": [[39, "matflow.GroupList.add_object"]], "add_objects() (matflow.grouplist method)": [[39, "matflow.GroupList.add_objects"]], "from_json_like() (matflow.grouplist class method)": [[39, "matflow.GroupList.from_json_like"]], "get() (matflow.grouplist method)": [[39, "matflow.GroupList.get"]], "get_all() (matflow.grouplist method)": [[39, "matflow.GroupList.get_all"]], "list_attrs() (matflow.grouplist method)": [[39, "matflow.GroupList.list_attrs"]], "to_dict() (matflow.grouplist method)": [[39, "matflow.GroupList.to_dict"]], "to_json_like() (matflow.grouplist method)": [[39, "matflow.GroupList.to_json_like"]], "inputfile (class in matflow)": [[40, "matflow.InputFile"]], "app (matflow.inputfile attribute)": [[40, "matflow.InputFile.app"]], "contents (matflow.inputfile property)": [[40, "matflow.InputFile.contents"]], "extension (matflow.inputfile property)": [[40, "matflow.InputFile.extension"]], "from_json_like() (matflow.inputfile class method)": [[40, "matflow.InputFile.from_json_like"]], "make_persistent() (matflow.inputfile method)": [[40, "matflow.InputFile.make_persistent"]], "normalised_files_path (matflow.inputfile property)": [[40, "matflow.InputFile.normalised_files_path"]], "normalised_path (matflow.inputfile property)": [[40, "matflow.InputFile.normalised_path"]], "path (matflow.inputfile property)": [[40, "matflow.InputFile.path"]], "read_contents() (matflow.inputfile method)": [[40, "matflow.InputFile.read_contents"]], "store_contents (matflow.inputfile property)": [[40, "matflow.InputFile.store_contents"]], "to_dict() (matflow.inputfile method)": [[40, "matflow.InputFile.to_dict"]], "to_json_like() (matflow.inputfile method)": [[40, "matflow.InputFile.to_json_like"]], "workflow (matflow.inputfile property)": [[40, "matflow.InputFile.workflow"]], "inputfilegenerator (class in matflow)": [[41, "matflow.InputFileGenerator"]], "abortable (matflow.inputfilegenerator attribute)": [[41, "matflow.InputFileGenerator.abortable"]], "app (matflow.inputfilegenerator attribute)": [[41, "matflow.InputFileGenerator.app"]], "compose_source() (matflow.inputfilegenerator method)": [[41, "matflow.InputFileGenerator.compose_source"]], "environment (matflow.inputfilegenerator attribute)": [[41, "matflow.InputFileGenerator.environment"]], "from_json_like() (matflow.inputfilegenerator class method)": [[41, "matflow.InputFileGenerator.from_json_like"]], "get_action_rule() (matflow.inputfilegenerator method)": [[41, "matflow.InputFileGenerator.get_action_rule"]], "input_file (matflow.inputfilegenerator attribute)": [[41, "matflow.InputFileGenerator.input_file"]], "inputs (matflow.inputfilegenerator attribute)": [[41, "matflow.InputFileGenerator.inputs"]], "script (matflow.inputfilegenerator attribute)": [[41, "matflow.InputFileGenerator.script"]], "to_dict() (matflow.inputfilegenerator method)": [[41, "matflow.InputFileGenerator.to_dict"]], "to_json_like() (matflow.inputfilegenerator method)": [[41, "matflow.InputFileGenerator.to_json_like"]], "write_source() (matflow.inputfilegenerator method)": [[41, "matflow.InputFileGenerator.write_source"]], "inputfilegeneratorsource (class in matflow)": [[42, "matflow.InputFileGeneratorSource"]], "app (matflow.inputfilegeneratorsource attribute)": [[42, "matflow.InputFileGeneratorSource.app"]], "contents (matflow.inputfilegeneratorsource property)": [[42, "matflow.InputFileGeneratorSource.contents"]], "extension (matflow.inputfilegeneratorsource property)": [[42, "matflow.InputFileGeneratorSource.extension"]], "from_json_like() (matflow.inputfilegeneratorsource class method)": [[42, "matflow.InputFileGeneratorSource.from_json_like"]], "make_persistent() (matflow.inputfilegeneratorsource method)": [[42, "matflow.InputFileGeneratorSource.make_persistent"]], "path (matflow.inputfilegeneratorsource property)": [[42, "matflow.InputFileGeneratorSource.path"]], "read_contents() (matflow.inputfilegeneratorsource method)": [[42, "matflow.InputFileGeneratorSource.read_contents"]], "store_contents (matflow.inputfilegeneratorsource property)": [[42, "matflow.InputFileGeneratorSource.store_contents"]], "to_dict() (matflow.inputfilegeneratorsource method)": [[42, "matflow.InputFileGeneratorSource.to_dict"]], "to_json_like() (matflow.inputfilegeneratorsource method)": [[42, "matflow.InputFileGeneratorSource.to_json_like"]], "workflow (matflow.inputfilegeneratorsource property)": [[42, "matflow.InputFileGeneratorSource.workflow"]], "inputsource (class in matflow)": [[43, "matflow.InputSource"]], "app (matflow.inputsource attribute)": [[43, "matflow.InputSource.app"]], "default() (matflow.inputsource class method)": [[43, "matflow.InputSource.default"]], "from_json_like() (matflow.inputsource class method)": [[43, "matflow.InputSource.from_json_like"]], "from_string() (matflow.inputsource class method)": [[43, "matflow.InputSource.from_string"]], "get_task() (matflow.inputsource method)": [[43, "matflow.InputSource.get_task"]], "import_() (matflow.inputsource class method)": [[43, "matflow.InputSource.import_"]], "is_in() (matflow.inputsource method)": [[43, "matflow.InputSource.is_in"]], "local() (matflow.inputsource class method)": [[43, "matflow.InputSource.local"]], "task() (matflow.inputsource class method)": [[43, "matflow.InputSource.task"]], "to_dict() (matflow.inputsource method)": [[43, "matflow.InputSource.to_dict"]], "to_json_like() (matflow.inputsource method)": [[43, "matflow.InputSource.to_json_like"]], "to_string() (matflow.inputsource method)": [[43, "matflow.InputSource.to_string"]], "default (matflow.inputsourcetype attribute)": [[44, "matflow.InputSourceType.DEFAULT"]], "import (matflow.inputsourcetype attribute)": [[44, "matflow.InputSourceType.IMPORT"]], "inputsourcetype (class in matflow)": [[44, "matflow.InputSourceType"]], "local (matflow.inputsourcetype attribute)": [[44, "matflow.InputSourceType.LOCAL"]], "task (matflow.inputsourcetype attribute)": [[44, "matflow.InputSourceType.TASK"]], "inputvalue (class in matflow)": [[45, "matflow.InputValue"]], "app (matflow.inputvalue attribute)": [[45, "matflow.InputValue.app"]], "from_json_like() (matflow.inputvalue class method)": [[45, "matflow.InputValue.from_json_like"]], "is_sub_value (matflow.inputvalue property)": [[45, "matflow.InputValue.is_sub_value"]], "labelled_type (matflow.inputvalue property)": [[45, "matflow.InputValue.labelled_type"]], "make_persistent() (matflow.inputvalue method)": [[45, "matflow.InputValue.make_persistent"]], "normalised_inputs_path (matflow.inputvalue property)": [[45, "matflow.InputValue.normalised_inputs_path"]], "normalised_path (matflow.inputvalue property)": [[45, "matflow.InputValue.normalised_path"]], "to_dict() (matflow.inputvalue method)": [[45, "matflow.InputValue.to_dict"]], "to_json_like() (matflow.inputvalue method)": [[45, "matflow.InputValue.to_json_like"]], "value (matflow.inputvalue property)": [[45, "matflow.InputValue.value"]], "workflow (matflow.inputvalue property)": [[45, "matflow.InputValue.workflow"]], "ear_id (matflow.jobscript property)": [[46, "matflow.Jobscript.EAR_ID"]], "ear_id_file_name (matflow.jobscript property)": [[46, "matflow.Jobscript.EAR_ID_file_name"]], "ear_id_file_path (matflow.jobscript property)": [[46, "matflow.Jobscript.EAR_ID_file_path"]], "jobscript (class in matflow)": [[46, "matflow.Jobscript"]], "all_ears (matflow.jobscript property)": [[46, "matflow.Jobscript.all_EARs"]], "app (matflow.jobscript attribute)": [[46, "matflow.Jobscript.app"]], "cancel() (matflow.jobscript method)": [[46, "matflow.Jobscript.cancel"]], "compose_jobscript() (matflow.jobscript method)": [[46, "matflow.Jobscript.compose_jobscript"]], "dependencies (matflow.jobscript property)": [[46, "matflow.Jobscript.dependencies"]], "direct_stderr_file_name (matflow.jobscript property)": [[46, "matflow.Jobscript.direct_stderr_file_name"]], "direct_stderr_path (matflow.jobscript property)": [[46, "matflow.Jobscript.direct_stderr_path"]], "direct_stdout_file_name (matflow.jobscript property)": [[46, "matflow.Jobscript.direct_stdout_file_name"]], "direct_stdout_path (matflow.jobscript property)": [[46, "matflow.Jobscript.direct_stdout_path"]], "direct_win_pid_file_name (matflow.jobscript property)": [[46, "matflow.Jobscript.direct_win_pid_file_name"]], "direct_win_pid_file_path (matflow.jobscript property)": [[46, "matflow.Jobscript.direct_win_pid_file_path"]], "element_run_dir_file_name (matflow.jobscript property)": [[46, "matflow.Jobscript.element_run_dir_file_name"]], "element_run_dir_file_path (matflow.jobscript property)": [[46, "matflow.Jobscript.element_run_dir_file_path"]], "end_time (matflow.jobscript property)": [[46, "matflow.Jobscript.end_time"]], "from_json_like() (matflow.jobscript class method)": [[46, "matflow.Jobscript.from_json_like"]], "get_active_states() (matflow.jobscript method)": [[46, "matflow.Jobscript.get_active_states"]], "get_commands_file_name() (matflow.jobscript method)": [[46, "matflow.Jobscript.get_commands_file_name"]], "get_task_loop_idx_array() (matflow.jobscript method)": [[46, "matflow.Jobscript.get_task_loop_idx_array"]], "index (matflow.jobscript property)": [[46, "matflow.Jobscript.index"]], "is_array (matflow.jobscript property)": [[46, "matflow.Jobscript.is_array"]], "is_submitted (matflow.jobscript property)": [[46, "matflow.Jobscript.is_submitted"]], "jobscript_name (matflow.jobscript property)": [[46, "matflow.Jobscript.jobscript_name"]], "jobscript_path (matflow.jobscript property)": [[46, "matflow.Jobscript.jobscript_path"]], "make_artifact_dirs() (matflow.jobscript method)": [[46, "matflow.Jobscript.make_artifact_dirs"]], "num_actions (matflow.jobscript property)": [[46, "matflow.Jobscript.num_actions"]], "num_elements (matflow.jobscript property)": [[46, "matflow.Jobscript.num_elements"]], "os_name (matflow.jobscript property)": [[46, "matflow.Jobscript.os_name"]], "process_id (matflow.jobscript property)": [[46, "matflow.Jobscript.process_ID"]], "resources (matflow.jobscript property)": [[46, "matflow.Jobscript.resources"]], "scheduler (matflow.jobscript property)": [[46, "matflow.Jobscript.scheduler"]], "scheduler_job_id (matflow.jobscript property)": [[46, "matflow.Jobscript.scheduler_job_ID"]], "scheduler_js_ref (matflow.jobscript property)": [[46, "matflow.Jobscript.scheduler_js_ref"]], "scheduler_name (matflow.jobscript property)": [[46, "matflow.Jobscript.scheduler_name"]], "scheduler_ref (matflow.jobscript property)": [[46, "matflow.Jobscript.scheduler_ref"]], "shell (matflow.jobscript property)": [[46, "matflow.Jobscript.shell"]], "shell_name (matflow.jobscript property)": [[46, "matflow.Jobscript.shell_name"]], "start_time (matflow.jobscript property)": [[46, "matflow.Jobscript.start_time"]], "submission (matflow.jobscript property)": [[46, "matflow.Jobscript.submission"]], "submit() (matflow.jobscript method)": [[46, "matflow.Jobscript.submit"]], "submit_cmdline (matflow.jobscript property)": [[46, "matflow.Jobscript.submit_cmdline"]], "submit_hostname (matflow.jobscript property)": [[46, "matflow.Jobscript.submit_hostname"]], "submit_machine (matflow.jobscript property)": [[46, "matflow.Jobscript.submit_machine"]], "submit_time (matflow.jobscript property)": [[46, "matflow.Jobscript.submit_time"]], "task_actions (matflow.jobscript property)": [[46, "matflow.Jobscript.task_actions"]], "task_elements (matflow.jobscript property)": [[46, "matflow.Jobscript.task_elements"]], "task_insert_ids (matflow.jobscript property)": [[46, "matflow.Jobscript.task_insert_IDs"]], "task_loop_idx (matflow.jobscript property)": [[46, "matflow.Jobscript.task_loop_idx"]], "to_dict() (matflow.jobscript method)": [[46, "matflow.Jobscript.to_dict"]], "to_json_like() (matflow.jobscript method)": [[46, "matflow.Jobscript.to_json_like"]], "version_info (matflow.jobscript property)": [[46, "matflow.Jobscript.version_info"]], "workflow (matflow.jobscript property)": [[46, "matflow.Jobscript.workflow"]], "workflow_app_alias (matflow.jobscript property)": [[46, "matflow.Jobscript.workflow_app_alias"]], "write_ear_id_file() (matflow.jobscript method)": [[46, "matflow.Jobscript.write_EAR_ID_file"]], "write_element_run_dir_file() (matflow.jobscript method)": [[46, "matflow.Jobscript.write_element_run_dir_file"]], "write_jobscript() (matflow.jobscript method)": [[46, "matflow.Jobscript.write_jobscript"]], "loop (class in matflow)": [[47, "matflow.Loop"]], "app (matflow.loop attribute)": [[47, "matflow.Loop.app"]], "from_json_like() (matflow.loop class method)": [[47, "matflow.Loop.from_json_like"]], "name (matflow.loop property)": [[47, "matflow.Loop.name"]], "non_iterable_parameters (matflow.loop property)": [[47, "matflow.Loop.non_iterable_parameters"]], "num_iterations (matflow.loop property)": [[47, "matflow.Loop.num_iterations"]], "task_insert_ids (matflow.loop property)": [[47, "matflow.Loop.task_insert_IDs"]], "task_objects (matflow.loop property)": [[47, "matflow.Loop.task_objects"]], "to_dict() (matflow.loop method)": [[47, "matflow.Loop.to_dict"]], "to_json_like() (matflow.loop method)": [[47, "matflow.Loop.to_json_like"]], "workflow_template (matflow.loop property)": [[47, "matflow.Loop.workflow_template"]], "numcores (class in matflow)": [[48, "matflow.NumCores"]], "app (matflow.numcores attribute)": [[48, "matflow.NumCores.app"]], "from_json_like() (matflow.numcores class method)": [[48, "matflow.NumCores.from_json_like"]], "start (matflow.numcores attribute)": [[48, "matflow.NumCores.start"]], "step (matflow.numcores attribute)": [[48, "matflow.NumCores.step"]], "stop (matflow.numcores attribute)": [[48, "matflow.NumCores.stop"]], "to_dict() (matflow.numcores method)": [[48, "matflow.NumCores.to_dict"]], "to_json_like() (matflow.numcores method)": [[48, "matflow.NumCores.to_json_like"]], "outputfileparser (class in matflow)": [[49, "matflow.OutputFileParser"]], "abortable (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.abortable"]], "app (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.app"]], "clean_up (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.clean_up"]], "compose_source() (matflow.outputfileparser method)": [[49, "matflow.OutputFileParser.compose_source"]], "environment (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.environment"]], "from_json_like() (matflow.outputfileparser class method)": [[49, "matflow.OutputFileParser.from_json_like"]], "inputs (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.inputs"]], "options (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.options"]], "output (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.output"]], "output_files (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.output_files"]], "outputs (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.outputs"]], "save_files (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.save_files"]], "script (matflow.outputfileparser attribute)": [[49, "matflow.OutputFileParser.script"]], "to_dict() (matflow.outputfileparser method)": [[49, "matflow.OutputFileParser.to_dict"]], "to_json_like() (matflow.outputfileparser method)": [[49, "matflow.OutputFileParser.to_json_like"]], "write_source() (matflow.outputfileparser method)": [[49, "matflow.OutputFileParser.write_source"]], "outputfileparsersource (class in matflow)": [[50, "matflow.OutputFileParserSource"]], "app (matflow.outputfileparsersource attribute)": [[50, "matflow.OutputFileParserSource.app"]], "contents (matflow.outputfileparsersource property)": [[50, "matflow.OutputFileParserSource.contents"]], "extension (matflow.outputfileparsersource property)": [[50, "matflow.OutputFileParserSource.extension"]], "from_json_like() (matflow.outputfileparsersource class method)": [[50, "matflow.OutputFileParserSource.from_json_like"]], "make_persistent() (matflow.outputfileparsersource method)": [[50, "matflow.OutputFileParserSource.make_persistent"]], "path (matflow.outputfileparsersource property)": [[50, "matflow.OutputFileParserSource.path"]], "read_contents() (matflow.outputfileparsersource method)": [[50, "matflow.OutputFileParserSource.read_contents"]], "store_contents (matflow.outputfileparsersource property)": [[50, "matflow.OutputFileParserSource.store_contents"]], "to_dict() (matflow.outputfileparsersource method)": [[50, "matflow.OutputFileParserSource.to_dict"]], "to_json_like() (matflow.outputfileparsersource method)": [[50, "matflow.OutputFileParserSource.to_json_like"]], "workflow (matflow.outputfileparsersource property)": [[50, "matflow.OutputFileParserSource.workflow"]], "outputlabel (class in matflow)": [[51, "matflow.OutputLabel"]], "app (matflow.outputlabel attribute)": [[51, "matflow.OutputLabel.app"]], "from_json_like() (matflow.outputlabel class method)": [[51, "matflow.OutputLabel.from_json_like"]], "to_dict() (matflow.outputlabel method)": [[51, "matflow.OutputLabel.to_dict"]], "to_json_like() (matflow.outputlabel method)": [[51, "matflow.OutputLabel.to_json_like"]], "parameter (class in matflow)": [[52, "matflow.Parameter"]], "app (matflow.parameter attribute)": [[52, "matflow.Parameter.app"]], "from_json_like() (matflow.parameter class method)": [[52, "matflow.Parameter.from_json_like"]], "is_file (matflow.parameter attribute)": [[52, "matflow.Parameter.is_file"]], "sub_parameters (matflow.parameter attribute)": [[52, "matflow.Parameter.sub_parameters"]], "to_dict() (matflow.parameter method)": [[52, "matflow.Parameter.to_dict"]], "to_json_like() (matflow.parameter method)": [[52, "matflow.Parameter.to_json_like"]], "typ (matflow.parameter attribute)": [[52, "matflow.Parameter.typ"]], "parameterpath (class in matflow)": [[53, "matflow.ParameterPath"]], "app (matflow.parameterpath attribute)": [[53, "matflow.ParameterPath.app"]], "from_json_like() (matflow.parameterpath class method)": [[53, "matflow.ParameterPath.from_json_like"]], "path (matflow.parameterpath attribute)": [[53, "matflow.ParameterPath.path"]], "task (matflow.parameterpath attribute)": [[53, "matflow.ParameterPath.task"]], "to_dict() (matflow.parameterpath method)": [[53, "matflow.ParameterPath.to_dict"]], "to_json_like() (matflow.parameterpath method)": [[53, "matflow.ParameterPath.to_json_like"]], "explicit (matflow.parameterpropagationmode attribute)": [[54, "matflow.ParameterPropagationMode.EXPLICIT"]], "implicit (matflow.parameterpropagationmode attribute)": [[54, "matflow.ParameterPropagationMode.IMPLICIT"]], "never (matflow.parameterpropagationmode attribute)": [[54, "matflow.ParameterPropagationMode.NEVER"]], "parameterpropagationmode (class in matflow)": [[54, "matflow.ParameterPropagationMode"]], "parametervalue (class in matflow)": [[55, "matflow.ParameterValue"]], "to_dict() (matflow.parametervalue method)": [[55, "matflow.ParameterValue.to_dict"]], "parameters (class in matflow)": [[56, "matflow.Parameters"]], "default (matflow.parameters attribute)": [[56, "matflow.Parameters.default"]], "islice() (matflow.parameters method)": [[56, "matflow.Parameters.islice"]], "path (matflow.parameters attribute)": [[56, "matflow.Parameters.path"]], "raise_on_missing (matflow.parameters attribute)": [[56, "matflow.Parameters.raise_on_missing"]], "return_element_parameters (matflow.parameters attribute)": [[56, "matflow.Parameters.return_element_parameters"]], "task (matflow.parameters attribute)": [[56, "matflow.Parameters.task"]], "parameterslist (class in matflow)": [[57, "matflow.ParametersList"]], "add_object() (matflow.parameterslist method)": [[57, "matflow.ParametersList.add_object"]], "add_objects() (matflow.parameterslist method)": [[57, "matflow.ParametersList.add_objects"]], "from_json_like() (matflow.parameterslist class method)": [[57, "matflow.ParametersList.from_json_like"]], "get() (matflow.parameterslist method)": [[57, "matflow.ParametersList.get"]], "get_all() (matflow.parameterslist method)": [[57, "matflow.ParametersList.get_all"]], "list_attrs() (matflow.parameterslist method)": [[57, "matflow.ParametersList.list_attrs"]], "to_dict() (matflow.parameterslist method)": [[57, "matflow.ParametersList.to_dict"]], "to_json_like() (matflow.parameterslist method)": [[57, "matflow.ParametersList.to_json_like"]], "resourcelist (class in matflow)": [[58, "matflow.ResourceList"]], "add_object() (matflow.resourcelist method)": [[58, "matflow.ResourceList.add_object"]], "element_set (matflow.resourcelist property)": [[58, "matflow.ResourceList.element_set"]], "from_json_like() (matflow.resourcelist class method)": [[58, "matflow.ResourceList.from_json_like"]], "get() (matflow.resourcelist method)": [[58, "matflow.ResourceList.get"]], "get_all() (matflow.resourcelist method)": [[58, "matflow.ResourceList.get_all"]], "get_scopes() (matflow.resourcelist method)": [[58, "matflow.ResourceList.get_scopes"]], "list_attrs() (matflow.resourcelist method)": [[58, "matflow.ResourceList.list_attrs"]], "merge_template_resources() (matflow.resourcelist method)": [[58, "matflow.ResourceList.merge_template_resources"]], "normalise() (matflow.resourcelist class method)": [[58, "matflow.ResourceList.normalise"]], "to_dict() (matflow.resourcelist method)": [[58, "matflow.ResourceList.to_dict"]], "to_json_like() (matflow.resourcelist method)": [[58, "matflow.ResourceList.to_json_like"]], "workflow_template (matflow.resourcelist property)": [[58, "matflow.ResourceList.workflow_template"]], "allowed_parameters (matflow.resourcespec attribute)": [[59, "matflow.ResourceSpec.ALLOWED_PARAMETERS"]], "resourcespec (class in matflow)": [[59, "matflow.ResourceSpec"]], "sge_parallel_env (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.SGE_parallel_env"]], "slurm_num_cpus_per_task (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.SLURM_num_cpus_per_task"]], "slurm_num_nodes (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.SLURM_num_nodes"]], "slurm_num_tasks (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.SLURM_num_tasks"]], "slurm_num_tasks_per_node (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.SLURM_num_tasks_per_node"]], "slurm_partition (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.SLURM_partition"]], "app (matflow.resourcespec attribute)": [[59, "matflow.ResourceSpec.app"]], "copy_non_persistent() (matflow.resourcespec method)": [[59, "matflow.ResourceSpec.copy_non_persistent"]], "element_set (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.element_set"]], "from_json_like() (matflow.resourcespec class method)": [[59, "matflow.ResourceSpec.from_json_like"]], "make_persistent() (matflow.resourcespec method)": [[59, "matflow.ResourceSpec.make_persistent"]], "normalised_path (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.normalised_path"]], "normalised_resources_path (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.normalised_resources_path"]], "num_cores (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.num_cores"]], "num_cores_per_node (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.num_cores_per_node"]], "num_nodes (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.num_nodes"]], "num_threads (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.num_threads"]], "os_name (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.os_name"]], "parallel_mode (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.parallel_mode"]], "scheduler (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.scheduler"]], "scheduler_args (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.scheduler_args"]], "scratch (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.scratch"]], "shell (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.shell"]], "shell_args (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.shell_args"]], "time_limit (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.time_limit"]], "to_dict() (matflow.resourcespec method)": [[59, "matflow.ResourceSpec.to_dict"]], "to_json_like() (matflow.resourcespec method)": [[59, "matflow.ResourceSpec.to_json_like"]], "use_job_array (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.use_job_array"]], "workflow (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.workflow"]], "workflow_template (matflow.resourcespec property)": [[59, "matflow.ResourceSpec.workflow_template"]], "default_array_item_var (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.DEFAULT_ARRAY_ITEM_VAR"]], "default_array_switch (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.DEFAULT_ARRAY_SWITCH"]], "default_cwd_switch (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.DEFAULT_CWD_SWITCH"]], "default_del_cmd (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.DEFAULT_DEL_CMD"]], "default_js_cmd (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.DEFAULT_JS_CMD"]], "default_login_nodes_cmd (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.DEFAULT_LOGIN_NODES_CMD"]], "default_login_node_match (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.DEFAULT_LOGIN_NODE_MATCH"]], "default_shebang_args (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.DEFAULT_SHELL_ARGS"]], "default_show_cmd (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.DEFAULT_SHOW_CMD"]], "default_submit_cmd (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.DEFAULT_SUBMIT_CMD"]], "sgeposix (class in matflow)": [[60, "matflow.SGEPosix"]], "app (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.app"]], "cancel_jobs() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.cancel_jobs"]], "format_array_request() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.format_array_request"]], "format_core_request_lines() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.format_core_request_lines"]], "format_options() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.format_options"]], "format_std_stream_file_option_lines() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.format_std_stream_file_option_lines"]], "format_switch() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.format_switch"]], "get_job_state_info() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.get_job_state_info"]], "get_job_statuses() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.get_job_statuses"]], "get_login_nodes() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.get_login_nodes"]], "get_submit_command() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.get_submit_command"]], "get_version_info() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.get_version_info"]], "is_jobscript_active() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.sgeposix static method)": [[60, "matflow.SGEPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.parse_submission_output"]], "process_resources() (matflow.sgeposix class method)": [[60, "matflow.SGEPosix.process_resources"]], "state_lookup (matflow.sgeposix attribute)": [[60, "matflow.SGEPosix.state_lookup"]], "wait_for_jobscripts() (matflow.sgeposix method)": [[60, "matflow.SGEPosix.wait_for_jobscripts"]], "schemainput (class in matflow)": [[61, "matflow.SchemaInput"]], "all_labelled_types (matflow.schemainput property)": [[61, "matflow.SchemaInput.all_labelled_types"]], "app (matflow.schemainput attribute)": [[61, "matflow.SchemaInput.app"]], "default_value (matflow.schemainput property)": [[61, "matflow.SchemaInput.default_value"]], "from_json_like() (matflow.schemainput class method)": [[61, "matflow.SchemaInput.from_json_like"]], "input_or_output (matflow.schemainput property)": [[61, "matflow.SchemaInput.input_or_output"]], "labelled_info() (matflow.schemainput method)": [[61, "matflow.SchemaInput.labelled_info"]], "name (matflow.schemainput property)": [[61, "matflow.SchemaInput.name"]], "single_label (matflow.schemainput property)": [[61, "matflow.SchemaInput.single_label"]], "single_labelled_data (matflow.schemainput property)": [[61, "matflow.SchemaInput.single_labelled_data"]], "single_labelled_type (matflow.schemainput property)": [[61, "matflow.SchemaInput.single_labelled_type"]], "task_schema (matflow.schemainput property)": [[61, "matflow.SchemaInput.task_schema"]], "to_dict() (matflow.schemainput method)": [[61, "matflow.SchemaInput.to_dict"]], "to_json_like() (matflow.schemainput method)": [[61, "matflow.SchemaInput.to_json_like"]], "typ (matflow.schemainput property)": [[61, "matflow.SchemaInput.typ"]], "schemaoutput (class in matflow)": [[62, "matflow.SchemaOutput"]], "app (matflow.schemaoutput attribute)": [[62, "matflow.SchemaOutput.app"]], "from_json_like() (matflow.schemaoutput class method)": [[62, "matflow.SchemaOutput.from_json_like"]], "input_or_output (matflow.schemaoutput property)": [[62, "matflow.SchemaOutput.input_or_output"]], "name (matflow.schemaoutput property)": [[62, "matflow.SchemaOutput.name"]], "parameter (matflow.schemaoutput attribute)": [[62, "matflow.SchemaOutput.parameter"]], "propagation_mode (matflow.schemaoutput attribute)": [[62, "matflow.SchemaOutput.propagation_mode"]], "to_dict() (matflow.schemaoutput method)": [[62, "matflow.SchemaOutput.to_dict"]], "to_json_like() (matflow.schemaoutput method)": [[62, "matflow.SchemaOutput.to_json_like"]], "typ (matflow.schemaoutput property)": [[62, "matflow.SchemaOutput.typ"]], "schemaparameter (class in matflow)": [[63, "matflow.SchemaParameter"]], "app (matflow.schemaparameter attribute)": [[63, "matflow.SchemaParameter.app"]], "from_json_like() (matflow.schemaparameter class method)": [[63, "matflow.SchemaParameter.from_json_like"]], "name (matflow.schemaparameter property)": [[63, "matflow.SchemaParameter.name"]], "to_dict() (matflow.schemaparameter method)": [[63, "matflow.SchemaParameter.to_dict"]], "to_json_like() (matflow.schemaparameter method)": [[63, "matflow.SchemaParameter.to_json_like"]], "typ (matflow.schemaparameter property)": [[63, "matflow.SchemaParameter.typ"]], "default_array_item_var (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.DEFAULT_ARRAY_ITEM_VAR"]], "default_array_switch (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.DEFAULT_ARRAY_SWITCH"]], "default_del_cmd (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.DEFAULT_DEL_CMD"]], "default_js_cmd (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.DEFAULT_JS_CMD"]], "default_login_nodes_cmd (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.DEFAULT_LOGIN_NODES_CMD"]], "default_login_node_match (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.DEFAULT_LOGIN_NODE_MATCH"]], "default_shebang_args (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.DEFAULT_SHELL_ARGS"]], "default_shell_executable (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.DEFAULT_SHELL_EXECUTABLE"]], "default_show_cmd (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.DEFAULT_SHOW_CMD"]], "default_submit_cmd (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.DEFAULT_SUBMIT_CMD"]], "slurmposix (class in matflow)": [[64, "matflow.SlurmPosix"]], "app (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.app"]], "cancel_jobs() (matflow.slurmposix method)": [[64, "matflow.SlurmPosix.cancel_jobs"]], "format_array_request() (matflow.slurmposix method)": [[64, "matflow.SlurmPosix.format_array_request"]], "format_core_request_lines() (matflow.slurmposix method)": [[64, "matflow.SlurmPosix.format_core_request_lines"]], "format_options() (matflow.slurmposix method)": [[64, "matflow.SlurmPosix.format_options"]], "format_std_stream_file_option_lines() (matflow.slurmposix method)": [[64, "matflow.SlurmPosix.format_std_stream_file_option_lines"]], "format_switch() (matflow.slurmposix method)": [[64, "matflow.SlurmPosix.format_switch"]], "get_job_state_info() (matflow.slurmposix method)": [[64, "matflow.SlurmPosix.get_job_state_info"]], "get_submit_command() (matflow.slurmposix method)": [[64, "matflow.SlurmPosix.get_submit_command"]], "get_version_info() (matflow.slurmposix method)": [[64, "matflow.SlurmPosix.get_version_info"]], "is_jobscript_active() (matflow.slurmposix method)": [[64, "matflow.SlurmPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.slurmposix static method)": [[64, "matflow.SlurmPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.slurmposix method)": [[64, "matflow.SlurmPosix.parse_submission_output"]], "process_resources() (matflow.slurmposix class method)": [[64, "matflow.SlurmPosix.process_resources"]], "state_lookup (matflow.slurmposix attribute)": [[64, "matflow.SlurmPosix.state_lookup"]], "wait_for_jobscripts() (matflow.slurmposix method)": [[64, "matflow.SlurmPosix.wait_for_jobscripts"]], "subparameter (class in matflow)": [[65, "matflow.SubParameter"]], "address (matflow.subparameter attribute)": [[65, "matflow.SubParameter.address"]], "parameter (matflow.subparameter attribute)": [[65, "matflow.SubParameter.parameter"]], "ears_by_elements (matflow.submission property)": [[66, "matflow.Submission.EARs_by_elements"]], "js_parallelism (matflow.submission property)": [[66, "matflow.Submission.JS_parallelism"]], "submission (class in matflow)": [[66, "matflow.Submission"]], "abort_ears_file_name (matflow.submission property)": [[66, "matflow.Submission.abort_EARs_file_name"]], "abort_ears_file_path (matflow.submission property)": [[66, "matflow.Submission.abort_EARs_file_path"]], "all_ear_ids (matflow.submission property)": [[66, "matflow.Submission.all_EAR_IDs"]], "all_ears (matflow.submission property)": [[66, "matflow.Submission.all_EARs"]], "app (matflow.submission attribute)": [[66, "matflow.Submission.app"]], "cancel() (matflow.submission method)": [[66, "matflow.Submission.cancel"]], "end_time (matflow.submission property)": [[66, "matflow.Submission.end_time"]], "from_json_like() (matflow.submission class method)": [[66, "matflow.Submission.from_json_like"]], "get_active_jobscripts() (matflow.submission method)": [[66, "matflow.Submission.get_active_jobscripts"]], "get_end_time() (matflow.submission method)": [[66, "matflow.Submission.get_end_time"]], "get_start_time() (matflow.submission method)": [[66, "matflow.Submission.get_start_time"]], "get_unique_schedulers() (matflow.submission method)": [[66, "matflow.Submission.get_unique_schedulers"]], "get_unique_schedulers_of_jobscripts() (matflow.submission static method)": [[66, "matflow.Submission.get_unique_schedulers_of_jobscripts"]], "get_unique_shells() (matflow.submission method)": [[66, "matflow.Submission.get_unique_shells"]], "index (matflow.submission property)": [[66, "matflow.Submission.index"]], "jobscript_indices (matflow.submission property)": [[66, "matflow.Submission.jobscript_indices"]], "jobscripts (matflow.submission property)": [[66, "matflow.Submission.jobscripts"]], "needs_submit (matflow.submission property)": [[66, "matflow.Submission.needs_submit"]], "outstanding_jobscripts (matflow.submission property)": [[66, "matflow.Submission.outstanding_jobscripts"]], "path (matflow.submission property)": [[66, "matflow.Submission.path"]], "start_time (matflow.submission property)": [[66, "matflow.Submission.start_time"]], "status (matflow.submission property)": [[66, "matflow.Submission.status"]], "submission_parts (matflow.submission property)": [[66, "matflow.Submission.submission_parts"]], "submit() (matflow.submission method)": [[66, "matflow.Submission.submit"]], "submitted_jobscripts (matflow.submission property)": [[66, "matflow.Submission.submitted_jobscripts"]], "to_dict() (matflow.submission method)": [[66, "matflow.Submission.to_dict"]], "to_json_like() (matflow.submission method)": [[66, "matflow.Submission.to_json_like"]], "workflow (matflow.submission property)": [[66, "matflow.Submission.workflow"]], "task (class in matflow)": [[67, "matflow.Task"]], "add_group() (matflow.task method)": [[67, "matflow.Task.add_group"]], "all_schema_actions() (matflow.task method)": [[67, "matflow.Task.all_schema_actions"]], "all_schema_input_normalised_paths (matflow.task property)": [[67, "matflow.Task.all_schema_input_normalised_paths"]], "all_schema_input_types (matflow.task property)": [[67, "matflow.Task.all_schema_input_types"]], "all_schema_inputs (matflow.task property)": [[67, "matflow.Task.all_schema_inputs"]], "all_schema_output_types (matflow.task property)": [[67, "matflow.Task.all_schema_output_types"]], "all_schema_outputs (matflow.task property)": [[67, "matflow.Task.all_schema_outputs"]], "all_sourced_normalised_paths (matflow.task property)": [[67, "matflow.Task.all_sourced_normalised_paths"]], "app (matflow.task attribute)": [[67, "matflow.Task.app"]], "defined_input_types (matflow.task property)": [[67, "matflow.Task.defined_input_types"]], "dir_name (matflow.task property)": [[67, "matflow.Task.dir_name"]], "element_sets (matflow.task property)": [[67, "matflow.Task.element_sets"]], "from_json_like() (matflow.task class method)": [[67, "matflow.Task.from_json_like"]], "get_available_task_input_sources() (matflow.task method)": [[67, "matflow.Task.get_available_task_input_sources"]], "get_input_statuses() (matflow.task method)": [[67, "matflow.Task.get_input_statuses"]], "get_param_provided_element_sets() (matflow.task method)": [[67, "matflow.Task.get_param_provided_element_sets"]], "get_schema_action() (matflow.task method)": [[67, "matflow.Task.get_schema_action"]], "get_task_unique_names() (matflow.task static method)": [[67, "matflow.Task.get_task_unique_names"]], "index (matflow.task property)": [[67, "matflow.Task.index"]], "insert_id (matflow.task property)": [[67, "matflow.Task.insert_ID"]], "is_input_type_required() (matflow.task method)": [[67, "matflow.Task.is_input_type_required"]], "name (matflow.task property)": [[67, "matflow.Task.name"]], "non_universal_input_types (matflow.task property)": [[67, "matflow.Task.non_universal_input_types"]], "num_all_schema_actions (matflow.task property)": [[67, "matflow.Task.num_all_schema_actions"]], "num_element_sets (matflow.task property)": [[67, "matflow.Task.num_element_sets"]], "objective (matflow.task property)": [[67, "matflow.Task.objective"]], "output_labels (matflow.task property)": [[67, "matflow.Task.output_labels"]], "prepare_element_resolution() (matflow.task method)": [[67, "matflow.Task.prepare_element_resolution"]], "provides_parameters() (matflow.task method)": [[67, "matflow.Task.provides_parameters"]], "schemas (matflow.task property)": [[67, "matflow.Task.schemas"]], "set_sequence_parameters() (matflow.task method)": [[67, "matflow.Task.set_sequence_parameters"]], "to_dict() (matflow.task method)": [[67, "matflow.Task.to_dict"]], "to_json_like() (matflow.task method)": [[67, "matflow.Task.to_json_like"]], "to_persistent() (matflow.task method)": [[67, "matflow.Task.to_persistent"]], "undefined_input_types (matflow.task property)": [[67, "matflow.Task.undefined_input_types"]], "undefined_inputs (matflow.task property)": [[67, "matflow.Task.undefined_inputs"]], "universal_input_types (matflow.task property)": [[67, "matflow.Task.universal_input_types"]], "unsourced_inputs (matflow.task property)": [[67, "matflow.Task.unsourced_inputs"]], "taskinputparameters (class in matflow)": [[68, "matflow.TaskInputParameters"]], "task (matflow.taskinputparameters attribute)": [[68, "matflow.TaskInputParameters.task"]], "tasklist (class in matflow)": [[69, "matflow.TaskList"]], "add_object() (matflow.tasklist method)": [[69, "matflow.TaskList.add_object"]], "add_objects() (matflow.tasklist method)": [[69, "matflow.TaskList.add_objects"]], "from_json_like() (matflow.tasklist class method)": [[69, "matflow.TaskList.from_json_like"]], "get() (matflow.tasklist method)": [[69, "matflow.TaskList.get"]], "get_all() (matflow.tasklist method)": [[69, "matflow.TaskList.get_all"]], "list_attrs() (matflow.tasklist method)": [[69, "matflow.TaskList.list_attrs"]], "to_dict() (matflow.tasklist method)": [[69, "matflow.TaskList.to_dict"]], "to_json_like() (matflow.tasklist method)": [[69, "matflow.TaskList.to_json_like"]], "taskobjective (class in matflow)": [[70, "matflow.TaskObjective"]], "app (matflow.taskobjective attribute)": [[70, "matflow.TaskObjective.app"]], "from_json_like() (matflow.taskobjective class method)": [[70, "matflow.TaskObjective.from_json_like"]], "name (matflow.taskobjective attribute)": [[70, "matflow.TaskObjective.name"]], "to_dict() (matflow.taskobjective method)": [[70, "matflow.TaskObjective.to_dict"]], "to_json_like() (matflow.taskobjective method)": [[70, "matflow.TaskObjective.to_json_like"]], "taskoutputparameters (class in matflow)": [[71, "matflow.TaskOutputParameters"]], "task (matflow.taskoutputparameters attribute)": [[71, "matflow.TaskOutputParameters.task"]], "taskschema (class in matflow)": [[72, "matflow.TaskSchema"]], "app (matflow.taskschema attribute)": [[72, "matflow.TaskSchema.app"]], "from_json_like() (matflow.taskschema class method)": [[72, "matflow.TaskSchema.from_json_like"]], "get_by_key() (matflow.taskschema class method)": [[72, "matflow.TaskSchema.get_by_key"]], "get_key() (matflow.taskschema method)": [[72, "matflow.TaskSchema.get_key"]], "get_parameter_dependence() (matflow.taskschema method)": [[72, "matflow.TaskSchema.get_parameter_dependence"]], "ignore_invalid_actions() (matflow.taskschema class method)": [[72, "matflow.TaskSchema.ignore_invalid_actions"]], "info (matflow.taskschema property)": [[72, "matflow.TaskSchema.info"]], "input_types (matflow.taskschema property)": [[72, "matflow.TaskSchema.input_types"]], "make_persistent() (matflow.taskschema method)": [[72, "matflow.TaskSchema.make_persistent"]], "name (matflow.taskschema property)": [[72, "matflow.TaskSchema.name"]], "output_types (matflow.taskschema property)": [[72, "matflow.TaskSchema.output_types"]], "provides_parameters (matflow.taskschema property)": [[72, "matflow.TaskSchema.provides_parameters"]], "task_template (matflow.taskschema property)": [[72, "matflow.TaskSchema.task_template"]], "to_dict() (matflow.taskschema method)": [[72, "matflow.TaskSchema.to_dict"]], "to_json_like() (matflow.taskschema method)": [[72, "matflow.TaskSchema.to_json_like"]], "taskschemaslist (class in matflow)": [[73, "matflow.TaskSchemasList"]], "add_object() (matflow.taskschemaslist method)": [[73, "matflow.TaskSchemasList.add_object"]], "add_objects() (matflow.taskschemaslist method)": [[73, "matflow.TaskSchemasList.add_objects"]], "from_json_like() (matflow.taskschemaslist class method)": [[73, "matflow.TaskSchemasList.from_json_like"]], "get() (matflow.taskschemaslist method)": [[73, "matflow.TaskSchemasList.get"]], "get_all() (matflow.taskschemaslist method)": [[73, "matflow.TaskSchemasList.get_all"]], "list_attrs() (matflow.taskschemaslist method)": [[73, "matflow.TaskSchemasList.list_attrs"]], "to_dict() (matflow.taskschemaslist method)": [[73, "matflow.TaskSchemasList.to_dict"]], "to_json_like() (matflow.taskschemaslist method)": [[73, "matflow.TaskSchemasList.to_json_like"]], "any (matflow.tasksourcetype attribute)": [[74, "matflow.TaskSourceType.ANY"]], "input (matflow.tasksourcetype attribute)": [[74, "matflow.TaskSourceType.INPUT"]], "output (matflow.tasksourcetype attribute)": [[74, "matflow.TaskSourceType.OUTPUT"]], "tasksourcetype (class in matflow)": [[74, "matflow.TaskSourceType"]], "tasktemplatelist (class in matflow)": [[75, "matflow.TaskTemplateList"]], "add_object() (matflow.tasktemplatelist method)": [[75, "matflow.TaskTemplateList.add_object"]], "add_objects() (matflow.tasktemplatelist method)": [[75, "matflow.TaskTemplateList.add_objects"]], "from_json_like() (matflow.tasktemplatelist class method)": [[75, "matflow.TaskTemplateList.from_json_like"]], "get() (matflow.tasktemplatelist method)": [[75, "matflow.TaskTemplateList.get"]], "get_all() (matflow.tasktemplatelist method)": [[75, "matflow.TaskTemplateList.get_all"]], "list_attrs() (matflow.tasktemplatelist method)": [[75, "matflow.TaskTemplateList.list_attrs"]], "to_dict() (matflow.tasktemplatelist method)": [[75, "matflow.TaskTemplateList.to_dict"]], "to_json_like() (matflow.tasktemplatelist method)": [[75, "matflow.TaskTemplateList.to_json_like"]], "valueperturbation (class in matflow)": [[76, "matflow.ValuePerturbation"]], "additive_factor (matflow.valueperturbation attribute)": [[76, "matflow.ValuePerturbation.additive_factor"]], "app (matflow.valueperturbation attribute)": [[76, "matflow.ValuePerturbation.app"]], "from_json_like() (matflow.valueperturbation class method)": [[76, "matflow.ValuePerturbation.from_json_like"]], "from_spec() (matflow.valueperturbation class method)": [[76, "matflow.ValuePerturbation.from_spec"]], "make_persistent() (matflow.valueperturbation method)": [[76, "matflow.ValuePerturbation.make_persistent"]], "multiplicative_factor (matflow.valueperturbation attribute)": [[76, "matflow.ValuePerturbation.multiplicative_factor"]], "name (matflow.valueperturbation attribute)": [[76, "matflow.ValuePerturbation.name"]], "path (matflow.valueperturbation attribute)": [[76, "matflow.ValuePerturbation.path"]], "to_dict() (matflow.valueperturbation method)": [[76, "matflow.ValuePerturbation.to_dict"]], "to_json_like() (matflow.valueperturbation method)": [[76, "matflow.ValuePerturbation.to_json_like"]], "value (matflow.valueperturbation property)": [[76, "matflow.ValuePerturbation.value"]], "workflow (matflow.valueperturbation property)": [[76, "matflow.ValuePerturbation.workflow"]], "valuesequence (class in matflow)": [[77, "matflow.ValueSequence"]], "app (matflow.valuesequence attribute)": [[77, "matflow.ValueSequence.app"]], "from_geometric_space() (matflow.valuesequence class method)": [[77, "matflow.ValueSequence.from_geometric_space"]], "from_json_like() (matflow.valuesequence class method)": [[77, "matflow.ValueSequence.from_json_like"]], "from_linear_space() (matflow.valuesequence class method)": [[77, "matflow.ValueSequence.from_linear_space"]], "from_log_space() (matflow.valuesequence class method)": [[77, "matflow.ValueSequence.from_log_space"]], "from_range() (matflow.valuesequence class method)": [[77, "matflow.ValueSequence.from_range"]], "input_path (matflow.valuesequence property)": [[77, "matflow.ValueSequence.input_path"]], "input_type (matflow.valuesequence property)": [[77, "matflow.ValueSequence.input_type"]], "is_sub_value (matflow.valuesequence property)": [[77, "matflow.ValueSequence.is_sub_value"]], "labelled_type (matflow.valuesequence property)": [[77, "matflow.ValueSequence.labelled_type"]], "make_persistent() (matflow.valuesequence method)": [[77, "matflow.ValueSequence.make_persistent"]], "normalised_inputs_path (matflow.valuesequence property)": [[77, "matflow.ValueSequence.normalised_inputs_path"]], "normalised_path (matflow.valuesequence property)": [[77, "matflow.ValueSequence.normalised_path"]], "parameter (matflow.valuesequence property)": [[77, "matflow.ValueSequence.parameter"]], "path_split (matflow.valuesequence property)": [[77, "matflow.ValueSequence.path_split"]], "path_type (matflow.valuesequence property)": [[77, "matflow.ValueSequence.path_type"]], "resource_scope (matflow.valuesequence property)": [[77, "matflow.ValueSequence.resource_scope"]], "to_dict() (matflow.valuesequence method)": [[77, "matflow.ValueSequence.to_dict"]], "to_json_like() (matflow.valuesequence method)": [[77, "matflow.ValueSequence.to_json_like"]], "values (matflow.valuesequence property)": [[77, "matflow.ValueSequence.values"]], "workflow (matflow.valuesequence property)": [[77, "matflow.ValueSequence.workflow"]], "workflow (class in matflow)": [[78, "matflow.Workflow"]], "abort_run() (matflow.workflow method)": [[78, "matflow.Workflow.abort_run"]], "add_loop() (matflow.workflow method)": [[78, "matflow.Workflow.add_loop"]], "add_submission() (matflow.workflow method)": [[78, "matflow.Workflow.add_submission"]], "add_task() (matflow.workflow method)": [[78, "matflow.Workflow.add_task"]], "add_task_after() (matflow.workflow method)": [[78, "matflow.Workflow.add_task_after"]], "add_task_before() (matflow.workflow method)": [[78, "matflow.Workflow.add_task_before"]], "app (matflow.workflow attribute)": [[78, "matflow.Workflow.app"]], "artifacts_path (matflow.workflow property)": [[78, "matflow.Workflow.artifacts_path"]], "batch_update() (matflow.workflow method)": [[78, "matflow.Workflow.batch_update"]], "cancel() (matflow.workflow method)": [[78, "matflow.Workflow.cancel"]], "check_parameters_exist() (matflow.workflow method)": [[78, "matflow.Workflow.check_parameters_exist"]], "copy() (matflow.workflow method)": [[78, "matflow.Workflow.copy"]], "creation_info (matflow.workflow property)": [[78, "matflow.Workflow.creation_info"]], "delete() (matflow.workflow method)": [[78, "matflow.Workflow.delete"]], "elements() (matflow.workflow method)": [[78, "matflow.Workflow.elements"]], "execution_path (matflow.workflow property)": [[78, "matflow.Workflow.execution_path"]], "from_json_file() (matflow.workflow class method)": [[78, "matflow.Workflow.from_JSON_file"]], "from_json_string() (matflow.workflow class method)": [[78, "matflow.Workflow.from_JSON_string"]], "from_yaml_file() (matflow.workflow class method)": [[78, "matflow.Workflow.from_YAML_file"]], "from_yaml_string() (matflow.workflow class method)": [[78, "matflow.Workflow.from_YAML_string"]], "from_file() (matflow.workflow class method)": [[78, "matflow.Workflow.from_file"]], "from_template() (matflow.workflow class method)": [[78, "matflow.Workflow.from_template"]], "from_template_data() (matflow.workflow class method)": [[78, "matflow.Workflow.from_template_data"]], "fs_path (matflow.workflow property)": [[78, "matflow.Workflow.fs_path"]], "get_ear_ids_of_tasks() (matflow.workflow method)": [[78, "matflow.Workflow.get_EAR_IDs_of_tasks"]], "get_ear_skipped() (matflow.workflow method)": [[78, "matflow.Workflow.get_EAR_skipped"]], "get_ears_from_ids() (matflow.workflow method)": [[78, "matflow.Workflow.get_EARs_from_IDs"]], "get_ears_of_tasks() (matflow.workflow method)": [[78, "matflow.Workflow.get_EARs_of_tasks"]], "get_all_ears() (matflow.workflow method)": [[78, "matflow.Workflow.get_all_EARs"]], "get_all_element_iterations() (matflow.workflow method)": [[78, "matflow.Workflow.get_all_element_iterations"]], "get_all_elements() (matflow.workflow method)": [[78, "matflow.Workflow.get_all_elements"]], "get_all_parameter_data() (matflow.workflow method)": [[78, "matflow.Workflow.get_all_parameter_data"]], "get_all_parameters() (matflow.workflow method)": [[78, "matflow.Workflow.get_all_parameters"]], "get_element_ids_from_ear_ids() (matflow.workflow method)": [[78, "matflow.Workflow.get_element_IDs_from_EAR_IDs"]], "get_element_iteration_ids_from_ear_ids() (matflow.workflow method)": [[78, "matflow.Workflow.get_element_iteration_IDs_from_EAR_IDs"]], "get_element_iterations_from_ids() (matflow.workflow method)": [[78, "matflow.Workflow.get_element_iterations_from_IDs"]], "get_element_iterations_of_tasks() (matflow.workflow method)": [[78, "matflow.Workflow.get_element_iterations_of_tasks"]], "get_elements_from_ids() (matflow.workflow method)": [[78, "matflow.Workflow.get_elements_from_IDs"]], "get_iteration_task_pathway() (matflow.workflow method)": [[78, "matflow.Workflow.get_iteration_task_pathway"]], "get_parameter() (matflow.workflow method)": [[78, "matflow.Workflow.get_parameter"]], "get_parameter_data() (matflow.workflow method)": [[78, "matflow.Workflow.get_parameter_data"]], "get_parameter_set_statuses() (matflow.workflow method)": [[78, "matflow.Workflow.get_parameter_set_statuses"]], "get_parameter_source() (matflow.workflow method)": [[78, "matflow.Workflow.get_parameter_source"]], "get_parameter_sources() (matflow.workflow method)": [[78, "matflow.Workflow.get_parameter_sources"]], "get_parameters() (matflow.workflow method)": [[78, "matflow.Workflow.get_parameters"]], "get_running_elements() (matflow.workflow method)": [[78, "matflow.Workflow.get_running_elements"]], "get_running_runs() (matflow.workflow method)": [[78, "matflow.Workflow.get_running_runs"]], "get_store_ears() (matflow.workflow method)": [[78, "matflow.Workflow.get_store_EARs"]], "get_store_element_iterations() (matflow.workflow method)": [[78, "matflow.Workflow.get_store_element_iterations"]], "get_store_elements() (matflow.workflow method)": [[78, "matflow.Workflow.get_store_elements"]], "get_store_tasks() (matflow.workflow method)": [[78, "matflow.Workflow.get_store_tasks"]], "get_task_ids_from_element_ids() (matflow.workflow method)": [[78, "matflow.Workflow.get_task_IDs_from_element_IDs"]], "get_task_elements() (matflow.workflow method)": [[78, "matflow.Workflow.get_task_elements"]], "get_task_unique_names() (matflow.workflow method)": [[78, "matflow.Workflow.get_task_unique_names"]], "id_ (matflow.workflow property)": [[78, "matflow.Workflow.id_"]], "input_files_path (matflow.workflow property)": [[78, "matflow.Workflow.input_files_path"]], "is_parameter_set() (matflow.workflow method)": [[78, "matflow.Workflow.is_parameter_set"]], "loops (matflow.workflow property)": [[78, "matflow.Workflow.loops"]], "name (matflow.workflow property)": [[78, "matflow.Workflow.name"]], "num_ears (matflow.workflow property)": [[78, "matflow.Workflow.num_EARs"]], "num_added_tasks (matflow.workflow property)": [[78, "matflow.Workflow.num_added_tasks"]], "num_element_iterations (matflow.workflow property)": [[78, "matflow.Workflow.num_element_iterations"]], "num_elements (matflow.workflow property)": [[78, "matflow.Workflow.num_elements"]], "num_loops (matflow.workflow property)": [[78, "matflow.Workflow.num_loops"]], "num_submissions (matflow.workflow property)": [[78, "matflow.Workflow.num_submissions"]], "num_tasks (matflow.workflow property)": [[78, "matflow.Workflow.num_tasks"]], "resolve_jobscripts() (matflow.workflow method)": [[78, "matflow.Workflow.resolve_jobscripts"]], "save_parameter() (matflow.workflow method)": [[78, "matflow.Workflow.save_parameter"]], "set_ear_end() (matflow.workflow method)": [[78, "matflow.Workflow.set_EAR_end"]], "set_ear_skip() (matflow.workflow method)": [[78, "matflow.Workflow.set_EAR_skip"]], "set_ear_start() (matflow.workflow method)": [[78, "matflow.Workflow.set_EAR_start"]], "set_ear_submission_index() (matflow.workflow method)": [[78, "matflow.Workflow.set_EAR_submission_index"]], "set_ears_initialised() (matflow.workflow method)": [[78, "matflow.Workflow.set_EARs_initialised"]], "set_parameter_value() (matflow.workflow method)": [[78, "matflow.Workflow.set_parameter_value"]], "show_all_ear_statuses() (matflow.workflow method)": [[78, "matflow.Workflow.show_all_EAR_statuses"]], "store_format (matflow.workflow property)": [[78, "matflow.Workflow.store_format"]], "submissions (matflow.workflow property)": [[78, "matflow.Workflow.submissions"]], "submissions_path (matflow.workflow property)": [[78, "matflow.Workflow.submissions_path"]], "submit() (matflow.workflow method)": [[78, "matflow.Workflow.submit"]], "task_artifacts_path (matflow.workflow property)": [[78, "matflow.Workflow.task_artifacts_path"]], "tasks (matflow.workflow property)": [[78, "matflow.Workflow.tasks"]], "template (matflow.workflow property)": [[78, "matflow.Workflow.template"]], "template_components (matflow.workflow property)": [[78, "matflow.Workflow.template_components"]], "temporary_rename() (matflow.workflow class method)": [[78, "matflow.Workflow.temporary_rename"]], "to_zip() (matflow.workflow method)": [[78, "matflow.Workflow.to_zip"]], "ts_fmt (matflow.workflow property)": [[78, "matflow.Workflow.ts_fmt"]], "ts_name_fmt (matflow.workflow property)": [[78, "matflow.Workflow.ts_name_fmt"]], "wait() (matflow.workflow method)": [[78, "matflow.Workflow.wait"]], "write_commands() (matflow.workflow method)": [[78, "matflow.Workflow.write_commands"]], "workflowblueprint (class in matflow)": [[79, "matflow.WorkflowBlueprint"]], "workflow_template (matflow.workflowblueprint attribute)": [[79, "matflow.WorkflowBlueprint.workflow_template"]], "workflowloop (class in matflow)": [[80, "matflow.WorkflowLoop"]], "add_iteration() (matflow.workflowloop method)": [[80, "matflow.WorkflowLoop.add_iteration"]], "app (matflow.workflowloop attribute)": [[80, "matflow.WorkflowLoop.app"]], "get_child_loops() (matflow.workflowloop method)": [[80, "matflow.WorkflowLoop.get_child_loops"]], "get_parent_loops() (matflow.workflowloop method)": [[80, "matflow.WorkflowLoop.get_parent_loops"]], "index (matflow.workflowloop property)": [[80, "matflow.WorkflowLoop.index"]], "iterable_parameters (matflow.workflowloop property)": [[80, "matflow.WorkflowLoop.iterable_parameters"]], "name (matflow.workflowloop property)": [[80, "matflow.WorkflowLoop.name"]], "new_empty_loop() (matflow.workflowloop class method)": [[80, "matflow.WorkflowLoop.new_empty_loop"]], "num_added_iterations (matflow.workflowloop property)": [[80, "matflow.WorkflowLoop.num_added_iterations"]], "num_iterations (matflow.workflowloop property)": [[80, "matflow.WorkflowLoop.num_iterations"]], "task_indices (matflow.workflowloop property)": [[80, "matflow.WorkflowLoop.task_indices"]], "task_insert_ids (matflow.workflowloop property)": [[80, "matflow.WorkflowLoop.task_insert_IDs"]], "task_objects (matflow.workflowloop property)": [[80, "matflow.WorkflowLoop.task_objects"]], "template (matflow.workflowloop property)": [[80, "matflow.WorkflowLoop.template"]], "workflow (matflow.workflowloop property)": [[80, "matflow.WorkflowLoop.workflow"]], "workflowlooplist (class in matflow)": [[81, "matflow.WorkflowLoopList"]], "add_object() (matflow.workflowlooplist method)": [[81, "matflow.WorkflowLoopList.add_object"]], "add_objects() (matflow.workflowlooplist method)": [[81, "matflow.WorkflowLoopList.add_objects"]], "app (matflow.workflowlooplist attribute)": [[81, "matflow.WorkflowLoopList.app"]], "from_json_like() (matflow.workflowlooplist class method)": [[81, "matflow.WorkflowLoopList.from_json_like"]], "get() (matflow.workflowlooplist method)": [[81, "matflow.WorkflowLoopList.get"]], "get_all() (matflow.workflowlooplist method)": [[81, "matflow.WorkflowLoopList.get_all"]], "list_attrs() (matflow.workflowlooplist method)": [[81, "matflow.WorkflowLoopList.list_attrs"]], "to_dict() (matflow.workflowlooplist method)": [[81, "matflow.WorkflowLoopList.to_dict"]], "to_json_like() (matflow.workflowlooplist method)": [[81, "matflow.WorkflowLoopList.to_json_like"]], "workflowtask (class in matflow)": [[82, "matflow.WorkflowTask"]], "add_elements() (matflow.workflowtask method)": [[82, "matflow.WorkflowTask.add_elements"]], "app (matflow.workflowtask attribute)": [[82, "matflow.WorkflowTask.app"]], "dir_name (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.dir_name"]], "downstream_tasks (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.downstream_tasks"]], "element_ids (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.element_IDs"]], "elements (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.elements"]], "ensure_input_sources() (matflow.workflowtask method)": [[82, "matflow.WorkflowTask.ensure_input_sources"]], "generate_new_elements() (matflow.workflowtask method)": [[82, "matflow.WorkflowTask.generate_new_elements"]], "get() (matflow.workflowtask method)": [[82, "matflow.WorkflowTask.get"]], "get_all_element_iterations() (matflow.workflowtask method)": [[82, "matflow.WorkflowTask.get_all_element_iterations"]], "get_dependent_elements() (matflow.workflowtask method)": [[82, "matflow.WorkflowTask.get_dependent_elements"]], "get_dependent_tasks() (matflow.workflowtask method)": [[82, "matflow.WorkflowTask.get_dependent_tasks"]], "get_dir_name() (matflow.workflowtask method)": [[82, "matflow.WorkflowTask.get_dir_name"]], "get_element_dependencies() (matflow.workflowtask method)": [[82, "matflow.WorkflowTask.get_element_dependencies"]], "get_task_dependencies() (matflow.workflowtask method)": [[82, "matflow.WorkflowTask.get_task_dependencies"]], "index (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.index"]], "initialise_ears() (matflow.workflowtask method)": [[82, "matflow.WorkflowTask.initialise_EARs"]], "inputs (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.inputs"]], "insert_id (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.insert_ID"]], "name (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.name"]], "new_empty_task() (matflow.workflowtask class method)": [[82, "matflow.WorkflowTask.new_empty_task"]], "num_actions (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.num_actions"]], "num_element_sets (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.num_element_sets"]], "num_elements (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.num_elements"]], "outputs (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.outputs"]], "resolve_element_data_indices() (matflow.workflowtask static method)": [[82, "matflow.WorkflowTask.resolve_element_data_indices"]], "template (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.template"]], "test_action_rule() (matflow.workflowtask method)": [[82, "matflow.WorkflowTask.test_action_rule"]], "unique_name (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.unique_name"]], "upstream_tasks (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.upstream_tasks"]], "workflow (matflow.workflowtask property)": [[82, "matflow.WorkflowTask.workflow"]], "workflowtasklist (class in matflow)": [[83, "matflow.WorkflowTaskList"]], "add_object() (matflow.workflowtasklist method)": [[83, "matflow.WorkflowTaskList.add_object"]], "add_objects() (matflow.workflowtasklist method)": [[83, "matflow.WorkflowTaskList.add_objects"]], "app (matflow.workflowtasklist attribute)": [[83, "matflow.WorkflowTaskList.app"]], "from_json_like() (matflow.workflowtasklist class method)": [[83, "matflow.WorkflowTaskList.from_json_like"]], "get() (matflow.workflowtasklist method)": [[83, "matflow.WorkflowTaskList.get"]], "get_all() (matflow.workflowtasklist method)": [[83, "matflow.WorkflowTaskList.get_all"]], "list_attrs() (matflow.workflowtasklist method)": [[83, "matflow.WorkflowTaskList.list_attrs"]], "to_dict() (matflow.workflowtasklist method)": [[83, "matflow.WorkflowTaskList.to_dict"]], "to_json_like() (matflow.workflowtasklist method)": [[83, "matflow.WorkflowTaskList.to_json_like"]], "workflowtemplate (class in matflow)": [[84, "matflow.WorkflowTemplate"]], "app (matflow.workflowtemplate attribute)": [[84, "matflow.WorkflowTemplate.app"]], "doc (matflow.workflowtemplate attribute)": [[84, "matflow.WorkflowTemplate.doc"]], "from_json_file() (matflow.workflowtemplate class method)": [[84, "matflow.WorkflowTemplate.from_JSON_file"]], "from_json_string() (matflow.workflowtemplate class method)": [[84, "matflow.WorkflowTemplate.from_JSON_string"]], "from_yaml_file() (matflow.workflowtemplate class method)": [[84, "matflow.WorkflowTemplate.from_YAML_file"]], "from_yaml_string() (matflow.workflowtemplate class method)": [[84, "matflow.WorkflowTemplate.from_YAML_string"]], "from_file() (matflow.workflowtemplate class method)": [[84, "matflow.WorkflowTemplate.from_file"]], "from_json_like() (matflow.workflowtemplate class method)": [[84, "matflow.WorkflowTemplate.from_json_like"]], "loops (matflow.workflowtemplate attribute)": [[84, "matflow.WorkflowTemplate.loops"]], "name (matflow.workflowtemplate attribute)": [[84, "matflow.WorkflowTemplate.name"]], "resources (matflow.workflowtemplate attribute)": [[84, "matflow.WorkflowTemplate.resources"]], "tasks (matflow.workflowtemplate attribute)": [[84, "matflow.WorkflowTemplate.tasks"]], "to_dict() (matflow.workflowtemplate method)": [[84, "matflow.WorkflowTemplate.to_dict"]], "to_json_like() (matflow.workflowtemplate method)": [[84, "matflow.WorkflowTemplate.to_json_like"]], "workflow (matflow.workflowtemplate attribute)": [[84, "matflow.WorkflowTemplate.workflow"]], "app (in module matflow)": [[85, "matflow.app"]], "cancel() (in module matflow)": [[86, "matflow.cancel"]], "matflow.cli": [[87, "module-matflow.cli"]], "get_os_info() (in module matflow)": [[88, "matflow.get_OS_info"]], "get_known_submissions() (in module matflow)": [[89, "matflow.get_known_submissions"]], "get_shell_info() (in module matflow)": [[90, "matflow.get_shell_info"]], "make_and_submit_demo_workflow() (in module matflow)": [[91, "matflow.make_and_submit_demo_workflow"]], "make_and_submit_workflow() (in module matflow)": [[92, "matflow.make_and_submit_workflow"]], "make_demo_workflow() (in module matflow)": [[93, "matflow.make_demo_workflow"]], "make_workflow() (in module matflow)": [[94, "matflow.make_workflow"]], "matflow.param_classes": [[95, "module-matflow.param_classes"]], "matflow.param_classes.load": [[96, "module-matflow.param_classes.load"]], "loadcase (class in matflow.param_classes.load)": [[97, "matflow.param_classes.load.LoadCase"]], "biaxial() (matflow.param_classes.load.loadcase class method)": [[97, "matflow.param_classes.load.LoadCase.biaxial"]], "example_uniaxial() (matflow.param_classes.load.loadcase class method)": [[97, "matflow.param_classes.load.LoadCase.example_uniaxial"]], "multistep() (matflow.param_classes.load.loadcase class method)": [[97, "matflow.param_classes.load.LoadCase.multistep"]], "num_steps (matflow.param_classes.load.loadcase property)": [[97, "matflow.param_classes.load.LoadCase.num_steps"]], "planar_2d() (matflow.param_classes.load.loadcase class method)": [[97, "matflow.param_classes.load.LoadCase.planar_2D"]], "plane_strain() (matflow.param_classes.load.loadcase class method)": [[97, "matflow.param_classes.load.LoadCase.plane_strain"]], "random_2d() (matflow.param_classes.load.loadcase class method)": [[97, "matflow.param_classes.load.LoadCase.random_2D"]], "random_3d() (matflow.param_classes.load.loadcase class method)": [[97, "matflow.param_classes.load.LoadCase.random_3D"]], "steps (matflow.param_classes.load.loadcase attribute)": [[97, "matflow.param_classes.load.LoadCase.steps"]], "to_dict() (matflow.param_classes.load.loadcase method)": [[97, "matflow.param_classes.load.LoadCase.to_dict"]], "type (matflow.param_classes.load.loadcase property)": [[97, "matflow.param_classes.load.LoadCase.type"]], "types (matflow.param_classes.load.loadcase property)": [[97, "matflow.param_classes.load.LoadCase.types"]], "uniaxial() (matflow.param_classes.load.loadcase class method)": [[97, "matflow.param_classes.load.LoadCase.uniaxial"]], "uniaxial_cyclic() (matflow.param_classes.load.loadcase class method)": [[97, "matflow.param_classes.load.LoadCase.uniaxial_cyclic"]], "loadstep (class in matflow.param_classes.load)": [[98, "matflow.param_classes.load.LoadStep"]], "biaxial() (matflow.param_classes.load.loadstep class method)": [[98, "matflow.param_classes.load.LoadStep.biaxial"]], "example_uniaxial() (matflow.param_classes.load.loadstep class method)": [[98, "matflow.param_classes.load.LoadStep.example_uniaxial"]], "method_args (matflow.param_classes.load.loadstep property)": [[98, "matflow.param_classes.load.LoadStep.method_args"]], "method_name (matflow.param_classes.load.loadstep property)": [[98, "matflow.param_classes.load.LoadStep.method_name"]], "planar_2d() (matflow.param_classes.load.loadstep class method)": [[98, "matflow.param_classes.load.LoadStep.planar_2D"]], "plane_strain() (matflow.param_classes.load.loadstep class method)": [[98, "matflow.param_classes.load.LoadStep.plane_strain"]], "random_2d() (matflow.param_classes.load.loadstep class method)": [[98, "matflow.param_classes.load.LoadStep.random_2D"]], "random_3d() (matflow.param_classes.load.loadstep class method)": [[98, "matflow.param_classes.load.LoadStep.random_3D"]], "strain_like_tensor (matflow.param_classes.load.loadstep property)": [[98, "matflow.param_classes.load.LoadStep.strain_like_tensor"]], "to_dict() (matflow.param_classes.load.loadstep method)": [[98, "matflow.param_classes.load.LoadStep.to_dict"]], "type (matflow.param_classes.load.loadstep property)": [[98, "matflow.param_classes.load.LoadStep.type"]], "uniaxial() (matflow.param_classes.load.loadstep class method)": [[98, "matflow.param_classes.load.LoadStep.uniaxial"]], "uniaxial_cyclic() (matflow.param_classes.load.loadstep class method)": [[98, "matflow.param_classes.load.LoadStep.uniaxial_cyclic"]], "def_grad_rate (matflow.param_classes.load.strainratemode attribute)": [[99, "matflow.param_classes.load.StrainRateMode.DEF_GRAD_RATE"]], "strainratemode (class in matflow.param_classes.load)": [[99, "matflow.param_classes.load.StrainRateMode"]], "vel_grad (matflow.param_classes.load.strainratemode attribute)": [[99, "matflow.param_classes.load.StrainRateMode.VEL_GRAD"]], "vel_grad_approx (matflow.param_classes.load.strainratemode attribute)": [[99, "matflow.param_classes.load.StrainRateMode.VEL_GRAD_APPROX"]], "matflow.param_classes.orientations": [[100, "module-matflow.param_classes.orientations"]], "bunge (matflow.param_classes.orientations.eulerdefinition attribute)": [[101, "matflow.param_classes.orientations.EulerDefinition.BUNGE"]], "eulerdefinition (class in matflow.param_classes.orientations)": [[101, "matflow.param_classes.orientations.EulerDefinition"]], "a (matflow.param_classes.orientations.latticedirection attribute)": [[102, "matflow.param_classes.orientations.LatticeDirection.A"]], "a_star (matflow.param_classes.orientations.latticedirection attribute)": [[102, "matflow.param_classes.orientations.LatticeDirection.A_STAR"]], "b (matflow.param_classes.orientations.latticedirection attribute)": [[102, "matflow.param_classes.orientations.LatticeDirection.B"]], "b_star (matflow.param_classes.orientations.latticedirection attribute)": [[102, "matflow.param_classes.orientations.LatticeDirection.B_STAR"]], "c (matflow.param_classes.orientations.latticedirection attribute)": [[102, "matflow.param_classes.orientations.LatticeDirection.C"]], "c_star (matflow.param_classes.orientations.latticedirection attribute)": [[102, "matflow.param_classes.orientations.LatticeDirection.C_STAR"]], "latticedirection (class in matflow.param_classes.orientations)": [[102, "matflow.param_classes.orientations.LatticeDirection"]], "orientationrepresentation (class in matflow.param_classes.orientations)": [[103, "matflow.param_classes.orientations.OrientationRepresentation"]], "euler_definition (matflow.param_classes.orientations.orientationrepresentation attribute)": [[103, "matflow.param_classes.orientations.OrientationRepresentation.euler_definition"]], "euler_is_degrees (matflow.param_classes.orientations.orientationrepresentation attribute)": [[103, "matflow.param_classes.orientations.OrientationRepresentation.euler_is_degrees"]], "quat_order (matflow.param_classes.orientations.orientationrepresentation attribute)": [[103, "matflow.param_classes.orientations.OrientationRepresentation.quat_order"]], "to_dict() (matflow.param_classes.orientations.orientationrepresentation method)": [[103, "matflow.param_classes.orientations.OrientationRepresentation.to_dict"]], "type (matflow.param_classes.orientations.orientationrepresentation attribute)": [[103, "matflow.param_classes.orientations.OrientationRepresentation.type"]], "euler (matflow.param_classes.orientations.orientationrepresentationtype attribute)": [[104, "matflow.param_classes.orientations.OrientationRepresentationType.EULER"]], "orientationrepresentationtype (class in matflow.param_classes.orientations)": [[104, "matflow.param_classes.orientations.OrientationRepresentationType"]], "quaternion (matflow.param_classes.orientations.orientationrepresentationtype attribute)": [[104, "matflow.param_classes.orientations.OrientationRepresentationType.QUATERNION"]], "orientations (class in matflow.param_classes.orientations)": [[105, "matflow.param_classes.orientations.Orientations"]], "data (matflow.param_classes.orientations.orientations attribute)": [[105, "matflow.param_classes.orientations.Orientations.data"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.orientations method)": [[105, "matflow.param_classes.orientations.Orientations.dump_to_HDF5_group"]], "from_json_like() (matflow.param_classes.orientations.orientations class method)": [[105, "matflow.param_classes.orientations.Orientations.from_JSON_like"]], "from_file() (matflow.param_classes.orientations.orientations class method)": [[105, "matflow.param_classes.orientations.Orientations.from_file"]], "from_random() (matflow.param_classes.orientations.orientations class method)": [[105, "matflow.param_classes.orientations.Orientations.from_random"]], "quat_sample_random() (matflow.param_classes.orientations.orientations static method)": [[105, "matflow.param_classes.orientations.Orientations.quat_sample_random"]], "representation (matflow.param_classes.orientations.orientations attribute)": [[105, "matflow.param_classes.orientations.Orientations.representation"]], "save_from_hdf5_group() (matflow.param_classes.orientations.orientations class method)": [[105, "matflow.param_classes.orientations.Orientations.save_from_HDF5_group"]], "to_dict() (matflow.param_classes.orientations.orientations method)": [[105, "matflow.param_classes.orientations.Orientations.to_dict"]], "unit_cell_alignment (matflow.param_classes.orientations.orientations attribute)": [[105, "matflow.param_classes.orientations.Orientations.unit_cell_alignment"]], "quatorder (class in matflow.param_classes.orientations)": [[106, "matflow.param_classes.orientations.QuatOrder"]], "scalar_vector (matflow.param_classes.orientations.quatorder attribute)": [[106, "matflow.param_classes.orientations.QuatOrder.SCALAR_VECTOR"]], "vector_scalar (matflow.param_classes.orientations.quatorder attribute)": [[106, "matflow.param_classes.orientations.QuatOrder.VECTOR_SCALAR"]], "unitcellalignment (class in matflow.param_classes.orientations)": [[107, "matflow.param_classes.orientations.UnitCellAlignment"]], "from_hex_convention_damask() (matflow.param_classes.orientations.unitcellalignment class method)": [[107, "matflow.param_classes.orientations.UnitCellAlignment.from_hex_convention_DAMASK"]], "from_hex_convention_mtex() (matflow.param_classes.orientations.unitcellalignment class method)": [[107, "matflow.param_classes.orientations.UnitCellAlignment.from_hex_convention_MTEX"]], "to_dict() (matflow.param_classes.orientations.unitcellalignment method)": [[107, "matflow.param_classes.orientations.UnitCellAlignment.to_dict"]], "x (matflow.param_classes.orientations.unitcellalignment attribute)": [[107, "matflow.param_classes.orientations.UnitCellAlignment.x"]], "y (matflow.param_classes.orientations.unitcellalignment attribute)": [[107, "matflow.param_classes.orientations.UnitCellAlignment.y"]], "z (matflow.param_classes.orientations.unitcellalignment attribute)": [[107, "matflow.param_classes.orientations.UnitCellAlignment.z"]], "matflow.param_classes.seeds": [[108, "module-matflow.param_classes.seeds"]], "microstructureseeds (class in matflow.param_classes.seeds)": [[109, "matflow.param_classes.seeds.MicrostructureSeeds"]], "box_size (matflow.param_classes.seeds.microstructureseeds attribute)": [[109, "matflow.param_classes.seeds.MicrostructureSeeds.box_size"]], "from_json_like() (matflow.param_classes.seeds.microstructureseeds class method)": [[109, "matflow.param_classes.seeds.MicrostructureSeeds.from_JSON_like"]], "from_file() (matflow.param_classes.seeds.microstructureseeds class method)": [[109, "matflow.param_classes.seeds.MicrostructureSeeds.from_file"]], "from_random() (matflow.param_classes.seeds.microstructureseeds class method)": [[109, "matflow.param_classes.seeds.MicrostructureSeeds.from_random"]], "num_seeds (matflow.param_classes.seeds.microstructureseeds property)": [[109, "matflow.param_classes.seeds.MicrostructureSeeds.num_seeds"]], "orientations (matflow.param_classes.seeds.microstructureseeds attribute)": [[109, "matflow.param_classes.seeds.MicrostructureSeeds.orientations"]], "phase_label (matflow.param_classes.seeds.microstructureseeds attribute)": [[109, "matflow.param_classes.seeds.MicrostructureSeeds.phase_label"]], "position (matflow.param_classes.seeds.microstructureseeds attribute)": [[109, "matflow.param_classes.seeds.MicrostructureSeeds.position"]], "random_seed (matflow.param_classes.seeds.microstructureseeds attribute)": [[109, "matflow.param_classes.seeds.MicrostructureSeeds.random_seed"]], "to_dict() (matflow.param_classes.seeds.microstructureseeds method)": [[109, "matflow.param_classes.seeds.MicrostructureSeeds.to_dict"]], "matflow.param_classes.utils": [[110, "module-matflow.param_classes.utils"]], "run_hpcflow_tests() (in module matflow)": [[111, "matflow.run_hpcflow_tests"]], "run_tests() (in module matflow)": [[112, "matflow.run_tests"]], "show() (in module matflow)": [[113, "matflow.show"]], "show_legend() (in module matflow)": [[114, "matflow.show_legend"]], "submit_workflow() (in module matflow)": [[115, "matflow.submit_workflow"]], "matflow.tests": [[116, "module-matflow.tests"]], "matflow.tests.conftest": [[117, "module-matflow.tests.conftest"]], "null_config() (in module matflow.tests.conftest)": [[118, "matflow.tests.conftest.null_config"]], "pytest_configure() (in module matflow.tests.conftest)": [[119, "matflow.tests.conftest.pytest_configure"]], "pytest_unconfigure() (in module matflow.tests.conftest)": [[120, "matflow.tests.conftest.pytest_unconfigure"]], "matflow.tests.test_cli": [[121, "module-matflow.tests.test_cli"]], "test_hpcflow_version() (in module matflow.tests.test_cli)": [[122, "matflow.tests.test_cli.test_hpcflow_version"]], "test_version() (in module matflow.tests.test_cli)": [[123, "matflow.tests.test_cli.test_version"]], "--add-to-known": [[125, "cmdoption-matflow-demo-workflow-go-add-to-known"], [125, "cmdoption-matflow-go-add-to-known"], [125, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"]], "--all": [[125, "cmdoption-matflow-config-get-all"]], "--config-dir": [[125, "cmdoption-matflow-config-dir"], [125, "cmdoption-matflow-manage-get-config-path-config-dir"], [125, "cmdoption-matflow-manage-reset-config-config-dir"]], "--config-key": [[125, "cmdoption-matflow-config-key"]], "--defaults": [[125, "cmdoption-matflow-config-add-scheduler-defaults"]], "--doc": [[125, "cmdoption-matflow-demo-workflow-copy-doc"], [125, "cmdoption-matflow-demo-workflow-show-doc"]], "--element": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element"]], "--exclude-os": [[125, "cmdoption-matflow-submission-shell-info-exclude-os"]], "--file": [[125, "cmdoption-matflow-config-get-file"], [125, "cmdoption-matflow-helper-pid-f"]], "--format": [[125, "cmdoption-matflow-demo-workflow-go-format"], [125, "cmdoption-matflow-demo-workflow-make-format"], [125, "cmdoption-matflow-go-format"], [125, "cmdoption-matflow-make-format"]], "--full": [[125, "cmdoption-matflow-show-f"]], "--help": [[125, "cmdoption-matflow-help"]], "--hpcflow-version": [[125, "cmdoption-matflow-hpcflow-version"]], "--infile1": [[125, "cmdoption-matflow-demo-software-doSomething-i1"]], "--infile2": [[125, "cmdoption-matflow-demo-software-doSomething-i2"]], "--jobscripts": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "--js-parallelism": [[125, "cmdoption-matflow-demo-workflow-go-js-parallelism"], [125, "cmdoption-matflow-go-js-parallelism"], [125, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism"]], "--json": [[125, "cmdoption-matflow-config-append-json"], [125, "cmdoption-matflow-config-prepend-json"], [125, "cmdoption-matflow-config-set-json"], [125, "cmdoption-matflow-config-update-json"], [125, "cmdoption-matflow-submission-get-known-json"]], "--legend": [[125, "cmdoption-matflow-show-legend"]], "--list": [[125, "cmdoption-matflow-demo-workflow-l"]], "--log": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log"], [125, "cmdoption-matflow-zip-log"]], "--max-recent": [[125, "cmdoption-matflow-show-r"]], "--metadata": [[125, "cmdoption-matflow-config-get-metadata"]], "--name": [[125, "cmdoption-matflow-demo-workflow-go-name"], [125, "cmdoption-matflow-demo-workflow-make-name"], [125, "cmdoption-matflow-go-name"], [125, "cmdoption-matflow-make-name"], [125, "cmdoption-matflow-open-env-source-name"]], "--new": [[125, "cmdoption-matflow-config-import-new"]], "--no-add-to-known": [[125, "cmdoption-matflow-demo-workflow-go-add-to-known"], [125, "cmdoption-matflow-go-add-to-known"], [125, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"]], "--no-callback": [[125, "cmdoption-matflow-config-no-callback"]], "--no-doc": [[125, "cmdoption-matflow-demo-workflow-copy-doc"], [125, "cmdoption-matflow-demo-workflow-show-doc"]], "--no-rename": [[125, "cmdoption-matflow-config-import-rename"]], "--no-syntax": [[125, "cmdoption-matflow-demo-workflow-show-syntax"]], "--no-update": [[125, "cmdoption-matflow-show-no-update"]], "--os-info": [[125, "cmdoption-matflow-submission-os-info"]], "--out": [[125, "cmdoption-matflow-demo-software-doSomething-o"]], "--overwrite": [[125, "cmdoption-matflow-demo-workflow-go-overwrite"], [125, "cmdoption-matflow-demo-workflow-make-overwrite"], [125, "cmdoption-matflow-go-overwrite"], [125, "cmdoption-matflow-make-overwrite"]], "--path": [[125, "cmdoption-matflow-config-init-path"], [125, "cmdoption-matflow-config-open-path"], [125, "cmdoption-matflow-demo-workflow-go-path"], [125, "cmdoption-matflow-demo-workflow-make-path"], [125, "cmdoption-matflow-go-path"], [125, "cmdoption-matflow-make-path"], [125, "cmdoption-matflow-open-config-path"], [125, "cmdoption-matflow-open-env-source-path"], [125, "cmdoption-matflow-open-known-subs-path"], [125, "cmdoption-matflow-open-log-path"], [125, "cmdoption-matflow-open-user-data-dir-path"], [125, "cmdoption-matflow-open-workflow-path"]], "--ref-type": [[125, "cmdoption-matflow-cancel-r"], [125, "cmdoption-matflow-open-workflow-r"], [125, "cmdoption-matflow-workflow-r"], [125, "cmdoption-matflow-zip-r"]], "--rename": [[125, "cmdoption-matflow-config-import-rename"]], "--run-time-info": [[125, "cmdoption-matflow-run-time-info"]], "--store": [[125, "cmdoption-matflow-demo-workflow-go-store"], [125, "cmdoption-matflow-demo-workflow-make-store"], [125, "cmdoption-matflow-go-store"], [125, "cmdoption-matflow-make-store"]], "--string": [[125, "cmdoption-matflow-go-string"], [125, "cmdoption-matflow-make-string"]], "--submission": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission"]], "--syntax": [[125, "cmdoption-matflow-demo-workflow-show-syntax"]], "--task": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task"]], "--timeout": [[125, "cmdoption-matflow-helper-restart-timeout"], [125, "cmdoption-matflow-helper-run-timeout"], [125, "cmdoption-matflow-helper-start-timeout"]], "--timeout-check-interval": [[125, "cmdoption-matflow-helper-restart-timeout-check-interval"], [125, "cmdoption-matflow-helper-run-timeout-check-interval"], [125, "cmdoption-matflow-helper-start-timeout-check-interval"]], "--ts-fmt": [[125, "cmdoption-matflow-demo-workflow-go-ts-fmt"], [125, "cmdoption-matflow-demo-workflow-make-ts-fmt"], [125, "cmdoption-matflow-go-ts-fmt"], [125, "cmdoption-matflow-make-ts-fmt"]], "--ts-name-fmt": [[125, "cmdoption-matflow-demo-workflow-go-ts-name-fmt"], [125, "cmdoption-matflow-demo-workflow-make-ts-name-fmt"], [125, "cmdoption-matflow-go-ts-name-fmt"], [125, "cmdoption-matflow-make-ts-name-fmt"]], "--value": [[125, "cmdoption-matflow-demo-software-doSomething-v"]], "--version": [[125, "cmdoption-matflow-version"]], "--wait": [[125, "cmdoption-matflow-demo-workflow-go-wait"], [125, "cmdoption-matflow-go-wait"], [125, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait"]], "--watch-interval": [[125, "cmdoption-matflow-helper-restart-watch-interval"], [125, "cmdoption-matflow-helper-run-watch-interval"], [125, "cmdoption-matflow-helper-start-watch-interval"]], "--with-config": [[125, "cmdoption-matflow-with-config"]], "-f": [[125, "cmdoption-matflow-helper-pid-f"], [125, "cmdoption-matflow-show-f"]], "-i1": [[125, "cmdoption-matflow-demo-software-doSomething-i1"]], "-i2": [[125, "cmdoption-matflow-demo-software-doSomething-i2"]], "-j": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "-l": [[125, "cmdoption-matflow-demo-workflow-l"]], "-o": [[125, "cmdoption-matflow-demo-software-doSomething-o"]], "-r": [[125, "cmdoption-matflow-cancel-r"], [125, "cmdoption-matflow-open-workflow-r"], [125, "cmdoption-matflow-show-r"], [125, "cmdoption-matflow-workflow-r"], [125, "cmdoption-matflow-zip-r"]], "-v": [[125, "cmdoption-matflow-demo-software-doSomething-v"]], "destination": [[125, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION"]], "ear_id": [[125, "cmdoption-matflow-internal-workflow-PATH-get-ear-skipped-arg-EAR_ID"], [125, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID"], [125, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EAR_ID"], [125, "cmdoption-matflow-internal-workflow-PATH-set-ear-skip-arg-EAR_ID"], [125, "cmdoption-matflow-internal-workflow-PATH-set-ear-start-arg-EAR_ID"], [125, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-EAR_ID"]], "exit_code": [[125, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EXIT_CODE"]], "file_path": [[125, "cmdoption-matflow-config-import-arg-FILE_PATH"]], "index": [[125, "cmdoption-matflow-config-pop-arg-INDEX"], [125, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX"], [125, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX"], [125, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX"]], "jobscript_idx": [[125, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JOBSCRIPT_IDX"]], "js_action_idx": [[125, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JS_ACTION_IDX"]], "js_act_idx": [[125, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_ACT_IDX"]], "js_idx": [[125, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_IDX"], [125, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX"]], "known_name": [[125, "cmdoption-matflow-config-init-arg-KNOWN_NAME"]], "name": [[125, "cmdoption-matflow-config-add-scheduler-arg-NAME"], [125, "cmdoption-matflow-config-append-arg-NAME"], [125, "cmdoption-matflow-config-get-arg-NAME"], [125, "cmdoption-matflow-config-pop-arg-NAME"], [125, "cmdoption-matflow-config-prepend-arg-NAME"], [125, "cmdoption-matflow-config-set-arg-NAME"], [125, "cmdoption-matflow-config-unset-arg-NAME"], [125, "cmdoption-matflow-config-update-arg-NAME"], [125, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME"]], "path": [[125, "cmdoption-matflow-internal-workflow-arg-PATH"]], "py_test_args": [[125, "cmdoption-matflow-test-arg-PY_TEST_ARGS"], [125, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS"]], "scheduler_name": [[125, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME"]], "shell_name": [[125, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME"]], "submission_idx": [[125, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-SUBMISSION_IDX"]], "sub_idx": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX"]], "template_file_or_str": [[125, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR"], [125, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR"]], "value": [[125, "cmdoption-matflow-config-append-arg-VALUE"], [125, "cmdoption-matflow-config-prepend-arg-VALUE"], [125, "cmdoption-matflow-config-set-arg-VALUE"], [125, "cmdoption-matflow-config-update-arg-VALUE"], [125, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE"]], "workflow_name": [[125, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME"], [125, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME"], [125, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME"], [125, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME"]], "workflow_ref": [[125, "cmdoption-matflow-cancel-arg-WORKFLOW_REF"], [125, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF"], [125, "cmdoption-matflow-workflow-arg-WORKFLOW_REF"], [125, "cmdoption-matflow-zip-arg-WORKFLOW_REF"]], "matflow command line option": [[125, "cmdoption-matflow-config-dir"], [125, "cmdoption-matflow-config-key"], [125, "cmdoption-matflow-help"], [125, "cmdoption-matflow-hpcflow-version"], [125, "cmdoption-matflow-run-time-info"], [125, "cmdoption-matflow-version"], [125, "cmdoption-matflow-with-config"]], "matflow-cancel command line option": [[125, "cmdoption-matflow-cancel-arg-WORKFLOW_REF"], [125, "cmdoption-matflow-cancel-r"]], "matflow-config command line option": [[125, "cmdoption-matflow-config-no-callback"]], "matflow-config-add-scheduler command line option": [[125, "cmdoption-matflow-config-add-scheduler-arg-NAME"], [125, "cmdoption-matflow-config-add-scheduler-defaults"]], "matflow-config-append command line option": [[125, "cmdoption-matflow-config-append-arg-NAME"], [125, "cmdoption-matflow-config-append-arg-VALUE"], [125, "cmdoption-matflow-config-append-json"]], "matflow-config-get command line option": [[125, "cmdoption-matflow-config-get-all"], [125, "cmdoption-matflow-config-get-arg-NAME"], [125, "cmdoption-matflow-config-get-file"], [125, "cmdoption-matflow-config-get-metadata"]], "matflow-config-import command line option": [[125, "cmdoption-matflow-config-import-arg-FILE_PATH"], [125, "cmdoption-matflow-config-import-new"], [125, "cmdoption-matflow-config-import-rename"]], "matflow-config-init command line option": [[125, "cmdoption-matflow-config-init-arg-KNOWN_NAME"], [125, "cmdoption-matflow-config-init-path"]], "matflow-config-open command line option": [[125, "cmdoption-matflow-config-open-path"]], "matflow-config-pop command line option": [[125, "cmdoption-matflow-config-pop-arg-INDEX"], [125, "cmdoption-matflow-config-pop-arg-NAME"]], "matflow-config-prepend command line option": [[125, "cmdoption-matflow-config-prepend-arg-NAME"], [125, "cmdoption-matflow-config-prepend-arg-VALUE"], [125, "cmdoption-matflow-config-prepend-json"]], "matflow-config-set command line option": [[125, "cmdoption-matflow-config-set-arg-NAME"], [125, "cmdoption-matflow-config-set-arg-VALUE"], [125, "cmdoption-matflow-config-set-json"]], "matflow-config-unset command line option": [[125, "cmdoption-matflow-config-unset-arg-NAME"]], "matflow-config-update command line option": [[125, "cmdoption-matflow-config-update-arg-NAME"], [125, "cmdoption-matflow-config-update-arg-VALUE"], [125, "cmdoption-matflow-config-update-json"]], "matflow-demo-software-dosomething command line option": [[125, "cmdoption-matflow-demo-software-doSomething-i1"], [125, "cmdoption-matflow-demo-software-doSomething-i2"], [125, "cmdoption-matflow-demo-software-doSomething-o"], [125, "cmdoption-matflow-demo-software-doSomething-v"]], "matflow-demo-workflow command line option": [[125, "cmdoption-matflow-demo-workflow-l"]], "matflow-demo-workflow-copy command line option": [[125, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION"], [125, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME"], [125, "cmdoption-matflow-demo-workflow-copy-doc"]], "matflow-demo-workflow-go command line option": [[125, "cmdoption-matflow-demo-workflow-go-add-to-known"], [125, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME"], [125, "cmdoption-matflow-demo-workflow-go-format"], [125, "cmdoption-matflow-demo-workflow-go-js-parallelism"], [125, "cmdoption-matflow-demo-workflow-go-name"], [125, "cmdoption-matflow-demo-workflow-go-overwrite"], [125, "cmdoption-matflow-demo-workflow-go-path"], [125, "cmdoption-matflow-demo-workflow-go-store"], [125, "cmdoption-matflow-demo-workflow-go-ts-fmt"], [125, "cmdoption-matflow-demo-workflow-go-ts-name-fmt"], [125, "cmdoption-matflow-demo-workflow-go-wait"]], "matflow-demo-workflow-make command line option": [[125, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME"], [125, "cmdoption-matflow-demo-workflow-make-format"], [125, "cmdoption-matflow-demo-workflow-make-name"], [125, "cmdoption-matflow-demo-workflow-make-overwrite"], [125, "cmdoption-matflow-demo-workflow-make-path"], [125, "cmdoption-matflow-demo-workflow-make-store"], [125, "cmdoption-matflow-demo-workflow-make-ts-fmt"], [125, "cmdoption-matflow-demo-workflow-make-ts-name-fmt"]], "matflow-demo-workflow-show command line option": [[125, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME"], [125, "cmdoption-matflow-demo-workflow-show-doc"], [125, "cmdoption-matflow-demo-workflow-show-syntax"]], "matflow-go command line option": [[125, "cmdoption-matflow-go-add-to-known"], [125, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR"], [125, "cmdoption-matflow-go-format"], [125, "cmdoption-matflow-go-js-parallelism"], [125, "cmdoption-matflow-go-name"], [125, "cmdoption-matflow-go-overwrite"], [125, "cmdoption-matflow-go-path"], [125, "cmdoption-matflow-go-store"], [125, "cmdoption-matflow-go-string"], [125, "cmdoption-matflow-go-ts-fmt"], [125, "cmdoption-matflow-go-ts-name-fmt"], [125, "cmdoption-matflow-go-wait"]], "matflow-helper-pid command line option": [[125, "cmdoption-matflow-helper-pid-f"]], "matflow-helper-restart command line option": [[125, "cmdoption-matflow-helper-restart-timeout"], [125, "cmdoption-matflow-helper-restart-timeout-check-interval"], [125, "cmdoption-matflow-helper-restart-watch-interval"]], "matflow-helper-run command line option": [[125, "cmdoption-matflow-helper-run-timeout"], [125, "cmdoption-matflow-helper-run-timeout-check-interval"], [125, "cmdoption-matflow-helper-run-watch-interval"]], "matflow-helper-start command line option": [[125, "cmdoption-matflow-helper-start-timeout"], [125, "cmdoption-matflow-helper-start-timeout-check-interval"], [125, "cmdoption-matflow-helper-start-watch-interval"]], "matflow-internal-workflow command line option": [[125, "cmdoption-matflow-internal-workflow-arg-PATH"]], "matflow-internal-workflow-path-get-ear-skipped command line option": [[125, "cmdoption-matflow-internal-workflow-PATH-get-ear-skipped-arg-EAR_ID"]], "matflow-internal-workflow-path-save-parameter command line option": [[125, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID"], [125, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME"], [125, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE"]], "matflow-internal-workflow-path-set-ear-end command line option": [[125, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EAR_ID"], [125, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EXIT_CODE"], [125, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_ACT_IDX"], [125, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_IDX"]], "matflow-internal-workflow-path-set-ear-skip command line option": [[125, "cmdoption-matflow-internal-workflow-PATH-set-ear-skip-arg-EAR_ID"]], "matflow-internal-workflow-path-set-ear-start command line option": [[125, "cmdoption-matflow-internal-workflow-PATH-set-ear-start-arg-EAR_ID"]], "matflow-internal-workflow-path-write-commands command line option": [[125, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-EAR_ID"], [125, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JOBSCRIPT_IDX"], [125, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JS_ACTION_IDX"], [125, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-SUBMISSION_IDX"]], "matflow-make command line option": [[125, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR"], [125, "cmdoption-matflow-make-format"], [125, "cmdoption-matflow-make-name"], [125, "cmdoption-matflow-make-overwrite"], [125, "cmdoption-matflow-make-path"], [125, "cmdoption-matflow-make-store"], [125, "cmdoption-matflow-make-string"], [125, "cmdoption-matflow-make-ts-fmt"], [125, "cmdoption-matflow-make-ts-name-fmt"]], "matflow-manage-get-config-path command line option": [[125, "cmdoption-matflow-manage-get-config-path-config-dir"]], "matflow-manage-reset-config command line option": [[125, "cmdoption-matflow-manage-reset-config-config-dir"]], "matflow-open-config command line option": [[125, "cmdoption-matflow-open-config-path"]], "matflow-open-env-source command line option": [[125, "cmdoption-matflow-open-env-source-name"], [125, "cmdoption-matflow-open-env-source-path"]], "matflow-open-known-subs command line option": [[125, "cmdoption-matflow-open-known-subs-path"]], "matflow-open-log command line option": [[125, "cmdoption-matflow-open-log-path"]], "matflow-open-user-data-dir command line option": [[125, "cmdoption-matflow-open-user-data-dir-path"]], "matflow-open-workflow command line option": [[125, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF"], [125, "cmdoption-matflow-open-workflow-path"], [125, "cmdoption-matflow-open-workflow-r"]], "matflow-show command line option": [[125, "cmdoption-matflow-show-f"], [125, "cmdoption-matflow-show-legend"], [125, "cmdoption-matflow-show-no-update"], [125, "cmdoption-matflow-show-r"]], "matflow-submission command line option": [[125, "cmdoption-matflow-submission-os-info"]], "matflow-submission-get-known command line option": [[125, "cmdoption-matflow-submission-get-known-json"]], "matflow-submission-scheduler command line option": [[125, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME"]], "matflow-submission-shell-info command line option": [[125, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME"], [125, "cmdoption-matflow-submission-shell-info-exclude-os"]], "matflow-test command line option": [[125, "cmdoption-matflow-test-arg-PY_TEST_ARGS"]], "matflow-test-hpcflow command line option": [[125, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS"]], "matflow-workflow command line option": [[125, "cmdoption-matflow-workflow-arg-WORKFLOW_REF"], [125, "cmdoption-matflow-workflow-r"]], "matflow-workflow-workflow_ref-abort-run command line option": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element"], [125, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission"], [125, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task"]], "matflow-workflow-workflow_ref-get-param command line option": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX"]], "matflow-workflow-workflow_ref-get-param-source command line option": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX"]], "matflow-workflow-workflow_ref-is-param-set command line option": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX"]], "matflow-workflow-workflow_ref-sub command line option": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX"]], "matflow-workflow-workflow_ref-sub-sub_idx-js command line option": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX"]], "matflow-workflow-workflow_ref-submit command line option": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"], [125, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism"], [125, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait"]], "matflow-workflow-workflow_ref-wait command line option": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "matflow-workflow-workflow_ref-zip command line option": [[125, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log"]], "matflow-zip command line option": [[125, "cmdoption-matflow-zip-arg-WORKFLOW_REF"], [125, "cmdoption-matflow-zip-log"], [125, "cmdoption-matflow-zip-r"]]}})