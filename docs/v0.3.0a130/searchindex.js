Search.setIndex({"docnames": ["contribute/index", "development/environments", "development/index", "index", "installation", "reference/_autosummary/matflow", "reference/_autosummary/matflow.Action", "reference/_autosummary/matflow.ActionEnvironment", "reference/_autosummary/matflow.ActionRule", "reference/_autosummary/matflow.ActionScope", "reference/_autosummary/matflow.ActionScopeType", "reference/_autosummary/matflow.Command", "reference/_autosummary/matflow.CommandFilesList", "reference/_autosummary/matflow.DirectPosix", "reference/_autosummary/matflow.DirectWindows", "reference/_autosummary/matflow.Element", "reference/_autosummary/matflow.ElementAction", "reference/_autosummary/matflow.ElementActionRun", "reference/_autosummary/matflow.ElementFilter", "reference/_autosummary/matflow.ElementGroup", "reference/_autosummary/matflow.ElementInputFiles", "reference/_autosummary/matflow.ElementInputs", "reference/_autosummary/matflow.ElementIteration", "reference/_autosummary/matflow.ElementOutputFiles", "reference/_autosummary/matflow.ElementOutputs", "reference/_autosummary/matflow.ElementParameter", "reference/_autosummary/matflow.ElementPropagation", "reference/_autosummary/matflow.ElementRepeats", "reference/_autosummary/matflow.ElementResources", "reference/_autosummary/matflow.ElementSet", "reference/_autosummary/matflow.Elements", "reference/_autosummary/matflow.Environment", "reference/_autosummary/matflow.EnvironmentsList", "reference/_autosummary/matflow.Executable", "reference/_autosummary/matflow.ExecutableInstance", "reference/_autosummary/matflow.ExecutablesList", "reference/_autosummary/matflow.FileNameExt", "reference/_autosummary/matflow.FileNameSpec", "reference/_autosummary/matflow.FileNameStem", "reference/_autosummary/matflow.FileSpec", "reference/_autosummary/matflow.GroupList", "reference/_autosummary/matflow.InputFile", "reference/_autosummary/matflow.InputFileGenerator", "reference/_autosummary/matflow.InputFileGeneratorSource", "reference/_autosummary/matflow.InputSource", "reference/_autosummary/matflow.InputSourceType", "reference/_autosummary/matflow.InputValue", "reference/_autosummary/matflow.Jobscript", "reference/_autosummary/matflow.Loop", "reference/_autosummary/matflow.NumCores", "reference/_autosummary/matflow.OutputFileParser", "reference/_autosummary/matflow.OutputFileParserSource", "reference/_autosummary/matflow.OutputLabel", "reference/_autosummary/matflow.Parameter", "reference/_autosummary/matflow.ParameterPath", "reference/_autosummary/matflow.ParameterPropagationMode", "reference/_autosummary/matflow.ParameterValue", "reference/_autosummary/matflow.Parameters", "reference/_autosummary/matflow.ParametersList", "reference/_autosummary/matflow.ResourceList", "reference/_autosummary/matflow.ResourceSpec", "reference/_autosummary/matflow.Rule", "reference/_autosummary/matflow.RunDirAppFiles", "reference/_autosummary/matflow.SGEPosix", "reference/_autosummary/matflow.SchemaInput", "reference/_autosummary/matflow.SchemaOutput", "reference/_autosummary/matflow.SchemaParameter", "reference/_autosummary/matflow.SlurmPosix", "reference/_autosummary/matflow.SubParameter", "reference/_autosummary/matflow.Submission", "reference/_autosummary/matflow.Task", "reference/_autosummary/matflow.TaskInputParameters", "reference/_autosummary/matflow.TaskList", "reference/_autosummary/matflow.TaskObjective", "reference/_autosummary/matflow.TaskOutputParameters", "reference/_autosummary/matflow.TaskSchema", "reference/_autosummary/matflow.TaskSchemasList", "reference/_autosummary/matflow.TaskSourceType", "reference/_autosummary/matflow.TaskTemplateList", "reference/_autosummary/matflow.ValuePerturbation", "reference/_autosummary/matflow.ValueSequence", "reference/_autosummary/matflow.Workflow", "reference/_autosummary/matflow.WorkflowBlueprint", "reference/_autosummary/matflow.WorkflowLoop", "reference/_autosummary/matflow.WorkflowLoopList", "reference/_autosummary/matflow.WorkflowTask", "reference/_autosummary/matflow.WorkflowTaskList", "reference/_autosummary/matflow.WorkflowTemplate", "reference/_autosummary/matflow.app", "reference/_autosummary/matflow.cancel", "reference/_autosummary/matflow.cli", "reference/_autosummary/matflow.get_OS_info", "reference/_autosummary/matflow.get_known_submissions", "reference/_autosummary/matflow.get_shell_info", "reference/_autosummary/matflow.make_and_submit_demo_workflow", "reference/_autosummary/matflow.make_and_submit_workflow", "reference/_autosummary/matflow.make_demo_workflow", "reference/_autosummary/matflow.make_workflow", "reference/_autosummary/matflow.param_classes", "reference/_autosummary/matflow.param_classes.load", "reference/_autosummary/matflow.param_classes.load.LoadCase", "reference/_autosummary/matflow.param_classes.load.LoadStep", "reference/_autosummary/matflow.param_classes.load.StrainRateMode", "reference/_autosummary/matflow.param_classes.orientations", "reference/_autosummary/matflow.param_classes.orientations.EulerDefinition", "reference/_autosummary/matflow.param_classes.orientations.LatticeDirection", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentation", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentationType", "reference/_autosummary/matflow.param_classes.orientations.Orientations", "reference/_autosummary/matflow.param_classes.orientations.QuatOrder", "reference/_autosummary/matflow.param_classes.orientations.UnitCellAlignment", "reference/_autosummary/matflow.param_classes.seeds", "reference/_autosummary/matflow.param_classes.seeds.MicrostructureSeeds", "reference/_autosummary/matflow.param_classes.single_crystal_parameters", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.SingleCrystalParameters", "reference/_autosummary/matflow.param_classes.utils", "reference/_autosummary/matflow.param_classes.utils.masked_array_from_list", "reference/_autosummary/matflow.run_hpcflow_tests", "reference/_autosummary/matflow.run_tests", "reference/_autosummary/matflow.show", "reference/_autosummary/matflow.show_legend", "reference/_autosummary/matflow.submit_workflow", "reference/_autosummary/matflow.tests", "reference/_autosummary/matflow.tests.conftest", "reference/_autosummary/matflow.tests.conftest.new_null_config", "reference/_autosummary/matflow.tests.conftest.null_config", "reference/_autosummary/matflow.tests.conftest.pytest_addoption", "reference/_autosummary/matflow.tests.conftest.pytest_collection_modifyitems", "reference/_autosummary/matflow.tests.conftest.pytest_configure", "reference/_autosummary/matflow.tests.conftest.pytest_unconfigure", "reference/_autosummary/matflow.tests.test_cli", "reference/_autosummary/matflow.tests.test_cli.test_hpcflow_version", "reference/_autosummary/matflow.tests.test_cli.test_version", "reference/_autosummary/matflow.tests.test_utils", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D_masked", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D_masked", "reference/api", "reference/cli", "reference/config_file", "reference/glossary", "reference/index", "reference/template_components", "reference/template_components/command_files", "reference/template_components/environments", "reference/template_components/parameters", "reference/template_components/task_schemas", "reference/workflows", "user/how_to/config", "user/how_to/environments", "user/how_to/index", "user/how_to/task_schemas", "user/how_to/template_components", "user/how_to/workflow_templates", "user/how_to/workflows", "user/index", "user/tutorials/index", "user/tutorials/notebooks/index", "user/tutorials/notebooks/simulate_yield_surface_2D"], "filenames": ["contribute/index.rst", "development/environments.rst", "development/index.rst", "index.rst", "installation.rst", "reference/_autosummary/matflow.rst", "reference/_autosummary/matflow.Action.rst", "reference/_autosummary/matflow.ActionEnvironment.rst", "reference/_autosummary/matflow.ActionRule.rst", "reference/_autosummary/matflow.ActionScope.rst", "reference/_autosummary/matflow.ActionScopeType.rst", "reference/_autosummary/matflow.Command.rst", "reference/_autosummary/matflow.CommandFilesList.rst", "reference/_autosummary/matflow.DirectPosix.rst", "reference/_autosummary/matflow.DirectWindows.rst", "reference/_autosummary/matflow.Element.rst", "reference/_autosummary/matflow.ElementAction.rst", "reference/_autosummary/matflow.ElementActionRun.rst", "reference/_autosummary/matflow.ElementFilter.rst", "reference/_autosummary/matflow.ElementGroup.rst", "reference/_autosummary/matflow.ElementInputFiles.rst", "reference/_autosummary/matflow.ElementInputs.rst", "reference/_autosummary/matflow.ElementIteration.rst", "reference/_autosummary/matflow.ElementOutputFiles.rst", "reference/_autosummary/matflow.ElementOutputs.rst", "reference/_autosummary/matflow.ElementParameter.rst", "reference/_autosummary/matflow.ElementPropagation.rst", "reference/_autosummary/matflow.ElementRepeats.rst", "reference/_autosummary/matflow.ElementResources.rst", "reference/_autosummary/matflow.ElementSet.rst", "reference/_autosummary/matflow.Elements.rst", "reference/_autosummary/matflow.Environment.rst", "reference/_autosummary/matflow.EnvironmentsList.rst", "reference/_autosummary/matflow.Executable.rst", "reference/_autosummary/matflow.ExecutableInstance.rst", "reference/_autosummary/matflow.ExecutablesList.rst", "reference/_autosummary/matflow.FileNameExt.rst", "reference/_autosummary/matflow.FileNameSpec.rst", "reference/_autosummary/matflow.FileNameStem.rst", "reference/_autosummary/matflow.FileSpec.rst", "reference/_autosummary/matflow.GroupList.rst", "reference/_autosummary/matflow.InputFile.rst", "reference/_autosummary/matflow.InputFileGenerator.rst", "reference/_autosummary/matflow.InputFileGeneratorSource.rst", "reference/_autosummary/matflow.InputSource.rst", "reference/_autosummary/matflow.InputSourceType.rst", "reference/_autosummary/matflow.InputValue.rst", "reference/_autosummary/matflow.Jobscript.rst", "reference/_autosummary/matflow.Loop.rst", "reference/_autosummary/matflow.NumCores.rst", "reference/_autosummary/matflow.OutputFileParser.rst", "reference/_autosummary/matflow.OutputFileParserSource.rst", "reference/_autosummary/matflow.OutputLabel.rst", "reference/_autosummary/matflow.Parameter.rst", "reference/_autosummary/matflow.ParameterPath.rst", "reference/_autosummary/matflow.ParameterPropagationMode.rst", "reference/_autosummary/matflow.ParameterValue.rst", "reference/_autosummary/matflow.Parameters.rst", "reference/_autosummary/matflow.ParametersList.rst", "reference/_autosummary/matflow.ResourceList.rst", "reference/_autosummary/matflow.ResourceSpec.rst", "reference/_autosummary/matflow.Rule.rst", "reference/_autosummary/matflow.RunDirAppFiles.rst", "reference/_autosummary/matflow.SGEPosix.rst", "reference/_autosummary/matflow.SchemaInput.rst", "reference/_autosummary/matflow.SchemaOutput.rst", "reference/_autosummary/matflow.SchemaParameter.rst", "reference/_autosummary/matflow.SlurmPosix.rst", "reference/_autosummary/matflow.SubParameter.rst", "reference/_autosummary/matflow.Submission.rst", "reference/_autosummary/matflow.Task.rst", "reference/_autosummary/matflow.TaskInputParameters.rst", "reference/_autosummary/matflow.TaskList.rst", "reference/_autosummary/matflow.TaskObjective.rst", "reference/_autosummary/matflow.TaskOutputParameters.rst", "reference/_autosummary/matflow.TaskSchema.rst", "reference/_autosummary/matflow.TaskSchemasList.rst", "reference/_autosummary/matflow.TaskSourceType.rst", "reference/_autosummary/matflow.TaskTemplateList.rst", "reference/_autosummary/matflow.ValuePerturbation.rst", "reference/_autosummary/matflow.ValueSequence.rst", "reference/_autosummary/matflow.Workflow.rst", "reference/_autosummary/matflow.WorkflowBlueprint.rst", "reference/_autosummary/matflow.WorkflowLoop.rst", "reference/_autosummary/matflow.WorkflowLoopList.rst", "reference/_autosummary/matflow.WorkflowTask.rst", "reference/_autosummary/matflow.WorkflowTaskList.rst", "reference/_autosummary/matflow.WorkflowTemplate.rst", "reference/_autosummary/matflow.app.rst", "reference/_autosummary/matflow.cancel.rst", "reference/_autosummary/matflow.cli.rst", "reference/_autosummary/matflow.get_OS_info.rst", "reference/_autosummary/matflow.get_known_submissions.rst", "reference/_autosummary/matflow.get_shell_info.rst", "reference/_autosummary/matflow.make_and_submit_demo_workflow.rst", "reference/_autosummary/matflow.make_and_submit_workflow.rst", "reference/_autosummary/matflow.make_demo_workflow.rst", "reference/_autosummary/matflow.make_workflow.rst", "reference/_autosummary/matflow.param_classes.rst", "reference/_autosummary/matflow.param_classes.load.rst", "reference/_autosummary/matflow.param_classes.load.LoadCase.rst", "reference/_autosummary/matflow.param_classes.load.LoadStep.rst", "reference/_autosummary/matflow.param_classes.load.StrainRateMode.rst", "reference/_autosummary/matflow.param_classes.orientations.rst", "reference/_autosummary/matflow.param_classes.orientations.EulerDefinition.rst", "reference/_autosummary/matflow.param_classes.orientations.LatticeDirection.rst", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentation.rst", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentationType.rst", "reference/_autosummary/matflow.param_classes.orientations.Orientations.rst", "reference/_autosummary/matflow.param_classes.orientations.QuatOrder.rst", "reference/_autosummary/matflow.param_classes.orientations.UnitCellAlignment.rst", "reference/_autosummary/matflow.param_classes.seeds.rst", "reference/_autosummary/matflow.param_classes.seeds.MicrostructureSeeds.rst", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.rst", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.rst", "reference/_autosummary/matflow.param_classes.utils.rst", "reference/_autosummary/matflow.param_classes.utils.masked_array_from_list.rst", "reference/_autosummary/matflow.run_hpcflow_tests.rst", "reference/_autosummary/matflow.run_tests.rst", "reference/_autosummary/matflow.show.rst", "reference/_autosummary/matflow.show_legend.rst", "reference/_autosummary/matflow.submit_workflow.rst", "reference/_autosummary/matflow.tests.rst", "reference/_autosummary/matflow.tests.conftest.rst", "reference/_autosummary/matflow.tests.conftest.new_null_config.rst", "reference/_autosummary/matflow.tests.conftest.null_config.rst", "reference/_autosummary/matflow.tests.conftest.pytest_addoption.rst", "reference/_autosummary/matflow.tests.conftest.pytest_collection_modifyitems.rst", "reference/_autosummary/matflow.tests.conftest.pytest_configure.rst", "reference/_autosummary/matflow.tests.conftest.pytest_unconfigure.rst", "reference/_autosummary/matflow.tests.test_cli.rst", "reference/_autosummary/matflow.tests.test_cli.test_hpcflow_version.rst", "reference/_autosummary/matflow.tests.test_cli.test_version.rst", "reference/_autosummary/matflow.tests.test_utils.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D_masked.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D_masked.rst", "reference/api.rst", "reference/cli.rst", "reference/config_file.rst", "reference/glossary.rst", "reference/index.rst", "reference/template_components.rst", "reference/template_components/command_files.rst", "reference/template_components/environments.rst", "reference/template_components/parameters.rst", "reference/template_components/task_schemas.rst", "reference/workflows.rst", "user/how_to/config.rst", "user/how_to/environments.rst", "user/how_to/index.rst", "user/how_to/task_schemas.rst", "user/how_to/template_components.rst", "user/how_to/workflow_templates.rst", "user/how_to/workflows.rst", "user/index.rst", "user/tutorials/index.rst", "user/tutorials/notebooks/index.rst", "user/tutorials/notebooks/simulate_yield_surface_2D.ipynb"], "titles": ["Contribute", "Environments", "Development", "Welcome to MatFlow\u2019s documentation!", "Installation", "matflow", "matflow.Action", "matflow.ActionEnvironment", "matflow.ActionRule", "matflow.ActionScope", "matflow.ActionScopeType", "matflow.Command", "matflow.CommandFilesList", "matflow.DirectPosix", "matflow.DirectWindows", "matflow.Element", "matflow.ElementAction", "matflow.ElementActionRun", "matflow.ElementFilter", "matflow.ElementGroup", "matflow.ElementInputFiles", "matflow.ElementInputs", "matflow.ElementIteration", "matflow.ElementOutputFiles", "matflow.ElementOutputs", "matflow.ElementParameter", "matflow.ElementPropagation", "matflow.ElementRepeats", "matflow.ElementResources", "matflow.ElementSet", "matflow.Elements", "matflow.Environment", "matflow.EnvironmentsList", "matflow.Executable", "matflow.ExecutableInstance", "matflow.ExecutablesList", "matflow.FileNameExt", "matflow.FileNameSpec", "matflow.FileNameStem", "matflow.FileSpec", "matflow.GroupList", "matflow.InputFile", "matflow.InputFileGenerator", "matflow.InputFileGeneratorSource", "matflow.InputSource", "matflow.InputSourceType", "matflow.InputValue", "matflow.Jobscript", "matflow.Loop", "matflow.NumCores", "matflow.OutputFileParser", "matflow.OutputFileParserSource", "matflow.OutputLabel", "matflow.Parameter", "matflow.ParameterPath", "matflow.ParameterPropagationMode", "matflow.ParameterValue", "matflow.Parameters", "matflow.ParametersList", "matflow.ResourceList", "matflow.ResourceSpec", "matflow.Rule", "matflow.RunDirAppFiles", "matflow.SGEPosix", "matflow.SchemaInput", "matflow.SchemaOutput", "matflow.SchemaParameter", "matflow.SlurmPosix", "matflow.SubParameter", "matflow.Submission", "matflow.Task", "matflow.TaskInputParameters", "matflow.TaskList", "matflow.TaskObjective", "matflow.TaskOutputParameters", "matflow.TaskSchema", "matflow.TaskSchemasList", "matflow.TaskSourceType", "matflow.TaskTemplateList", "matflow.ValuePerturbation", "matflow.ValueSequence", "matflow.Workflow", "matflow.WorkflowBlueprint", "matflow.WorkflowLoop", "matflow.WorkflowLoopList", "matflow.WorkflowTask", "matflow.WorkflowTaskList", "matflow.WorkflowTemplate", "matflow.app", "matflow.cancel", "matflow.cli", "matflow.get_OS_info", "matflow.get_known_submissions", "matflow.get_shell_info", "matflow.make_and_submit_demo_workflow", "matflow.make_and_submit_workflow", "matflow.make_demo_workflow", "matflow.make_workflow", "matflow.param_classes", "matflow.param_classes.load", "matflow.param_classes.load.LoadCase", "matflow.param_classes.load.LoadStep", "matflow.param_classes.load.StrainRateMode", "matflow.param_classes.orientations", "matflow.param_classes.orientations.EulerDefinition", "matflow.param_classes.orientations.LatticeDirection", "matflow.param_classes.orientations.OrientationRepresentation", "matflow.param_classes.orientations.OrientationRepresentationType", "matflow.param_classes.orientations.Orientations", "matflow.param_classes.orientations.QuatOrder", "matflow.param_classes.orientations.UnitCellAlignment", "matflow.param_classes.seeds", "matflow.param_classes.seeds.MicrostructureSeeds", "matflow.param_classes.single_crystal_parameters", "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters", "matflow.param_classes.utils", "matflow.param_classes.utils.masked_array_from_list", "matflow.run_hpcflow_tests", "matflow.run_tests", "matflow.show", "matflow.show_legend", "matflow.submit_workflow", "matflow.tests", "matflow.tests.conftest", "matflow.tests.conftest.new_null_config", "matflow.tests.conftest.null_config", "matflow.tests.conftest.pytest_addoption", "matflow.tests.conftest.pytest_collection_modifyitems", "matflow.tests.conftest.pytest_configure", "matflow.tests.conftest.pytest_unconfigure", "matflow.tests.test_cli", "matflow.tests.test_cli.test_hpcflow_version", "matflow.tests.test_cli.test_version", "matflow.tests.test_utils", "matflow.tests.test_utils.test_masked_array_from_list_1D", "matflow.tests.test_utils.test_masked_array_from_list_1D_masked", "matflow.tests.test_utils.test_masked_array_from_list_2D", "matflow.tests.test_utils.test_masked_array_from_list_2D_masked", "Python API", "Command-line interface", "Configuration file", "Glossary", "Reference", "Template components", "Command files", "Environments", "Parameters", "Task schemas", "Demo workflows", "Configuration how-tos", "Environment how-tos", "How-To Guides", "Task schema how-tos", "Template components", "Workflow templates how-tos", "Workflow how-tos", "User Guide", "Tutorials", "Jupyter notebooks", "Simulating yield surfaces with DAMASK simulations"], "terms": {"convent": [0, 110, 153], "commit": [0, 47, 81], "click": [0, 4], "git": 0, "see": [0, 16, 17, 22, 100, 148, 149, 153, 155], "ssh": [0, 155], "below": [0, 1, 4, 149, 150], "make": [0, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 94, 96, 148, 149, 155], "sure": 0, "you": [0, 4, 148, 149, 150, 151, 155], "switch": [0, 1, 63, 67], "branch": 0, "thi": [0, 1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 94, 95, 96, 97, 98, 100, 101, 106, 108, 110, 112, 114, 117, 121, 139, 140, 143, 146, 148, 149, 150, 151, 153, 155, 159], "i": [0, 1, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 36, 37, 38, 41, 42, 43, 44, 46, 47, 48, 50, 51, 55, 57, 59, 60, 63, 64, 65, 67, 68, 69, 70, 73, 75, 79, 80, 81, 83, 85, 94, 95, 98, 101, 117, 140, 144, 146, 148, 149, 150, 153, 155, 159], "protect": 0, "so": [0, 47, 50, 81, 94, 95, 96, 97, 139, 148, 150], "creat": [0, 1, 4, 15, 47, 50, 62, 81, 83, 85, 108, 139], "featur": [0, 81, 94, 95, 121, 139], "befor": [0, 6, 8, 17, 22, 81, 149], "push": 0, "github": [0, 1, 4, 154], "com": [0, 4, 108], "new": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "should": [0, 15, 17, 26, 28, 46, 48, 50, 52, 60, 64, 70, 75, 81, 83, 94, 95, 96, 97, 139, 140, 146, 148, 150], "abl": 0, "simpli": [0, 64], "run": [0, 1, 4, 6, 11, 13, 14, 15, 16, 17, 22, 28, 31, 33, 42, 47, 50, 60, 61, 62, 63, 67, 81, 117, 118, 119, 148, 149], "hpc": [0, 4, 63], "flow": 0, "folder": [0, 1, 4], "take": [0, 17, 62, 81], "care": 0, "everyth": [0, 4], "If": [0, 4, 6, 11, 12, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 32, 33, 35, 37, 40, 44, 47, 58, 59, 60, 61, 64, 70, 72, 76, 78, 80, 81, 83, 85, 87, 92, 93, 94, 95, 96, 97, 101, 119, 121, 139, 140, 149, 150, 155], "some": [0, 6, 13, 14, 16, 29, 34, 81, 141], "reason": 0, "fail": [0, 67, 81, 149, 159], "try": [0, 4, 85], "follow": [0, 4, 139, 140, 149, 154], "delet": [0, 6, 81, 139], "virtualenv": 0, "first": [0, 4, 29, 47, 69, 70, 83, 101, 139, 148, 149, 150, 159], "need": [0, 4, 28, 42, 47, 69, 70, 148, 149], "find": [0, 6, 8, 68, 75, 81, 85, 159], "version": [0, 1, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 28, 29, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 73, 75, 79, 80, 81, 83, 84, 85, 86, 87, 88, 139, 140, 149, 151, 156], "ar": [0, 1, 4, 6, 11, 12, 13, 14, 15, 16, 17, 22, 28, 29, 32, 33, 35, 40, 41, 43, 46, 47, 48, 50, 51, 57, 58, 62, 63, 64, 67, 69, 70, 72, 75, 76, 78, 80, 81, 82, 83, 85, 87, 92, 94, 95, 96, 97, 98, 101, 119, 120, 121, 139, 140, 146, 148, 150, 155], "us": [0, 1, 6, 15, 17, 18, 19, 22, 28, 29, 31, 34, 37, 43, 44, 46, 47, 50, 51, 53, 57, 60, 61, 63, 64, 67, 69, 70, 75, 80, 81, 83, 87, 94, 95, 96, 97, 101, 109, 110, 121, 139, 140, 146, 148, 149, 151, 152, 154, 155, 156, 159], "env": [0, 1, 11, 150], "info": [0, 47, 75, 81, 94, 95, 96, 97, 140, 152], "remov": [0, 50, 92, 119, 139, 149], "virtual": [0, 81], "environ": [0, 2, 3, 6, 7, 11, 17, 28, 29, 32, 33, 35, 42, 47, 50, 60, 69, 70, 75, 87, 139, 142, 143, 147, 149, 151, 156], "3": [0, 1, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 28, 29, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 73, 75, 79, 80, 81, 83, 84, 85, 86, 87, 88, 92, 101, 105, 119, 140, 146, 147, 148, 150, 159], "10": [0, 1, 80, 139, 148], "6": [0, 148], "clear": [0, 151, 156], "all": [0, 1, 6, 12, 13, 14, 15, 17, 22, 28, 29, 32, 35, 40, 47, 63, 64, 67, 69, 70, 71, 72, 74, 76, 78, 81, 84, 85, 86, 87, 94, 95, 108, 121, 148, 150, 159], "cach": [0, 41, 83, 159], "list": [0, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 94, 95, 98, 100, 101, 109, 116, 121, 140, 146, 148, 149, 150, 159], "pypi": [0, 4], "check": [0, 4, 8, 29, 44, 61, 70, 81, 83, 85, 147], "reinstal": 0, "open": [0, 4], "enviro": 0, "shell": [0, 1, 4, 11, 13, 14, 17, 22, 28, 47, 60, 62, 63, 67, 69, 81, 93, 140], "can": [0, 1, 4, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 84, 86, 87, 139, 140, 148, 149, 150, 154, 155], "interact": [0, 1, 28, 139, 149], "call": [0, 6, 11, 98, 149], "python3": 0, "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "help": [0, 17, 109, 139, 151], "To": [0, 139, 146, 150], "immedi": [0, 50, 81, 94, 95, 139], "chang": [0, 17, 29, 81, 149, 150], "reflect": 0, "reconfigur": 0, "point": [0, 4, 140, 146, 148, 150, 159], "your": [0, 4, 148, 149], "copi": [0, 29, 60, 70, 81, 108, 114, 148, 149], "do": [0, 47, 48, 92, 119, 139, 150], "add": [0, 1, 12, 32, 35, 40, 58, 59, 70, 72, 76, 78, 81, 83, 84, 85, 86, 94, 95, 148, 150], "edit": 0, "home": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "updat": [0, 63, 67, 85, 92, 119, 148, 149, 159], "doe": [0, 17, 20, 21, 23, 24, 37, 44, 60, 61, 64, 81, 94, 95, 96, 97, 121, 139, 149], "manual": 0, "modifi": [0, 6, 139, 148, 149], "pyproject": 0, "toml": 0, "file": [0, 1, 3, 4, 6, 9, 11, 12, 15, 16, 17, 20, 22, 23, 29, 36, 37, 38, 39, 41, 42, 43, 47, 50, 51, 53, 62, 69, 70, 80, 81, 85, 87, 92, 94, 95, 96, 97, 119, 142, 143, 147, 148, 150, 151, 154, 155, 156], "replac": 0, "new2": 0, "0": [0, 1, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 28, 29, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 73, 75, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 102, 104, 105, 107, 108, 109, 112, 139, 146, 148, 159], "2": [0, 10, 45, 55, 63, 67, 77, 87, 101, 102, 105, 146, 147, 148, 150, 159], "0a14": 0, "path": [0, 1, 4, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 22, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 94, 95, 96, 97, 108, 112, 121, 140, 147, 148, 149, 155, 159], "true": [0, 1, 6, 8, 11, 12, 15, 17, 22, 28, 29, 32, 35, 37, 40, 41, 46, 50, 58, 59, 61, 64, 69, 70, 72, 75, 76, 78, 80, 81, 85, 87, 92, 93, 94, 95, 96, 97, 119, 121, 139, 147, 148, 150, 159], "Then": 0, "accordingli": 0, "lock": 0, "rm": [0, 1, 4], "re": [0, 29, 70], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "runner": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "There": [1, 4, 155], "two": [1, 4, 6, 22, 83, 101, 150], "wai": [1, 4, 59, 141, 150], "task": [1, 6, 9, 15, 16, 17, 22, 25, 26, 28, 29, 30, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 57, 60, 64, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 94, 95, 121, 139, 142, 143, 148, 151, 156, 159], "mtex": [1, 110, 147, 148], "script": [1, 6, 17, 42, 47, 50, 81, 139, 147], "either": [1, 15, 22, 80, 81, 85, 87, 95, 97, 101, 139, 148], "compil": [1, 147, 148], "applic": [1, 4, 6, 17, 22, 33, 139, 150], "directli": [1, 6, 17, 47, 53, 70, 80, 108, 148], "control": [1, 17, 63, 67, 150, 155], "input": [1, 6, 9, 11, 15, 16, 17, 20, 21, 22, 23, 24, 26, 29, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 59, 60, 64, 65, 70, 71, 75, 77, 79, 80, 81, 85, 146, 147, 148, 150, 152, 159], "paramet": [1, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92, 93, 94, 95, 96, 97, 98, 100, 101, 106, 108, 110, 112, 114, 119, 121, 142, 143, 147, 148, 150, 152, 159], "which": [1, 6, 15, 17, 19, 20, 21, 23, 24, 25, 28, 29, 42, 44, 46, 48, 54, 60, 64, 69, 70, 75, 80, 81, 85, 94, 95, 96, 97, 98, 100, 109, 139, 140, 146, 148, 149, 150, 159], "fals": [1, 6, 11, 12, 15, 16, 17, 20, 21, 22, 23, 24, 29, 32, 35, 37, 40, 42, 47, 50, 53, 57, 58, 59, 61, 64, 69, 70, 72, 76, 78, 81, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 119, 121, 139, 147, 148, 159], "default": [1, 6, 13, 14, 15, 16, 17, 22, 28, 29, 44, 45, 49, 57, 58, 60, 63, 64, 67, 70, 75, 81, 85, 87, 89, 94, 95, 101, 110, 121, 139, 142, 146, 148, 150, 151, 156], "when": [1, 11, 17, 37, 43, 44, 47, 51, 57, 60, 81, 87, 94, 95, 96, 97, 139, 149, 150, 159], "run_mtex": [1, 147], "execut": [1, 4, 6, 11, 15, 17, 22, 28, 31, 34, 35, 47, 49, 60, 69, 75, 81, 87, 89, 94, 95, 121, 139, 140, 147, 150], "must": [1, 6, 8, 42, 47, 50, 59, 61, 64, 70, 140, 148, 149, 150, 153], "defin": [1, 15, 17, 20, 21, 22, 23, 24, 29, 48, 64, 70, 75, 81, 83, 85, 98, 146, 148], "compile_mtex": [1, 147], "run_compiled_mtex": [1, 147], "exectu": 1, "both": [1, 4, 80, 101], "fine": 1, "In": [1, 4, 148, 149, 150, 152, 155], "mean": [1, 64, 80, 81, 101, 153, 159], "For": [1, 6, 16, 17, 22, 64, 70, 71, 74, 81, 82, 108, 112, 139, 146, 148, 150, 154, 155], "direct": [1, 13, 14, 47, 63, 67, 101, 140, 146, 147, 148, 150, 159], "matlab": 1, "batch": [1, 67, 81], "document": [1, 7, 8, 75, 87, 100, 139, 149, 155], "here": [1, 81, 140, 150], "note": [1, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87, 98, 148, 149, 150], "requir": [1, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 84, 86, 87, 139, 150], "instal": [1, 2, 3], "perform": [1, 13, 14, 48, 63, 67], "via": [1, 4, 6, 17, 70, 108, 112, 148, 150, 155], "explor": [1, 4, 139], "within": [1, 6, 7, 11, 15, 17, 22, 41, 46, 47, 53, 62, 64, 68, 70, 75, 81, 83, 85, 139, 140, 149, 151], "gui": [1, 148], "todo": [1, 85, 101, 155, 159], "current": [1, 47, 63, 67, 81, 94, 95, 96, 97, 139, 140, 148, 149], "test": [1, 6, 8, 13, 14, 42, 50, 61, 63, 67, 81, 94, 95, 110, 117, 118, 148], "onli": [1, 6, 15, 22, 29, 43, 47, 51, 69, 70, 75, 80, 81, 92, 117, 139, 148, 149, 150], "name": [1, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 101, 102, 104, 105, 107, 109, 139, 140, 144, 148, 149, 151, 155, 159], "label": [1, 6, 11, 12, 16, 17, 20, 21, 22, 23, 24, 33, 35, 39, 46, 52, 64, 70, 75, 80, 140, 144, 146, 148, 150], "instanc": [1, 6, 7, 8, 9, 11, 12, 16, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 85, 86, 87, 92, 139, 150, 155], "command": [1, 3, 4, 6, 8, 12, 13, 14, 17, 31, 34, 47, 62, 63, 67, 75, 81, 94, 95, 110, 120, 142, 143, 148, 149, 150], "c": [1, 105, 108, 148], "ex": [1, 4, 14, 147, 150], "script_name_no_ext": 1, "arg": [1, 13, 14, 37, 63, 67, 117, 118, 139, 148], "num_cor": [1, 13, 14, 28, 33, 34, 60, 63, 67, 87, 140, 150], "1": [1, 10, 12, 15, 16, 22, 32, 35, 40, 45, 49, 55, 58, 59, 63, 67, 72, 76, 77, 78, 79, 80, 81, 84, 86, 101, 102, 104, 105, 107, 109, 139, 146, 147, 148, 150, 159], "parallel_mod": [1, 28, 33, 34, 60, 140, 150], "null": [1, 64, 150], "mtex_path": 1, "mtex_includ": 1, "get": [1, 6, 11, 12, 13, 14, 15, 16, 17, 22, 25, 28, 29, 32, 35, 36, 37, 38, 40, 41, 42, 43, 47, 48, 50, 51, 58, 59, 62, 63, 64, 67, 69, 70, 72, 75, 76, 78, 81, 83, 84, 85, 86, 91, 93, 101, 140, 151, 156, 159], "childitem": 1, "recurs": [1, 15], "directori": [1, 15, 17, 36, 37, 38, 39, 42, 47, 62, 63, 67, 70, 81, 85, 94, 95, 96, 97, 139, 140, 148, 150], "_": 1, "fullnam": 1, "join": [1, 81, 94, 95, 96, 97, 139], "data": [1, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 22, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 100, 101, 106, 108, 110, 112, 114, 140, 141, 147, 148, 159], "mcc": 1, "bat": 1, "r": [1, 63, 139, 144, 148, 159], "singlecompthread": 1, "m": [1, 147, 148], "script_nam": 1, "setup": [1, 31, 139], "set": [1, 11, 13, 15, 22, 25, 26, 28, 29, 46, 59, 60, 61, 63, 67, 70, 81, 85, 87, 92, 94, 95, 121, 140, 146, 148, 150, 151, 156, 159], "up": [1, 17, 22, 28, 31, 53, 54, 60, 61, 70, 81, 83, 85, 159], "e": [1, 6, 17, 46, 60, 64, 87, 139, 146, 148, 150, 153, 159], "g": [1, 6, 17, 87, 139, 146, 148, 150, 159], "load": [1, 4, 6, 62, 70, 75, 87, 108, 144, 147, 148, 149, 151, 156], "matlab_dir": 1, "runtim": [1, 159], "run_": 1, "sh": [1, 4, 63], "dream_3d_runn": [1, 147], "pipelin": [1, 141, 144, 147, 148], "process": [1, 9, 10, 11, 13, 14, 47, 62, 63, 67, 81, 92, 139, 141, 148], "json": [1, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 84, 86, 87, 92, 94, 95, 96, 97, 100, 101, 106, 108, 110, 112, 114, 139, 140, 144, 147, 148, 155], "python_script": [1, 147, 150], "gener": [1, 4, 6, 9, 15, 17, 42, 43, 47, 50, 53, 59, 61, 69, 70, 80, 81, 83, 87, 94, 95, 96, 97, 101, 108, 110, 116, 139, 140, 148, 150, 151, 156, 159], "python": [1, 2, 3, 6, 17, 37, 73, 139, 140, 142, 148, 149, 152, 153, 155], "dream3d": [1, 109, 144], "bin": [1, 13, 67], "pipelinerunn": [1, 148], "The": [1, 4, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 101, 139, 140, 146, 148, 149, 150, 159], "includ": [1, 8, 15, 17, 22, 29, 62, 70, 75, 80, 81, 87, 92, 94, 95, 96, 97, 114, 121, 139, 146, 148, 149, 150, 153], "defdap": [1, 147], "work": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "93": [1, 148], "4": [1, 10, 105, 108, 148, 150], "numpi": [1, 80, 81, 94, 95, 96, 97, 101, 108, 112, 139, 159], "23": 1, "5": [1, 105, 148], "we": [1, 42, 47, 81, 108, 139, 146, 148, 149, 150, 155], "our": 1, "cento": 1, "docker": 1, "imag": [1, 159], "org": [1, 63, 67, 148, 155], "hpcflow": [1, 2, 4, 19, 27, 48, 117, 153], "produc": [1, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87, 148], "relocat": 1, "conda": 1, "matflow": [1, 2, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159], "pack": [1, 53], "becaus": [1, 17, 64, 81, 94, 95, 96, 97, 98, 139, 150], "glibc": 1, "compat": [1, 33, 64, 81, 92, 139], "contain": [1, 4, 8, 12, 15, 17, 31, 32, 35, 37, 40, 41, 43, 46, 47, 48, 50, 51, 58, 59, 60, 62, 64, 68, 72, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 94, 95, 97, 98, 116, 139, 140, 148], "miniconda": 1, "bash": [1, 4, 13, 67, 139, 140], "http": [1, 4, 63, 67, 108, 109, 148, 155], "doc": [1, 8, 61, 87, 139], "io": 1, "project": 1, "en": 1, "latest": [1, 4, 15, 150], "user": [1, 3, 4, 13, 14, 42, 53, 63, 67, 101, 150, 155], "guid": [1, 3], "html": [1, 63, 75, 108], "initialis": [1, 15, 22, 29, 64, 70, 85, 108, 112], "init": 1, "reload": [1, 81, 140], "bashrc": [1, 4], "sourc": [1, 2, 6, 15, 17, 26, 29, 41, 42, 43, 44, 45, 46, 50, 51, 60, 64, 70, 75, 77, 79, 80, 81, 85, 149, 154], "pars": [1, 13, 14, 17, 44, 50, 51, 70, 81, 94, 95, 96, 97, 139], "n": [1, 148, 159], "matflow_damask_parse_v3a7_env": 1, "libgl": 1, "vtk": 1, "packag": [1, 3, 98], "yum": 1, "mesa": 1, "activ": [1, 47, 69, 92], "pip": 1, "deactiv": 1, "tarbal": 1, "save": [1, 6, 29, 41, 43, 46, 50, 51, 60, 70, 79, 80, 81, 108, 140, 149], "result": [1, 6, 7, 8, 9, 11, 12, 17, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87, 101, 148, 159], "compress": [1, 148], "outsid": 1, "transfer": 1, "target": [1, 47, 101, 148], "machin": [1, 22, 28, 47, 69, 92, 140, 149, 150], "On": [1, 64], "unpack": 1, "mkdir": 1, "tar": 1, "xzf": 1, "gz": 1, "now": [1, 92, 150], "normal": [1, 49, 53, 75, 80, 101, 139, 159], "abov": [1, 4], "resourc": [1, 4, 13, 14, 17, 22, 28, 29, 47, 59, 60, 63, 67, 70, 80, 81, 85, 87, 139, 150], "index": [1, 3, 6, 12, 15, 16, 17, 22, 29, 32, 35, 40, 46, 47, 58, 59, 69, 70, 72, 76, 78, 79, 81, 83, 84, 85, 86, 139, 159], "manag": [1, 11, 33, 47, 53, 75, 81, 149, 156], "an": [1, 4, 6, 7, 8, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 100, 101, 106, 108, 110, 112, 114, 121, 139, 140, 148, 150, 154, 159], "160": [1, 148], "damask_parse_env": 1, "matflow_damask_parse_env": 1, "damask_env": 1, "damask_grid": [1, 147], "volum": [1, 101, 146, 148], "pwd": [1, 147], "wd": 1, "omp_num_thread": 1, "eisenforschung": 1, "grid": [1, 148], "alpha7": 1, "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159], "matlab_env": 2, "exampl": [2, 4, 6, 22, 44, 64, 82, 100, 101, 139, 140, 146, 150, 154], "definit": [2, 44, 150], "window": [2, 4, 14, 47, 60, 139], "linux": [2, 4], "maco": [2, 4], "dream_3d_env": 2, "defdap_env": 2, "damask_pars": 2, "damask": [2, 147, 148, 156, 158], "contribut": [2, 3, 4], "recommend": [2, 4], "read": [2, 11, 148], "poetri": 2, "clone": 2, "repo": 2, "depend": [2, 4, 15, 17, 22, 29, 47, 81, 85, 87, 139, 150, 159], "cli": [3, 139, 148, 149, 155], "download": 3, "binari": [3, 148], "advanc": 3, "releas": [3, 150], "how": [3, 6, 11, 26, 28, 29, 43, 46, 51, 55, 60, 64, 65, 68, 70, 108, 139, 156], "tutori": [3, 156], "refer": [3, 20, 21, 23, 24, 44, 47, 63, 67, 81, 85, 108, 109, 139, 140, 148, 149, 155, 159], "api": [3, 4, 142, 148, 149, 152], "line": [3, 4, 6, 11, 13, 14, 47, 63, 67, 119, 142, 148], "interfac": [3, 4, 142], "templat": [3, 17, 22, 29, 37, 48, 59, 60, 70, 75, 78, 81, 82, 83, 85, 87, 94, 95, 96, 97, 139, 142, 148, 149, 151, 156, 159], "compon": [3, 6, 15, 68, 80, 81, 101, 109, 139, 142, 148, 149], "demo": [3, 94, 96, 140, 142, 159], "workflow": [3, 4, 6, 11, 15, 17, 22, 29, 37, 39, 41, 43, 44, 46, 47, 48, 50, 51, 53, 56, 57, 59, 60, 64, 69, 70, 75, 79, 80, 82, 83, 84, 85, 86, 87, 89, 92, 94, 95, 96, 97, 100, 101, 106, 108, 110, 112, 114, 119, 121, 142, 149, 151, 156, 159], "configur": [3, 28, 70, 142, 150, 151, 156], "glossari": [3, 142], "develop": [3, 4, 81], "search": [3, 37], "page": [3, 4], "option": [4, 6, 7, 8, 11, 13, 14, 17, 18, 19, 28, 29, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 73, 75, 79, 81, 84, 85, 86, 87, 101, 139, 140, 148, 149, 150, 155], "allow": [4, 29, 42, 50, 64, 70, 81, 94, 95, 121, 139], "design": 4, "beginn": 4, "strongli": 4, "want": [4, 149, 150], "cluster": 4, "comfort": 4, "interest": 4, "place": 4, "start": [4, 10, 17, 45, 47, 49, 55, 69, 77, 80, 81, 102, 104, 105, 107, 109, 148, 150, 153], "simultan": [4, 81, 94, 95, 121, 139], "through": [4, 64, 151], "termin": [4, 48, 81, 83, 139], "prompt": 4, "past": 4, "shown": 4, "press": 4, "enter": [4, 31], "touch": 4, "tmp": 4, "curl": 4, "fssl": 4, "raw": 4, "githubusercont": 4, "main": [4, 9, 10, 68], "src": 4, "prereleas": 4, "univlink": 4, "powershel": [4, 14, 139, 140], "scriptblock": 4, "object": [4, 6, 7, 8, 9, 11, 12, 15, 18, 19, 22, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 98, 100, 108, 139, 148, 150, 152, 153, 155], "net": [4, 63, 109], "webclient": 4, "downloadstr": 4, "ps1": 4, "repositori": [4, 154], "It": [4, 28, 140], "zip": [4, 81, 140, 155], "archiv": [4, 140], "singl": [4, 46, 47, 59, 64, 70, 79, 81, 85, 100, 101, 139, 148, 155], "extract": [4, 56, 63, 67, 100, 101, 106, 108, 110, 112, 114, 148], "access": [4, 12, 32, 35, 40, 58, 59, 72, 76, 78, 84, 86, 101, 148], "locat": [4, 139, 148], "oper": [4, 34, 91, 93, 139], "system": [4, 13, 28, 47, 60, 91, 93, 139], "local": [4, 15, 17, 22, 29, 44, 45, 70, 81, 85, 139, 140, 155], "share": [4, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87], "librari": 4, "support": [4, 13, 14, 28, 34, 49, 63, 67, 81, 93, 94, 95, 121, 139, 148, 155], "usernam": 4, "appdata": 4, "A": [4, 8, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 32, 33, 34, 35, 39, 40, 46, 47, 48, 49, 53, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 100, 101, 105, 140, 141, 146, 148, 150], "symbol": 4, "link": 4, "alia": [4, 47, 139], "simpl": [4, 80, 148, 150], "ad": [4, 26, 46, 59, 81, 83, 85], "zshrc": 4, "profil": 4, "ani": [4, 6, 7, 8, 9, 10, 15, 16, 17, 22, 25, 28, 29, 34, 42, 46, 47, 50, 53, 57, 60, 63, 67, 70, 75, 77, 80, 81, 83, 85, 87, 92, 139, 149, 150], "detect": 4, "alreadi": [4, 41, 42, 59, 81, 94, 95, 96, 97, 139], "stop": [4, 42, 48, 49, 80, 148, 150], "exit": [4, 17, 81, 139], "connect": 4, "internet": 4, "might": [4, 13, 14, 149, 150], "proxi": 4, "0a130": [4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 28, 29, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 73, 75, 79, 80, 81, 83, 84, 85, 86, 87, 88, 140], "come": [4, 15, 22, 29, 44, 70, 85, 148], "soon": 4, "avail": [4, 70, 117, 139, 140, 150], "format": [4, 6, 17, 37, 63, 67, 75, 81, 87, 94, 95, 96, 97, 139, 148, 150, 154, 155], "correspond": [4, 17, 29, 69, 81, 85, 100, 101, 150], "differ": [4, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 84, 86, 87, 148, 150], "pyinstal": 4, "platform": 4, "executablematflow": 4, "v0": 4, "linuxlinux": 4, "foldermatflow": 4, "dir": 4, "zipmaco": 4, "macosmaco": 4, "zipwindow": 4, "win": 4, "switcher": 4, "top": [4, 17, 80, 140, 148], "right": [4, 80, 148], "corner": 4, "other": [4, 15, 22, 28, 44, 50, 59, 64, 70, 81, 109, 150, 159], "attribut": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 114, 150, 153], "function": [5, 17, 115, 117, 123, 130, 133, 139, 140, 148, 150, 155], "class": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 140, 146], "none": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 92, 93, 94, 95, 96, 97, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 114, 119, 121, 147, 148, 159], "script_data_in": [6, 150], "script_data_out": [6, 150], "script_data_files_use_opt": 6, "script_ex": [6, 150], "script_pass_env_spec": [6, 42, 50, 150], "abort": [6, 42, 50, 69, 81], "input_file_gener": [6, 9, 10, 147], "output_file_pars": [6, 9, 10, 147], "input_fil": [6, 15, 16, 17, 22, 29, 42, 70, 85, 147, 148], "output_fil": [6, 15, 16, 17, 22, 50, 147], "rule": [6, 8, 11, 18, 19, 27, 42, 44, 48, 50, 52, 153], "save_fil": [6, 50], "clean_up": [6, 50], "base": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 114], "atom": [6, 17], "enact": [6, 7, 15, 16, 17, 50], "iter": [6, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 44, 48, 57, 61, 70, 81, 83, 85, 139, 148], "structur": [6, 7, 8, 9, 11, 12, 17, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 84, 86, 87, 148], "actionenviron": 6, "str": [6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 79, 80, 81, 83, 84, 85, 86, 87, 89, 93, 94, 95, 96, 97, 101, 112, 140, 146], "inform": [6, 16, 17, 22, 26, 47, 63, 75, 83, 85, 87, 91, 92, 93, 119, 139, 151, 156], "about": [6, 16, 17, 22, 47, 63, 75, 85, 91, 92, 93, 119, 139, 151, 155, 156], "output": [6, 9, 11, 13, 14, 15, 16, 17, 22, 23, 24, 44, 50, 51, 52, 63, 64, 65, 67, 70, 74, 75, 77, 81, 85, 119, 120, 139, 146, 147, 148, 150, 152, 159], "bool": [6, 8, 11, 12, 15, 16, 17, 22, 28, 29, 32, 35, 37, 40, 41, 42, 43, 46, 47, 50, 51, 53, 57, 58, 60, 61, 64, 69, 70, 72, 75, 76, 78, 79, 80, 81, 85, 87, 92, 93, 94, 95, 96, 97, 106, 119, 121], "pass": [6, 11, 13, 14, 17, 28, 42, 50, 60, 63, 67, 69, 70, 81, 87, 94, 95, 96, 97, 101, 139, 148], "like": [6, 12, 32, 35, 40, 58, 59, 72, 76, 78, 84, 86, 98, 139, 140, 148, 149, 150, 155], "hdf5": [6, 56, 100, 101, 106, 108, 110, 112, 114, 144, 147], "etc": [6, 17, 47, 81, 159], "own": [6, 25, 41, 43, 51, 60], "alwai": [6, 64, 65, 81, 94, 95, 96, 97, 139], "overwritten": [6, 81, 94, 95, 96, 97, 139], "regardless": [6, 81], "its": [6, 15, 22, 29, 47, 75, 83, 85, 139, 149, 150], "initi": [6, 15, 87, 153], "valu": [6, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 28, 29, 31, 32, 35, 36, 37, 38, 39, 40, 41, 45, 46, 53, 55, 56, 57, 58, 59, 63, 64, 67, 70, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 139, 140, 146, 147, 148, 150, 151, 156, 159], "whether": [6, 11, 13, 14, 15, 17, 22, 25, 28, 29, 37, 41, 42, 43, 47, 50, 51, 53, 57, 60, 63, 64, 65, 67, 69, 70, 75, 81, 87, 95], "detail": [6, 17, 70, 143, 153, 155], "inputfilegener": [6, 43], "outputfilepars": [6, 51], "parser": [6, 9, 17, 50, 51, 126, 150], "filespec": [6, 12, 41, 42, 50, 144], "": [6, 13, 14, 16, 17, 29, 41, 43, 46, 47, 51, 53, 63, 67, 69, 70, 75, 79, 81, 83, 85, 94, 95, 96, 97, 100, 110, 139, 143, 148, 150, 159], "actionrul": [6, 11, 42, 50], "determin": [6, 13, 14, 17, 61, 64, 69, 95, 97, 139, 146], "explicitli": [6, 17, 64], "after": [6, 17, 29, 81], "each": [6, 15, 17, 22, 28, 47, 59, 70, 80, 81, 85, 94, 95, 119, 139, 140, 146, 148, 150, 159], "step": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87, 100, 101, 148], "method": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 94, 95, 96, 97, 100, 101, 106, 108, 110, 112, 114, 153], "app": [6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 79, 80, 81, 83, 84, 85, 86, 87, 117, 139, 140, 150, 154, 155], "compose_sourc": [6, 42, 50], "snip_path": [6, 42, 50], "content": [6, 41, 42, 43, 50, 51, 139], "return": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 93, 94, 95, 96, 97, 100, 101, 106, 108, 110, 112, 114, 121, 139, 140, 159], "type": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 114, 121, 139, 140, 146, 148, 150, 153], "expand": 6, "necessari": [6, 15, 150], "convert": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 84, 86, 87, 155], "classmethod": [6, 7, 8, 9, 11, 12, 13, 14, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 100, 101, 106, 108, 110, 112, 114], "from_json_lik": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87, 108, 112, 146], "json_lik": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87], "shared_data": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87], "yaml": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 84, 86, 87, 94, 95, 96, 97, 108, 112, 139, 144, 147, 150, 154, 155], "union": [6, 7, 8, 9, 11, 18, 19, 28, 29, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 48, 49, 51, 52, 53, 54, 59, 60, 61, 64, 65, 66, 69, 70, 73, 75, 79, 81, 84, 86, 87], "dict": [6, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 93, 94, 95, 96, 97, 100, 101, 106, 108, 110, 112, 114, 121, 140, 146], "deserialis": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87], "objectlist": [6, 7, 8, 11, 18, 19, 28, 29, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 48, 49, 51, 52, 53, 54, 59, 60, 61, 65, 66, 69, 70, 73, 75, 79, 84, 86, 87], "context": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 84, 86, 87], "generate_data_index": 6, "act_idx": 6, "ear_id": [6, 22, 47, 81, 139], "schema_data_idx": 6, "all_data_idx": 6, "param_sourc": 6, "element": [6, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 42, 44, 47, 50, 57, 59, 60, 61, 63, 64, 67, 69, 70, 71, 74, 81, 83, 85, 87, 101, 116, 120, 139, 146, 148, 150, 159], "whose": [6, 12, 17, 32, 35, 40, 46, 58, 64, 70, 72, 75, 76, 78, 81, 83, 85, 116, 139, 140, 159], "overal": [6, 17, 22], "mutat": [6, 13, 14, 63, 67, 85], "int": [6, 13, 14, 15, 16, 17, 22, 27, 28, 29, 33, 34, 41, 43, 44, 46, 47, 48, 49, 51, 54, 56, 60, 62, 63, 67, 68, 69, 70, 75, 79, 80, 81, 83, 85, 89, 92, 94, 95, 100, 101, 106, 108, 110, 112, 114, 119, 121, 146, 159], "get_command_input_file_label": 6, "tupl": [6, 11, 12, 13, 14, 17, 28, 32, 35, 40, 41, 43, 46, 47, 48, 51, 58, 59, 60, 63, 67, 69, 70, 72, 75, 76, 78, 79, 80, 83, 84, 86, 159], "get_command_input_typ": 6, "sub_paramet": [6, 53], "sub": [6, 29, 46, 70, 80, 98, 149, 150, 159], "dot": [6, 12, 32, 35, 40, 44, 46, 58, 72, 76, 78, 84, 86, 139, 159], "delimit": [6, 44, 46, 47, 108, 112, 139, 148], "untouch": 6, "root": 6, "disregard": 6, "part": [6, 15, 17, 22, 25, 46, 53, 69, 80, 83], "get_command_output_typ": 6, "stdout": [6, 11, 13, 14, 17, 47, 62, 63, 67, 81, 144, 147, 150], "stderr": [6, 11, 17, 47, 62, 81, 139, 144, 147], "argument": [6, 9, 11, 13, 14, 17, 28, 29, 37, 46, 59, 60, 63, 64, 67, 81, 87, 94, 95, 96, 97, 100, 139, 150], "get_commands_action_env": 6, "actual": [6, 11, 17, 34, 37, 41, 43, 50, 51], "get_environ": [6, 17], "primari": [6, 148], "get_environment_nam": 6, "get_environment_spec": [6, 17], "specif": [6, 13, 14, 17, 22, 28, 34, 36, 38, 39, 60, 63, 67, 75, 79, 85], "envion": 6, "assum": [6, 42, 47, 64, 81, 89, 139], "ha": [6, 17, 20, 21, 22, 23, 24, 47, 64, 100, 139, 147, 150], "been": [6, 17, 22, 47, 69, 83, 139], "get_input_file_generator_action_env": 6, "get_input_file_label": 6, "get_input_typ": 6, "consum": 6, "get_output_file_label": 6, "get_output_file_parser_action_env": 6, "get_output_typ": [6, 11], "standard": [6, 11, 17, 41, 60, 62, 81], "error": [6, 11, 62, 63, 67, 81, 140], "get_param_dump_file_path_hdf5": 6, "js_idx": [6, 17, 62, 81, 139], "js_act_idx": [6, 17, 81, 139], "hdf56": 6, "dump": [6, 62], "get_param_dump_file_path_json": 6, "get_param_load_file_path_hdf5": 6, "get_param_load_file_path_json": 6, "get_parameter_depend": [6, 75], "where": [6, 8, 15, 16, 17, 19, 22, 27, 37, 41, 43, 44, 46, 47, 51, 52, 59, 60, 61, 70, 75, 79, 81, 83, 85, 94, 95, 96, 97, 101, 114, 139, 140, 146, 148, 150, 159], "given": [6, 10, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 26, 29, 32, 33, 35, 40, 42, 44, 45, 47, 50, 55, 58, 61, 63, 67, 69, 70, 72, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 93, 102, 104, 105, 107, 109, 139], "schemaparamet": [6, 75], "get_parameter_nam": [6, 16, 17, 22], "prefix": [6, 16, 17, 20, 21, 22, 23, 24, 46, 62, 63, 67, 70, 80], "associ": [6, 16, 17, 20, 21, 22, 23, 24, 25, 29, 46, 47, 62, 64, 69, 70, 81, 85, 87, 139, 146, 150], "would": [6, 22, 98, 150], "p1": [6, 22, 64, 150], "p2": [6, 22, 150], "ignor": [6, 16, 17, 22, 29, 62, 70, 75, 81, 87, 139], "accept": [6, 12, 22, 32, 35, 40, 46, 58, 72, 76, 78], "same": [6, 22, 29, 41, 47, 70, 81, 148, 151, 156], "one": [6, 17, 22, 29, 48, 53, 59, 61, 64, 70, 80, 81, 83, 85, 94, 95, 96, 97, 139, 148, 150], "distinct": [6, 22, 29, 70], "taskschema": [6, 54, 70, 76, 152], "level": [6, 17, 22, 87, 140, 149, 150], "wherea": [6, 22, 109, 148], "schema": [6, 9, 15, 17, 20, 21, 22, 23, 24, 40, 50, 52, 53, 64, 66, 70, 71, 74, 75, 76, 139, 142, 143, 148, 151, 156], "One": [6, 16, 17, 22, 83, 87, 89, 93, 101], "get_possible_scop": 6, "scope": [6, 7, 9, 10, 17, 22, 29, 59, 60, 70, 80, 81, 87, 147, 150], "inclus": 6, "order": [6, 26, 80, 109, 147, 148, 159], "decreas": 6, "actionscop": [6, 7, 60], "get_precise_scop": 6, "exact": 6, "have": [6, 13, 14, 17, 22, 28, 59, 69, 75, 83, 139, 149, 150, 155], "prior": [6, 61], "get_required_execut": [6, 11], "get_script_nam": 6, "get_snippet_script_path": 6, "script_path": 6, "env_spec": [6, 17, 42, 50, 150], "substitut": [6, 11, 81, 87, 94, 95, 96, 97, 139], "snippet": [6, 42, 150, 151], "get_snippet_script_str": 6, "string": [6, 9, 17, 41, 43, 44, 46, 47, 51, 60, 64, 70, 75, 79, 81, 87, 94, 95, 96, 97, 101, 139, 140, 146, 150], "is_input_type_requir": [6, 70], "typ": [6, 9, 15, 16, 17, 22, 53, 64, 65, 66, 70, 147, 153], "provided_fil": 6, "static": [6, 13, 14, 28, 62, 63, 67, 69, 70, 85, 108], "is_snippet_script": 6, "provid": [6, 9, 17, 29, 47, 48, 53, 58, 61, 70, 75, 119, 139, 140, 148, 149, 150, 154], "repres": [6, 8, 9, 17, 26, 29, 42, 47, 50, 53, 60, 61, 64, 71, 74, 75, 81, 83, 85, 87, 94, 95, 100, 101, 139, 159], "receiv": [6, 150], "process_script_data_format": 6, "form": [6, 75, 81], "properti": [6, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 33, 37, 39, 41, 43, 46, 47, 48, 51, 53, 59, 60, 63, 64, 65, 66, 67, 69, 70, 75, 79, 80, 81, 83, 85, 100, 101, 112, 114, 152], "script_data_in_group": 6, "script_data_in_has_direct": 6, "script_data_in_has_fil": 6, "intermedi": 6, "script_data_out_group": 6, "out": [6, 59, 62, 101, 139, 147, 159], "script_data_out_has_direct": 6, "script_data_out_has_fil": 6, "script_is_python": 6, "extens": [6, 36, 37, 39, 41, 43, 51, 81, 87], "task_schema": [6, 64], "came": 6, "test_rul": 6, "element_it": [6, 18, 44, 83], "against": [6, 28, 150], "specifi": [6, 13, 14, 15, 17, 19, 22, 28, 29, 31, 38, 42, 46, 48, 50, 59, 61, 63, 64, 67, 70, 80, 81, 83, 85, 87, 94, 95, 96, 97, 101, 139, 140, 146, 148, 151, 155], "to_dict": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87, 100, 101, 106, 108, 110, 112, 114], "serial": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87], "dictionari": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87, 100, 101, 106, 108, 110, 112, 114, 146], "to_json_lik": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87], "dct": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87], "exclud": [6, 7, 8, 9, 11, 12, 18, 19, 22, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87, 92, 93, 139], "trivial": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87], "also": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 84, 86, 87, 148, 149, 150, 153], "just": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 84, 86, 87, 149], "final": [6, 7, 8, 9, 11, 12, 15, 18, 19, 22, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 64, 65, 66, 69, 70, 72, 73, 75, 76, 78, 79, 80, 81, 84, 86, 87], "action": [7, 8, 9, 10, 11, 15, 16, 17, 20, 21, 22, 23, 24, 42, 47, 50, 59, 60, 61, 70, 75, 81, 85, 87, 147], "check_exist": [8, 61], "check_miss": [8, 61], "condit": [8, 61, 81, 101, 139, 140, 146, 148], "cast": [8, 46, 61], "appli": [8, 15, 17, 18, 44, 52, 60, 61, 64, 79, 81, 87, 150, 153], "special": 8, "enabl": [8, 50, 63, 67], "present": [8, 17, 33], "absent": [8, 17, 57], "conditionlik": [8, 61], "more": [8, 16, 17, 29, 59, 64, 70, 81, 83, 101, 119, 150, 153, 155], "complex": [8, 28], "guard": 8, "element_iter": [8, 16, 17, 20, 21, 23, 24, 29], "hold": [8, 47], "particular": [8, 13, 14, 16, 17, 22, 34, 39, 47, 63, 64, 65, 67, 81, 85, 94, 95, 96, 97, 139, 150], "elementiter": [8, 15, 18, 20, 21, 23, 24, 61, 81, 85], "kwarg": [9, 12, 13, 14, 32, 35, 40, 58, 59, 61, 63, 67, 72, 76, 78, 80, 81, 84, 86, 100, 112], "identif": 9, "subset": [9, 17, 52, 70, 81, 83, 148], "filter": [9, 13, 14, 18, 19, 22, 27, 28, 44, 52, 63, 67, 109, 148], "actionscopetyp": 9, "extra": 9, "keyword": [9, 13, 14, 46, 59, 63, 64, 67, 81, 94, 95, 96, 97], "to_str": [9, 44], "render": [9, 44], "qualnam": [10, 45, 55, 77, 102, 104, 105, 107, 109], "boundari": [10, 45, 47, 55, 77, 101, 102, 104, 105, 107, 109], "enum": [10, 45, 55, 77, 102, 104, 105, 107, 109], "variabl": [11, 17, 63, 67, 81, 87, 94, 95, 96, 97, 139, 140], "stdin": 11, "factori": [11, 18, 53, 87], "mai": [11, 15, 17, 22, 26, 29, 31, 33, 47, 60, 64, 70, 81, 85, 116, 119, 139, 140, 148, 150, 153], "prepar": [11, 17, 47, 56, 100, 101, 106, 108, 110, 112, 114], "write": [11, 17, 42, 47, 50, 56, 59, 81, 100, 101, 106, 108, 110, 112, 114, 150], "state": [11, 13, 14, 17, 47, 63, 67, 69, 120, 139], "elig": 11, "overrid": [11, 63, 139], "get_command_lin": 11, "ear": [11, 15, 16, 17, 20, 21, 22, 23, 24, 47, 69, 81, 85, 120], "resolv": [11, 15, 17, 22, 37, 39, 81, 140], "ordinarili": 11, "time": [11, 17, 27, 28, 29, 47, 69, 81, 87, 94, 95, 96, 97, 101, 139], "write_command": [11, 81], "process_std_stream": 11, "descript": [11, 20, 21, 23, 24, 29, 47, 59, 61, 69, 81, 83], "stread": 11, "becom": [11, 150], "later": 11, "describ": [11, 69, 75], "thing": [11, 73, 149], "stream": [11, 62, 81], "handl": [11, 29, 37, 39], "_object": [12, 32, 35, 40, 58, 59, 72, 76, 78, 84, 86], "notat": [12, 32, 35, 40, 58, 72, 76, 78, 84, 86], "add_object": [12, 32, 35, 40, 58, 59, 72, 76, 78, 84, 86], "obj": [12, 32, 35, 40, 58, 59, 72, 76, 78, 84, 86], "skip_dupl": [12, 32, 35, 40, 58, 59, 72, 76, 78, 84, 86], "multipl": [12, 17, 20, 21, 23, 24, 32, 35, 37, 40, 46, 50, 58, 64, 70, 72, 75, 76, 78, 79, 81, 84, 85, 86, 94, 95, 100, 119, 121, 139, 148, 151, 156], "is_hash": [12, 32, 35, 40, 58, 72, 76, 78], "kei": [12, 17, 31, 32, 35, 40, 58, 59, 64, 70, 72, 75, 76, 78, 85, 92, 100, 139, 140, 146, 148, 150], "hash": [12, 13, 14, 28, 32, 35, 40, 53, 58, 63, 67, 72, 76, 78], "access_attribute_valu": [12, 32, 35, 40, 58, 72, 76, 78, 84, 86], "match": [12, 32, 33, 35, 37, 40, 58, 63, 64, 67, 72, 76, 78, 84, 86, 140, 150], "criteria": [12, 32, 35, 40, 58, 72, 76, 78, 84, 86], "get_al": [12, 32, 35, 40, 58, 59, 72, 76, 78, 84, 86, 140], "list_attr": [12, 32, 35, 40, 58, 59, 72, 76, 78, 84, 86], "uniqu": [12, 13, 14, 32, 35, 40, 58, 59, 63, 67, 69, 70, 72, 76, 78, 81, 84, 85, 86], "constitu": [12, 32, 35, 40, 58, 59, 72, 76, 78, 84, 86], "schedul": [13, 14, 22, 28, 47, 60, 63, 67, 69, 81, 92, 140], "posix": 13, "shell_arg": [13, 14, 28, 47, 60, 63, 67], "pre": [13, 14, 63, 67, 81, 82], "quot": [13, 14, 63, 67, 140, 146], "shebang_arg": [13, 63, 67, 140], "shebang": [13, 14, 63, 67], "jobscript": [13, 14, 17, 28, 62, 63, 67, 69, 81, 94, 95, 120, 121], "default_shebang_arg": [13, 14, 63, 67], "default_shell_arg": [13, 14, 63, 67], "default_shell_execut": [13, 14, 67], "cancel_job": [13, 14, 63, 67], "js_ref": [13, 14, 63, 67], "cancel": [13, 14, 47, 63, 67, 69, 81, 94, 95], "job": [13, 14, 17, 28, 47, 60, 63, 67, 69, 81], "get_job_state_info": [13, 14, 63, 67], "num_js_el": [13, 14], "queri": [13, 14, 63, 67, 139], "id": [13, 14, 15, 17, 22, 29, 47, 48, 63, 67, 69, 70, 81, 83, 85, 89, 92, 139], "statu": [13, 14, 17, 63, 67, 69, 81, 92, 94, 95, 96, 97], "appear": [13, 14, 63, 67], "jobscriptelementst": [13, 14, 47, 63, 67, 69], "get_submit_command": [13, 14, 63, 67], "js_path": [13, 14, 63, 67], "dep": [13, 14, 47, 63, 67], "concret": [13, 14, 16, 29, 33, 75, 81, 87], "submiss": [13, 14, 17, 47, 63, 67, 81, 89, 92, 94, 95, 119, 121, 151, 156], "get_version_info": [13, 14, 63, 67], "is_jobscript_act": [13, 14, 63, 67], "process_id": [13, 14, 47], "process_cmdlin": [13, 14], "wait": [13, 14, 63, 67, 81, 94, 95, 121], "upstream": [13, 14, 15, 17, 22, 29, 50, 81, 83, 85, 159], "complet": [13, 14, 67, 81, 83, 94, 95, 139], "is_num_cores_support": [13, 14, 63, 67], "core_rang": [13, 14, 63, 67], "number": [13, 14, 16, 22, 27, 31, 33, 34, 47, 48, 49, 63, 67, 70, 79, 80, 81, 83, 85, 92, 101, 108, 112, 119, 139, 146, 148, 153], "core": [13, 14, 19, 27, 28, 33, 34, 49, 60, 63, 67, 101, 153], "rang": [13, 14, 49, 63, 67, 80, 159], "parse_submission_output": [13, 14, 63, 67], "process_resourc": [13, 14, 63, 67], "scheduler_config": [13, 14, 63, 67], "unique_properti": [13, 14, 63, 67, 69], "wait_for_jobscript": [13, 14, 63, 67], "callback": [13, 14, 139], "until": [13, 14, 81, 94, 95, 139], "callabl": [13, 14], "id_": [15, 17, 22, 81], "is_pend": [15, 17, 22], "es_idx": 15, "seq_idx": 15, "src_idx": 15, "iteration_id": 15, "basic": [15, 65], "pend": [15, 17, 22, 63, 67], "workflowtask": [15, 22, 25, 30, 48, 57, 70, 71, 74, 86], "sequenc": [15, 17, 22, 29, 46, 54, 70, 79, 80, 85, 148], "indic": [15, 16, 17, 22, 25, 28, 29, 41, 43, 47, 51, 60, 69, 70, 81, 83, 85, 94, 95, 121, 139, 148, 159], "known": [15, 17, 22, 33, 41, 47, 70, 81, 85, 92, 94, 95, 119, 151, 156, 159], "action_run": [15, 22], "elementactionrun": [15, 20, 21, 22, 23, 24, 25, 61, 81], "taken": [15, 17, 22, 148], "elementact": [15, 20, 21, 22, 23, 24, 25], "most": [15, 17, 28, 81, 109], "recent": [15, 17, 81, 92, 94, 95, 139, 149], "dir_nam": [15, 70, 85], "temporari": [15, 26, 81, 85, 149], "element_set": [15, 26, 29, 59, 60, 70, 85, 148], "element_set_idx": 15, "action_idx": [15, 16, 22, 47], "run_idx": [15, 16, 22], "raise_on_miss": [15, 16, 17, 22, 57, 85], "raise_on_unset": [15, 16, 17, 22, 57], "persist": [15, 22, 29, 41, 43, 46, 50, 51, 60, 70, 75, 79, 80, 81, 87, 94, 95, 96, 97, 108, 139, 149, 151, 156], "store": [15, 22, 41, 43, 46, 50, 51, 60, 79, 81, 87, 94, 95, 96, 97, 121, 139, 148, 155], "get_ear_depend": [15, 17, 22], "as_object": [15, 17, 22, 29, 85, 159], "get_data_idx": [15, 16, 17, 22], "get_dependent_ear": [15, 17, 22], "get_dependent_element_iter": [15, 22], "get_dependent_el": [15, 22, 85], "get_dependent_elements_recurs": 15, "task_insert_id": [15, 47, 48, 81, 83], "downstream": [15, 17, 22, 26, 64, 81, 83, 85], "identifi": [15, 46, 70, 73, 81, 153], "previou": [15, 17], "parametris": [15, 50, 70, 81, 87, 94, 95, 97, 100, 101, 148], "get_dependent_task": [15, 22, 85], "get_element_depend": [15, 22, 85, 159], "get_element_iteration_depend": [15, 22], "get_input_depend": [15, 17, 22], "get_parameter_sourc": [15, 16, 17, 22, 81], "as_str": [15, 16, 17, 22], "use_task_index": [15, 16, 17, 22], "rather": [15, 22], "than": [15, 22, 29, 64, 70], "insert": [15, 22, 47, 48, 70, 81, 83, 85], "get_sequence_valu": 15, "sequence_path": [15, 29], "get_task_depend": [15, 22, 29, 85], "global_idx": 15, "across": [15, 71, 74, 139], "init_loop_index": 15, "loop_nam": [15, 81, 139], "loop": [15, 17, 22, 47, 81, 83, 84, 87, 148, 159], "elementinputfil": [15, 22], "input_source_idx": 15, "input_sourc": [15, 26, 29, 64, 70, 85, 148], "inputsourc": [15, 29, 70], "elementinput": [15, 22], "latest_iter": 15, "elementoutputfil": [15, 22], "elementoutput": [15, 22], "schema_paramet": [15, 22], "sequence_idx": 15, "to_element_set_data": 15, "bound": [15, 57, 66, 83, 85], "inputvalu": [15, 29, 64, 70], "resourcelist": [15, 29, 87], "abstract": [16, 29, 31, 33], "represent": [16, 53, 108, 148], "model": [16, 22, 148], "origin": [16, 22, 41, 44, 147, 148], "num_run": 16, "element_act": [17, 20, 21, 23, 24], "data_idx": [17, 22, 25], "commands_idx": 17, "start_tim": [17, 47, 69], "end_tim": [17, 47, 69], "snapshot_start": 17, "snapshot_end": 17, "submission_idx": [17, 81, 139], "success": 17, "skip": [17, 81], "exit_cod": [17, 81, 139], "metadata": [17, 81, 139, 150], "run_hostnam": 17, "unit": [17, 47, 108, 110, 159], "submit": [17, 28, 47, 63, 67, 69, 81, 94, 95, 121, 150], "program": [17, 33, 109], "With": 17, "over": [17, 29, 69, 70, 83], "sai": [17, 148], "space": [17, 28, 60, 80, 139], "mani": [17, 28, 60, 108], "per": [17, 28, 47, 60, 139, 148], "collect": [17, 29, 69, 159], "look": [17, 31, 53, 54, 61, 139, 148, 150, 159], "datetim": [17, 47, 69, 81, 94, 95, 96, 97, 139], "ever": 17, "end": [17, 47, 69, 81, 150], "snapshot": 17, "unspecifi": [17, 28], "what": [17, 27, 34, 41, 47, 69, 81, 83], "wa": [17, 29, 47, 48, 59, 81, 83, 87], "succeed": 17, "code": [17, 43, 51, 53, 63, 64, 65, 66, 67, 81, 139], "compose_command": 17, "js_action_idx": [17, 47, 62, 81, 139], "disk": [17, 81], "word": [17, 63, 67], "shell_var": 17, "dir_diff": 17, "directorysnapshotdiff": 17, "due": [17, 81], "finish": [17, 67, 92, 139], "underli": [17, 47], "rais": [17, 57, 70, 81, 94, 95, 121, 139], "except": [17, 57, 153], "unset": [17, 57, 140], "get_ifg_input_valu": 17, "get_ofp_input": 17, "get_ofp_output_fil": 17, "go": [17, 33, 47, 81, 148], "get_ofp_output": 17, "obtain": [17, 46], "get_all_previous_iteration_run": 17, "include_self": 17, "aim": [17, 101], "get_input_valu": 17, "label_dict": 17, "all_iter": [17, 147], "arrang": 17, "get_input_values_direct": 17, "human": 17, "readabl": 17, "get_resourc": [17, 22], "consid": [17, 22, 29, 44, 70, 81, 83, 85, 146], "did": 17, "succe": 17, "implement": [17, 53, 75, 153], "write_sourc": [17, 42, 50], "select": [18, 19, 33, 81, 151], "subsequ": [18, 29, 70], "group_by_distinct": [19, 70], "group": [19, 29, 40, 41, 43, 46, 47, 51, 56, 60, 64, 69, 70, 79, 85, 100, 101, 106, 108, 110, 112, 114, 148, 159], "sdk": [19, 27, 153], "elementfilt": [19, 27, 44, 52, 70], "parameterpath": [19, 70], "element_action_run": [20, 21, 23, 24], "prefixed_names_unlabel": [20, 21, 23, 24], "map": [20, 21, 22, 23, 24, 47, 63, 67, 81, 87, 139, 140, 148, 150], "between": [20, 21, 23, 24, 139, 151], "even": [20, 21, 23, 24], "empti": [20, 21, 23, 24, 64, 83, 140, 150], "prefixed_names_unlabelled_str": [20, 21, 23, 24], "ears_initialis": [22, 81], "loop_idx": [22, 85], "parent": [22, 25, 47, 59, 81, 83], "resolut": [22, 70, 147], "ear_ids_flat": 22, "ones": 22, "relev": [22, 75], "set_default": [22, 28], "os_nam": [22, 28, 47, 60], "get_resources_obj": 22, "searchabl": 22, "elementresourc": [22, 47], "get_template_resourc": 22, "entiti": [25, 83], "data_idx_is_set": 25, "get_siz": 25, "store_kwarg": [25, 81, 87, 94, 95, 96, 97], "size": [25, 139, 146, 147, 148], "is_set": 25, "nesting_ord": [26, 29, 70, 80, 85, 148], "newli": [26, 63, 67, 85, 108], "propag": [26, 55, 64, 65, 85], "nest": [26, 29, 46, 70, 80, 101, 140], "move": 26, "reinterpret": 26, "repetit": 27, "repeat": [27, 29, 70, 85, 148], "scratch": [28, 60], "num_cores_per_nod": [28, 60, 140], "num_thread": [28, 60], "num_nod": [28, 60, 140], "use_job_arrai": [28, 60], "max_array_item": [28, 60], "time_limit": [28, 60], "scheduler_arg": [28, 47, 60], "sge_parallel_env": [28, 60], "slurm_partit": [28, 60], "slurm_num_task": [28, 60], "slurm_num_tasks_per_nod": [28, 60], "slurm_num_nod": [28, 60], "slurm_num_cpus_per_task": [28, 60], "common": [28, 47, 62, 148, 150, 151], "leav": 28, "them": [28, 81, 85], "parallelmod": [28, 60], "parallel": [28, 33, 34, 60, 69, 81, 94, 95, 121, 139], "mode": [28, 33, 34, 60, 64], "request": [28, 60], "comput": [28, 60, 159], "node": [28, 60, 63, 67], "thread": [28, 60], "arrai": [28, 47, 60, 63, 67, 81, 101, 108, 116, 139, 159], "item": [28, 46, 60, 64, 79, 85, 100, 127, 139, 151, 156, 159], "long": [28, 60, 146], "addit": [28, 59, 60, 79, 81, 87, 150], "o": [28, 47, 60, 139, 148], "sge": [28, 60, 63, 67, 140], "slurm": [28, 60, 67, 140], "partit": [28, 60, 140], "cpu": [28, 60], "ask": [28, 60], "slurm_is_parallel": 28, "get_default_os_nam": 28, "get_default_schedul": 28, "shell_nam": [28, 47, 93, 139], "get_default_shel": 28, "get_env_instance_filterable_attribut": 28, "get_jobscript_hash": 28, "distinguish": [28, 64], "is_parallel": 28, "agnost": 28, "validate_against_machin": 28, "valid": [28, 29, 53, 73, 85, 87, 142, 149, 153], "those": [28, 64, 81, 140, 150], "env_preset": [29, 70, 87, 150], "sourceable_elem_it": [29, 70, 85], "allow_non_coincident_task_sourc": [29, 70], "merge_env": [29, 70, 87], "parameteris": [29, 82], "inputfil": [29, 70], "valuesequ": [29, 70], "elementgroup": [29, 70], "descriptor": [29, 47, 64, 81], "preset": [29, 70, 87, 148], "don": [29, 59], "t": [29, 59, 63, 70, 85, 139, 148], "global": [29, 85], "sourceabl": [29, 85], "intersect": [29, 70], "merg": [29, 59, 70, 87], "defined_input_typ": [29, 70], "elem_iter_id": 29, "element_local_idx_rang": 29, "belong": [29, 81], "ensure_element_set": 29, "combin": [29, 47, 61, 81, 87, 94, 95, 96, 97, 139], "get_defined_parameter_typ": 29, "get_defined_sub_parameter_typ": 29, "get_locally_defined_input": 29, "get_sequence_from_path": 29, "exist": [29, 42, 58, 61, 64, 70, 81, 94, 95, 96, 97, 121, 139, 140, 149, 150], "input_typ": [29, 75, 80], "is_input_type_provid": 29, "labelled_path": [29, 70], "prepare_persistent_copi": 29, "self": 29, "made": [29, 70, 81, 149], "dure": [29, 81, 139], "integr": 29, "task_templ": [29, 75], "deriv": [29, 36, 38, 70, 87, 117, 148], "undefined_input_typ": [29, 70], "aren": 29, "relat": [29, 81, 139], "_hash_valu": [31, 39, 53, 75], "suppli": [31, 65, 80, 83], "addion": 31, "pair": [31, 150, 159], "executableinst": 33, "filter_inst": 33, "desir": 33, "numcor": 34, "from_spec": [34, 79], "spec": [34, 59, 60, 79], "construct": [34, 79, 148], "file_nam": [36, 38, 139], "filenamespec": [36, 38, 144], "is_regex": 37, "pattern": [37, 63, 67, 139], "posit": [37, 85, 112], "omit": [37, 59], "regex": 37, "ext": [37, 39], "stem": [37, 38, 39, 148], "respect": [37, 39, 140], "possibli": 38, "store_cont": [41, 43, 51], "make_persist": [41, 43, 46, 51, 60, 75, 79, 80, 85], "integ": [41, 43, 46, 51, 60, 79, 81, 146], "zarr": [41, 43, 46, 51, 60, 79, 81, 85, 94, 95, 96, 97, 108, 139, 155], "normalised_files_path": 41, "normalised_path": [41, 46, 60, 80], "full": [41, 46, 60, 81, 119, 139, 146, 148], "filesystem": 41, "read_cont": [41, 43, 51], "earli": 42, "quick": [42, 151], "tend": 42, "get_action_rul": [42, 50], "otherwis": [42, 81, 139, 149], "recreat": [43, 51], "source_typ": [44, 148], "import_ref": 44, "task_ref": [44, 81, 148], "task_source_typ": 44, "inputsourcetyp": 44, "import": [44, 45, 70, 148, 149, 154, 155, 159], "tasksourcetyp": 44, "goe": 44, "instnac": 44, "from_str": 44, "str_defn": 44, "get_task": 44, "referenc": [44, 150], "import_": 44, "is_in": 44, "other_input_sourc": 44, "without": [44, 46, 70, 80, 85, 139], "value_class_method": [46, 80], "_inputvalue__check_obj": 46, "schemainput": [46, 70, 75], "real": 46, "invok": [46, 62, 100, 139, 149], "is_sub_valu": [46, 80], "interpret": [46, 81, 139], "labelled_typ": [46, 80], "normalised_inputs_path": [46, 80], "normalis": [46, 59, 70, 80, 159], "itself": [46, 64, 79], "task_act": 47, "task_el": 47, "task_loop_idx": 47, "submit_tim": [47, 69], "submit_hostnam": 47, "submit_machin": 47, "submit_cmdlin": 47, "scheduler_job_id": 47, "version_info": 47, "scheduler_nam": [47, 139], "togeth": [47, 80, 81], "js_element_idx": 47, "task_element_idx": 47, "ndarrai": [47, 101, 108, 112, 159], "plai": 47, "subprocess": 47, "ear_id_file_nam": 47, "ear_id_file_path": 47, "all_ear_id": [47, 69], "all_ear": [47, 69], "compose_jobscript": 47, "os_arg": [47, 140], "direct_stderr_file_nam": 47, "direct_stderr_path": 47, "direct_stdout_file_nam": 47, "direct_stdout_path": 47, "direct_win_pid_file_nam": 47, "pid": 47, "direct_win_pid_file_path": 47, "element_run_dir_file_nam": 47, "element_run_dir_file_path": 47, "last": 47, "get_active_st": 47, "as_json": [47, 69, 92], "get_commands_file_nam": [47, 62], "get_task_loop_idx_arrai": 47, "is_arrai": [47, 63, 67], "is_submit": 47, "jobscript_nam": 47, "jobscript_path": 47, "make_artifact_dir": 47, "artifact": [47, 81], "num_act": [47, 85], "num_el": [47, 63, 67, 81, 85], "scheduler_js_ref": 47, "scheduler_ref": 47, "generalis": 47, "compos": [47, 80], "print_stdout": [47, 69, 81], "variou": 47, "behalf": 47, "workflow_app_alia": 47, "write_ear_id_fil": 47, "text": [47, 61, 139], "token": 47, "write_element_run_dir_fil": 47, "run_dir": 47, "cross": [47, 159], "write_jobscript": 47, "num_iter": [48, 83, 148], "non_iterable_paramet": 48, "v": [48, 139, 148], "criterion": [48, 159], "express": 48, "insert_id": [48, 70, 85], "extent": [48, 83], "task_object": [48, 83], "workflow_templ": [48, 59, 60, 70, 82], "minimum": 49, "maximum": [49, 92, 101, 119, 139], "singular": 50, "Not": [50, 53, 80], "confus": 50, "plural": [50, 150], "miscellan": 50, "clean_fil": 50, "is_fil": 53, "_value_class": 53, "_valid": 53, "parametervalu": [53, 98, 100, 101, 106, 108, 110, 112, 114], "subparamet": 53, "valida": 53, "url_slug": 53, "url": [53, 81, 140, 154], "float": [54, 68, 79, 101, 146, 159], "tasktempl": [54, 78], "explicit": [55, 64], "implicit": [55, 64, 65], "never": [55, 64], "handler": [56, 75], "intend": 56, "subclass": 56, "dump_to_hdf5_group": [56, 100, 101, 106, 108, 110, 112, 114], "prepare_json_dump": [56, 100, 101, 106, 108, 110, 112, 114], "serialis": [56, 100, 101, 106, 108, 110, 112, 114], "save_from_hdf5_group": [56, 100, 101, 106, 108, 110, 112, 114, 146], "param_id": [56, 81, 100, 101, 106, 108, 110, 112, 114], "save_from_json": [56, 100, 101, 106, 108, 110, 112, 114], "return_element_paramet": 57, "miss": [57, 147], "overridden": [58, 59, 75], "resourcespec": [59, 87], "append": [59, 81, 159], "child": [59, 83], "get_scop": 59, "merge_oth": 59, "lower": [59, 153], "preced": [59, 81], "potenti": 59, "sever": [59, 155], "instead": [59, 139, 146], "retriev": [60, 71, 74, 81, 92, 139, 149, 159], "correct": 60, "wsl": [60, 140], "still": [60, 150], "nt": 60, "allowed_paramet": 60, "copy_non_persist": 60, "non": [60, 69, 70, 81, 100, 101, 140], "normalised_resources_path": 60, "testabl": 61, "exactli": 61, "element_lik": 61, "evalu": 61, "encapsul": 62, "recognit": 62, "get_log_file_nam": 62, "log": [62, 67, 81, 140, 144, 149], "get_run_file_prefix": 62, "get_run_param_dump_file_prefix": 62, "get_run_param_load_file_prefix": 62, "get_std_file_nam": 62, "take_snapshot": 62, "jsonlikedirsnapshot": 62, "cwd_switch": [63, 140], "gridschedul": 63, "sourceforg": 63, "htmlman": 63, "htmlman1": 63, "qsub": 63, "softpanorama": 63, "grid_engin": 63, "queue": [63, 67], "queue_stat": 63, "shtml": 63, "default_array_item_var": [63, 67], "sge_task_id": 63, "default_array_switch": [63, 67], "default_cwd_switch": 63, "cwd": 63, "default_del_cmd": [63, 67], "qdel": 63, "default_js_cmd": [63, 67], "default_login_nodes_cmd": [63, 67], "qconf": 63, "login": [63, 67], "default_login_node_match": [63, 67], "default_show_cmd": [63, 67], "qstat": 63, "show": [63, 67, 75, 81, 94, 95, 112, 120, 147, 149, 151, 156], "default_submit_cmd": [63, 67], "format_opt": [63, 67], "sub_idx": [63, 67, 81, 139], "format_switch": [63, 67], "j": [63, 67, 101, 148], "get_job_status": 63, "get_login_nod": 63, "hostnam": [63, 140], "administr": 63, "report": [63, 81], "job_id": [63, 67], "state_lookup": [63, 67], "eh": 63, "eq": [63, 159], "rt": 63, "rr": 63, "dr": 63, "d": 63, "dt": 63, "hr": 63, "hq": 63, "qw": 63, "tt": 63, "default_valu": 64, "nulldefault": 64, "propagation_mod": [64, 65], "parameterpropagationmod": [64, 65], "expect": [64, 70, 87, 150], "squar": 64, "bracket": 64, "catch": 64, "remain": [64, 70, 101], "treat": [64, 71, 74], "By": [64, 81, 87, 94, 95, 101, 121, 139, 140, 153], "inaccess": 64, "all_labelled_typ": 64, "input_or_output": [64, 65], "labelled_info": 64, "single_label": 64, "mulitpl": 64, "single_labelled_data": 64, "single_labelled_typ": 64, "manpag": 67, "sbatch": 67, "ri": 67, "itservic": 67, "manchest": 67, "ac": 67, "uk": 67, "csf4": 67, "slurm_array_task_id": 67, "scancel": 67, "squeue": 67, "me": 67, "out_of_memori": 67, "timeout": [67, 139], "address": 68, "anoth": [68, 150], "paranet": 68, "submission_part": 69, "js_parallel": [69, 81, 94, 95, 121, 139], "exploit": 69, "environmentslist": 69, "ears_by_el": 69, "abort_ears_file_nam": 69, "abort_ears_file_path": 69, "get_active_jobscript": 69, "get_end_tim": 69, "get_start_tim": 69, "get_unique_schedul": 69, "thei": [69, 70, 153], "get_unique_schedulers_of_jobscript": 69, "get_unique_shel": 69, "jobscript_indic": 69, "needs_submit": 69, "done": [69, 81, 149], "outstanding_jobscript": 69, "yet": [69, 85, 139], "successfulli": [69, 81], "ignore_error": [69, 81], "add_to_known": [69, 81, 94, 95], "submitted_jobscript": 69, "output_label": 70, "isol": 70, "satisfi": 70, "fetch": 70, "elementset": 70, "outputlabel": 70, "add_group": 70, "all_schema_act": 70, "all_schema_input_normalised_path": 70, "all_schema_input_typ": 70, "all_schema_input": 70, "all_schema_output_typ": 70, "all_schema_output": 70, "schemaoutput": [70, 75], "all_sourced_normalised_path": 70, "artefact": 70, "get_available_task_input_sourc": 70, "source_task": 70, "possibl": 70, "get_input_status": 70, "elem_set": 70, "inputstatu": 70, "status": 70, "get_param_provided_element_set": 70, "get_schema_act": 70, "idx": [70, 139, 159], "get_task_unique_nam": [70, 81], "non_universal_input_typ": 70, "univers": 70, "num_all_schema_act": 70, "total": [70, 81, 101], "num_element_set": [70, 85], "goal": 70, "prepare_element_resolut": 70, "input_data_indic": [70, 85], "especi": 70, "provides_paramet": [70, 75], "els": [70, 80, 139], "set_sequence_paramet": 70, "to_persist": 70, "doesn": 70, "undefined_input": 70, "undefin": 70, "universal_input_typ": 70, "unmodifi": [71, 74], "namespac": [71, 74], "attempt": 73, "achiev": [73, 101], "parameter_class_modul": 75, "web_doc": 75, "environment_preset": [75, 150], "mechan": [75, 146, 148], "taskobject": 75, "sphinx": 75, "built": [75, 82, 140, 143], "case": [75, 100, 101, 140, 148, 149, 150, 153], "basic_info": 75, "tabl": 75, "get_by_kei": 75, "config": [75, 127, 128, 129, 142, 151, 156], "get_info_html": 75, "get_kei": 75, "hashabl": 75, "ignore_invalid_act": 75, "invalid": [75, 139], "multi_input_typ": 75, "output_typ": 75, "multiplicative_factor": 79, "additive_factor": 79, "perturb": [79, 114, 148], "numer": [79, 144, 148], "factor": [79, 159], "from_fil": [80, 81, 87, 108, 112, 146], "file_path": [80, 139], "build": 80, "from_geometric_spac": 80, "num": [80, 148], "endpoint": 80, "geometr": 80, "from_linear_spac": 80, "linear": 80, "from_log_spac": 80, "logarithm": 80, "from_random_uniform": 80, "low": 80, "high": 80, "seed": [80, 146], "uniform": [80, 148], "random": [80, 100, 101, 108, 148], "from_rang": 80, "from_rectangl": [80, 148], "coord": [80, 148], "cover": 80, "rectangl": 80, "coordin": 80, "edg": 80, "choos": [80, 150], "bottom": 80, "left": 80, "input_path": 80, "path_split": 80, "th": [80, 81], "path_typ": 80, "resource_scop": 80, "workflow_ref": [81, 89, 139], "store_fmt": 81, "fs_kwarg": 81, "stabl": [81, 150], "phase": [81, 114, 146, 148], "abort_run": 81, "task_idx": 81, "element_idx": 81, "multi": 81, "add_loop": 81, "add_submiss": 81, "add_task": 81, "new_index": 81, "add_task_aft": 81, "new_task": 81, "add_task_befor": 81, "begin": 81, "artifacts_path": 81, "batch_upd": 81, "is_workflow_cr": 81, "hard": 81, "check_loop_termin": 81, "run_id": 81, "check_parameters_exist": 81, "id_lst": 81, "creation_info": 81, "creation": [81, 95, 96, 97, 139], "execution_path": 81, "from_json_fil": [81, 87], "json_path": 81, "overwrit": [81, 94, 95, 96, 97, 139], "ts_fmt": [81, 94, 95, 96, 97, 139], "ts_name_fmt": [81, 94, 95, 96, 97, 139], "pathlik": [81, 87, 89, 94, 95, 96, 97, 121], "workflowtempl": [81, 82, 94, 95, 154], "date": [81, 87, 94, 95, 96, 97, 139], "timestamp": [81, 94, 95, 96, 97, 139], "utc": [81, 94, 95, 96, 97, 139], "zone": [81, 94, 95, 96, 97, 139, 148], "write_empty_workflow": [81, 94, 95, 96, 97], "from_json_str": [81, 87], "json_str": 81, "from_yaml_fil": [81, 87, 154], "yaml_path": 81, "from_yaml_str": [81, 87], "yaml_str": 81, "template_path": 81, "template_format": [81, 87, 94, 95, 96, 97], "yml": 81, "forc": [81, 94, 95, 96, 97, 139], "from_templ": [81, 155], "from_template_data": 81, "template_nam": 81, "workflow_nam": [81, 94, 96, 139, 148], "whole": 81, "get_ear_ids_of_task": 81, "get_ear_skip": 81, "get_ears_from_id": 81, "get_ears_of_task": 81, "get_all_ear": 81, "get_all_element_iter": [81, 85], "get_all_el": 81, "get_all_parameter_data": 81, "get_all_parameter_sourc": 81, "get_all_paramet": 81, "anysparamet": 81, "get_all_submission_run_id": 81, "get_element_ids_from_ear_id": 81, "get_element_iteration_ids_from_ear_id": 81, "get_element_iterations_from_id": 81, "get_element_iterations_of_task": 81, "get_elements_from_id": 81, "get_iteration_final_run_id": 81, "loop_map": 81, "These": [81, 148, 153], "get_iteration_task_pathwai": 81, "ret_iter_id": 81, "ret_data_idx": 81, "pathwai": [81, 139], "get_loop_map": 81, "get_paramet": 81, "get_parameter_data": 81, "get_parameter_set_status": 81, "get_running_el": 81, "accord": [81, 85, 92, 139, 146, 150, 159], "get_running_run": 81, "get_store_ear": 81, "anysear": 81, "get_store_element_iter": 81, "anyselementit": 81, "get_store_el": 81, "anysel": 81, "get_store_task": 81, "anystask": 81, "get_task_ids_from_element_id": 81, "get_task_el": 81, "idx_lst": 81, "map_to_insert_id": 81, "input_files_path": 81, "is_parameter_set": 81, "workflowlooplist": 81, "num_ear": 81, "num_added_task": 81, "num_element_iter": 81, "num_loop": 81, "num_submiss": 81, "num_task": 81, "process_shell_parameter_output": 81, "cmd_idx": [81, 139], "rechunk": 81, "chunk_siz": [81, 139], "backup": [81, 139], "effici": [81, 83], "rechunk_parameter_bas": 81, "reorganis": 81, "chunk": [81, 139], "parameterss": 81, "rechunk_run": 81, "resolve_jobscript": 81, "save_paramet": 81, "set_ear_end": 81, "zero": [81, 101, 159], "set_ear_skip": 81, "record": [81, 155], "failur": 81, "being": [81, 83, 139], "met": [81, 139], "set_ear_start": 81, "set_ear_submission_index": 81, "set_ears_initialis": 81, "iter_id": [81, 85], "set_parameter_valu": 81, "show_all_ear_status": 81, "print": [81, 139, 149, 152], "everi": [81, 101], "store_format": 81, "submissions_path": 81, "return_idx": [81, 94, 95, 121], "halt": 81, "jobscript_parallel": [81, 94, 95, 121, 139], "hide": [81, 147], "block": [81, 94, 95, 139, 150], "monitor": [81, 94, 95], "benchmark": [81, 94, 95, 139], "displai": [81, 94, 95, 96, 97, 120, 139, 159], "live": [81, 94, 95, 96, 97, 139], "track": [81, 94, 95, 96, 97, 139, 149], "progress": [81, 94, 95, 96, 97, 139, 148], "task_artifacts_path": 81, "workflowtasklist": 81, "template_compon": 81, "temporary_renam": 81, "f": [81, 139, 148, 159], "renam": [81, 139], "restor": 81, "occur": 81, "unzip": 81, "fsspec": [81, 139, 140, 154], "sub_j": 81, "jobscript_idx": [81, 139], "include_execut": 81, "include_rechunk_backup": 81, "simpler": 82, "fit": [82, 148], "insid": [82, 83], "blueprint": 82, "num_added_iter": 83, "iterable_paramet": 83, "add_iter": 83, "parent_loop_indic": 83, "got": 83, "loopcach": 83, "downstream_task": [83, 85], "get_child_loop": 83, "ident": 83, "get_parent_loop": 83, "superset": 83, "new_empty_loop": 83, "iter_loop_idx": 83, "task_indic": 83, "test_termin": 83, "upstream_task": [83, 85], "workflowloop": 84, "element_id": 85, "bind": 85, "add_el": 85, "base_el": 85, "propagate_to": 85, "return_indic": 85, "elementpropag": 85, "ensure_input_sourc": 85, "behaviour": 85, "generate_new_el": 85, "output_data_indic": 85, "element_data_indic": 85, "sequence_indic": 85, "source_indic": 85, "get_dir_nam": 85, "initialise_ear": 85, "uninitialis": 85, "new_empty_task": 85, "resolve_element_data_indic": 85, "docstr": 85, "shouldn": 85, "element_dat_idx": 85, "unique_nam": 85, "source_fil": 87, "merge_resourc": 87, "limit": 87, "logic": 87, "stamp": 87, "constructor": [87, 146], "environemtn": 87, "ref_is_path": 89, "max_rec": [92, 119, 139], "no_upd": [92, 119], "inact": [92, 119, 139], "found": [92, 159], "exclude_o": 93, "template_file_or_str": [95, 97, 139], "is_str": [95, 97], "template_path_or_str": [95, 97], "builtin": [96, 139], "conflict": 98, "loadstep": 100, "biaxial": [100, 101, 146], "example_uniaxi": [100, 101, 146], "uniaxi": [100, 101, 146, 147, 148], "multistep": [100, 146], "remaind": 100, "num_step": 100, "planar_2d": [100, 101, 146], "planar": [100, 101], "2d": [100, 101, 116], "plane_strain": [100, 101, 146], "plane": [100, 101, 159], "strain": [100, 101, 148, 159], "random_2d": [100, 101, 146], "random_3d": [100, 101, 146, 148], "3d": [100, 148, 159], "uniaxial_cycl": [100, 101, 146], "cyclic": 100, "total_tim": [101, 148], "num_incr": [101, 148], "normal_direct": 101, "target_def_grad": [101, 148], "target_def_grad_r": [101, 148], "target_vel_grad": 101, "stress": [101, 148, 159], "dump_frequ": [101, 148], "rotat": 101, "simul": [101, 146, 148, 156, 158], "increment": [101, 148], "ma": 101, "maskedarrai": 101, "shape": [101, 108, 139, 159], "deform": 101, "gradient": 101, "tensor": [101, 159], "mask": [101, 116], "unmask": 101, "np": [101, 159], "arraylik": 101, "rate": 101, "written": 101, "charact": 101, "ij": [101, 159], "x": [101, 110, 116, 146, 148, 159], "y": [101, 110, 146, 148, 159], "z": [101, 110, 146, 147, 148], "along": 101, "method_arg": 101, "method_nam": 101, "flat": 101, "fourth": 101, "second": [101, 139, 148], "row": [101, 159], "column": [101, 119, 159], "shear": [101, 159], "third": [101, 148], "strain_rate_mod": 101, "strainratemod": 101, "def_grad_r": [101, 102], "vel_grad": [101, 102], "vel_grad_approx": [101, 102], "mix": 101, "sampl": [101, 148], "randomli": [101, 148], "interv": [101, 139], "strain_like_tensor": 101, "friendli": 101, "max_stress": 101, "min_stress": 101, "cycle_frequ": 101, "num_increments_per_cycl": 101, "num_cycl": 101, "waveform": 101, "sine": 101, "bung": [104, 148], "a_star": 105, "b": [105, 148], "b_star": 105, "c_star": 105, "orientationrepresentationtyp": 106, "euler_definit": [106, 148], "eulerdefinit": 106, "euler_is_degre": [106, 148], "quat_ord": 106, "quatord": 106, "euler": [107, 148, 159], "quaternion": [107, 108, 109], "unit_cell_align": [108, 148], "unitcellalign": 108, "orientationrepresent": 108, "ori_format": 108, "custom": [108, 112, 148, 149], "start_index": [108, 112], "from_random": [108, 112, 146, 148], "quat_sample_random": 108, "uniformli": 108, "distribut": [108, 148], "quat": 108, "stackoverflow": 108, "44031492": 108, "5042280": 108, "plan": 108, "uiuc": 108, "edu": 108, "node198": 108, "avoid": 108, "memori": [108, 159], "onc": 108, "firstli": 108, "small": 108, "four": 109, "vector": [109, 159], "scalar": [109, 159], "seem": 109, "bluequartz": 109, "orientationanalysisfilt": 109, "convertquaternion": 109, "scalar_vector": 109, "vector_scalar": 109, "latticedirect": 110, "from_hex_convention_damask": 110, "from_hex_convention_mtex": 110, "cell": 110, "align": [110, 148], "hexagon": [110, 148], "symmetri": 110, "crystalsymmetri": 110, "box_siz": [112, 148], "phase_label": [112, 147, 148], "orient": [112, 147, 148], "random_se": 112, "num_se": [112, 148], "as_bas": 114, "arr": 116, "fill_valu": 116, "1d": 116, "fill": 116, "suit": [117, 118, 139], "span": 119, "longer": [119, 139], "legend": [120, 139], "workflow_path": [121, 139], "tmp_path": [124, 125], "messag": 139, "config_dir": 139, "config_kei": [139, 140], "with_config": 139, "timeit": 139, "summari": 139, "decor": 139, "timeit_fil": 139, "ref": 139, "ref_typ": 139, "guess": 139, "no_callback": 139, "known_nam": 139, "sha": 139, "env_source_fil": 139, "l": [139, 148], "ensur": 139, "destin": [139, 148], "i1": 139, "infile1": 139, "i2": 139, "infile2": 139, "fmt": 139, "var": [139, 148], "comma": 139, "separ": 139, "syntax": 139, "kill": 139, "3600": 139, "timeout_check_interv": 139, "exceed": 139, "60": [139, 148], "watch_interv": 139, "poll": 139, "infrequ": 139, "app_nam": [139, 140], "bak": 139, "equal": [139, 148], "max": 139, "py_test_arg": 139, "pytest": 139, "submitt": 139, "colon": 139, "semicolon": 139, "invoc": 140, "environment_setup": 140, "log_file_path": 140, "matflow_v0": 140, "environment_sourc": [140, 150], "task_schema_sourc": 140, "command_file_sourc": 140, "parameter_sourc": 140, "default_schedul": 140, "default_shel": 140, "conform": 140, "conditionand": [140, 146], "valuedatatyp": [140, 146], "equal_to": [140, 146, 147, 148], "lt": [140, 146, 147], "x27": [140, 146], "gt": [140, 146, 147], "keys_is_inst": 140, "optionalcondit": 140, "required_kei": 140, "requiredcondit": 140, "allowed_kei": 140, "noneconfig": 140, "forbidden_kei": 140, "config_directori": 140, "config_file_nam": 140, "config_file_path": 140, "config_file_cont": 140, "config_schema": 140, "invoking_user_id": 140, "host_user_id": 140, "host_user_id_file_path": 140, "config_callback": 140, "_set": 140, "user_orcid": 140, "user_nam": 140, "user_affili": 140, "wsl_execut": 140, "wsl_distribut": 140, "wsl_user": 140, "noneexecut": 140, "nonewsl_us": 140, "nonewsl_execut": 140, "nonewsl_distribut": 140, "nonewsl": 140, "nonepowershel": 140, "nonebash": 140, "noneschedul": 140, "direct_posix": 140, "parallel_environ": 140, "noneparallel_environ": 140, "nonedefault": 140, "submit_cmd": 140, "show_cmd": 140, "del_cmd": 140, "js_cmd": 140, "array_switch": 140, "array_item_var": 140, "noneshow_cmd": 140, "noneshebang_arg": 140, "noneopt": 140, "nonejs_cmd": 140, "nonedel_cmd": 140, "nonecwd_switch": 140, "nonearray_switch": 140, "nonearray_item_var": 140, "noneslurm": 140, "nonenum_nod": 140, "nonenum_cores_per_nod": 140, "nonenum_cor": 140, "nonesg": 140, "nonedirect_posix": 140, "nonedirect": 140, "noneparameter_sourc": 140, "socket": 140, "gethostnam": 140, "is_inst": 140, "pathlib": 140, "app_vers": 140, "rel": [140, 148], "log_file_level": 140, "notset": 140, "debug": [140, 149], "warn": 140, "critic": 140, "in_": [140, 146], "log_console_level": [140, 149], "linux_release_fil": 140, "demo_data_manifest_fil": 140, "manifest": 140, "in_zip": 140, "text_fil": 140, "demo_data_dir": 140, "rve_extrusion_ebsd": 142, "rve_extrusion_ebsd_d": 142, "cubic_textur": 142, "damask_input_fil": 142, "damask_numer": [142, 147], "fit_single_crystal_paramet": [142, 146], "fit_yield_func": 142, "generate_volume_element_from_statist": 142, "modify_volume_element_grid_s": 142, "read_tensile_test_csv": [142, 147], "sample_orientations_crc_fil": 142, "sample_orientations_ctf_fil": 142, "sample_texture_crc_fil": 142, "sample_texture_ctf_fil": 142, "sample_texture_odf_mat": [142, 147], "sample_texture_model_odf": [142, 147], "sample_texture_random": [142, 147], "simulate_yield_surface_2d": [142, 159], "simulate_yield_surface_2d_brass": 142, "tension_damask_": 142, "tension_damask_al_n_repeat": 142, "tension_damask_mg": 142, "tension_damask_ti": 142, "section": 143, "geom": [144, 147, 148], "vti": [144, 147, 148], "materi": [144, 148, 156], "geom_load": 144, "geom_load_incd": 144, "static_output": 144, "vt": 144, "pole_figur": 144, "png": [144, 159], "ipf_kei": 144, "xdmf": 144, "sample_textur": [146, 148], "sample_orient": [146, 148], "length": [146, 147, 148], "valuelength": 146, "pixel": [146, 148], "voxel": 146, "generate_volume_el": 146, "dump_all_yield_stress": 146, "fit_yield_funct": [146, 148], "simulate_ve_load": 146, "box": 146, "twice": 146, "elong": 146, "generate_microstructure_se": 146, "visualise_orient": 146, "thermal": 146, "damag": 146, "solver": 146, "physic": 146, "phenomenon": 146, "spectral_polar": 146, "spectral_bas": 146, "strcondit": 146, "grain": [146, 148], "scheme": 146, "emploi": 146, "crystal": [146, 148], "plastic": [146, 148], "field": [146, 148], "typic": 146, "sx": [146, 147, 148], "modify_v": 146, "define_load_cas": [146, 148], "loadcas": 146, "microstructurese": 146, "intcondit": 146, "generate_orient": 146, "microstructur": 146, "dictcondit": 146, "visualise_v": 146, "inputsparametertypedefaultload_caseloadcas": 147, "outputsthi": 147, "actionsthi": 147, "inputsparametertypedefaultve_respons": 147, "yield_point": 147, "dump_path": 147, "0rule": 147, "mainenviron": 147, "damask_parse_envscript": 147, "python_scriptscript": 147, "dump_pathve_responseyield_pointcommand": 147, "0ex": 147, "single_crystal_parameterssinglecrystalparamet": 147, "tensile_test": 147, "initial_damp": [147, 148], "outputsparametertypesingle_crystal_parameterssinglecrystalparameterslevenberg_marquardt_fitt": 147, "formable_envscript": 147, "formabl": 147, "ve_respons": [147, 148, 159], "single_crystal_paramet": [147, 148], "tensile_testinitial_dampingscript": 147, "levenberg_marquardt_fittersingle_crystal_parameterscommand": 147, "inputsparametertypedefaultyield_function_nam": 147, "yield_point_criteria": [147, 148], "fit_yield_fixed_paramet": 147, "nonefit_yield_initial_paramet": 147, "nonefit_yield_opt_paramet": 147, "noneoutputsparametertypefitted_yield_funct": 147, "yield_point_criteriafit_yield_fixed_parametersfit_yield_opt_parametersyield_function_nameve_respons": 147, "multiaxi": [147, 148], "fit_yield_initial_parametersscript": 147, "fitted_yield_functionscommand": 147, "inputsparametertypedefaultve_sizelist": 147, "num_grainsint": 147, "phase_labelstr": 147, "outputsparametertypemicrostructure_seedsmicrostructureseedsact": 147, "seeds_from_random": 147, "ve_sizenum_grainsphase_labelscript": 147, "microstructure_seedscommand": 147, "inputsparametertypedefaultnum_orient": 147, "outputsparametertypeorientationsorientationsact": 147, "python_envscript": 147, "main_script_test": 147, "num_orientationsscript": 147, "orientationscommand": 147, "inputsparametertypedefaultmicrostructure_seedsmicrostructurese": 147, "ve_grid_sizelist": 147, "homog_labelstr": 147, "orientationsorientationsnonescale_morphologi": 147, "nonescale_update_s": 147, "outputsparametertypevolume_elementdictact": 147, "generate_volume_element_voronoi": 147, "microstructure_seedshomog_labelve_grid_sizescale_update_sizeorientationsscale_morphologyscript": 147, "volume_elementcommand": 147, "inputsparametertypedefaultgrid_s": 147, "phase_statist": [147, 148], "nones": 147, "noneorigin": 147, "noneperiod": 147, "precipit": 147, "noneorientationsorientationsnoneoutputsparametertypevolume_elementdictact": 147, "dream_3d_hdf5_fil": 147, "dream_3d_pipelin": 147, "dream_3d_envinput": 147, "dream_3d_pipelineinput": 147, "grid_siz": [147, 148], "period": 147, "1rule": 147, "dream_3d_envcommand": 147, "0cmd": 147, "json2rul": 147, "volume_el": [147, 148], "dream_3d_envoutput": 147, "volume_elementoutput": 147, "dream_3d_hdf5_filecommand": 147, "inputsparametertypedefaultmicrostructure_imag": 147, "depth": [147, 148], "image_ax": [147, 148], "phase_labelstrnonephase_label_map": 147, "noneoutputsparametertypevolume_elementdictact": 147, "microstructure_imagephase_labelhomog_labelimage_axesdepthphase_label_mappingscript": 147, "inputsparametertypedefaultd": 147, "ebsd": [147, 148], "root_path": [147, 148], "transform_typ": [147, 148], "affin": [147, 148], "scaling_factor": [147, 148], "find_grains_algorithm": 147, "warp": 147, "outputsparametertypemicrostructure_imag": 147, "defdap_envscript": 147, "ebsdfind_grains_algorithmdicscaling_factorroot_pathtransform_typescript": 147, "microstructure_imagecommand": 147, "inputsparametertypedefaultebsd": 147, "scaling_factorebsdroot_pathscript": 147, "inputsparametertypedefaultvolume_elementdict": 147, "buffer_s": [147, 148], "phase_id": [147, 148], "add_ve_buffer_zon": 147, "phase_idshomog_labelphase_labelsorderbuffer_sizesvolume_elementscript": 147, "new_grid_s": [147, 148], "new_grid_sizevolume_elementscript": 147, "inputsparametertypedefaultcsv_file_path": 147, "csv_argument": [147, 148], "eng_stress_col_index": [147, 148], "noneeng_strain_col_index": 147, "nonetrue_stress_col_index": 147, "nonetrue_strain_col_index": 147, "nonestress_unit": 147, "pa": 147, "plastic_rang": 147, "noneoutputsparametertypetensile_test": 147, "stress_unitscsv_file_pathtrue_strain_col_indextrue_stress_col_indexeng_strain_col_indexcsv_argumentseng_stress_col_indexplastic_rangescript": 147, "tensile_testcommand": 147, "inputsparametertypedefaultcompil": 147, "ctf_file_path": [147, 148], "specimen_symmetri": [147, 148], "ebsd_phas": [147, 148], "num_orient": [147, 148], "ebsd_reference_frame_transform": [147, 148], "euler_to_spati": 147, "ebsd_rot": [147, 148], "noneoutputsparametertypeorientationsorientationsact": 147, "matlab_envscript": 147, "sample_orientations_ctf": 147, "compile_mtexcommand": 147, "sample_orientations_ctfscript": 147, "run_compiled_mtexscript": 147, "ebsd_rotationcompilespecimen_symmetryebsd_reference_frame_transformationctf_file_pathnum_orientationsebsd_phasescript": 147, "2rule": 147, "run_mtexscript": 147, "crc_file_path": [147, 148], "sample_orientations_crc": 147, "sample_orientations_crcscript": 147, "crc_file_pathebsd_rotationcompilespecimen_symmetryebsd_reference_frame_transformationnum_orientationsebsd_phasescript": 147, "sample_texture_ctf": 147, "sample_texture_ctfscript": 147, "sample_texture_crc": 147, "sample_texture_crcscript": 147, "odf_mat_file_path": [147, 148], "sample_texture_odf_matscript": 147, "compilenum_orientationsodf_mat_file_pathscript": 147, "crystal_symmetri": [147, 148], "odf_compon": [147, 148, 159], "sample_texture_model_odfscript": 147, "crystal_symmetrycompilespecimen_symmetryodf_componentsnum_orientationsscript": 147, "sample_texture_randomscript": 147, "crystal_symmetrycompilenum_orientationsspecimen_symmetryscript": 147, "load_caseloadcas": 147, "homogen": [147, 148], "damask_phas": [147, 148], "damask_post_process": [147, 148], "ve_response_data": [147, 148], "damask_viz": [147, 148], "nonesingle_crystal_parameterssinglecrystalparametersnonedamask_solverdictnonedamask_numer": 147, "noneoutputsparametertypedamask_log": 147, "damask_post_processing_result": 147, "damask_viz_result": 147, "damask_stdout_fil": 147, "damask_hdf5_fil": 147, "damask_geom_fil": [147, 148], "damask_parse_envinput": 147, "damask_geom_fileinput": 147, "damask_load_fil": [147, 148], "damask_load_fileinput": 147, "load_cas": [147, 148], "damask_solvercommand": 147, "damask_material_fil": [147, 148], "damask_material_fileinput": 147, "single_crystal_parameterscommand": 147, "3rule": 147, "damask_numerics_fil": 147, "not_equal_to": 147, "damask_numerics_fileinput": 147, "damask_numericscommand": 147, "4rule": 147, "damask_envcommand": 147, "vtiout": 147, "logerr": 147, "log5rul": 147, "damask_log": 147, "damask_parse_envoutput": 147, "damask_logoutput": 147, "damask_stdout_filecommand": 147, "6rule": 147, "damask_post_processing_resultoutput": 147, "damask_hdf5_filecommand": 147, "7rule": 147, "ve_responseoutput": 147, "8rule": 147, "damask_viz_resultoutput": 147, "noneoutputsparametertypeve_respons": 147, "damask_solv": 147, "log2rul": 147, "write_geom": 147, "pathvolume_elementcommand": 147, "inputsparametertypedefaultorientationsorient": 147, "pole_figure_direct": [147, 148], "use_contour": [147, 148], "ipf_reference_direct": 147, "colourbar_limit": 147, "noneuse_one_colourbar": 147, "plot_pole_figur": 147, "plot_pole_figuresscript": 147, "crystal_symmetryuse_one_colourbarcompilepole_figure_directionscolourbar_limitsipf_reference_directionuse_contourscommand": 147, "demonstr": 148, "somewher": 148, "mf": [148, 149, 154, 155, 159], "copy_demo_workflow": 148, "dst": 148, "extrud": 148, "buffer": 148, "tension": 148, "load_microstructure_ebsd": 148, "demo_data_fil": 148, "defdap_small_dataset": 148, "filenam": 148, "ebsd_data": 148, "flip_vert": 148, "boundary_tol": 148, "8": 148, "min_grain_s": 148, "30": 148, "generate_volume_element_extrus": 148, "homog_label": 148, "ti": 148, "visualise_ve_vtk": 148, "modify_ve_add_buffer_zon": 148, "face": 148, "ti_iso": 148, "air": 148, "simulate_ve_loading_damask": [148, 159], "0e": 148, "n_constitu": 148, "lattic": 148, "hp": 148, "587": 148, "f_p": 148, "p": [148, 159], "elast": 148, "hook": 148, "c_11": 148, "0e9": 148, "c_12": 148, "90": [148, 159], "c_13": 148, "66": 148, "c_33": 148, "181": 148, "7e9": 148, "c_44": 148, "46": 148, "5e9": 148, "phenopowerlaw": 148, "gamma_sl": 148, "n_sl": 148, "12": [148, 159], "basal": 148, "prism": 148, "pyr": 148, "20": 148, "a_sl": 148, "dot_gamma_0_sl": 148, "001": 148, "xi_0_sl": 148, "349": 148, "150": 148, "1107": 148, "zambaldi": 148, "et": 148, "al": 148, "xi_inf_sl": 148, "568": 148, "7": 148, "3420": 148, "h_0_sl": 148, "sl": 148, "15": 148, "e6": 148, "h_sl": 148, "unus": 148, "entri": 148, "cf": 148, "175": 148, "4e9": 148, "42": 148, "55e9": 148, "isotrop": 148, "1e8": 148, "1e6": 148, "49": 148, "5e6": 148, "xi": 148, "gamma": 148, "xi_0": 148, "3e6": 148, "xi_inf": 148, "6e6": 148, "dot_gamma_0": 148, "h_0": 148, "dilat": 148, "add_stress_cauchi": 148, "opt": 148, "add_strain": 148, "u": 148, "averag": 148, "quantiti": 148, "sim": 148, "phase_data": [148, 159], "field_nam": 148, "sigma": 148, "phase_nam": 148, "out_nam": 148, "vol_avg_stress": [148, 159], "transform": 148, "mean_along_ax": 148, "epsilon_u": 148, "vol_avg_strain": 148, "spatial": 148, "probabl": 148, "field_data": 148, "u_n": 148, "grain_data": 148, "itmin": 148, "itmax": 148, "100": [148, 150], "fwbw_differ": 148, "dic": 148, "load_microstructure_ebsd_d": 148, "dic_data": 148, "txt": 148, "crop": 148, "28": 148, "scale": [148, 159], "328e": 148, "micron": 148, "homog_point": 148, "452": 148, "322": 148, "200": 148, "417": 148, "159": 148, "144": 148, "352": 148, "269": 148, "102": 148, "33": 148, "500": 148, "48": 148, "295": 148, "245": 148, "176": 148, "437": 148, "61": 148, "382": 148, "391": 148, "398": 148, "240": 148, "208": 148, "780": 148, "606": 148, "374": 148, "816": 148, "285": 148, "385": 148, "612": 148, "543": 148, "186": 148, "218": 148, "839": 148, "149": 148, "516": 148, "519": 148, "335": 148, "856": 148, "145": 148, "794": 148, "686": 148, "743": 148, "424": 148, "470": 148, "cubic": 148, "textur": [148, 159], "angl": [148, 159], "kesten": 148, "h": 148, "pirgazi": 148, "2016": 148, "metal": 148, "alloi": 148, "scienc": [148, 156], "technologi": 148, "32": 148, "13": 148, "1303": 148, "1315": 148, "doi": 148, "1080": 148, "02670836": 148, "1231746": 148, "sample_texture_from_model_odf_mtex": [148, 159], "orthorhomb": 148, "2000": 148, "unimod": 148, "component_fract": 148, "halfwidth": 148, "modal_orientation_eul": [148, 159], "35": [148, 159], "45": [148, 159], "copper": [148, 159], "59": [148, 159], "37": [148, 159], "63": [148, 159], "goss": [148, 159], "brass": [148, 159], "27": 148, "dillamor": 148, "cube": [148, 159], "visualise_orientations_pole_figure_mtex": 148, "orientaion": 148, "pole": 148, "figur": 148, "geometri": 148, "add_mis": 148, "add_ipf_color": 148, "sigma_vm": 148, "vol_avg_equivalent_stress": 148, "epsilon_v": 148, "_vm": 148, "vol_avg_equivalent_strain": 148, "vol_avg_equivalent_plastic_strain": 148, "ipfcolor_": 148, "numerics_exampl": 148, "experiment": 148, "curv": 148, "levenberg": 148, "marquardt": 148, "generate_microstructure_seeds_from_random": 148, "ve_siz": 148, "num_grain": 148, "generate_volume_element_from_voronoi": [148, 159], "ve_grid_s": 148, "read_tensile_test_from_csv": 148, "csv_file_path": 148, "surfalex_tensile_test": 148, "csv": 148, "skip_row": 148, "header_row": 148, "eng_strain_col_index": 148, "stress_unit": 148, "mpa": 148, "3500": 148, "170": 148, "400e6": 148, "30e6": 148, "95e6": 148, "106750000000": 148, "60410000000": 148, "28340000000": 148, "25": 148, "atol_xi": 148, "xi_sl": 148, "volume_data": 148, "05": 148, "yield": [148, 156, 158], "microstructure_se": 148, "multiaxial_load_cas": 148, "f_e": 148, "l_p": 148, "75": 148, "31": 148, "vol_avg_plastic_strain": [148, 159], "yield_function_nam": 148, "hill1948": 148, "threshold": 148, "equivalent_plastic_strain": 148, "dream": 148, "stat": 148, "odf": 148, "effect": 148, "128": 148, "256": 148, "crystal_structur": 148, "volume_fract": 148, "00": 148, "sum": [148, 159], "size_distribut": 148, "esd_mean": 148, "esd_log_mean": 148, "esd_log_stddev": 148, "num_bin": 148, "bin_step_s": 148, "weight": 148, "100_000": 148, "200_000": 148, "s1": 148, "s2": 148, "rc": 148, "rd1": 148, "rd2": 148, "nd1": 148, "nd2": 148, "q": 148, "increas": 148, "visualis": 148, "modify_ve_grid_s": 148, "16": 148, "tensil": 148, "crc": 148, "cpr": 148, "pick": 148, "sample_orientations_from_crc_file_mtex": 148, "texture_al_crc": 148, "texture_": 148, "converteuler2spatialreferencefram": 148, "1000": 148, "ctf": 148, "sample_orientations_from_ctf_file_mtex": 148, "sample_texture_from_crc_file_mtex": 148, "sample_texture_from_ctf_file_mtex": 148, "mat": 148, "sample_texture_from_odf_mat_file_mtex": 148, "fraction": 148, "modal_orientation_hkl": 148, "modal_orientation_uvw": 148, "degre": [148, 150], "hex": 148, "sample_texture_random_mtex": 148, "surfac": [148, 156, 158], "aluminium": 148, "strong": 148, "1024": 148, "64": 148, "scale_morphologi": 148, "80": 148, "400": 148, "0002": 148, "17": 148, "107": 148, "3e": 148, "9": 148, "9e": 148, "499": 148, "912": 148, "2e": 148, "60c": 148, "138": 148, "300": [148, 159], "wip": 148, "voronoi": 148, "tessel": 148, "magnesium": 148, "mg": 148, "62350": 148, "troman": 148, "2011": 148, "anisotropi": 148, "hcp": 148, "polycryst": 148, "rho": 148, "1740": 148, "3e9": 148, "21": 148, "wang": 148, "acta": 148, "materialia": 148, "77": 148, "2014": 148, "1016": 148, "actamat": 148, "07": 148, "048": 148, "xi_tw": 148, "n_tw": 148, "55": 148, "40": 148, "135": 148, "xi_0_tw": 148, "dot_gamma_0_tw": 148, "f_sat_sl": 148, "tw": 148, "h_0_tw": 148, "50": 148, "h_tw": 148, "titanium": 148, "journal": 148, "research": 148, "356": 148, "367": 148, "2021": 148, "1557": 148, "jmr": 148, "334": 148, "132": 148, "598": 148, "610": 148, "2017": 148, "015": 148, "127": 148, "96": 148, "my": 149, "temporarili": 149, "session": 149, "load_config": 149, "reload_config": 149, "consol": 149, "usual": [149, 150], "howev": [149, 150], "newer": 149, "incompat": 149, "sometim": [149, 150], "reset_config": 149, "had": 149, "pointer": 149, "old": 149, "get_config_path": 149, "equival": [149, 159], "clear_known_submissions_fil": 149, "declar": 150, "runnabl": 150, "extern": 150, "whilst": 150, "older": 150, "comparison": 150, "facilit": 150, "arbitrari": 150, "under": 150, "my_env": 150, "alpha": 150, "my_execut": 150, "tell": [150, 155], "sole": 150, "my_task": 150, "echo": 150, "could": [150, 159], "restrict": 150, "p3": 150, "101": 150, "201": 150, "my_other_task": 150, "my_other_env": 150, "three": [150, 159], "At": 150, "greatest": 150, "verbos": 150, "refin": 150, "chosen": 150, "similar": 150, "reset": [151, 156], "softwar": [151, 156], "disambigu": 151, "cannot": 153, "fulli": 153, "alphanumer": 153, "underscor": 153, "util": 153, "check_valid_py_identifi": 153, "prefer": 153, "acronym": 153, "remot": [154, 155], "wkt": [154, 155], "wk": [155, 159], "host": 155, "sandbox": 155, "zenodo": 155, "1210144": 155, "to_zip": 155, "jupyt": [156, 157, 159], "notebook": [156, 157, 159], "defaultdict": 159, "ipython": 159, "plotli": 159, "subplot": 159, "make_subplot": 159, "graph_object": 159, "figurewidget": 159, "def": 159, "get_hydrostatic_tensor": 159, "hydrostat": 159, "diagon": 159, "hydro": 159, "zeros_lik": 159, "trace": 159, "axis1": 159, "axis2": 159, "get_von_mis": 159, "von": 159, "mise": 159, "deviator": 159, "sqrt": 159, "axi": 159, "get_von_mises_stress": 159, "get_von_mises_strain": 159, "order_coplanar_point": 159, "anticlockwis": 159, "clockwis": 159, "coplanar": 159, "lie": 159, "opposit": 159, "linalg": 159, "norm": 159, "centroid": 159, "newaxi": 159, "product": 159, "cr": 159, "tripl": 159, "stp": 159, "einsum": 159, "ik": 159, "k": 159, "sign": 159, "ang": 159, "arctan2": 159, "ang_ord": 159, "argsort": 159, "group_elements_by_textur": 159, "err_id": 159, "rve": 159, "speed": 159, "sort": 159, "scenario": 159, "ouput": 159, "sim_elems_by_ori": 159, "elem": 159, "continu": 159, "gen_ve_elem": 159, "sample_texture_elem": 159, "modal_ori_eul": 159, "get_stress_at_yield": 159, "002": 159, "plastic_strain": 159, "plastic_strain_vm": 159, "yield_idx": 159, "ab": 159, "argmin": 159, "stress_at_yield": 159, "get_yield_tensor": 159, "sim_el": 159, "yield_tensor": 159, "closest": 159, "eq_stress_idx": 159, "eq_stress": 159, "plot_yield_surfac": 159, "texture_eul": 159, "nsubplot": 159, "len": 159, "ncol": 159, "nrow": 159, "ceil": 159, "fig": 159, "col": 159, "subplot_titl": 159, "vertical_spac": 159, "horizontal_spac": 159, "update_layout": 159, "height": 159, "width": 159, "showlegend": 159, "seaborn": 159, "title_text": 159, "layout": 159, "yaxi": 159, "scaleanchor": 159, "scaleratio": 159, "titl": 159, "\u03c3": 159, "td": 159, "xaxi": 159, "rd": 159, "text_nam": 159, "enumer": 159, "xy0": 159, "order_idx": 159, "concaten": 159, "close": 159, "add_scatt": 159, "19": 159, "min": 159, "write_imag": 159, "yield_surfac": 159}, "objects": {"": [[5, 0, 0, "-", "matflow"]], "matflow": [[6, 1, 1, "", "Action"], [7, 1, 1, "", "ActionEnvironment"], [8, 1, 1, "", "ActionRule"], [9, 1, 1, "", "ActionScope"], [10, 1, 1, "", "ActionScopeType"], [11, 1, 1, "", "Command"], [12, 1, 1, "", "CommandFilesList"], [13, 1, 1, "", "DirectPosix"], [14, 1, 1, "", "DirectWindows"], [15, 1, 1, "", "Element"], [16, 1, 1, "", "ElementAction"], [17, 1, 1, "", "ElementActionRun"], [18, 1, 1, "", "ElementFilter"], [19, 1, 1, "", "ElementGroup"], [20, 1, 1, "", "ElementInputFiles"], [21, 1, 1, "", "ElementInputs"], [22, 1, 1, "", "ElementIteration"], [23, 1, 1, "", "ElementOutputFiles"], [24, 1, 1, "", "ElementOutputs"], [25, 1, 1, "", "ElementParameter"], [26, 1, 1, "", "ElementPropagation"], [27, 1, 1, "", "ElementRepeats"], [28, 1, 1, "", "ElementResources"], [29, 1, 1, "", "ElementSet"], [30, 1, 1, "", "Elements"], [31, 1, 1, "", "Environment"], [32, 1, 1, "", "EnvironmentsList"], [33, 1, 1, "", "Executable"], [34, 1, 1, "", "ExecutableInstance"], [35, 1, 1, "", "ExecutablesList"], [36, 1, 1, "", "FileNameExt"], [37, 1, 1, "", "FileNameSpec"], [38, 1, 1, "", "FileNameStem"], [39, 1, 1, "", "FileSpec"], [40, 1, 1, "", "GroupList"], [41, 1, 1, "", "InputFile"], [42, 1, 1, "", "InputFileGenerator"], [43, 1, 1, "", "InputFileGeneratorSource"], [44, 1, 1, "", "InputSource"], [45, 1, 1, "", "InputSourceType"], [46, 1, 1, "", "InputValue"], [47, 1, 1, "", "Jobscript"], [48, 1, 1, "", "Loop"], [49, 1, 1, "", "NumCores"], [50, 1, 1, "", "OutputFileParser"], [51, 1, 1, "", "OutputFileParserSource"], [52, 1, 1, "", "OutputLabel"], [53, 1, 1, "", "Parameter"], [54, 1, 1, "", "ParameterPath"], [55, 1, 1, "", "ParameterPropagationMode"], [56, 1, 1, "", "ParameterValue"], [57, 1, 1, "", "Parameters"], [58, 1, 1, "", "ParametersList"], [59, 1, 1, "", "ResourceList"], [60, 1, 1, "", "ResourceSpec"], [61, 1, 1, "", "Rule"], [62, 1, 1, "", "RunDirAppFiles"], [63, 1, 1, "", "SGEPosix"], [64, 1, 1, "", "SchemaInput"], [65, 1, 1, "", "SchemaOutput"], [66, 1, 1, "", "SchemaParameter"], [67, 1, 1, "", "SlurmPosix"], [68, 1, 1, "", "SubParameter"], [69, 1, 1, "", "Submission"], [70, 1, 1, "", "Task"], [71, 1, 1, "", "TaskInputParameters"], [72, 1, 1, "", "TaskList"], [73, 1, 1, "", "TaskObjective"], [74, 1, 1, "", "TaskOutputParameters"], [75, 1, 1, "", "TaskSchema"], [76, 1, 1, "", "TaskSchemasList"], [77, 1, 1, "", "TaskSourceType"], [78, 1, 1, "", "TaskTemplateList"], [79, 1, 1, "", "ValuePerturbation"], [80, 1, 1, "", "ValueSequence"], [81, 1, 1, "", "Workflow"], [82, 1, 1, "", "WorkflowBlueprint"], [83, 1, 1, "", "WorkflowLoop"], [84, 1, 1, "", "WorkflowLoopList"], [85, 1, 1, "", "WorkflowTask"], [86, 1, 1, "", "WorkflowTaskList"], [87, 1, 1, "", "WorkflowTemplate"], [88, 5, 1, "", "app"], [89, 6, 1, "", "cancel"], [90, 0, 0, "-", "cli"], [91, 6, 1, "", "get_OS_info"], [92, 6, 1, "", "get_known_submissions"], [93, 6, 1, "", "get_shell_info"], [94, 6, 1, "", "make_and_submit_demo_workflow"], [95, 6, 1, "", "make_and_submit_workflow"], [96, 6, 1, "", "make_demo_workflow"], [97, 6, 1, "", "make_workflow"], [98, 0, 0, "-", "param_classes"], [117, 6, 1, "", "run_hpcflow_tests"], [118, 6, 1, "", "run_tests"], [119, 6, 1, "", "show"], [120, 6, 1, "", "show_legend"], [121, 6, 1, "", "submit_workflow"], [122, 0, 0, "-", "tests"], [139, 7, 1, "cmdoption-matflow-config-dir", "--config-dir"], [139, 7, 1, "cmdoption-matflow-config-key", "--config-key"], [139, 7, 1, "cmdoption-matflow-help", "--help"], [139, 7, 1, "cmdoption-matflow-hpcflow-version", "--hpcflow-version"], [139, 7, 1, "cmdoption-matflow-run-time-info", "--run-time-info"], [139, 7, 1, "cmdoption-matflow-timeit", "--timeit"], [139, 7, 1, "cmdoption-matflow-timeit-file", "--timeit-file"], [139, 7, 1, "cmdoption-matflow-version", "--version"], [139, 7, 1, "cmdoption-matflow-with-config", "--with-config"]], "matflow.Action": [[6, 2, 1, "", "abortable"], [6, 2, 1, "", "app"], [6, 2, 1, "", "clean_up"], [6, 2, 1, "", "commands"], [6, 3, 1, "", "compose_source"], [6, 2, 1, "", "environments"], [6, 3, 1, "", "expand"], [6, 3, 1, "", "from_json_like"], [6, 3, 1, "", "generate_data_index"], [6, 3, 1, "", "get_command_input_file_labels"], [6, 3, 1, "", "get_command_input_types"], [6, 3, 1, "", "get_command_output_types"], [6, 3, 1, "", "get_commands_action_env"], [6, 3, 1, "", "get_environment"], [6, 3, 1, "", "get_environment_name"], [6, 3, 1, "", "get_environment_spec"], [6, 3, 1, "", "get_input_file_generator_action_env"], [6, 3, 1, "", "get_input_file_labels"], [6, 3, 1, "", "get_input_types"], [6, 3, 1, "", "get_output_file_labels"], [6, 3, 1, "", "get_output_file_parser_action_env"], [6, 3, 1, "", "get_output_types"], [6, 3, 1, "", "get_param_dump_file_path_HDF5"], [6, 3, 1, "", "get_param_dump_file_path_JSON"], [6, 3, 1, "", "get_param_load_file_path_HDF5"], [6, 3, 1, "", "get_param_load_file_path_JSON"], [6, 3, 1, "", "get_parameter_dependence"], [6, 3, 1, "", "get_parameter_names"], [6, 3, 1, "", "get_possible_scopes"], [6, 3, 1, "", "get_precise_scope"], [6, 3, 1, "", "get_required_executables"], [6, 3, 1, "", "get_script_name"], [6, 3, 1, "", "get_snippet_script_path"], [6, 3, 1, "", "get_snippet_script_str"], [6, 2, 1, "", "input_file_generators"], [6, 2, 1, "", "input_files"], [6, 3, 1, "", "is_input_type_required"], [6, 3, 1, "", "is_snippet_script"], [6, 2, 1, "", "output_file_parsers"], [6, 2, 1, "", "output_files"], [6, 3, 1, "", "process_script_data_formats"], [6, 2, 1, "", "rules"], [6, 2, 1, "", "save_files"], [6, 2, 1, "", "script"], [6, 2, 1, "", "script_data_files_use_opt"], [6, 2, 1, "", "script_data_in"], [6, 4, 1, "", "script_data_in_grouped"], [6, 4, 1, "", "script_data_in_has_direct"], [6, 4, 1, "", "script_data_in_has_files"], [6, 2, 1, "", "script_data_out"], [6, 4, 1, "", "script_data_out_grouped"], [6, 4, 1, "", "script_data_out_has_direct"], [6, 4, 1, "", "script_data_out_has_files"], [6, 2, 1, "", "script_exe"], [6, 4, 1, "", "script_is_python"], [6, 2, 1, "", "script_pass_env_spec"], [6, 4, 1, "", "task_schema"], [6, 3, 1, "", "test_rules"], [6, 3, 1, "", "to_dict"], [6, 3, 1, "", "to_json_like"]], "matflow.ActionEnvironment": [[7, 2, 1, "", "app"], [7, 2, 1, "", "environment"], [7, 3, 1, "", "from_json_like"], [7, 2, 1, "", "scope"], [7, 3, 1, "", "to_dict"], [7, 3, 1, "", "to_json_like"]], "matflow.ActionRule": [[8, 2, 1, "", "action"], [8, 2, 1, "", "app"], [8, 3, 1, "", "check_exists"], [8, 3, 1, "", "check_missing"], [8, 2, 1, "", "command"], [8, 3, 1, "", "from_json_like"], [8, 2, 1, "", "rule"], [8, 3, 1, "", "test"], [8, 3, 1, "", "to_dict"], [8, 3, 1, "", "to_json_like"]], "matflow.ActionScope": [[9, 3, 1, "", "any"], [9, 2, 1, "", "app"], [9, 3, 1, "", "from_json_like"], [9, 3, 1, "", "input_file_generator"], [9, 2, 1, "", "kwargs"], [9, 3, 1, "", "main"], [9, 3, 1, "", "output_file_parser"], [9, 3, 1, "", "processing"], [9, 3, 1, "", "to_dict"], [9, 3, 1, "", "to_json_like"], [9, 3, 1, "", "to_string"], [9, 2, 1, "", "typ"]], "matflow.ActionScopeType": [[10, 2, 1, "", "ANY"], [10, 2, 1, "", "INPUT_FILE_GENERATOR"], [10, 2, 1, "", "MAIN"], [10, 2, 1, "", "OUTPUT_FILE_PARSER"], [10, 2, 1, "", "PROCESSING"]], "matflow.Command": [[11, 2, 1, "", "app"], [11, 2, 1, "", "arguments"], [11, 2, 1, "", "command"], [11, 2, 1, "", "executable"], [11, 3, 1, "", "from_json_like"], [11, 3, 1, "", "get_command_line"], [11, 3, 1, "", "get_output_types"], [11, 3, 1, "", "get_required_executables"], [11, 3, 1, "", "process_std_stream"], [11, 2, 1, "", "rules"], [11, 2, 1, "", "stderr"], [11, 2, 1, "", "stdin"], [11, 2, 1, "", "stdout"], [11, 3, 1, "", "to_dict"], [11, 3, 1, "", "to_json_like"], [11, 2, 1, "", "variables"]], "matflow.CommandFilesList": [[12, 3, 1, "", "add_object"], [12, 3, 1, "", "add_objects"], [12, 3, 1, "", "from_json_like"], [12, 3, 1, "", "get"], [12, 3, 1, "", "get_all"], [12, 3, 1, "", "list_attrs"], [12, 3, 1, "", "to_dict"], [12, 3, 1, "", "to_json_like"]], "matflow.DirectPosix": [[13, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [13, 2, 1, "", "DEFAULT_SHELL_ARGS"], [13, 2, 1, "", "DEFAULT_SHELL_EXECUTABLE"], [13, 2, 1, "", "app"], [13, 3, 1, "", "cancel_jobs"], [13, 3, 1, "", "get_job_state_info"], [13, 3, 1, "", "get_submit_command"], [13, 3, 1, "", "get_version_info"], [13, 3, 1, "", "is_jobscript_active"], [13, 3, 1, "", "is_num_cores_supported"], [13, 3, 1, "", "parse_submission_output"], [13, 3, 1, "", "process_resources"], [13, 4, 1, "", "unique_properties"], [13, 3, 1, "", "wait_for_jobscripts"]], "matflow.DirectWindows": [[14, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [14, 2, 1, "", "DEFAULT_SHELL_ARGS"], [14, 2, 1, "", "DEFAULT_SHELL_EXECUTABLE"], [14, 2, 1, "", "app"], [14, 3, 1, "", "cancel_jobs"], [14, 3, 1, "", "get_job_state_info"], [14, 3, 1, "", "get_submit_command"], [14, 3, 1, "", "get_version_info"], [14, 3, 1, "", "is_jobscript_active"], [14, 3, 1, "", "is_num_cores_supported"], [14, 3, 1, "", "parse_submission_output"], [14, 3, 1, "", "process_resources"], [14, 4, 1, "", "unique_properties"], [14, 3, 1, "", "wait_for_jobscripts"]], "matflow.Element": [[15, 4, 1, "", "action_runs"], [15, 4, 1, "", "actions"], [15, 2, 1, "", "app"], [15, 4, 1, "", "dir_name"], [15, 4, 1, "", "element_set"], [15, 4, 1, "", "element_set_idx"], [15, 3, 1, "", "get"], [15, 3, 1, "", "get_EAR_dependencies"], [15, 3, 1, "", "get_data_idx"], [15, 3, 1, "", "get_dependent_EARs"], [15, 3, 1, "", "get_dependent_element_iterations"], [15, 3, 1, "", "get_dependent_elements"], [15, 3, 1, "", "get_dependent_elements_recursively"], [15, 3, 1, "", "get_dependent_tasks"], [15, 3, 1, "", "get_element_dependencies"], [15, 3, 1, "", "get_element_iteration_dependencies"], [15, 3, 1, "", "get_input_dependencies"], [15, 3, 1, "", "get_parameter_sources"], [15, 3, 1, "", "get_sequence_value"], [15, 3, 1, "", "get_task_dependencies"], [15, 4, 1, "", "id_"], [15, 4, 1, "", "index"], [15, 3, 1, "", "init_loop_index"], [15, 4, 1, "", "input_files"], [15, 4, 1, "", "input_source_idx"], [15, 4, 1, "", "input_sources"], [15, 4, 1, "", "inputs"], [15, 4, 1, "", "is_pending"], [15, 4, 1, "", "iteration_IDs"], [15, 4, 1, "", "iterations"], [15, 4, 1, "", "latest_iteration"], [15, 4, 1, "", "output_files"], [15, 4, 1, "", "outputs"], [15, 4, 1, "", "schema_parameters"], [15, 4, 1, "", "sequence_idx"], [15, 4, 1, "", "task"], [15, 3, 1, "", "to_element_set_data"], [15, 4, 1, "", "workflow"]], "matflow.ElementAction": [[16, 4, 1, "", "action"], [16, 4, 1, "", "action_idx"], [16, 2, 1, "", "app"], [16, 4, 1, "", "element"], [16, 4, 1, "", "element_iteration"], [16, 3, 1, "", "get"], [16, 3, 1, "", "get_data_idx"], [16, 3, 1, "", "get_parameter_names"], [16, 3, 1, "", "get_parameter_sources"], [16, 4, 1, "", "input_files"], [16, 4, 1, "", "inputs"], [16, 4, 1, "", "num_runs"], [16, 4, 1, "", "output_files"], [16, 4, 1, "", "outputs"], [16, 4, 1, "", "runs"], [16, 4, 1, "", "task"]], "matflow.ElementActionRun": [[17, 4, 1, "", "action"], [17, 2, 1, "", "app"], [17, 4, 1, "", "commands_idx"], [17, 3, 1, "", "compose_commands"], [17, 4, 1, "", "data_idx"], [17, 4, 1, "", "dir_diff"], [17, 4, 1, "", "element"], [17, 4, 1, "", "element_action"], [17, 4, 1, "", "element_iteration"], [17, 4, 1, "", "end_time"], [17, 4, 1, "", "env_spec"], [17, 4, 1, "", "exit_code"], [17, 3, 1, "", "get"], [17, 3, 1, "", "get_EAR_dependencies"], [17, 3, 1, "", "get_IFG_input_values"], [17, 3, 1, "", "get_OFP_inputs"], [17, 3, 1, "", "get_OFP_output_files"], [17, 3, 1, "", "get_OFP_outputs"], [17, 3, 1, "", "get_all_previous_iteration_runs"], [17, 3, 1, "", "get_data_idx"], [17, 3, 1, "", "get_dependent_EARs"], [17, 3, 1, "", "get_environment"], [17, 3, 1, "", "get_environment_spec"], [17, 3, 1, "", "get_input_dependencies"], [17, 3, 1, "", "get_input_values"], [17, 3, 1, "", "get_input_values_direct"], [17, 3, 1, "", "get_parameter_names"], [17, 3, 1, "", "get_parameter_sources"], [17, 3, 1, "", "get_resources"], [17, 4, 1, "", "id_"], [17, 4, 1, "", "index"], [17, 4, 1, "", "input_files"], [17, 4, 1, "", "inputs"], [17, 4, 1, "", "is_pending"], [17, 4, 1, "", "metadata"], [17, 4, 1, "", "output_files"], [17, 4, 1, "", "outputs"], [17, 4, 1, "", "resources"], [17, 4, 1, "", "run_hostname"], [17, 4, 1, "", "skip"], [17, 4, 1, "", "snapshot_end"], [17, 4, 1, "", "snapshot_start"], [17, 4, 1, "", "start_time"], [17, 4, 1, "", "status"], [17, 4, 1, "", "submission_idx"], [17, 4, 1, "", "success"], [17, 4, 1, "", "task"], [17, 4, 1, "", "workflow"], [17, 3, 1, "", "write_source"]], "matflow.ElementFilter": [[18, 2, 1, "", "app"], [18, 3, 1, "", "filter"], [18, 3, 1, "", "from_json_like"], [18, 2, 1, "", "rules"], [18, 3, 1, "", "to_dict"], [18, 3, 1, "", "to_json_like"]], "matflow.ElementGroup": [[19, 2, 1, "", "app"], [19, 3, 1, "", "from_json_like"], [19, 2, 1, "", "group_by_distinct"], [19, 2, 1, "", "name"], [19, 3, 1, "", "to_dict"], [19, 3, 1, "", "to_json_like"], [19, 2, 1, "", "where"]], "matflow.ElementInputFiles": [[20, 4, 1, "", "prefixed_names_unlabelled"], [20, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementInputs": [[21, 4, 1, "", "prefixed_names_unlabelled"], [21, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementIteration": [[22, 4, 1, "", "EAR_IDs"], [22, 4, 1, "", "EAR_IDs_flat"], [22, 4, 1, "", "EARs_initialised"], [22, 4, 1, "", "action_runs"], [22, 4, 1, "", "actions"], [22, 2, 1, "", "app"], [22, 4, 1, "", "data_idx"], [22, 4, 1, "", "element"], [22, 3, 1, "", "get"], [22, 3, 1, "", "get_EAR_dependencies"], [22, 3, 1, "", "get_data_idx"], [22, 3, 1, "", "get_dependent_EARs"], [22, 3, 1, "", "get_dependent_element_iterations"], [22, 3, 1, "", "get_dependent_elements"], [22, 3, 1, "", "get_dependent_tasks"], [22, 3, 1, "", "get_element_dependencies"], [22, 3, 1, "", "get_element_iteration_dependencies"], [22, 3, 1, "", "get_input_dependencies"], [22, 3, 1, "", "get_parameter_names"], [22, 3, 1, "", "get_parameter_sources"], [22, 3, 1, "", "get_resources"], [22, 3, 1, "", "get_resources_obj"], [22, 3, 1, "", "get_task_dependencies"], [22, 3, 1, "", "get_template_resources"], [22, 4, 1, "", "id_"], [22, 4, 1, "", "index"], [22, 4, 1, "", "input_files"], [22, 4, 1, "", "inputs"], [22, 4, 1, "", "is_pending"], [22, 4, 1, "", "loop_idx"], [22, 4, 1, "", "output_files"], [22, 4, 1, "", "outputs"], [22, 4, 1, "", "schema_parameters"], [22, 4, 1, "", "task"], [22, 4, 1, "", "workflow"]], "matflow.ElementOutputFiles": [[23, 4, 1, "", "prefixed_names_unlabelled"], [23, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementOutputs": [[24, 4, 1, "", "prefixed_names_unlabelled"], [24, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementParameter": [[25, 2, 1, "", "app"], [25, 4, 1, "", "data_idx"], [25, 4, 1, "", "data_idx_is_set"], [25, 2, 1, "", "element"], [25, 3, 1, "", "get_size"], [25, 4, 1, "", "is_set"], [25, 2, 1, "", "parent"], [25, 2, 1, "", "path"], [25, 2, 1, "", "task"], [25, 4, 1, "", "value"]], "matflow.ElementPropagation": [[26, 2, 1, "", "app"], [26, 4, 1, "", "element_set"], [26, 2, 1, "", "input_sources"], [26, 2, 1, "", "nesting_order"], [26, 2, 1, "", "task"]], "matflow.ElementRepeats": [[27, 2, 1, "", "number"], [27, 2, 1, "", "where"]], "matflow.ElementResources": [[28, 2, 1, "", "SGE_parallel_env"], [28, 4, 1, "", "SLURM_is_parallel"], [28, 2, 1, "", "SLURM_num_cpus_per_task"], [28, 2, 1, "", "SLURM_num_nodes"], [28, 2, 1, "", "SLURM_num_tasks"], [28, 2, 1, "", "SLURM_num_tasks_per_node"], [28, 2, 1, "", "SLURM_partition"], [28, 2, 1, "", "app"], [28, 2, 1, "", "environments"], [28, 3, 1, "", "from_json_like"], [28, 3, 1, "", "get_default_os_name"], [28, 3, 1, "", "get_default_scheduler"], [28, 3, 1, "", "get_default_shell"], [28, 3, 1, "", "get_env_instance_filterable_attributes"], [28, 3, 1, "", "get_jobscript_hash"], [28, 4, 1, "", "is_parallel"], [28, 2, 1, "", "max_array_items"], [28, 2, 1, "", "num_cores"], [28, 2, 1, "", "num_cores_per_node"], [28, 2, 1, "", "num_nodes"], [28, 2, 1, "", "num_threads"], [28, 2, 1, "", "os_name"], [28, 2, 1, "", "parallel_mode"], [28, 2, 1, "", "scheduler"], [28, 2, 1, "", "scheduler_args"], [28, 2, 1, "", "scratch"], [28, 3, 1, "", "set_defaults"], [28, 2, 1, "", "shell"], [28, 2, 1, "", "shell_args"], [28, 2, 1, "", "time_limit"], [28, 3, 1, "", "to_dict"], [28, 3, 1, "", "to_json_like"], [28, 2, 1, "", "use_job_array"], [28, 3, 1, "", "validate_against_machine"]], "matflow.ElementSet": [[29, 2, 1, "", "allow_non_coincident_task_sources"], [29, 2, 1, "", "app"], [29, 4, 1, "", "defined_input_types"], [29, 4, 1, "", "elem_iter_IDs"], [29, 4, 1, "", "element_iterations"], [29, 4, 1, "", "element_local_idx_range"], [29, 4, 1, "", "elements"], [29, 3, 1, "", "ensure_element_sets"], [29, 2, 1, "", "env_preset"], [29, 2, 1, "", "environments"], [29, 3, 1, "", "from_json_like"], [29, 3, 1, "", "get_defined_parameter_types"], [29, 3, 1, "", "get_defined_sub_parameter_types"], [29, 3, 1, "", "get_locally_defined_inputs"], [29, 3, 1, "", "get_sequence_from_path"], [29, 3, 1, "", "get_task_dependencies"], [29, 2, 1, "", "groups"], [29, 4, 1, "", "index"], [29, 2, 1, "", "input_files"], [29, 2, 1, "", "input_sources"], [29, 4, 1, "", "input_types"], [29, 2, 1, "", "inputs"], [29, 3, 1, "", "is_input_type_provided"], [29, 2, 1, "", "merge_envs"], [29, 2, 1, "", "nesting_order"], [29, 3, 1, "", "prepare_persistent_copy"], [29, 2, 1, "", "repeats"], [29, 2, 1, "", "resources"], [29, 2, 1, "", "sequences"], [29, 2, 1, "", "sourceable_elem_iters"], [29, 4, 1, "", "task"], [29, 4, 1, "", "task_template"], [29, 3, 1, "", "to_dict"], [29, 3, 1, "", "to_json_like"], [29, 4, 1, "", "undefined_input_types"]], "matflow.Elements": [[30, 4, 1, "", "task"]], "matflow.Environment": [[31, 2, 1, "", "app"], [31, 2, 1, "", "executables"], [31, 3, 1, "", "from_json_like"], [31, 2, 1, "", "name"], [31, 2, 1, "", "setup"], [31, 2, 1, "", "specifiers"], [31, 3, 1, "", "to_dict"], [31, 3, 1, "", "to_json_like"]], "matflow.EnvironmentsList": [[32, 3, 1, "", "add_object"], [32, 3, 1, "", "add_objects"], [32, 3, 1, "", "from_json_like"], [32, 3, 1, "", "get"], [32, 3, 1, "", "get_all"], [32, 3, 1, "", "list_attrs"], [32, 3, 1, "", "to_dict"], [32, 3, 1, "", "to_json_like"]], "matflow.Executable": [[33, 2, 1, "", "app"], [33, 4, 1, "", "environment"], [33, 3, 1, "", "filter_instances"], [33, 3, 1, "", "from_json_like"], [33, 2, 1, "", "instances"], [33, 2, 1, "", "label"], [33, 3, 1, "", "to_dict"], [33, 3, 1, "", "to_json_like"]], "matflow.ExecutableInstance": [[34, 2, 1, "", "app"], [34, 2, 1, "", "command"], [34, 3, 1, "", "from_json_like"], [34, 3, 1, "", "from_spec"], [34, 2, 1, "", "num_cores"], [34, 2, 1, "", "parallel_mode"], [34, 3, 1, "", "to_dict"], [34, 3, 1, "", "to_json_like"]], "matflow.ExecutablesList": [[35, 3, 1, "", "add_object"], [35, 3, 1, "", "add_objects"], [35, 2, 1, "", "environment"], [35, 3, 1, "", "from_json_like"], [35, 3, 1, "", "get"], [35, 3, 1, "", "get_all"], [35, 3, 1, "", "list_attrs"], [35, 3, 1, "", "to_dict"], [35, 3, 1, "", "to_json_like"]], "matflow.FileNameExt": [[36, 2, 1, "", "app"], [36, 2, 1, "", "file_name"], [36, 3, 1, "", "from_json_like"], [36, 3, 1, "", "to_dict"], [36, 3, 1, "", "to_json_like"], [36, 3, 1, "", "value"]], "matflow.FileNameSpec": [[37, 2, 1, "", "app"], [37, 2, 1, "", "args"], [37, 4, 1, "", "ext"], [37, 3, 1, "", "from_json_like"], [37, 2, 1, "", "is_regex"], [37, 2, 1, "", "name"], [37, 4, 1, "", "stem"], [37, 3, 1, "", "to_dict"], [37, 3, 1, "", "to_json_like"], [37, 3, 1, "", "value"]], "matflow.FileNameStem": [[38, 2, 1, "", "app"], [38, 2, 1, "", "file_name"], [38, 3, 1, "", "from_json_like"], [38, 3, 1, "", "to_dict"], [38, 3, 1, "", "to_json_like"], [38, 3, 1, "", "value"]], "matflow.FileSpec": [[39, 2, 1, "", "app"], [39, 4, 1, "", "ext"], [39, 3, 1, "", "from_json_like"], [39, 2, 1, "", "label"], [39, 2, 1, "", "name"], [39, 4, 1, "", "stem"], [39, 3, 1, "", "to_dict"], [39, 3, 1, "", "to_json_like"], [39, 3, 1, "", "value"]], "matflow.GroupList": [[40, 3, 1, "", "add_object"], [40, 3, 1, "", "add_objects"], [40, 3, 1, "", "from_json_like"], [40, 3, 1, "", "get"], [40, 3, 1, "", "get_all"], [40, 3, 1, "", "list_attrs"], [40, 3, 1, "", "to_dict"], [40, 3, 1, "", "to_json_like"]], "matflow.InputFile": [[41, 2, 1, "", "app"], [41, 4, 1, "", "contents"], [41, 4, 1, "", "extension"], [41, 2, 1, "", "file"], [41, 3, 1, "", "from_json_like"], [41, 3, 1, "", "make_persistent"], [41, 4, 1, "", "normalised_files_path"], [41, 4, 1, "", "normalised_path"], [41, 4, 1, "", "path"], [41, 3, 1, "", "read_contents"], [41, 4, 1, "", "store_contents"], [41, 3, 1, "", "to_dict"], [41, 3, 1, "", "to_json_like"], [41, 4, 1, "", "workflow"]], "matflow.InputFileGenerator": [[42, 2, 1, "", "abortable"], [42, 2, 1, "", "app"], [42, 3, 1, "", "compose_source"], [42, 2, 1, "", "environment"], [42, 3, 1, "", "from_json_like"], [42, 3, 1, "", "get_action_rules"], [42, 2, 1, "", "input_file"], [42, 2, 1, "", "inputs"], [42, 2, 1, "", "rules"], [42, 2, 1, "", "script"], [42, 2, 1, "", "script_pass_env_spec"], [42, 3, 1, "", "to_dict"], [42, 3, 1, "", "to_json_like"], [42, 3, 1, "", "write_source"]], "matflow.InputFileGeneratorSource": [[43, 2, 1, "", "app"], [43, 4, 1, "", "contents"], [43, 4, 1, "", "extension"], [43, 3, 1, "", "from_json_like"], [43, 2, 1, "", "generator"], [43, 3, 1, "", "make_persistent"], [43, 4, 1, "", "path"], [43, 3, 1, "", "read_contents"], [43, 4, 1, "", "store_contents"], [43, 3, 1, "", "to_dict"], [43, 3, 1, "", "to_json_like"], [43, 4, 1, "", "workflow"]], "matflow.InputSource": [[44, 2, 1, "", "app"], [44, 3, 1, "", "default"], [44, 2, 1, "", "element_iters"], [44, 3, 1, "", "from_json_like"], [44, 3, 1, "", "from_string"], [44, 3, 1, "", "get_task"], [44, 3, 1, "", "import_"], [44, 2, 1, "", "import_ref"], [44, 3, 1, "", "is_in"], [44, 3, 1, "", "local"], [44, 2, 1, "", "path"], [44, 2, 1, "", "source_type"], [44, 3, 1, "", "task"], [44, 2, 1, "", "task_ref"], [44, 2, 1, "", "task_source_type"], [44, 3, 1, "", "to_dict"], [44, 3, 1, "", "to_json_like"], [44, 3, 1, "", "to_string"], [44, 2, 1, "", "where"]], "matflow.InputSourceType": [[45, 2, 1, "", "DEFAULT"], [45, 2, 1, "", "IMPORT"], [45, 2, 1, "", "LOCAL"], [45, 2, 1, "", "TASK"]], "matflow.InputValue": [[46, 2, 1, "", "app"], [46, 3, 1, "", "from_json_like"], [46, 4, 1, "", "is_sub_value"], [46, 2, 1, "", "label"], [46, 4, 1, "", "labelled_type"], [46, 3, 1, "", "make_persistent"], [46, 4, 1, "", "normalised_inputs_path"], [46, 4, 1, "", "normalised_path"], [46, 2, 1, "", "parameter"], [46, 2, 1, "", "path"], [46, 3, 1, "", "to_dict"], [46, 3, 1, "", "to_json_like"], [46, 4, 1, "", "value"], [46, 2, 1, "", "value_class_method"], [46, 4, 1, "", "workflow"]], "matflow.Jobscript": [[47, 4, 1, "", "EAR_ID"], [47, 4, 1, "", "EAR_ID_file_name"], [47, 4, 1, "", "EAR_ID_file_path"], [47, 4, 1, "", "all_EAR_IDs"], [47, 4, 1, "", "all_EARs"], [47, 2, 1, "", "app"], [47, 3, 1, "", "cancel"], [47, 3, 1, "", "compose_jobscript"], [47, 4, 1, "", "dependencies"], [47, 4, 1, "", "direct_stderr_file_name"], [47, 4, 1, "", "direct_stderr_path"], [47, 4, 1, "", "direct_stdout_file_name"], [47, 4, 1, "", "direct_stdout_path"], [47, 4, 1, "", "direct_win_pid_file_name"], [47, 4, 1, "", "direct_win_pid_file_path"], [47, 4, 1, "", "element_run_dir_file_name"], [47, 4, 1, "", "element_run_dir_file_path"], [47, 4, 1, "", "end_time"], [47, 3, 1, "", "from_json_like"], [47, 3, 1, "", "get_active_states"], [47, 3, 1, "", "get_commands_file_name"], [47, 3, 1, "", "get_task_loop_idx_array"], [47, 4, 1, "", "index"], [47, 4, 1, "", "is_array"], [47, 4, 1, "", "is_submitted"], [47, 4, 1, "", "jobscript_name"], [47, 4, 1, "", "jobscript_path"], [47, 3, 1, "", "make_artifact_dirs"], [47, 4, 1, "", "num_actions"], [47, 4, 1, "", "num_elements"], [47, 4, 1, "", "os_name"], [47, 4, 1, "", "process_ID"], [47, 4, 1, "", "resources"], [47, 4, 1, "", "scheduler"], [47, 4, 1, "", "scheduler_job_ID"], [47, 4, 1, "", "scheduler_js_ref"], [47, 4, 1, "", "scheduler_name"], [47, 4, 1, "", "scheduler_ref"], [47, 4, 1, "", "shell"], [47, 4, 1, "", "shell_name"], [47, 4, 1, "", "start_time"], [47, 4, 1, "", "submission"], [47, 3, 1, "", "submit"], [47, 4, 1, "", "submit_cmdline"], [47, 4, 1, "", "submit_hostname"], [47, 4, 1, "", "submit_machine"], [47, 4, 1, "", "submit_time"], [47, 4, 1, "", "task_actions"], [47, 4, 1, "", "task_elements"], [47, 4, 1, "", "task_insert_IDs"], [47, 4, 1, "", "task_loop_idx"], [47, 3, 1, "", "to_dict"], [47, 3, 1, "", "to_json_like"], [47, 4, 1, "", "version_info"], [47, 4, 1, "", "workflow"], [47, 4, 1, "", "workflow_app_alias"], [47, 3, 1, "", "write_EAR_ID_file"], [47, 3, 1, "", "write_element_run_dir_file"], [47, 3, 1, "", "write_jobscript"]], "matflow.Loop": [[48, 2, 1, "", "app"], [48, 3, 1, "", "from_json_like"], [48, 4, 1, "", "name"], [48, 4, 1, "", "non_iterable_parameters"], [48, 4, 1, "", "num_iterations"], [48, 4, 1, "", "task_insert_IDs"], [48, 4, 1, "", "task_objects"], [48, 4, 1, "", "termination"], [48, 3, 1, "", "to_dict"], [48, 3, 1, "", "to_json_like"], [48, 4, 1, "", "workflow_template"]], "matflow.NumCores": [[49, 2, 1, "", "app"], [49, 3, 1, "", "from_json_like"], [49, 2, 1, "", "start"], [49, 2, 1, "", "step"], [49, 2, 1, "", "stop"], [49, 3, 1, "", "to_dict"], [49, 3, 1, "", "to_json_like"]], "matflow.OutputFileParser": [[50, 2, 1, "", "abortable"], [50, 2, 1, "", "app"], [50, 2, 1, "", "clean_up"], [50, 3, 1, "", "compose_source"], [50, 2, 1, "", "environment"], [50, 3, 1, "", "from_json_like"], [50, 3, 1, "", "get_action_rules"], [50, 2, 1, "", "inputs"], [50, 2, 1, "", "options"], [50, 2, 1, "", "output"], [50, 2, 1, "", "output_files"], [50, 2, 1, "", "outputs"], [50, 2, 1, "", "rules"], [50, 2, 1, "", "save_files"], [50, 2, 1, "", "script"], [50, 2, 1, "", "script_pass_env_spec"], [50, 3, 1, "", "to_dict"], [50, 3, 1, "", "to_json_like"], [50, 3, 1, "", "write_source"]], "matflow.OutputFileParserSource": [[51, 2, 1, "", "app"], [51, 4, 1, "", "contents"], [51, 4, 1, "", "extension"], [51, 3, 1, "", "from_json_like"], [51, 3, 1, "", "make_persistent"], [51, 2, 1, "", "parser"], [51, 4, 1, "", "path"], [51, 3, 1, "", "read_contents"], [51, 4, 1, "", "store_contents"], [51, 3, 1, "", "to_dict"], [51, 3, 1, "", "to_json_like"], [51, 4, 1, "", "workflow"]], "matflow.OutputLabel": [[52, 2, 1, "", "app"], [52, 3, 1, "", "from_json_like"], [52, 2, 1, "", "label"], [52, 2, 1, "", "parameter"], [52, 3, 1, "", "to_dict"], [52, 3, 1, "", "to_json_like"], [52, 2, 1, "", "where"]], "matflow.Parameter": [[53, 2, 1, "", "app"], [53, 3, 1, "", "from_json_like"], [53, 2, 1, "", "is_file"], [53, 2, 1, "", "sub_parameters"], [53, 3, 1, "", "to_dict"], [53, 3, 1, "", "to_json_like"], [53, 2, 1, "", "typ"], [53, 4, 1, "", "url_slug"]], "matflow.ParameterPath": [[54, 2, 1, "", "app"], [54, 3, 1, "", "from_json_like"], [54, 2, 1, "", "path"], [54, 2, 1, "", "task"], [54, 3, 1, "", "to_dict"], [54, 3, 1, "", "to_json_like"]], "matflow.ParameterPropagationMode": [[55, 2, 1, "", "EXPLICIT"], [55, 2, 1, "", "IMPLICIT"], [55, 2, 1, "", "NEVER"]], "matflow.ParameterValue": [[56, 3, 1, "", "dump_to_HDF5_group"], [56, 3, 1, "", "prepare_JSON_dump"], [56, 3, 1, "", "save_from_HDF5_group"], [56, 3, 1, "", "save_from_JSON"], [56, 3, 1, "", "to_dict"]], "matflow.Parameters": [[57, 2, 1, "", "default"], [57, 2, 1, "", "path"], [57, 2, 1, "", "raise_on_missing"], [57, 2, 1, "", "raise_on_unset"], [57, 2, 1, "", "return_element_parameters"], [57, 2, 1, "", "task"]], "matflow.ParametersList": [[58, 3, 1, "", "add_object"], [58, 3, 1, "", "add_objects"], [58, 3, 1, "", "from_json_like"], [58, 3, 1, "", "get"], [58, 3, 1, "", "get_all"], [58, 3, 1, "", "list_attrs"], [58, 3, 1, "", "to_dict"], [58, 3, 1, "", "to_json_like"]], "matflow.ResourceList": [[59, 3, 1, "", "add_object"], [59, 4, 1, "", "element_set"], [59, 3, 1, "", "from_json_like"], [59, 3, 1, "", "get"], [59, 3, 1, "", "get_all"], [59, 3, 1, "", "get_scopes"], [59, 3, 1, "", "list_attrs"], [59, 3, 1, "", "merge_other"], [59, 3, 1, "", "normalise"], [59, 3, 1, "", "to_dict"], [59, 3, 1, "", "to_json_like"], [59, 4, 1, "", "workflow_template"]], "matflow.ResourceSpec": [[60, 2, 1, "", "ALLOWED_PARAMETERS"], [60, 4, 1, "", "SGE_parallel_env"], [60, 4, 1, "", "SLURM_num_cpus_per_task"], [60, 4, 1, "", "SLURM_num_nodes"], [60, 4, 1, "", "SLURM_num_tasks"], [60, 4, 1, "", "SLURM_num_tasks_per_node"], [60, 4, 1, "", "SLURM_partition"], [60, 2, 1, "", "app"], [60, 3, 1, "", "copy_non_persistent"], [60, 4, 1, "", "element_set"], [60, 4, 1, "", "environments"], [60, 3, 1, "", "from_json_like"], [60, 3, 1, "", "make_persistent"], [60, 4, 1, "", "max_array_items"], [60, 4, 1, "", "normalised_path"], [60, 4, 1, "", "normalised_resources_path"], [60, 4, 1, "", "num_cores"], [60, 4, 1, "", "num_cores_per_node"], [60, 4, 1, "", "num_nodes"], [60, 4, 1, "", "num_threads"], [60, 4, 1, "", "os_name"], [60, 4, 1, "", "parallel_mode"], [60, 4, 1, "", "scheduler"], [60, 4, 1, "", "scheduler_args"], [60, 2, 1, "", "scope"], [60, 4, 1, "", "scratch"], [60, 4, 1, "", "shell"], [60, 4, 1, "", "shell_args"], [60, 4, 1, "", "time_limit"], [60, 3, 1, "", "to_dict"], [60, 3, 1, "", "to_json_like"], [60, 4, 1, "", "use_job_array"], [60, 4, 1, "", "workflow"], [60, 4, 1, "", "workflow_template"]], "matflow.Rule": [[61, 2, 1, "", "app"], [61, 2, 1, "", "cast"], [61, 2, 1, "", "check_exists"], [61, 2, 1, "", "check_missing"], [61, 2, 1, "", "condition"], [61, 2, 1, "", "doc"], [61, 3, 1, "", "from_json_like"], [61, 2, 1, "", "path"], [61, 3, 1, "", "test"], [61, 3, 1, "", "to_dict"], [61, 3, 1, "", "to_json_like"]], "matflow.RunDirAppFiles": [[62, 2, 1, "", "app"], [62, 3, 1, "", "get_commands_file_name"], [62, 3, 1, "", "get_log_file_name"], [62, 3, 1, "", "get_run_file_prefix"], [62, 3, 1, "", "get_run_param_dump_file_prefix"], [62, 3, 1, "", "get_run_param_load_file_prefix"], [62, 3, 1, "", "get_std_file_name"], [62, 3, 1, "", "take_snapshot"]], "matflow.SGEPosix": [[63, 2, 1, "", "DEFAULT_ARRAY_ITEM_VAR"], [63, 2, 1, "", "DEFAULT_ARRAY_SWITCH"], [63, 2, 1, "", "DEFAULT_CWD_SWITCH"], [63, 2, 1, "", "DEFAULT_DEL_CMD"], [63, 2, 1, "", "DEFAULT_JS_CMD"], [63, 2, 1, "", "DEFAULT_LOGIN_NODES_CMD"], [63, 2, 1, "", "DEFAULT_LOGIN_NODE_MATCH"], [63, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [63, 2, 1, "", "DEFAULT_SHELL_ARGS"], [63, 2, 1, "", "DEFAULT_SHOW_CMD"], [63, 2, 1, "", "DEFAULT_SUBMIT_CMD"], [63, 2, 1, "", "app"], [63, 3, 1, "", "cancel_jobs"], [63, 3, 1, "", "format_options"], [63, 3, 1, "", "format_switch"], [63, 3, 1, "", "get_job_state_info"], [63, 3, 1, "", "get_job_statuses"], [63, 3, 1, "", "get_login_nodes"], [63, 3, 1, "", "get_submit_command"], [63, 3, 1, "", "get_version_info"], [63, 3, 1, "", "is_jobscript_active"], [63, 3, 1, "", "is_num_cores_supported"], [63, 3, 1, "", "parse_submission_output"], [63, 3, 1, "", "process_resources"], [63, 2, 1, "", "state_lookup"], [63, 4, 1, "", "unique_properties"], [63, 3, 1, "", "wait_for_jobscripts"]], "matflow.SchemaInput": [[64, 4, 1, "", "all_labelled_types"], [64, 2, 1, "", "app"], [64, 4, 1, "", "default_value"], [64, 3, 1, "", "from_json_like"], [64, 4, 1, "", "input_or_output"], [64, 3, 1, "", "labelled_info"], [64, 2, 1, "", "labels"], [64, 2, 1, "", "multiple"], [64, 4, 1, "", "name"], [64, 2, 1, "", "parameter"], [64, 4, 1, "", "single_label"], [64, 4, 1, "", "single_labelled_data"], [64, 4, 1, "", "single_labelled_type"], [64, 4, 1, "", "task_schema"], [64, 3, 1, "", "to_dict"], [64, 3, 1, "", "to_json_like"], [64, 4, 1, "", "typ"]], "matflow.SchemaOutput": [[65, 2, 1, "", "app"], [65, 3, 1, "", "from_json_like"], [65, 4, 1, "", "input_or_output"], [65, 4, 1, "", "name"], [65, 2, 1, "", "parameter"], [65, 2, 1, "", "propagation_mode"], [65, 3, 1, "", "to_dict"], [65, 3, 1, "", "to_json_like"], [65, 4, 1, "", "typ"]], "matflow.SchemaParameter": [[66, 2, 1, "", "app"], [66, 3, 1, "", "from_json_like"], [66, 4, 1, "", "name"], [66, 3, 1, "", "to_dict"], [66, 3, 1, "", "to_json_like"], [66, 4, 1, "", "typ"]], "matflow.SlurmPosix": [[67, 2, 1, "", "DEFAULT_ARRAY_ITEM_VAR"], [67, 2, 1, "", "DEFAULT_ARRAY_SWITCH"], [67, 2, 1, "", "DEFAULT_DEL_CMD"], [67, 2, 1, "", "DEFAULT_JS_CMD"], [67, 2, 1, "", "DEFAULT_LOGIN_NODES_CMD"], [67, 2, 1, "", "DEFAULT_LOGIN_NODE_MATCH"], [67, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [67, 2, 1, "", "DEFAULT_SHELL_ARGS"], [67, 2, 1, "", "DEFAULT_SHELL_EXECUTABLE"], [67, 2, 1, "", "DEFAULT_SHOW_CMD"], [67, 2, 1, "", "DEFAULT_SUBMIT_CMD"], [67, 2, 1, "", "app"], [67, 3, 1, "", "cancel_jobs"], [67, 3, 1, "", "format_options"], [67, 3, 1, "", "format_switch"], [67, 3, 1, "", "get_job_state_info"], [67, 3, 1, "", "get_submit_command"], [67, 3, 1, "", "get_version_info"], [67, 3, 1, "", "is_jobscript_active"], [67, 3, 1, "", "is_num_cores_supported"], [67, 3, 1, "", "parse_submission_output"], [67, 3, 1, "", "process_resources"], [67, 2, 1, "", "state_lookup"], [67, 4, 1, "", "unique_properties"], [67, 3, 1, "", "wait_for_jobscripts"]], "matflow.SubParameter": [[68, 2, 1, "", "address"], [68, 2, 1, "", "parameter"]], "matflow.Submission": [[69, 4, 1, "", "EARs_by_elements"], [69, 4, 1, "", "JS_parallelism"], [69, 4, 1, "", "abort_EARs_file_name"], [69, 4, 1, "", "abort_EARs_file_path"], [69, 4, 1, "", "all_EAR_IDs"], [69, 4, 1, "", "all_EARs"], [69, 2, 1, "", "app"], [69, 3, 1, "", "cancel"], [69, 4, 1, "", "end_time"], [69, 4, 1, "", "environments"], [69, 3, 1, "", "from_json_like"], [69, 3, 1, "", "get_active_jobscripts"], [69, 3, 1, "", "get_end_time"], [69, 3, 1, "", "get_start_time"], [69, 3, 1, "", "get_unique_schedulers"], [69, 3, 1, "", "get_unique_schedulers_of_jobscripts"], [69, 3, 1, "", "get_unique_shells"], [69, 4, 1, "", "index"], [69, 4, 1, "", "jobscript_indices"], [69, 4, 1, "", "jobscripts"], [69, 4, 1, "", "needs_submit"], [69, 4, 1, "", "outstanding_jobscripts"], [69, 4, 1, "", "path"], [69, 4, 1, "", "start_time"], [69, 4, 1, "", "status"], [69, 4, 1, "", "submission_parts"], [69, 3, 1, "", "submit"], [69, 4, 1, "", "submitted_jobscripts"], [69, 3, 1, "", "to_dict"], [69, 3, 1, "", "to_json_like"], [69, 4, 1, "", "workflow"]], "matflow.Task": [[70, 3, 1, "", "add_group"], [70, 3, 1, "", "all_schema_actions"], [70, 4, 1, "", "all_schema_input_normalised_paths"], [70, 4, 1, "", "all_schema_input_types"], [70, 4, 1, "", "all_schema_inputs"], [70, 4, 1, "", "all_schema_output_types"], [70, 4, 1, "", "all_schema_outputs"], [70, 4, 1, "", "all_sourced_normalised_paths"], [70, 2, 1, "", "app"], [70, 4, 1, "", "defined_input_types"], [70, 4, 1, "", "dir_name"], [70, 4, 1, "", "element_sets"], [70, 3, 1, "", "from_json_like"], [70, 3, 1, "", "get_available_task_input_sources"], [70, 3, 1, "", "get_input_statuses"], [70, 3, 1, "", "get_param_provided_element_sets"], [70, 3, 1, "", "get_schema_action"], [70, 3, 1, "", "get_task_unique_names"], [70, 4, 1, "", "index"], [70, 4, 1, "", "insert_ID"], [70, 3, 1, "", "is_input_type_required"], [70, 2, 1, "", "merge_envs"], [70, 4, 1, "", "name"], [70, 4, 1, "", "non_universal_input_types"], [70, 4, 1, "", "num_all_schema_actions"], [70, 4, 1, "", "num_element_sets"], [70, 4, 1, "", "objective"], [70, 4, 1, "", "output_labels"], [70, 3, 1, "", "prepare_element_resolution"], [70, 3, 1, "", "provides_parameters"], [70, 4, 1, "", "schema"], [70, 4, 1, "", "schemas"], [70, 3, 1, "", "set_sequence_parameters"], [70, 3, 1, "", "to_dict"], [70, 3, 1, "", "to_json_like"], [70, 3, 1, "", "to_persistent"], [70, 4, 1, "", "undefined_input_types"], [70, 4, 1, "", "undefined_inputs"], [70, 4, 1, "", "universal_input_types"], [70, 2, 1, "", "workflow_template"]], "matflow.TaskInputParameters": [[71, 2, 1, "", "task"]], "matflow.TaskList": [[72, 3, 1, "", "add_object"], [72, 3, 1, "", "add_objects"], [72, 3, 1, "", "from_json_like"], [72, 3, 1, "", "get"], [72, 3, 1, "", "get_all"], [72, 3, 1, "", "list_attrs"], [72, 3, 1, "", "to_dict"], [72, 3, 1, "", "to_json_like"]], "matflow.TaskObjective": [[73, 2, 1, "", "app"], [73, 3, 1, "", "from_json_like"], [73, 2, 1, "", "name"], [73, 3, 1, "", "to_dict"], [73, 3, 1, "", "to_json_like"]], "matflow.TaskOutputParameters": [[74, 2, 1, "", "task"]], "matflow.TaskSchema": [[75, 2, 1, "", "actions"], [75, 2, 1, "", "app"], [75, 4, 1, "", "basic_info"], [75, 2, 1, "", "environment_presets"], [75, 3, 1, "", "from_json_like"], [75, 3, 1, "", "get_by_key"], [75, 3, 1, "", "get_info_html"], [75, 3, 1, "", "get_key"], [75, 3, 1, "", "get_parameter_dependence"], [75, 3, 1, "", "ignore_invalid_actions"], [75, 2, 1, "", "implementation"], [75, 4, 1, "", "info"], [75, 4, 1, "", "input_types"], [75, 2, 1, "", "inputs"], [75, 3, 1, "", "make_persistent"], [75, 2, 1, "", "method"], [75, 4, 1, "", "multi_input_types"], [75, 4, 1, "", "name"], [75, 2, 1, "", "objective"], [75, 4, 1, "", "output_types"], [75, 2, 1, "", "outputs"], [75, 2, 1, "", "parameter_class_modules"], [75, 4, 1, "", "provides_parameters"], [75, 4, 1, "", "task_template"], [75, 3, 1, "", "to_dict"], [75, 3, 1, "", "to_json_like"], [75, 2, 1, "", "version"], [75, 2, 1, "", "web_doc"]], "matflow.TaskSchemasList": [[76, 3, 1, "", "add_object"], [76, 3, 1, "", "add_objects"], [76, 3, 1, "", "from_json_like"], [76, 3, 1, "", "get"], [76, 3, 1, "", "get_all"], [76, 3, 1, "", "list_attrs"], [76, 3, 1, "", "to_dict"], [76, 3, 1, "", "to_json_like"]], "matflow.TaskSourceType": [[77, 2, 1, "", "ANY"], [77, 2, 1, "", "INPUT"], [77, 2, 1, "", "OUTPUT"]], "matflow.TaskTemplateList": [[78, 3, 1, "", "add_object"], [78, 3, 1, "", "add_objects"], [78, 3, 1, "", "from_json_like"], [78, 3, 1, "", "get"], [78, 3, 1, "", "get_all"], [78, 3, 1, "", "list_attrs"], [78, 3, 1, "", "to_dict"], [78, 3, 1, "", "to_json_like"]], "matflow.ValuePerturbation": [[79, 2, 1, "", "additive_factor"], [79, 2, 1, "", "app"], [79, 3, 1, "", "from_json_like"], [79, 3, 1, "", "from_spec"], [79, 3, 1, "", "make_persistent"], [79, 2, 1, "", "multiplicative_factor"], [79, 2, 1, "", "name"], [79, 2, 1, "", "path"], [79, 3, 1, "", "to_dict"], [79, 3, 1, "", "to_json_like"], [79, 4, 1, "", "value"], [79, 4, 1, "", "workflow"]], "matflow.ValueSequence": [[80, 2, 1, "", "app"], [80, 3, 1, "", "from_file"], [80, 3, 1, "", "from_geometric_space"], [80, 3, 1, "", "from_json_like"], [80, 3, 1, "", "from_linear_space"], [80, 3, 1, "", "from_log_space"], [80, 3, 1, "", "from_random_uniform"], [80, 3, 1, "", "from_range"], [80, 3, 1, "", "from_rectangle"], [80, 4, 1, "", "input_path"], [80, 4, 1, "", "input_type"], [80, 4, 1, "", "is_sub_value"], [80, 2, 1, "", "label"], [80, 4, 1, "", "labelled_type"], [80, 3, 1, "", "make_persistent"], [80, 2, 1, "", "nesting_order"], [80, 4, 1, "", "normalised_inputs_path"], [80, 4, 1, "", "normalised_path"], [80, 4, 1, "", "parameter"], [80, 2, 1, "", "path"], [80, 4, 1, "", "path_split"], [80, 4, 1, "", "path_type"], [80, 4, 1, "", "resource_scope"], [80, 3, 1, "", "to_dict"], [80, 3, 1, "", "to_json_like"], [80, 2, 1, "", "value_class_method"], [80, 4, 1, "", "values"], [80, 4, 1, "", "workflow"]], "matflow.Workflow": [[81, 3, 1, "", "abort_run"], [81, 3, 1, "", "add_loop"], [81, 3, 1, "", "add_submission"], [81, 3, 1, "", "add_task"], [81, 3, 1, "", "add_task_after"], [81, 3, 1, "", "add_task_before"], [81, 2, 1, "", "app"], [81, 4, 1, "", "artifacts_path"], [81, 3, 1, "", "batch_update"], [81, 3, 1, "", "cancel"], [81, 3, 1, "", "check_loop_termination"], [81, 3, 1, "", "check_parameters_exist"], [81, 3, 1, "", "copy"], [81, 4, 1, "", "creation_info"], [81, 3, 1, "", "delete"], [81, 3, 1, "", "elements"], [81, 4, 1, "", "execution_path"], [81, 3, 1, "", "from_JSON_file"], [81, 3, 1, "", "from_JSON_string"], [81, 3, 1, "", "from_YAML_file"], [81, 3, 1, "", "from_YAML_string"], [81, 3, 1, "", "from_file"], [81, 3, 1, "", "from_template"], [81, 3, 1, "", "from_template_data"], [81, 3, 1, "", "get_EAR_IDs_of_tasks"], [81, 3, 1, "", "get_EAR_skipped"], [81, 3, 1, "", "get_EARs_from_IDs"], [81, 3, 1, "", "get_EARs_of_tasks"], [81, 3, 1, "", "get_all_EARs"], [81, 3, 1, "", "get_all_element_iterations"], [81, 3, 1, "", "get_all_elements"], [81, 3, 1, "", "get_all_parameter_data"], [81, 3, 1, "", "get_all_parameter_sources"], [81, 3, 1, "", "get_all_parameters"], [81, 3, 1, "", "get_all_submission_run_IDs"], [81, 3, 1, "", "get_element_IDs_from_EAR_IDs"], [81, 3, 1, "", "get_element_iteration_IDs_from_EAR_IDs"], [81, 3, 1, "", "get_element_iterations_from_IDs"], [81, 3, 1, "", "get_element_iterations_of_tasks"], [81, 3, 1, "", "get_elements_from_IDs"], [81, 3, 1, "", "get_iteration_final_run_IDs"], [81, 3, 1, "", "get_iteration_task_pathway"], [81, 3, 1, "", "get_loop_map"], [81, 3, 1, "", "get_parameter"], [81, 3, 1, "", "get_parameter_data"], [81, 3, 1, "", "get_parameter_set_statuses"], [81, 3, 1, "", "get_parameter_source"], [81, 3, 1, "", "get_parameter_sources"], [81, 3, 1, "", "get_parameters"], [81, 3, 1, "", "get_running_elements"], [81, 3, 1, "", "get_running_runs"], [81, 3, 1, "", "get_store_EARs"], [81, 3, 1, "", "get_store_element_iterations"], [81, 3, 1, "", "get_store_elements"], [81, 3, 1, "", "get_store_tasks"], [81, 3, 1, "", "get_task_IDs_from_element_IDs"], [81, 3, 1, "", "get_task_elements"], [81, 3, 1, "", "get_task_unique_names"], [81, 4, 1, "", "id_"], [81, 4, 1, "", "input_files_path"], [81, 3, 1, "", "is_parameter_set"], [81, 4, 1, "", "loops"], [81, 4, 1, "", "name"], [81, 4, 1, "", "num_EARs"], [81, 4, 1, "", "num_added_tasks"], [81, 4, 1, "", "num_element_iterations"], [81, 4, 1, "", "num_elements"], [81, 4, 1, "", "num_loops"], [81, 4, 1, "", "num_submissions"], [81, 4, 1, "", "num_tasks"], [81, 3, 1, "", "process_shell_parameter_output"], [81, 3, 1, "", "rechunk"], [81, 3, 1, "", "rechunk_parameter_base"], [81, 3, 1, "", "rechunk_runs"], [81, 3, 1, "", "reload"], [81, 3, 1, "", "resolve_jobscripts"], [81, 3, 1, "", "save_parameter"], [81, 3, 1, "", "set_EAR_end"], [81, 3, 1, "", "set_EAR_skip"], [81, 3, 1, "", "set_EAR_start"], [81, 3, 1, "", "set_EAR_submission_index"], [81, 3, 1, "", "set_EARs_initialised"], [81, 3, 1, "", "set_parameter_value"], [81, 3, 1, "", "show_all_EAR_statuses"], [81, 4, 1, "", "store_format"], [81, 4, 1, "", "submissions"], [81, 4, 1, "", "submissions_path"], [81, 3, 1, "", "submit"], [81, 4, 1, "", "task_artifacts_path"], [81, 4, 1, "", "tasks"], [81, 4, 1, "", "template"], [81, 4, 1, "", "template_components"], [81, 3, 1, "", "temporary_rename"], [81, 4, 1, "", "ts_fmt"], [81, 4, 1, "", "ts_name_fmt"], [81, 3, 1, "", "unzip"], [81, 4, 1, "", "url"], [81, 3, 1, "", "wait"], [81, 3, 1, "", "write_commands"], [81, 3, 1, "", "zip"]], "matflow.WorkflowBlueprint": [[82, 2, 1, "", "workflow_template"]], "matflow.WorkflowLoop": [[83, 3, 1, "", "add_iteration"], [83, 2, 1, "", "app"], [83, 4, 1, "", "downstream_tasks"], [83, 3, 1, "", "get_child_loops"], [83, 3, 1, "", "get_parent_loops"], [83, 4, 1, "", "index"], [83, 4, 1, "", "iterable_parameters"], [83, 4, 1, "", "name"], [83, 3, 1, "", "new_empty_loop"], [83, 4, 1, "", "num_added_iterations"], [83, 4, 1, "", "num_iterations"], [83, 4, 1, "", "parents"], [83, 4, 1, "", "task_indices"], [83, 4, 1, "", "task_insert_IDs"], [83, 4, 1, "", "task_objects"], [83, 4, 1, "", "template"], [83, 3, 1, "", "test_termination"], [83, 4, 1, "", "upstream_tasks"], [83, 4, 1, "", "workflow"]], "matflow.WorkflowLoopList": [[84, 3, 1, "", "add_object"], [84, 3, 1, "", "add_objects"], [84, 2, 1, "", "app"], [84, 3, 1, "", "from_json_like"], [84, 3, 1, "", "get"], [84, 3, 1, "", "get_all"], [84, 3, 1, "", "list_attrs"], [84, 3, 1, "", "to_dict"], [84, 3, 1, "", "to_json_like"]], "matflow.WorkflowTask": [[85, 3, 1, "", "add_elements"], [85, 2, 1, "", "app"], [85, 4, 1, "", "dir_name"], [85, 4, 1, "", "downstream_tasks"], [85, 4, 1, "", "element_IDs"], [85, 4, 1, "", "elements"], [85, 3, 1, "", "ensure_input_sources"], [85, 3, 1, "", "generate_new_elements"], [85, 3, 1, "", "get"], [85, 3, 1, "", "get_all_element_iterations"], [85, 3, 1, "", "get_dependent_elements"], [85, 3, 1, "", "get_dependent_tasks"], [85, 3, 1, "", "get_dir_name"], [85, 3, 1, "", "get_element_dependencies"], [85, 3, 1, "", "get_task_dependencies"], [85, 4, 1, "", "index"], [85, 3, 1, "", "initialise_EARs"], [85, 4, 1, "", "inputs"], [85, 4, 1, "", "insert_ID"], [85, 4, 1, "", "name"], [85, 3, 1, "", "new_empty_task"], [85, 4, 1, "", "num_actions"], [85, 4, 1, "", "num_element_sets"], [85, 4, 1, "", "num_elements"], [85, 4, 1, "", "outputs"], [85, 3, 1, "", "resolve_element_data_indices"], [85, 4, 1, "", "template"], [85, 4, 1, "", "unique_name"], [85, 4, 1, "", "upstream_tasks"], [85, 4, 1, "", "workflow"]], "matflow.WorkflowTaskList": [[86, 3, 1, "", "add_object"], [86, 3, 1, "", "add_objects"], [86, 2, 1, "", "app"], [86, 3, 1, "", "from_json_like"], [86, 3, 1, "", "get"], [86, 3, 1, "", "get_all"], [86, 3, 1, "", "list_attrs"], [86, 3, 1, "", "to_dict"], [86, 3, 1, "", "to_json_like"]], "matflow.WorkflowTemplate": [[87, 2, 1, "", "app"], [87, 2, 1, "", "doc"], [87, 2, 1, "", "env_presets"], [87, 2, 1, "", "environments"], [87, 3, 1, "", "from_JSON_file"], [87, 3, 1, "", "from_JSON_string"], [87, 3, 1, "", "from_YAML_file"], [87, 3, 1, "", "from_YAML_string"], [87, 3, 1, "", "from_file"], [87, 3, 1, "", "from_json_like"], [87, 2, 1, "", "loops"], [87, 2, 1, "", "merge_envs"], [87, 2, 1, "", "merge_resources"], [87, 2, 1, "", "name"], [87, 2, 1, "", "resources"], [87, 2, 1, "", "source_file"], [87, 2, 1, "", "store_kwargs"], [87, 2, 1, "", "tasks"], [87, 3, 1, "", "to_dict"], [87, 3, 1, "", "to_json_like"], [87, 2, 1, "", "workflow"]], "matflow.param_classes": [[99, 0, 0, "-", "load"], [103, 0, 0, "-", "orientations"], [111, 0, 0, "-", "seeds"], [113, 0, 0, "-", "single_crystal_parameters"], [115, 0, 0, "-", "utils"]], "matflow.param_classes.load": [[100, 1, 1, "", "LoadCase"], [101, 1, 1, "", "LoadStep"], [102, 1, 1, "", "StrainRateMode"]], "matflow.param_classes.load.LoadCase": [[100, 3, 1, "", "biaxial"], [100, 3, 1, "", "dump_to_HDF5_group"], [100, 3, 1, "", "example_uniaxial"], [100, 3, 1, "", "multistep"], [100, 4, 1, "", "num_steps"], [100, 3, 1, "", "planar_2D"], [100, 3, 1, "", "plane_strain"], [100, 3, 1, "", "prepare_JSON_dump"], [100, 3, 1, "", "random_2D"], [100, 3, 1, "", "random_3D"], [100, 3, 1, "", "save_from_HDF5_group"], [100, 3, 1, "", "save_from_JSON"], [100, 2, 1, "", "steps"], [100, 3, 1, "", "to_dict"], [100, 4, 1, "", "type"], [100, 4, 1, "", "types"], [100, 3, 1, "", "uniaxial"], [100, 3, 1, "", "uniaxial_cyclic"]], "matflow.param_classes.load.LoadStep": [[101, 3, 1, "", "biaxial"], [101, 3, 1, "", "dump_to_HDF5_group"], [101, 3, 1, "", "example_uniaxial"], [101, 4, 1, "", "method_args"], [101, 4, 1, "", "method_name"], [101, 3, 1, "", "planar_2D"], [101, 3, 1, "", "plane_strain"], [101, 3, 1, "", "prepare_JSON_dump"], [101, 3, 1, "", "random_2D"], [101, 3, 1, "", "random_3D"], [101, 3, 1, "", "save_from_HDF5_group"], [101, 3, 1, "", "save_from_JSON"], [101, 4, 1, "", "strain_like_tensor"], [101, 3, 1, "", "to_dict"], [101, 4, 1, "", "type"], [101, 3, 1, "", "uniaxial"], [101, 3, 1, "", "uniaxial_cyclic"]], "matflow.param_classes.load.StrainRateMode": [[102, 2, 1, "", "DEF_GRAD_RATE"], [102, 2, 1, "", "VEL_GRAD"], [102, 2, 1, "", "VEL_GRAD_APPROX"]], "matflow.param_classes.orientations": [[104, 1, 1, "", "EulerDefinition"], [105, 1, 1, "", "LatticeDirection"], [106, 1, 1, "", "OrientationRepresentation"], [107, 1, 1, "", "OrientationRepresentationType"], [108, 1, 1, "", "Orientations"], [109, 1, 1, "", "QuatOrder"], [110, 1, 1, "", "UnitCellAlignment"]], "matflow.param_classes.orientations.EulerDefinition": [[104, 2, 1, "", "BUNGE"]], "matflow.param_classes.orientations.LatticeDirection": [[105, 2, 1, "", "A"], [105, 2, 1, "", "A_STAR"], [105, 2, 1, "", "B"], [105, 2, 1, "", "B_STAR"], [105, 2, 1, "", "C"], [105, 2, 1, "", "C_STAR"]], "matflow.param_classes.orientations.OrientationRepresentation": [[106, 3, 1, "", "dump_to_HDF5_group"], [106, 2, 1, "", "euler_definition"], [106, 2, 1, "", "euler_is_degrees"], [106, 3, 1, "", "prepare_JSON_dump"], [106, 2, 1, "", "quat_order"], [106, 3, 1, "", "save_from_HDF5_group"], [106, 3, 1, "", "save_from_JSON"], [106, 3, 1, "", "to_dict"], [106, 2, 1, "", "type"]], "matflow.param_classes.orientations.OrientationRepresentationType": [[107, 2, 1, "", "EULER"], [107, 2, 1, "", "QUATERNION"]], "matflow.param_classes.orientations.Orientations": [[108, 2, 1, "", "data"], [108, 3, 1, "", "dump_to_HDF5_group"], [108, 3, 1, "", "from_JSON_like"], [108, 3, 1, "", "from_file"], [108, 3, 1, "", "from_random"], [108, 3, 1, "", "prepare_JSON_dump"], [108, 3, 1, "", "quat_sample_random"], [108, 2, 1, "", "representation"], [108, 3, 1, "", "save_from_HDF5_group"], [108, 3, 1, "", "save_from_JSON"], [108, 3, 1, "", "to_dict"], [108, 2, 1, "", "unit_cell_alignment"]], "matflow.param_classes.orientations.QuatOrder": [[109, 2, 1, "", "SCALAR_VECTOR"], [109, 2, 1, "", "VECTOR_SCALAR"]], "matflow.param_classes.orientations.UnitCellAlignment": [[110, 3, 1, "", "dump_to_HDF5_group"], [110, 3, 1, "", "from_hex_convention_DAMASK"], [110, 3, 1, "", "from_hex_convention_MTEX"], [110, 3, 1, "", "prepare_JSON_dump"], [110, 3, 1, "", "save_from_HDF5_group"], [110, 3, 1, "", "save_from_JSON"], [110, 3, 1, "", "to_dict"], [110, 2, 1, "", "x"], [110, 2, 1, "", "y"], [110, 2, 1, "", "z"]], "matflow.param_classes.seeds": [[112, 1, 1, "", "MicrostructureSeeds"]], "matflow.param_classes.seeds.MicrostructureSeeds": [[112, 2, 1, "", "box_size"], [112, 3, 1, "", "dump_to_HDF5_group"], [112, 3, 1, "", "from_JSON_like"], [112, 3, 1, "", "from_file"], [112, 3, 1, "", "from_random"], [112, 4, 1, "", "num_seeds"], [112, 2, 1, "", "orientations"], [112, 2, 1, "", "phase_label"], [112, 2, 1, "", "position"], [112, 3, 1, "", "prepare_JSON_dump"], [112, 2, 1, "", "random_seed"], [112, 3, 1, "", "save_from_HDF5_group"], [112, 3, 1, "", "save_from_JSON"], [112, 3, 1, "", "show"], [112, 3, 1, "", "to_dict"]], "matflow.param_classes.single_crystal_parameters": [[114, 1, 1, "", "SingleCrystalParameters"]], "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters": [[114, 3, 1, "", "as_base"], [114, 4, 1, "", "base"], [114, 3, 1, "", "dump_to_HDF5_group"], [114, 4, 1, "", "perturbations"], [114, 4, 1, "", "phases"], [114, 3, 1, "", "prepare_JSON_dump"], [114, 3, 1, "", "save_from_HDF5_group"], [114, 3, 1, "", "save_from_JSON"], [114, 3, 1, "", "to_dict"]], "matflow.param_classes.utils": [[116, 6, 1, "", "masked_array_from_list"]], "matflow.tests": [[123, 0, 0, "-", "conftest"], [130, 0, 0, "-", "test_cli"], [133, 0, 0, "-", "test_utils"]], "matflow.tests.conftest": [[124, 6, 1, "", "new_null_config"], [125, 6, 1, "", "null_config"], [126, 6, 1, "", "pytest_addoption"], [127, 6, 1, "", "pytest_collection_modifyitems"], [128, 6, 1, "", "pytest_configure"], [129, 6, 1, "", "pytest_unconfigure"]], "matflow.tests.test_cli": [[131, 6, 1, "", "test_hpcflow_version"], [132, 6, 1, "", "test_version"]], "matflow.tests.test_utils": [[134, 6, 1, "", "test_masked_array_from_list_1D"], [135, 6, 1, "", "test_masked_array_from_list_1D_masked"], [136, 6, 1, "", "test_masked_array_from_list_2D"], [137, 6, 1, "", "test_masked_array_from_list_2D_masked"]], "matflow-cancel": [[139, 7, 1, "cmdoption-matflow-cancel-r", "--ref-type"], [139, 7, 1, "cmdoption-matflow-cancel-r", "-r"], [139, 7, 1, "cmdoption-matflow-cancel-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-config-add-scheduler": [[139, 7, 1, "cmdoption-matflow-config-add-scheduler-defaults", "--defaults"], [139, 7, 1, "cmdoption-matflow-config-add-scheduler-arg-NAME", "NAME"]], "matflow-config-add-shell-wsl": [[139, 7, 1, "cmdoption-matflow-config-add-shell-wsl-defaults", "--defaults"]], "matflow-config-add-shell": [[139, 7, 1, "cmdoption-matflow-config-add-shell-defaults", "--defaults"], [139, 7, 1, "cmdoption-matflow-config-add-shell-arg-NAME", "NAME"]], "matflow-config-append": [[139, 7, 1, "cmdoption-matflow-config-append-json", "--json"], [139, 7, 1, "cmdoption-matflow-config-append-arg-NAME", "NAME"], [139, 7, 1, "cmdoption-matflow-config-append-arg-VALUE", "VALUE"]], "matflow-config-get": [[139, 7, 1, "cmdoption-matflow-config-get-all", "--all"], [139, 7, 1, "cmdoption-matflow-config-get-file", "--file"], [139, 7, 1, "cmdoption-matflow-config-get-metadata", "--metadata"], [139, 7, 1, "cmdoption-matflow-config-get-arg-NAME", "NAME"]], "matflow-config-import": [[139, 7, 1, "cmdoption-matflow-config-import-new", "--new"], [139, 7, 1, "cmdoption-matflow-config-import-rename", "--no-rename"], [139, 7, 1, "cmdoption-matflow-config-import-rename", "--rename"], [139, 7, 1, "cmdoption-matflow-config-import-arg-FILE_PATH", "FILE_PATH"]], "matflow-config-init": [[139, 7, 1, "cmdoption-matflow-config-init-path", "--path"], [139, 7, 1, "cmdoption-matflow-config-init-arg-KNOWN_NAME", "KNOWN_NAME"]], "matflow-config-open": [[139, 7, 1, "cmdoption-matflow-config-open-path", "--path"]], "matflow-config-pop": [[139, 7, 1, "cmdoption-matflow-config-pop-arg-INDEX", "INDEX"], [139, 7, 1, "cmdoption-matflow-config-pop-arg-NAME", "NAME"]], "matflow-config-prepend": [[139, 7, 1, "cmdoption-matflow-config-prepend-json", "--json"], [139, 7, 1, "cmdoption-matflow-config-prepend-arg-NAME", "NAME"], [139, 7, 1, "cmdoption-matflow-config-prepend-arg-VALUE", "VALUE"]], "matflow-config-set-github-demo-data-dir": [[139, 7, 1, "cmdoption-matflow-config-set-github-demo-data-dir-arg-SHA", "SHA"]], "matflow-config-set": [[139, 7, 1, "cmdoption-matflow-config-set-json", "--json"], [139, 7, 1, "cmdoption-matflow-config-set-arg-NAME", "NAME"], [139, 7, 1, "cmdoption-matflow-config-set-arg-VALUE", "VALUE"]], "matflow-config-unset": [[139, 7, 1, "cmdoption-matflow-config-unset-arg-NAME", "NAME"]], "matflow-config-update": [[139, 7, 1, "cmdoption-matflow-config-update-json", "--json"], [139, 7, 1, "cmdoption-matflow-config-update-arg-NAME", "NAME"], [139, 7, 1, "cmdoption-matflow-config-update-arg-VALUE", "VALUE"]], "matflow-config": [[139, 7, 1, "cmdoption-matflow-config-no-callback", "--no-callback"]], "matflow-configure-env": [[139, 7, 1, "cmdoption-matflow-configure-env-env-source-file", "--env-source-file"], [139, 7, 1, "cmdoption-matflow-configure-env-setup", "--setup"], [139, 7, 1, "cmdoption-matflow-configure-env-use-current-env", "--use-current-env"], [139, 7, 1, "cmdoption-matflow-configure-env-arg-NAME", "NAME"]], "matflow-demo-data-cache": [[139, 7, 1, "cmdoption-matflow-demo-data-cache-all", "--all"], [139, 7, 1, "cmdoption-matflow-demo-data-cache-arg-FILE_NAME", "FILE_NAME"]], "matflow-demo-data-copy": [[139, 7, 1, "cmdoption-matflow-demo-data-copy-arg-DESTINATION", "DESTINATION"], [139, 7, 1, "cmdoption-matflow-demo-data-copy-arg-FILE_NAME", "FILE_NAME"]], "matflow-demo-data": [[139, 7, 1, "cmdoption-matflow-demo-data-l", "--list"], [139, 7, 1, "cmdoption-matflow-demo-data-l", "-l"]], "matflow-demo-software-doSomething": [[139, 7, 1, "cmdoption-matflow-demo-software-doSomething-i1", "--infile1"], [139, 7, 1, "cmdoption-matflow-demo-software-doSomething-i2", "--infile2"], [139, 7, 1, "cmdoption-matflow-demo-software-doSomething-o", "--out"], [139, 7, 1, "cmdoption-matflow-demo-software-doSomething-v", "--value"], [139, 7, 1, "cmdoption-matflow-demo-software-doSomething-i1", "-i1"], [139, 7, 1, "cmdoption-matflow-demo-software-doSomething-i2", "-i2"], [139, 7, 1, "cmdoption-matflow-demo-software-doSomething-o", "-o"], [139, 7, 1, "cmdoption-matflow-demo-software-doSomething-v", "-v"]], "matflow-demo-workflow-copy": [[139, 7, 1, "cmdoption-matflow-demo-workflow-copy-doc", "--doc"], [139, 7, 1, "cmdoption-matflow-demo-workflow-copy-doc", "--no-doc"], [139, 7, 1, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION", "DESTINATION"], [139, 7, 1, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-go": [[139, 7, 1, "cmdoption-matflow-demo-workflow-go-add-to-known", "--add-to-known"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-cancel", "--cancel"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-format", "--format"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-js-parallelism", "--js-parallelism"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-name", "--name"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-add-to-known", "--no-add-to-known"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-status", "--no-status"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-overwrite", "--overwrite"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-path", "--path"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-print-idx", "--print-idx"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-status", "--status"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-store", "--store"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-tasks", "--tasks"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-ts-fmt", "--ts-fmt"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-ts-name-fmt", "--ts-name-fmt"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-v", "--var"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-wait", "--wait"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-v", "-v"], [139, 7, 1, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-make": [[139, 7, 1, "cmdoption-matflow-demo-workflow-make-format", "--format"], [139, 7, 1, "cmdoption-matflow-demo-workflow-make-name", "--name"], [139, 7, 1, "cmdoption-matflow-demo-workflow-make-status", "--no-status"], [139, 7, 1, "cmdoption-matflow-demo-workflow-make-overwrite", "--overwrite"], [139, 7, 1, "cmdoption-matflow-demo-workflow-make-path", "--path"], [139, 7, 1, "cmdoption-matflow-demo-workflow-make-status", "--status"], [139, 7, 1, "cmdoption-matflow-demo-workflow-make-store", "--store"], [139, 7, 1, "cmdoption-matflow-demo-workflow-make-ts-fmt", "--ts-fmt"], [139, 7, 1, "cmdoption-matflow-demo-workflow-make-ts-name-fmt", "--ts-name-fmt"], [139, 7, 1, "cmdoption-matflow-demo-workflow-make-v", "--var"], [139, 7, 1, "cmdoption-matflow-demo-workflow-make-v", "-v"], [139, 7, 1, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-show": [[139, 7, 1, "cmdoption-matflow-demo-workflow-show-doc", "--doc"], [139, 7, 1, "cmdoption-matflow-demo-workflow-show-doc", "--no-doc"], [139, 7, 1, "cmdoption-matflow-demo-workflow-show-syntax", "--no-syntax"], [139, 7, 1, "cmdoption-matflow-demo-workflow-show-syntax", "--syntax"], [139, 7, 1, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow": [[139, 7, 1, "cmdoption-matflow-demo-workflow-l", "--list"], [139, 7, 1, "cmdoption-matflow-demo-workflow-l", "-l"]], "matflow-go": [[139, 7, 1, "cmdoption-matflow-go-add-to-known", "--add-to-known"], [139, 7, 1, "cmdoption-matflow-go-cancel", "--cancel"], [139, 7, 1, "cmdoption-matflow-go-format", "--format"], [139, 7, 1, "cmdoption-matflow-go-js-parallelism", "--js-parallelism"], [139, 7, 1, "cmdoption-matflow-go-name", "--name"], [139, 7, 1, "cmdoption-matflow-go-add-to-known", "--no-add-to-known"], [139, 7, 1, "cmdoption-matflow-go-status", "--no-status"], [139, 7, 1, "cmdoption-matflow-go-overwrite", "--overwrite"], [139, 7, 1, "cmdoption-matflow-go-path", "--path"], [139, 7, 1, "cmdoption-matflow-go-print-idx", "--print-idx"], [139, 7, 1, "cmdoption-matflow-go-status", "--status"], [139, 7, 1, "cmdoption-matflow-go-store", "--store"], [139, 7, 1, "cmdoption-matflow-go-string", "--string"], [139, 7, 1, "cmdoption-matflow-go-tasks", "--tasks"], [139, 7, 1, "cmdoption-matflow-go-ts-fmt", "--ts-fmt"], [139, 7, 1, "cmdoption-matflow-go-ts-name-fmt", "--ts-name-fmt"], [139, 7, 1, "cmdoption-matflow-go-v", "--var"], [139, 7, 1, "cmdoption-matflow-go-wait", "--wait"], [139, 7, 1, "cmdoption-matflow-go-v", "-v"], [139, 7, 1, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR", "TEMPLATE_FILE_OR_STR"]], "matflow-helper-pid": [[139, 7, 1, "cmdoption-matflow-helper-pid-f", "--file"], [139, 7, 1, "cmdoption-matflow-helper-pid-f", "-f"]], "matflow-helper-restart": [[139, 7, 1, "cmdoption-matflow-helper-restart-timeout", "--timeout"], [139, 7, 1, "cmdoption-matflow-helper-restart-timeout-check-interval", "--timeout-check-interval"], [139, 7, 1, "cmdoption-matflow-helper-restart-watch-interval", "--watch-interval"]], "matflow-helper-run": [[139, 7, 1, "cmdoption-matflow-helper-run-timeout", "--timeout"], [139, 7, 1, "cmdoption-matflow-helper-run-timeout-check-interval", "--timeout-check-interval"], [139, 7, 1, "cmdoption-matflow-helper-run-watch-interval", "--watch-interval"]], "matflow-helper-start": [[139, 7, 1, "cmdoption-matflow-helper-start-timeout", "--timeout"], [139, 7, 1, "cmdoption-matflow-helper-start-timeout-check-interval", "--timeout-check-interval"], [139, 7, 1, "cmdoption-matflow-helper-start-watch-interval", "--watch-interval"]], "matflow-internal-workflow-PATH-check-loop": [[139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-check-loop-arg-EAR_ID", "EAR_ID"], [139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-check-loop-arg-LOOP_NAME", "LOOP_NAME"]], "matflow-internal-workflow-PATH-get-ear-skipped": [[139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-get-ear-skipped-arg-EAR_ID", "EAR_ID"]], "matflow-internal-workflow-PATH-save-parameter": [[139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-stderr", "--stderr"], [139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-CMD_IDX", "CMD_IDX"], [139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID", "EAR_ID"], [139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME", "NAME"], [139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE", "VALUE"]], "matflow-internal-workflow-PATH-set-ear-end": [[139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EAR_ID", "EAR_ID"], [139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EXIT_CODE", "EXIT_CODE"], [139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_ACT_IDX", "JS_ACT_IDX"], [139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_IDX", "JS_IDX"]], "matflow-internal-workflow-PATH-set-ear-skip": [[139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-skip-arg-EAR_ID", "EAR_ID"]], "matflow-internal-workflow-PATH-set-ear-start": [[139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-set-ear-start-arg-EAR_ID", "EAR_ID"]], "matflow-internal-workflow-PATH-write-commands": [[139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-EAR_ID", "EAR_ID"], [139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JOBSCRIPT_IDX", "JOBSCRIPT_IDX"], [139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JS_ACTION_IDX", "JS_ACTION_IDX"], [139, 7, 1, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-SUBMISSION_IDX", "SUBMISSION_IDX"]], "matflow-internal-workflow": [[139, 7, 1, "cmdoption-matflow-internal-workflow-arg-PATH", "PATH"]], "matflow-make": [[139, 7, 1, "cmdoption-matflow-make-format", "--format"], [139, 7, 1, "cmdoption-matflow-make-name", "--name"], [139, 7, 1, "cmdoption-matflow-make-status", "--no-status"], [139, 7, 1, "cmdoption-matflow-make-overwrite", "--overwrite"], [139, 7, 1, "cmdoption-matflow-make-path", "--path"], [139, 7, 1, "cmdoption-matflow-make-status", "--status"], [139, 7, 1, "cmdoption-matflow-make-store", "--store"], [139, 7, 1, "cmdoption-matflow-make-string", "--string"], [139, 7, 1, "cmdoption-matflow-make-ts-fmt", "--ts-fmt"], [139, 7, 1, "cmdoption-matflow-make-ts-name-fmt", "--ts-name-fmt"], [139, 7, 1, "cmdoption-matflow-make-v", "--var"], [139, 7, 1, "cmdoption-matflow-make-v", "-v"], [139, 7, 1, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR", "TEMPLATE_FILE_OR_STR"]], "matflow-manage-clear-cache": [[139, 7, 1, "cmdoption-matflow-manage-clear-cache-hostname", "--hostname"]], "matflow-manage-get-config-path": [[139, 7, 1, "cmdoption-matflow-manage-get-config-path-config-dir", "--config-dir"]], "matflow-manage-reset-config": [[139, 7, 1, "cmdoption-matflow-manage-reset-config-config-dir", "--config-dir"]], "matflow-open-config": [[139, 7, 1, "cmdoption-matflow-open-config-path", "--path"]], "matflow-open-demo-data-cache-dir": [[139, 7, 1, "cmdoption-matflow-open-demo-data-cache-dir-path", "--path"]], "matflow-open-env-source": [[139, 7, 1, "cmdoption-matflow-open-env-source-name", "--name"], [139, 7, 1, "cmdoption-matflow-open-env-source-path", "--path"]], "matflow-open-known-subs": [[139, 7, 1, "cmdoption-matflow-open-known-subs-path", "--path"]], "matflow-open-log": [[139, 7, 1, "cmdoption-matflow-open-log-path", "--path"]], "matflow-open-user-cache-dir": [[139, 7, 1, "cmdoption-matflow-open-user-cache-dir-path", "--path"]], "matflow-open-user-cache-hostname-dir": [[139, 7, 1, "cmdoption-matflow-open-user-cache-hostname-dir-path", "--path"]], "matflow-open-user-data-dir": [[139, 7, 1, "cmdoption-matflow-open-user-data-dir-path", "--path"]], "matflow-open-user-data-hostname-dir": [[139, 7, 1, "cmdoption-matflow-open-user-data-hostname-dir-path", "--path"]], "matflow-open-user-runtime-dir": [[139, 7, 1, "cmdoption-matflow-open-user-runtime-dir-path", "--path"]], "matflow-open-workflow": [[139, 7, 1, "cmdoption-matflow-open-workflow-path", "--path"], [139, 7, 1, "cmdoption-matflow-open-workflow-r", "--ref-type"], [139, 7, 1, "cmdoption-matflow-open-workflow-r", "-r"], [139, 7, 1, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-rechunk": [[139, 7, 1, "cmdoption-matflow-rechunk-backup", "--backup"], [139, 7, 1, "cmdoption-matflow-rechunk-chunk-size", "--chunk-size"], [139, 7, 1, "cmdoption-matflow-rechunk-backup", "--no-backup"], [139, 7, 1, "cmdoption-matflow-rechunk-status", "--no-status"], [139, 7, 1, "cmdoption-matflow-rechunk-r", "--ref-type"], [139, 7, 1, "cmdoption-matflow-rechunk-status", "--status"], [139, 7, 1, "cmdoption-matflow-rechunk-r", "-r"], [139, 7, 1, "cmdoption-matflow-rechunk-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-show": [[139, 7, 1, "cmdoption-matflow-show-f", "--full"], [139, 7, 1, "cmdoption-matflow-show-legend", "--legend"], [139, 7, 1, "cmdoption-matflow-show-r", "--max-recent"], [139, 7, 1, "cmdoption-matflow-show-no-update", "--no-update"], [139, 7, 1, "cmdoption-matflow-show-f", "-f"], [139, 7, 1, "cmdoption-matflow-show-r", "-r"]], "matflow-submission-get-known": [[139, 7, 1, "cmdoption-matflow-submission-get-known-json", "--json"]], "matflow-submission-scheduler": [[139, 7, 1, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME", "SCHEDULER_NAME"]], "matflow-submission-shell-info": [[139, 7, 1, "cmdoption-matflow-submission-shell-info-exclude-os", "--exclude-os"], [139, 7, 1, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME", "SHELL_NAME"]], "matflow-submission": [[139, 7, 1, "cmdoption-matflow-submission-os-info", "--os-info"]], "matflow-test-hpcflow": [[139, 7, 1, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS", "PY_TEST_ARGS"]], "matflow-test": [[139, 7, 1, "cmdoption-matflow-test-arg-PY_TEST_ARGS", "PY_TEST_ARGS"]], "matflow-unzip": [[139, 7, 1, "cmdoption-matflow-unzip-log", "--log"], [139, 7, 1, "cmdoption-matflow-unzip-path", "--path"], [139, 7, 1, "cmdoption-matflow-unzip-arg-WORKFLOW_PATH", "WORKFLOW_PATH"]], "matflow-workflow-WORKFLOW_REF-abort-run": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element", "--element"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission", "--submission"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task", "--task"]], "matflow-workflow-WORKFLOW_REF-get-param-source": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-get-param": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-is-param-set": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-rechunk-parameter-base": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup", "--backup"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-chunk-size", "--chunk-size"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup", "--no-backup"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status", "--no-status"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status", "--status"]], "matflow-workflow-WORKFLOW_REF-rechunk-runs": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup", "--backup"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-chunk-size", "--chunk-size"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup", "--no-backup"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status", "--no-status"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status", "--status"]], "matflow-workflow-WORKFLOW_REF-rechunk": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup", "--backup"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-chunk-size", "--chunk-size"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup", "--no-backup"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status", "--no-status"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status", "--status"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX", "JS_IDX"]], "matflow-workflow-WORKFLOW_REF-sub": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX", "SUB_IDX"]], "matflow-workflow-WORKFLOW_REF-submit": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known", "--add-to-known"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-cancel", "--cancel"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism", "--js-parallelism"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known", "--no-add-to-known"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status", "--no-status"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-print-idx", "--print-idx"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status", "--status"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-tasks", "--tasks"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait", "--wait"]], "matflow-workflow-WORKFLOW_REF-unzip": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-log", "--log"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-path", "--path"]], "matflow-workflow-WORKFLOW_REF-wait": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j", "--jobscripts"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j", "-j"]], "matflow-workflow-WORKFLOW_REF-zip": [[139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-execute", "--include-execute"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-rechunk-backups", "--include-rechunk-backups"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log", "--log"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-overwrite", "--overwrite"], [139, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-path", "--path"]], "matflow-workflow": [[139, 7, 1, "cmdoption-matflow-workflow-r", "--ref-type"], [139, 7, 1, "cmdoption-matflow-workflow-r", "-r"], [139, 7, 1, "cmdoption-matflow-workflow-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-zip": [[139, 7, 1, "cmdoption-matflow-zip-include-execute", "--include-execute"], [139, 7, 1, "cmdoption-matflow-zip-include-rechunk-backups", "--include-rechunk-backups"], [139, 7, 1, "cmdoption-matflow-zip-log", "--log"], [139, 7, 1, "cmdoption-matflow-zip-overwrite", "--overwrite"], [139, 7, 1, "cmdoption-matflow-zip-path", "--path"], [139, 7, 1, "cmdoption-matflow-zip-r", "--ref-type"], [139, 7, 1, "cmdoption-matflow-zip-r", "-r"], [139, 7, 1, "cmdoption-matflow-zip-arg-WORKFLOW_REF", "WORKFLOW_REF"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:data", "6": "py:function", "7": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"], "7": ["std", "cmdoption", "program option"]}, "titleterms": {"contribut": 0, "recommend": 0, "read": 0, "instal": [0, 4], "develop": [0, 2], "poetri": 0, "clone": 0, "repo": 0, "hpcflow": [0, 139], "matflow": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 150], "python": [0, 4, 138], "depend": 0, "troubleshoot": 0, "work": 0, "from": [0, 155], "sourc": [0, 139], "cli": [0, 4, 90], "link": 0, "local": 0, "environ": [1, 31, 145, 150], "matlab_env": [1, 145], "exampl": 1, "definit": 1, "window": 1, "linux": 1, "maco": 1, "dream_3d_env": [1, 145], "defdap_env": [1, 145], "damask_pars": 1, "damask": [1, 159], "welcom": 3, "": 3, "document": 3, "content": 3, "indic": 3, "tabl": 3, "what": 4, "doe": 4, "thi": 4, "script": [4, 150], "do": 4, "packag": 4, "us": [4, 150], "pip": 4, "conda": 4, "download": 4, "binari": 4, "advanc": 4, "releas": 4, "note": 4, "action": [6, 150], "actionenviron": 7, "actionrul": 8, "paramet": [8, 44, 53, 57, 73, 139, 146, 153], "actionscop": 9, "actionscopetyp": 10, "command": [11, 139, 144], "commandfileslist": 12, "directposix": 13, "directwindow": 14, "element": [15, 30], "elementact": 16, "elementactionrun": 17, "elementfilt": 18, "elementgroup": 19, "elementinputfil": 20, "elementinput": 21, "elementiter": 22, "elementoutputfil": 23, "elementoutput": 24, "elementparamet": 25, "elementpropag": 26, "elementrepeat": 27, "elementresourc": 28, "elementset": 29, "environmentslist": 32, "execut": 33, "executableinst": 34, "executableslist": 35, "filenameext": 36, "filenamespec": 37, "filenamestem": 38, "filespec": 39, "grouplist": 40, "inputfil": 41, "inputfilegener": 42, "inputfilegeneratorsourc": 43, "inputsourc": 44, "inputsourcetyp": 45, "inputvalu": 46, "jobscript": [47, 139], "loop": [48, 139], "numcor": 49, "outputfilepars": 50, "outputfileparsersourc": 51, "outputlabel": 52, "parameterpath": 54, "parameterpropagationmod": 55, "parametervalu": 56, "parameterslist": 58, "resourcelist": 59, "resourcespec": 60, "rule": 61, "rundirappfil": 62, "sgeposix": 63, "schemainput": 64, "schemaoutput": 65, "schemaparamet": 66, "slurmposix": 67, "subparamet": 68, "submiss": [69, 139, 149], "task": [70, 147, 150, 152, 153], "taskinputparamet": 71, "tasklist": 72, "taskobject": 73, "taskoutputparamet": 74, "taskschema": 75, "taskschemaslist": 76, "tasksourcetyp": 77, "tasktemplatelist": 78, "valueperturb": 79, "valuesequ": 80, "workflow": [81, 139, 141, 148, 150, 154, 155], "workflowblueprint": 82, "workflowloop": 83, "workflowlooplist": 84, "workflowtask": 85, "workflowtasklist": 86, "workflowtempl": 87, "app": 88, "cancel": [89, 139], "get_os_info": 91, "get_known_submiss": 92, "get_shell_info": 93, "make_and_submit_demo_workflow": 94, "make_and_submit_workflow": 95, "make_demo_workflow": 96, "make_workflow": 97, "param_class": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "load": [99, 100, 101, 102, 139, 154, 155, 159], "loadcas": 100, "loadstep": 101, "strainratemod": 102, "orient": [103, 104, 105, 106, 107, 108, 109, 110, 146], "eulerdefinit": 104, "latticedirect": 105, "orientationrepresent": 106, "orientationrepresentationtyp": 107, "quatord": 109, "unitcellalign": 110, "seed": [111, 112], "microstructurese": 112, "single_crystal_paramet": [113, 114], "singlecrystalparamet": 114, "util": [115, 116, 159], "masked_array_from_list": 116, "run_hpcflow_test": 117, "run_test": 118, "show": [119, 139, 152], "show_legend": 120, "submit_workflow": 121, "test": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139], "conftest": [123, 124, 125, 126, 127, 128, 129], "new_null_config": 124, "null_config": 125, "pytest_addopt": 126, "pytest_collection_modifyitem": 127, "pytest_configur": 128, "pytest_unconfigur": 129, "test_cli": [130, 131, 132], "test_hpcflow_vers": 131, "test_vers": 132, "test_util": [133, 134, 135, 136, 137], "test_masked_array_from_list_1d": 134, "test_masked_array_from_list_1d_mask": 135, "test_masked_array_from_list_2d": 136, "test_masked_array_from_list_2d_mask": 137, "api": 138, "line": 139, "interfac": 139, "config": [139, 140, 149], "add": 139, "schedul": 139, "shell": 139, "wsl": 139, "append": 139, "get": [139, 149], "import": 139, "init": 139, "list": 139, "data": 139, "file": [139, 140, 144, 149], "open": 139, "pop": 139, "prepend": 139, "set": [139, 149], "github": 139, "demo": [139, 148], "dir": 139, "unset": 139, "updat": 139, "configur": [139, 140, 149], "env": 139, "cach": 139, "copi": 139, "softwar": [139, 150], "dosometh": 139, "go": 139, "make": 139, "helper": 139, "clear": [139, 149], "log": 139, "path": [139, 150], "pid": 139, "restart": 139, "run": 139, "start": 139, "stop": 139, "uptim": 139, "watch": 139, "intern": 139, "invoc": 139, "cmd": 139, "check": 139, "ear": 139, "skip": 139, "save": 139, "end": 139, "write": 139, "manag": 139, "known": [139, 149], "sub": 139, "temp": 139, "reset": [139, 149], "user": [139, 156], "hostnam": 139, "runtim": 139, "rechunk": 139, "login": 139, "node": 139, "info": 139, "tc": 139, "unzip": 139, "abort": 139, "all": 139, "param": 139, "i": 139, "base": 139, "statu": 139, "activ": 139, "j": 139, "dep": 139, "re": 139, "need": 139, "submit": 139, "outstand": 139, "wait": 139, "zip": 139, "default": [140, 149], "valid": 140, "schema": [140, 147, 150, 152, 153], "glossari": 141, "refer": 142, "templat": [143, 150, 153, 154, 155], "compon": [143, 153], "damask_geom_fil": 144, "damask_load_fil": 144, "damask_material_fil": 144, "damask_numerics_fil": 144, "damask_stdout_fil": 144, "damask_stderr_fil": 144, "damask_hdf5_fil": 144, "damask_viz_fil": 144, "mtex_pole_figur": 144, "mtex_ipf_figur": 144, "dream_3d_pipelin": 144, "dream_3d_hdf5_fil": 144, "dream_3d_xdmf_fil": 144, "null_env": 145, "python_env": 145, "damask_env": 145, "damask_parse_env": 145, "formable_env": 145, "ctf_file_path": 146, "ebsd_phas": 146, "ebsd_reference_frame_transform": 146, "ebsd_rot": 146, "odf_mat_file_path": 146, "ve_grid_s": 146, "ve_respons": 146, "ve_response_data": 146, "ve_siz": 146, "compil": 146, "damask_log": 146, "damask_phas": 146, "damask_post_process": 146, "damask_post_processing_result": 146, "damask_solv": 146, "damask_viz": 146, "damask_viz_result": 146, "dump_path": 146, "fit_yield_fixed_paramet": 146, "fit_yield_initial_paramet": 146, "fit_yield_opt_paramet": 146, "fitted_yield_funct": 146, "homog_label": 146, "homogen": 146, "load_cas": 146, "microstructure_se": 146, "num_grain": 146, "num_orient": 146, "phase_label": 146, "specimen_symmetri": 146, "volume_el": 146, "yield_function_nam": 146, "yield_point": 146, "yield_point_criteria": 146, "define_load_cas": 147, "dump_all_yield_stress": 147, "fit_single_crystal_paramet": [147, 148], "fit_yield_funct": 147, "generate_microstructure_se": 147, "generate_microstructure_seeds_from_random": 147, "generate_orient": 147, "generate_volume_el": 147, "generate_volume_element_from_voronoi": 147, "generate_volume_element_from_statist": [147, 148], "generate_volume_element_extrus": 147, "load_microstructur": 147, "load_microstructure_ebsd_d": 147, "load_microstructure_ebsd": 147, "modify_v": 147, "modify_ve_add_buffer_zon": 147, "modify_ve_grid_s": 147, "read_tensile_test": 147, "read_tensile_test_from_csv": 147, "sample_orient": 147, "sample_orientations_from_ctf_file_mtex": 147, "sample_orientations_from_crc_file_mtex": 147, "sample_textur": 147, "sample_texture_from_ctf_file_mtex": 147, "sample_texture_from_crc_file_mtex": 147, "sample_texture_from_odf_mat_file_mtex": 147, "sample_texture_from_model_odf_mtex": 147, "sample_texture_random_mtex": 147, "simulate_ve_load": 147, "simulate_ve_loading_damask": 147, "simulate_ve_loading_damask_hc": 147, "visualise_v": 147, "visualise_ve_vtk": 147, "visualise_orient": 147, "visualise_orientations_pole_figure_mtex": 147, "rve_extrusion_ebsd": 148, "yaml": 148, "rve_extrusion_ebsd_d": 148, "cubic_textur": 148, "damask_input_fil": 148, "damask_numer": 148, "fit_yield_func": 148, "modify_volume_element_grid_s": 148, "read_tensile_test_csv": 148, "sample_orientations_crc_fil": 148, "sample_orientations_ctf_fil": 148, "sample_texture_crc_fil": 148, "sample_texture_ctf_fil": 148, "sample_texture_odf_mat": 148, "sample_texture_model_odf": 148, "sample_texture_random": 148, "simulate_yield_surface_2d": 148, "simulate_yield_surface_2d_brass": 148, "tension_damask_": 148, "tension_damask_al_n_repeat": 148, "tension_damask_mg": 148, "tension_damask_ti": 148, "how": [149, 150, 151, 152, 153, 154, 155], "tos": [149, 150, 152, 154, 155], "item": 149, "valu": 149, "multipl": 150, "version": 150, "same": 150, "disambigu": 150, "between": 150, "name": [150, 153], "specifi": 150, "within": 150, "pass": 150, "defin": 150, "preset": 150, "select": 150, "sequenc": 150, "To": 151, "guid": [151, 156], "inform": 152, "about": 152, "gener": 155, "persist": 155, "tutori": 157, "jupyt": 158, "notebook": 158, "simul": 159, "yield": 159, "surfac": 159, "function": 159, "process": 159, "plot": 159}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Contribute": [[0, "contribute"]], "Recommended reads": [[0, "recommended-reads"]], "Installation for development": [[0, "installation-for-development"]], "Install poetry": [[0, "id2"]], "Clone repo": [[0, "clone-repo"]], "hpcflow": [[0, "hpcflow"], [0, "id3"]], "matflow": [[0, "matflow"], [0, "id4"], [5, "matflow"], [139, "matflow"]], "Install python dependencies with poetry": [[0, "install-python-dependencies-with-poetry"]], "Troubleshooting": [[0, "troubleshooting"]], "Working from the source": [[0, "working-from-the-source"]], "CLI": [[0, "cli"], [0, "id5"]], "link to local hpcflow": [[0, "link-to-local-hpcflow"]], "Environments": [[1, "environments"], [145, "environments"]], "matlab_env": [[1, "matlab-env"], [145, "matlab-env"]], "Example environment definition - Windows": [[1, "example-environment-definition-windows"], [1, "id2"]], "Example environment definition - Linux/MacOS": [[1, "example-environment-definition-linux-macos"], [1, "id1"]], "dream_3D_env": [[1, "dream-3d-env"], [145, "dream-3d-env"]], "defdap_env": [[1, "defdap-env"], [145, "defdap-env"]], "damask_parse": [[1, "damask-parse"]], "Example environment definition": [[1, "example-environment-definition"], [1, "id3"]], "damask": [[1, "damask"]], "Development": [[2, "development"]], "Welcome to MatFlow\u2019s documentation!": [[3, "welcome-to-matflow-s-documentation"]], "Contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "Installation": [[4, "installation"]], "MatFlow CLI": [[4, "matflow-cli"]], "What does this script do?": [[4, null]], "MatFlow Python package": [[4, "matflow-python-package"]], "Using pip": [[4, "using-pip"]], "Using conda": [[4, "using-conda"]], "Download CLI binaries (advanced)": [[4, "download-cli-binaries-advanced"]], "Release notes": [[4, "release-notes"]], "matflow.Action": [[6, "matflow-action"]], "matflow.ActionEnvironment": [[7, "matflow-actionenvironment"]], "matflow.ActionRule": [[8, "matflow-actionrule"]], "Parameter": [[8, "parameter"], [8, "id1"], [8, "id2"], [44, "parameter"], [73, "parameter"]], "matflow.ActionScope": [[9, "matflow-actionscope"]], "matflow.ActionScopeType": [[10, "matflow-actionscopetype"]], "matflow.Command": [[11, "matflow-command"]], "matflow.CommandFilesList": [[12, "matflow-commandfileslist"]], "matflow.DirectPosix": [[13, "matflow-directposix"]], "matflow.DirectWindows": [[14, "matflow-directwindows"]], "matflow.Element": [[15, "matflow-element"]], "matflow.ElementAction": [[16, "matflow-elementaction"]], "matflow.ElementActionRun": [[17, "matflow-elementactionrun"]], "matflow.ElementFilter": [[18, "matflow-elementfilter"]], "matflow.ElementGroup": [[19, "matflow-elementgroup"]], "matflow.ElementInputFiles": [[20, "matflow-elementinputfiles"]], "matflow.ElementInputs": [[21, "matflow-elementinputs"]], "matflow.ElementIteration": [[22, "matflow-elementiteration"]], "matflow.ElementOutputFiles": [[23, "matflow-elementoutputfiles"]], "matflow.ElementOutputs": [[24, "matflow-elementoutputs"]], "matflow.ElementParameter": [[25, "matflow-elementparameter"]], "matflow.ElementPropagation": [[26, "matflow-elementpropagation"]], "matflow.ElementRepeats": [[27, "matflow-elementrepeats"]], "matflow.ElementResources": [[28, "matflow-elementresources"]], "matflow.ElementSet": [[29, "matflow-elementset"]], "matflow.Elements": [[30, "matflow-elements"]], "matflow.Environment": [[31, "matflow-environment"]], "matflow.EnvironmentsList": [[32, "matflow-environmentslist"]], "matflow.Executable": [[33, "matflow-executable"]], "matflow.ExecutableInstance": [[34, "matflow-executableinstance"]], "matflow.ExecutablesList": [[35, "matflow-executableslist"]], "matflow.FileNameExt": [[36, "matflow-filenameext"]], "matflow.FileNameSpec": [[37, "matflow-filenamespec"]], "matflow.FileNameStem": [[38, "matflow-filenamestem"]], "matflow.FileSpec": [[39, "matflow-filespec"]], "matflow.GroupList": [[40, "matflow-grouplist"]], "matflow.InputFile": [[41, "matflow-inputfile"]], "matflow.InputFileGenerator": [[42, "matflow-inputfilegenerator"]], "matflow.InputFileGeneratorSource": [[43, "matflow-inputfilegeneratorsource"]], "matflow.InputSource": [[44, "matflow-inputsource"]], "matflow.InputSourceType": [[45, "matflow-inputsourcetype"]], "matflow.InputValue": [[46, "matflow-inputvalue"]], "matflow.Jobscript": [[47, "matflow-jobscript"]], "matflow.Loop": [[48, "matflow-loop"]], "matflow.NumCores": [[49, "matflow-numcores"]], "matflow.OutputFileParser": [[50, "matflow-outputfileparser"]], "matflow.OutputFileParserSource": [[51, "matflow-outputfileparsersource"]], "matflow.OutputLabel": [[52, "matflow-outputlabel"]], "matflow.Parameter": [[53, "matflow-parameter"]], "matflow.ParameterPath": [[54, "matflow-parameterpath"]], "matflow.ParameterPropagationMode": [[55, "matflow-parameterpropagationmode"]], "matflow.ParameterValue": [[56, "matflow-parametervalue"]], "matflow.Parameters": [[57, "matflow-parameters"]], "matflow.ParametersList": [[58, "matflow-parameterslist"]], "matflow.ResourceList": [[59, "matflow-resourcelist"]], "matflow.ResourceSpec": [[60, "matflow-resourcespec"]], "matflow.Rule": [[61, "matflow-rule"]], "matflow.RunDirAppFiles": [[62, "matflow-rundirappfiles"]], "matflow.SGEPosix": [[63, "matflow-sgeposix"]], "matflow.SchemaInput": [[64, "matflow-schemainput"]], "matflow.SchemaOutput": [[65, "matflow-schemaoutput"]], "matflow.SchemaParameter": [[66, "matflow-schemaparameter"]], "matflow.SlurmPosix": [[67, "matflow-slurmposix"]], "matflow.SubParameter": [[68, "matflow-subparameter"]], "matflow.Submission": [[69, "matflow-submission"]], "matflow.Task": [[70, "matflow-task"]], "matflow.TaskInputParameters": [[71, "matflow-taskinputparameters"]], "matflow.TaskList": [[72, "matflow-tasklist"]], "matflow.TaskObjective": [[73, "matflow-taskobjective"]], "matflow.TaskOutputParameters": [[74, "matflow-taskoutputparameters"]], "matflow.TaskSchema": [[75, "matflow-taskschema"]], "matflow.TaskSchemasList": [[76, "matflow-taskschemaslist"]], "matflow.TaskSourceType": [[77, "matflow-tasksourcetype"]], "matflow.TaskTemplateList": [[78, "matflow-tasktemplatelist"]], "matflow.ValuePerturbation": [[79, "matflow-valueperturbation"]], "matflow.ValueSequence": [[80, "matflow-valuesequence"]], "matflow.Workflow": [[81, "matflow-workflow"]], "matflow.WorkflowBlueprint": [[82, "matflow-workflowblueprint"]], "matflow.WorkflowLoop": [[83, "matflow-workflowloop"]], "matflow.WorkflowLoopList": [[84, "matflow-workflowlooplist"]], "matflow.WorkflowTask": [[85, "matflow-workflowtask"]], "matflow.WorkflowTaskList": [[86, "matflow-workflowtasklist"]], "matflow.WorkflowTemplate": [[87, "matflow-workflowtemplate"]], "matflow.app": [[88, "matflow-app"]], "matflow.cancel": [[89, "matflow-cancel"]], "matflow.cli": [[90, "matflow-cli"]], "matflow.get_OS_info": [[91, "matflow-get-os-info"]], "matflow.get_known_submissions": [[92, "matflow-get-known-submissions"]], "matflow.get_shell_info": [[93, "matflow-get-shell-info"]], "matflow.make_and_submit_demo_workflow": [[94, "matflow-make-and-submit-demo-workflow"]], "matflow.make_and_submit_workflow": [[95, "matflow-make-and-submit-workflow"]], "matflow.make_demo_workflow": [[96, "matflow-make-demo-workflow"]], "matflow.make_workflow": [[97, "matflow-make-workflow"]], "matflow.param_classes": [[98, "matflow-param-classes"]], "matflow.param_classes.load": [[99, "matflow-param-classes-load"]], "matflow.param_classes.load.LoadCase": [[100, "matflow-param-classes-load-loadcase"]], "matflow.param_classes.load.LoadStep": [[101, "matflow-param-classes-load-loadstep"]], "matflow.param_classes.load.StrainRateMode": [[102, "matflow-param-classes-load-strainratemode"]], "matflow.param_classes.orientations": [[103, "matflow-param-classes-orientations"]], "matflow.param_classes.orientations.EulerDefinition": [[104, "matflow-param-classes-orientations-eulerdefinition"]], "matflow.param_classes.orientations.LatticeDirection": [[105, "matflow-param-classes-orientations-latticedirection"]], "matflow.param_classes.orientations.OrientationRepresentation": [[106, "matflow-param-classes-orientations-orientationrepresentation"]], "matflow.param_classes.orientations.OrientationRepresentationType": [[107, "matflow-param-classes-orientations-orientationrepresentationtype"]], "matflow.param_classes.orientations.Orientations": [[108, "matflow-param-classes-orientations-orientations"]], "matflow.param_classes.orientations.QuatOrder": [[109, "matflow-param-classes-orientations-quatorder"]], "matflow.param_classes.orientations.UnitCellAlignment": [[110, "matflow-param-classes-orientations-unitcellalignment"]], "matflow.param_classes.seeds": [[111, "matflow-param-classes-seeds"]], "matflow.param_classes.seeds.MicrostructureSeeds": [[112, "matflow-param-classes-seeds-microstructureseeds"]], "matflow.param_classes.single_crystal_parameters": [[113, "matflow-param-classes-single-crystal-parameters"]], "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters": [[114, "matflow-param-classes-single-crystal-parameters-singlecrystalparameters"]], "matflow.param_classes.utils": [[115, "matflow-param-classes-utils"]], "matflow.param_classes.utils.masked_array_from_list": [[116, "matflow-param-classes-utils-masked-array-from-list"]], "matflow.run_hpcflow_tests": [[117, "matflow-run-hpcflow-tests"]], "matflow.run_tests": [[118, "matflow-run-tests"]], "matflow.show": [[119, "matflow-show"]], "matflow.show_legend": [[120, "matflow-show-legend"]], "matflow.submit_workflow": [[121, "matflow-submit-workflow"]], "matflow.tests": [[122, "matflow-tests"]], "matflow.tests.conftest": [[123, "matflow-tests-conftest"]], "matflow.tests.conftest.new_null_config": [[124, "matflow-tests-conftest-new-null-config"]], "matflow.tests.conftest.null_config": [[125, "matflow-tests-conftest-null-config"]], "matflow.tests.conftest.pytest_addoption": [[126, "matflow-tests-conftest-pytest-addoption"]], "matflow.tests.conftest.pytest_collection_modifyitems": [[127, "matflow-tests-conftest-pytest-collection-modifyitems"]], "matflow.tests.conftest.pytest_configure": [[128, "matflow-tests-conftest-pytest-configure"]], "matflow.tests.conftest.pytest_unconfigure": [[129, "matflow-tests-conftest-pytest-unconfigure"]], "matflow.tests.test_cli": [[130, "matflow-tests-test-cli"]], "matflow.tests.test_cli.test_hpcflow_version": [[131, "matflow-tests-test-cli-test-hpcflow-version"]], "matflow.tests.test_cli.test_version": [[132, "matflow-tests-test-cli-test-version"]], "matflow.tests.test_utils": [[133, "matflow-tests-test-utils"]], "matflow.tests.test_utils.test_masked_array_from_list_1D": [[134, "matflow-tests-test-utils-test-masked-array-from-list-1d"]], "matflow.tests.test_utils.test_masked_array_from_list_1D_masked": [[135, "matflow-tests-test-utils-test-masked-array-from-list-1d-masked"]], "matflow.tests.test_utils.test_masked_array_from_list_2D": [[136, "matflow-tests-test-utils-test-masked-array-from-list-2d"]], "matflow.tests.test_utils.test_masked_array_from_list_2D_masked": [[137, "matflow-tests-test-utils-test-masked-array-from-list-2d-masked"]], "Python API": [[138, "python-api"]], "Command-line interface": [[139, "command-line-interface"]], "cancel": [[139, "matflow-cancel"]], "config": [[139, "matflow-config"], [139, "matflow-open-config"]], "add-scheduler": [[139, "matflow-config-add-scheduler"]], "add-shell": [[139, "matflow-config-add-shell"]], "add-shell-wsl": [[139, "matflow-config-add-shell-wsl"]], "append": [[139, "matflow-config-append"]], "get": [[139, "matflow-config-get"]], "import": [[139, "matflow-config-import"]], "init": [[139, "matflow-config-init"]], "list": [[139, "matflow-config-list"]], "load-data-files": [[139, "matflow-config-load-data-files"]], "open": [[139, "matflow-config-open"], [139, "matflow-open"]], "pop": [[139, "matflow-config-pop"]], "prepend": [[139, "matflow-config-prepend"]], "set": [[139, "matflow-config-set"]], "set-github-demo-data-dir": [[139, "matflow-config-set-github-demo-data-dir"]], "unset": [[139, "matflow-config-unset"]], "update": [[139, "matflow-config-update"]], "configure-env": [[139, "matflow-configure-env"]], "demo-data": [[139, "matflow-demo-data"]], "cache": [[139, "matflow-demo-data-cache"]], "copy": [[139, "matflow-demo-data-copy"], [139, "matflow-demo-workflow-copy"]], "demo-software": [[139, "matflow-demo-software"]], "doSomething": [[139, "matflow-demo-software-dosomething"]], "demo-workflow": [[139, "matflow-demo-workflow"]], "go": [[139, "matflow-demo-workflow-go"], [139, "matflow-go"]], "make": [[139, "matflow-demo-workflow-make"], [139, "matflow-make"]], "show": [[139, "matflow-demo-workflow-show"], [139, "matflow-show"], [139, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-show"]], "helper": [[139, "matflow-helper"]], "clear": [[139, "matflow-helper-clear"]], "log-path": [[139, "matflow-helper-log-path"]], "pid": [[139, "matflow-helper-pid"]], "restart": [[139, "matflow-helper-restart"]], "run": [[139, "matflow-helper-run"]], "start": [[139, "matflow-helper-start"]], "stop": [[139, "matflow-helper-stop"]], "uptime": [[139, "matflow-helper-uptime"]], "watch-list": [[139, "matflow-helper-watch-list"]], "watch-list-path": [[139, "matflow-helper-watch-list-path"]], "internal": [[139, "matflow-internal"]], "get-invoc-cmd": [[139, "matflow-internal-get-invoc-cmd"]], "workflow": [[139, "matflow-internal-workflow"], [139, "matflow-open-workflow"], [139, "matflow-workflow"], [141, "workflow"]], "check-loop": [[139, "matflow-internal-workflow-path-check-loop"]], "get-ear-skipped": [[139, "matflow-internal-workflow-path-get-ear-skipped"]], "save-parameter": [[139, "matflow-internal-workflow-path-save-parameter"]], "set-ear-end": [[139, "matflow-internal-workflow-path-set-ear-end"]], "set-ear-skip": [[139, "matflow-internal-workflow-path-set-ear-skip"]], "set-ear-start": [[139, "matflow-internal-workflow-path-set-ear-start"]], "write-commands": [[139, "matflow-internal-workflow-path-write-commands"]], "manage": [[139, "matflow-manage"]], "clear-cache": [[139, "matflow-manage-clear-cache"]], "clear-demo-data-cache": [[139, "matflow-manage-clear-demo-data-cache"]], "clear-known-subs": [[139, "matflow-manage-clear-known-subs"]], "clear-temp-dir": [[139, "matflow-manage-clear-temp-dir"]], "get-config-path": [[139, "matflow-manage-get-config-path"]], "reset-config": [[139, "matflow-manage-reset-config"]], "demo-data-cache-dir": [[139, "matflow-open-demo-data-cache-dir"]], "env-source": [[139, "matflow-open-env-source"]], "known-subs": [[139, "matflow-open-known-subs"]], "log": [[139, "matflow-open-log"]], "user-cache-dir": [[139, "matflow-open-user-cache-dir"]], "user-cache-hostname-dir": [[139, "matflow-open-user-cache-hostname-dir"]], "user-data-dir": [[139, "matflow-open-user-data-dir"]], "user-data-hostname-dir": [[139, "matflow-open-user-data-hostname-dir"]], "user-runtime-dir": [[139, "matflow-open-user-runtime-dir"]], "rechunk": [[139, "matflow-rechunk"], [139, "matflow-workflow-workflow-ref-rechunk"]], "submission": [[139, "matflow-submission"]], "get-known": [[139, "matflow-submission-get-known"]], "scheduler": [[139, "matflow-submission-scheduler"]], "get-login-nodes": [[139, "matflow-submission-scheduler-scheduler-name-get-login-nodes"]], "shell-info": [[139, "matflow-submission-shell-info"]], "tc": [[139, "matflow-tc"]], "test": [[139, "matflow-test"]], "test-hpcflow": [[139, "matflow-test-hpcflow"]], "unzip": [[139, "matflow-unzip"], [139, "matflow-workflow-workflow-ref-unzip"]], "abort-run": [[139, "matflow-workflow-workflow-ref-abort-run"]], "get-all-params": [[139, "matflow-workflow-workflow-ref-get-all-params"]], "get-param": [[139, "matflow-workflow-workflow-ref-get-param"]], "get-param-source": [[139, "matflow-workflow-workflow-ref-get-param-source"]], "is-param-set": [[139, "matflow-workflow-workflow-ref-is-param-set"]], "rechunk-parameter-base": [[139, "matflow-workflow-workflow-ref-rechunk-parameter-base"]], "rechunk-runs": [[139, "matflow-workflow-workflow-ref-rechunk-runs"]], "show-all-status": [[139, "matflow-workflow-workflow-ref-show-all-status"]], "sub": [[139, "matflow-workflow-workflow-ref-sub"]], "get-active-jobscripts": [[139, "matflow-workflow-workflow-ref-sub-sub-idx-get-active-jobscripts"]], "js": [[139, "matflow-workflow-workflow-ref-sub-sub-idx-js"]], "deps": [[139, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-deps"]], "path": [[139, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-path"]], "res": [[139, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-res"]], "needs-submit": [[139, "matflow-workflow-workflow-ref-sub-sub-idx-needs-submit"]], "outstanding-js": [[139, "matflow-workflow-workflow-ref-sub-sub-idx-outstanding-js"]], "status": [[139, "matflow-workflow-workflow-ref-sub-sub-idx-status"]], "submitted-js": [[139, "matflow-workflow-workflow-ref-sub-sub-idx-submitted-js"]], "submit": [[139, "matflow-workflow-workflow-ref-submit"]], "wait": [[139, "matflow-workflow-workflow-ref-wait"]], "zip": [[139, "matflow-workflow-workflow-ref-zip"], [139, "matflow-zip"]], "Configuration file": [[140, "configuration-file"]], "Default config file": [[140, "default-config-file"]], "Validation schema": [[140, "validation-schema"]], "Glossary": [[141, "glossary"]], "Reference": [[142, "reference"]], "Template components": [[143, "template-components"], [153, "template-components"]], "Command files": [[144, "command-files"]], "damask_geom_file": [[144, "damask-geom-file"]], "damask_load_file": [[144, "damask-load-file"]], "damask_material_file": [[144, "damask-material-file"]], "damask_numerics_file": [[144, "damask-numerics-file"]], "damask_stdout_file": [[144, "damask-stdout-file"]], "damask_stderr_file": [[144, "damask-stderr-file"]], "damask_hdf5_file": [[144, "damask-hdf5-file"]], "damask_viz_files": [[144, "damask-viz-files"]], "mtex_pole_figures": [[144, "mtex-pole-figures"]], "mtex_IPF_figure": [[144, "mtex-ipf-figure"]], "dream_3D_pipeline": [[144, "dream-3d-pipeline"]], "dream_3D_hdf5_file": [[144, "dream-3d-hdf5-file"]], "dream_3D_XDMF_file": [[144, "dream-3d-xdmf-file"]], "null_env": [[145, "null-env"]], "python_env": [[145, "python-env"]], "damask_env": [[145, "damask-env"]], "damask_parse_env": [[145, "damask-parse-env"]], "formable_env": [[145, "formable-env"]], "Parameters": [[146, "parameters"]], "CTF_file_path": [[146, "ctf-file-path"]], "EBSD_phase": [[146, "ebsd-phase"]], "EBSD_reference_frame_transformation": [[146, "ebsd-reference-frame-transformation"]], "EBSD_rotation": [[146, "ebsd-rotation"]], "ODF_mat_file_path": [[146, "odf-mat-file-path"]], "VE_grid_size": [[146, "ve-grid-size"]], "VE_response": [[146, "ve-response"]], "VE_response_data": [[146, "ve-response-data"]], "VE_size": [[146, "ve-size"]], "compile": [[146, "compile"]], "damask_log": [[146, "damask-log"]], "damask_phases": [[146, "damask-phases"]], "damask_post_processing": [[146, "damask-post-processing"]], "damask_post_processing_result": [[146, "damask-post-processing-result"]], "damask_solver": [[146, "damask-solver"]], "damask_viz": [[146, "damask-viz"]], "damask_viz_result": [[146, "damask-viz-result"]], "dump_path": [[146, "dump-path"]], "fit_yield_fixed_parameters": [[146, "fit-yield-fixed-parameters"]], "fit_yield_initial_parameters": [[146, "fit-yield-initial-parameters"]], "fit_yield_opt_parameters": [[146, "fit-yield-opt-parameters"]], "fitted_yield_functions": [[146, "fitted-yield-functions"]], "homog_label": [[146, "homog-label"]], "homogenization": [[146, "homogenization"]], "load_case": [[146, "load-case"]], "microstructure_seeds": [[146, "microstructure-seeds"]], "num_grains": [[146, "num-grains"]], "num_orientations": [[146, "num-orientations"]], "orientations": [[146, "orientations"]], "phase_label": [[146, "phase-label"]], "specimen_symmetry": [[146, "specimen-symmetry"]], "volume_element": [[146, "volume-element"]], "yield_function_name": [[146, "yield-function-name"]], "yield_point": [[146, "yield-point"]], "yield_point_criteria": [[146, "yield-point-criteria"]], "Task schemas": [[147, "task-schemas"]], "define_load_case": [[147, "define-load-case"]], "dump_all_yield_stresses": [[147, "dump-all-yield-stresses"]], "fit_single_crystal_parameters": [[147, "fit-single-crystal-parameters"], [148, "fit-single-crystal-parameters"]], "fit_yield_function": [[147, "fit-yield-function"]], "generate_microstructure_seeds": [[147, "generate-microstructure-seeds"]], "generate_microstructure_seeds_from_random": [[147, "generate-microstructure-seeds-from-random"]], "generate_orientations": [[147, "generate-orientations"]], "generate_volume_element": [[147, "generate-volume-element"]], "generate_volume_element_from_voronoi": [[147, "generate-volume-element-from-voronoi"]], "generate_volume_element_from_statistics": [[147, "generate-volume-element-from-statistics"], [148, "generate-volume-element-from-statistics"]], "generate_volume_element_extrusion": [[147, "generate-volume-element-extrusion"]], "load_microstructure": [[147, "load-microstructure"]], "load_microstructure_EBSD_DIC": [[147, "load-microstructure-ebsd-dic"]], "load_microstructure_EBSD": [[147, "load-microstructure-ebsd"]], "modify_VE": [[147, "modify-ve"]], "modify_VE_add_buffer_zones": [[147, "modify-ve-add-buffer-zones"]], "modify_VE_grid_size": [[147, "modify-ve-grid-size"]], "read_tensile_test": [[147, "read-tensile-test"]], "read_tensile_test_from_CSV": [[147, "read-tensile-test-from-csv"]], "sample_orientations": [[147, "sample-orientations"]], "sample_orientations_from_CTF_file_mtex": [[147, "sample-orientations-from-ctf-file-mtex"]], "sample_orientations_from_CRC_file_mtex": [[147, "sample-orientations-from-crc-file-mtex"]], "sample_texture": [[147, "sample-texture"]], "sample_texture_from_CTF_file_mtex": [[147, "sample-texture-from-ctf-file-mtex"]], "sample_texture_from_CRC_file_mtex": [[147, "sample-texture-from-crc-file-mtex"]], "sample_texture_from_ODF_mat_file_mtex": [[147, "sample-texture-from-odf-mat-file-mtex"]], "sample_texture_from_model_ODF_mtex": [[147, "sample-texture-from-model-odf-mtex"]], "sample_texture_random_mtex": [[147, "sample-texture-random-mtex"]], "simulate_VE_loading": [[147, "simulate-ve-loading"]], "simulate_VE_loading_damask": [[147, "simulate-ve-loading-damask"]], "simulate_VE_loading_damask_HC": [[147, "simulate-ve-loading-damask-hc"]], "visualise_VE": [[147, "visualise-ve"]], "visualise_VE_VTK": [[147, "visualise-ve-vtk"]], "visualise_orientations": [[147, "visualise-orientations"]], "visualise_orientations_pole_figure_mtex": [[147, "visualise-orientations-pole-figure-mtex"]], "Demo workflows": [[148, "demo-workflows"]], "RVE_extrusion_EBSD": [[148, "rve-extrusion-ebsd"]], "RVE_extrusion_EBSD.yaml": [[148, null]], "RVE_extrusion_EBSD_DIC": [[148, "rve-extrusion-ebsd-dic"]], "RVE_extrusion_EBSD_DIC.yaml": [[148, null]], "cubic_textures": [[148, "cubic-textures"]], "cubic_textures.yaml": [[148, null]], "damask_input_files": [[148, "damask-input-files"]], "damask_input_files.yaml": [[148, null]], "damask_numerics": [[148, "damask-numerics"]], "damask_numerics.yaml": [[148, null]], "fit_single_crystal_parameters.yaml": [[148, null]], "fit_yield_funcs": [[148, "fit-yield-funcs"]], "fit_yield_funcs.yaml": [[148, null]], "generate_volume_element_from_statistics.yaml": [[148, null]], "modify_volume_element_grid_size": [[148, "modify-volume-element-grid-size"]], "modify_volume_element_grid_size.yaml": [[148, null]], "read_tensile_test_CSV": [[148, "read-tensile-test-csv"]], "read_tensile_test_CSV.yaml": [[148, null]], "sample_orientations_CRC_file": [[148, "sample-orientations-crc-file"]], "sample_orientations_CRC_file.yaml": [[148, null]], "sample_orientations_CTF_file": [[148, "sample-orientations-ctf-file"]], "sample_orientations_CTF_file.yaml": [[148, null]], "sample_texture_CRC_file": [[148, "sample-texture-crc-file"]], "sample_texture_CRC_file.yaml": [[148, null]], "sample_texture_CTF_file": [[148, "sample-texture-ctf-file"]], "sample_texture_CTF_file.yaml": [[148, null]], "sample_texture_ODF_mat": [[148, "sample-texture-odf-mat"]], "sample_texture_ODF_mat.yaml": [[148, null]], "sample_texture_model_ODF": [[148, "sample-texture-model-odf"]], "sample_texture_model_ODF.yaml": [[148, null]], "sample_texture_random": [[148, "sample-texture-random"]], "sample_texture_random.yaml": [[148, null]], "simulate_yield_surface_2D": [[148, "simulate-yield-surface-2d"]], "simulate_yield_surface_2D.yaml": [[148, null]], "simulate_yield_surface_2D_brass": [[148, "simulate-yield-surface-2d-brass"]], "simulate_yield_surface_2D_brass.yaml": [[148, null]], "tension_DAMASK_Al": [[148, "tension-damask-al"]], "tension_DAMASK_Al.yaml": [[148, null]], "tension_DAMASK_Al_N_repeats": [[148, "tension-damask-al-n-repeats"]], "tension_DAMASK_Al_N_repeats.yaml": [[148, null]], "tension_DAMASK_Mg": [[148, "tension-damask-mg"]], "tension_DAMASK_Mg.yaml": [[148, null]], "tension_DAMASK_Ti": [[148, "tension-damask-ti"]], "tension_DAMASK_Ti.yaml": [[148, null]], "Configuration how-tos": [[149, "configuration-how-tos"]], "Get and set config items": [[149, "get-and-set-config-items"]], "Reset the config to default values": [[149, "reset-the-config-to-default-values"]], "Clear the known-submissions file": [[149, "clear-the-known-submissions-file"]], "Environment how-tos": [[150, "environment-how-tos"]], "Use multiple versions of the same software": [[150, "use-multiple-versions-of-the-same-software"]], "Disambiguating between matflow environments with the same name": [[150, "disambiguating-between-matflow-environments-with-the-same-name"]], "Using environment specifiers within task schemas": [[150, "using-environment-specifiers-within-task-schemas"]], "Environment specifiers within action environments": [[150, "environment-specifiers-within-action-environments"]], "Passing environment specifiers to action scripts": [[150, "passing-environment-specifiers-to-action-scripts"]], "Environment specifiers within script paths": [[150, "environment-specifiers-within-script-paths"]], "Defining environment presets": [[150, "defining-environment-presets"]], "Selecting environment specifiers within workflow templates": [[150, "selecting-environment-specifiers-within-workflow-templates"]], "Environment specifiers within sequences": [[150, "environment-specifiers-within-sequences"]], "How-To Guides": [[151, "how-to-guides"]], "Task schema how-tos": [[152, "task-schema-how-tos"]], "Show information about a task schema": [[152, "show-information-about-a-task-schema"]], "How to name parameters and task schemas": [[153, "how-to-name-parameters-and-task-schemas"]], "Workflow templates how-tos": [[154, "workflow-templates-how-tos"]], "Loading workflow templates": [[154, "loading-workflow-templates"]], "Workflow how-tos": [[155, "workflow-how-tos"]], "Generating a persistent workflow from a workflow template": [[155, "generating-a-persistent-workflow-from-a-workflow-template"]], "Loading workflows": [[155, "loading-workflows"]], "User Guide": [[156, "user-guide"]], "Tutorials": [[157, "tutorials"]], "Jupyter notebooks": [[158, "jupyter-notebooks"]], "Simulating yield surfaces with DAMASK simulations": [[159, "simulating-yield-surfaces-with-damask-simulations"]], "Utility functions": [[159, "utility-functions"]], "Processing functions": [[159, "processing-functions"]], "Load and process simulations": [[159, "load-and-process-simulations"]], "Plot yield surfaces": [[159, "plot-yield-surfaces"]]}, "indexentries": {"matflow": [[5, "module-matflow"]], "module": [[5, "module-matflow"], [90, "module-matflow.cli"], [98, "module-matflow.param_classes"], [99, "module-matflow.param_classes.load"], [103, "module-matflow.param_classes.orientations"], [111, "module-matflow.param_classes.seeds"], [113, "module-matflow.param_classes.single_crystal_parameters"], [115, "module-matflow.param_classes.utils"], [122, "module-matflow.tests"], [123, "module-matflow.tests.conftest"], [130, "module-matflow.tests.test_cli"], [133, "module-matflow.tests.test_utils"]], "action (class in matflow)": [[6, "matflow.Action"]], "abortable (matflow.action attribute)": [[6, "matflow.Action.abortable"]], "app (matflow.action attribute)": [[6, "matflow.Action.app"]], "clean_up (matflow.action attribute)": [[6, "matflow.Action.clean_up"]], "commands (matflow.action attribute)": [[6, "matflow.Action.commands"]], "compose_source() (matflow.action method)": [[6, "matflow.Action.compose_source"]], "environments (matflow.action attribute)": [[6, "matflow.Action.environments"]], "expand() (matflow.action method)": [[6, "matflow.Action.expand"]], "from_json_like() (matflow.action class method)": [[6, "matflow.Action.from_json_like"]], "generate_data_index() (matflow.action method)": [[6, "matflow.Action.generate_data_index"]], "get_command_input_file_labels() (matflow.action method)": [[6, "matflow.Action.get_command_input_file_labels"]], "get_command_input_types() (matflow.action method)": [[6, "matflow.Action.get_command_input_types"]], "get_command_output_types() (matflow.action method)": [[6, "matflow.Action.get_command_output_types"]], "get_commands_action_env() (matflow.action method)": [[6, "matflow.Action.get_commands_action_env"]], "get_environment() (matflow.action method)": [[6, "matflow.Action.get_environment"]], "get_environment_name() (matflow.action method)": [[6, "matflow.Action.get_environment_name"]], "get_environment_spec() (matflow.action method)": [[6, "matflow.Action.get_environment_spec"]], "get_input_file_generator_action_env() (matflow.action method)": [[6, "matflow.Action.get_input_file_generator_action_env"]], "get_input_file_labels() (matflow.action method)": [[6, "matflow.Action.get_input_file_labels"]], "get_input_types() (matflow.action method)": [[6, "matflow.Action.get_input_types"]], "get_output_file_labels() (matflow.action method)": [[6, "matflow.Action.get_output_file_labels"]], "get_output_file_parser_action_env() (matflow.action method)": [[6, "matflow.Action.get_output_file_parser_action_env"]], "get_output_types() (matflow.action method)": [[6, "matflow.Action.get_output_types"]], "get_param_dump_file_path_hdf5() (matflow.action method)": [[6, "matflow.Action.get_param_dump_file_path_HDF5"]], "get_param_dump_file_path_json() (matflow.action method)": [[6, "matflow.Action.get_param_dump_file_path_JSON"]], "get_param_load_file_path_hdf5() (matflow.action method)": [[6, "matflow.Action.get_param_load_file_path_HDF5"]], "get_param_load_file_path_json() (matflow.action method)": [[6, "matflow.Action.get_param_load_file_path_JSON"]], "get_parameter_dependence() (matflow.action method)": [[6, "matflow.Action.get_parameter_dependence"]], "get_parameter_names() (matflow.action method)": [[6, "matflow.Action.get_parameter_names"]], "get_possible_scopes() (matflow.action method)": [[6, "matflow.Action.get_possible_scopes"]], "get_precise_scope() (matflow.action method)": [[6, "matflow.Action.get_precise_scope"]], "get_required_executables() (matflow.action method)": [[6, "matflow.Action.get_required_executables"]], "get_script_name() (matflow.action class method)": [[6, "matflow.Action.get_script_name"]], "get_snippet_script_path() (matflow.action class method)": [[6, "matflow.Action.get_snippet_script_path"]], "get_snippet_script_str() (matflow.action class method)": [[6, "matflow.Action.get_snippet_script_str"]], "input_file_generators (matflow.action attribute)": [[6, "matflow.Action.input_file_generators"]], "input_files (matflow.action attribute)": [[6, "matflow.Action.input_files"]], "is_input_type_required() (matflow.action method)": [[6, "matflow.Action.is_input_type_required"]], "is_snippet_script() (matflow.action static method)": [[6, "matflow.Action.is_snippet_script"]], "output_file_parsers (matflow.action attribute)": [[6, "matflow.Action.output_file_parsers"]], "output_files (matflow.action attribute)": [[6, "matflow.Action.output_files"]], "process_script_data_formats() (matflow.action method)": [[6, "matflow.Action.process_script_data_formats"]], "rules (matflow.action attribute)": [[6, "matflow.Action.rules"]], "save_files (matflow.action attribute)": [[6, "matflow.Action.save_files"]], "script (matflow.action attribute)": [[6, "matflow.Action.script"]], "script_data_files_use_opt (matflow.action attribute)": [[6, "matflow.Action.script_data_files_use_opt"]], "script_data_in (matflow.action attribute)": [[6, "matflow.Action.script_data_in"]], "script_data_in_grouped (matflow.action property)": [[6, "matflow.Action.script_data_in_grouped"]], "script_data_in_has_direct (matflow.action property)": [[6, "matflow.Action.script_data_in_has_direct"]], "script_data_in_has_files (matflow.action property)": [[6, "matflow.Action.script_data_in_has_files"]], "script_data_out (matflow.action attribute)": [[6, "matflow.Action.script_data_out"]], "script_data_out_grouped (matflow.action property)": [[6, "matflow.Action.script_data_out_grouped"]], "script_data_out_has_direct (matflow.action property)": [[6, "matflow.Action.script_data_out_has_direct"]], "script_data_out_has_files (matflow.action property)": [[6, "matflow.Action.script_data_out_has_files"]], "script_exe (matflow.action attribute)": [[6, "matflow.Action.script_exe"]], "script_is_python (matflow.action property)": [[6, "matflow.Action.script_is_python"]], "script_pass_env_spec (matflow.action attribute)": [[6, "matflow.Action.script_pass_env_spec"]], "task_schema (matflow.action property)": [[6, "matflow.Action.task_schema"]], "test_rules() (matflow.action method)": [[6, "matflow.Action.test_rules"]], "to_dict() (matflow.action method)": [[6, "matflow.Action.to_dict"]], "to_json_like() (matflow.action method)": [[6, "matflow.Action.to_json_like"]], "actionenvironment (class in matflow)": [[7, "matflow.ActionEnvironment"]], "app (matflow.actionenvironment attribute)": [[7, "matflow.ActionEnvironment.app"]], "environment (matflow.actionenvironment attribute)": [[7, "matflow.ActionEnvironment.environment"]], "from_json_like() (matflow.actionenvironment class method)": [[7, "matflow.ActionEnvironment.from_json_like"]], "scope (matflow.actionenvironment attribute)": [[7, "matflow.ActionEnvironment.scope"]], "to_dict() (matflow.actionenvironment method)": [[7, "matflow.ActionEnvironment.to_dict"]], "to_json_like() (matflow.actionenvironment method)": [[7, "matflow.ActionEnvironment.to_json_like"]], "actionrule (class in matflow)": [[8, "matflow.ActionRule"]], "action (matflow.actionrule attribute)": [[8, "matflow.ActionRule.action"]], "app (matflow.actionrule attribute)": [[8, "matflow.ActionRule.app"]], "check_exists() (matflow.actionrule class method)": [[8, "matflow.ActionRule.check_exists"]], "check_missing() (matflow.actionrule class method)": [[8, "matflow.ActionRule.check_missing"]], "command (matflow.actionrule attribute)": [[8, "matflow.ActionRule.command"]], "from_json_like() (matflow.actionrule class method)": [[8, "matflow.ActionRule.from_json_like"]], "rule (matflow.actionrule attribute)": [[8, "matflow.ActionRule.rule"]], "test() (matflow.actionrule method)": [[8, "matflow.ActionRule.test"]], "to_dict() (matflow.actionrule method)": [[8, "matflow.ActionRule.to_dict"]], "to_json_like() (matflow.actionrule method)": [[8, "matflow.ActionRule.to_json_like"]], "actionscope (class in matflow)": [[9, "matflow.ActionScope"]], "any() (matflow.actionscope class method)": [[9, "matflow.ActionScope.any"]], "app (matflow.actionscope attribute)": [[9, "matflow.ActionScope.app"]], "from_json_like() (matflow.actionscope class method)": [[9, "matflow.ActionScope.from_json_like"]], "input_file_generator() (matflow.actionscope class method)": [[9, "matflow.ActionScope.input_file_generator"]], "kwargs (matflow.actionscope attribute)": [[9, "matflow.ActionScope.kwargs"]], "main() (matflow.actionscope class method)": [[9, "matflow.ActionScope.main"]], "output_file_parser() (matflow.actionscope class method)": [[9, "matflow.ActionScope.output_file_parser"]], "processing() (matflow.actionscope class method)": [[9, "matflow.ActionScope.processing"]], "to_dict() (matflow.actionscope method)": [[9, "matflow.ActionScope.to_dict"]], "to_json_like() (matflow.actionscope method)": [[9, "matflow.ActionScope.to_json_like"]], "to_string() (matflow.actionscope method)": [[9, "matflow.ActionScope.to_string"]], "typ (matflow.actionscope attribute)": [[9, "matflow.ActionScope.typ"]], "any (matflow.actionscopetype attribute)": [[10, "matflow.ActionScopeType.ANY"]], "actionscopetype (class in matflow)": [[10, "matflow.ActionScopeType"]], "input_file_generator (matflow.actionscopetype attribute)": [[10, "matflow.ActionScopeType.INPUT_FILE_GENERATOR"]], "main (matflow.actionscopetype attribute)": [[10, "matflow.ActionScopeType.MAIN"]], "output_file_parser (matflow.actionscopetype attribute)": [[10, "matflow.ActionScopeType.OUTPUT_FILE_PARSER"]], "processing (matflow.actionscopetype attribute)": [[10, "matflow.ActionScopeType.PROCESSING"]], "command (class in matflow)": [[11, "matflow.Command"]], "app (matflow.command attribute)": [[11, "matflow.Command.app"]], "arguments (matflow.command attribute)": [[11, "matflow.Command.arguments"]], "command (matflow.command attribute)": [[11, "matflow.Command.command"]], "executable (matflow.command attribute)": [[11, "matflow.Command.executable"]], "from_json_like() (matflow.command class method)": [[11, "matflow.Command.from_json_like"]], "get_command_line() (matflow.command method)": [[11, "matflow.Command.get_command_line"]], "get_output_types() (matflow.command method)": [[11, "matflow.Command.get_output_types"]], "get_required_executables() (matflow.command method)": [[11, "matflow.Command.get_required_executables"]], "process_std_stream() (matflow.command method)": [[11, "matflow.Command.process_std_stream"]], "rules (matflow.command attribute)": [[11, "matflow.Command.rules"]], "stderr (matflow.command attribute)": [[11, "matflow.Command.stderr"]], "stdin (matflow.command attribute)": [[11, "matflow.Command.stdin"]], "stdout (matflow.command attribute)": [[11, "matflow.Command.stdout"]], "to_dict() (matflow.command method)": [[11, "matflow.Command.to_dict"]], "to_json_like() (matflow.command method)": [[11, "matflow.Command.to_json_like"]], "variables (matflow.command attribute)": [[11, "matflow.Command.variables"]], "commandfileslist (class in matflow)": [[12, "matflow.CommandFilesList"]], "add_object() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.add_object"]], "add_objects() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.add_objects"]], "from_json_like() (matflow.commandfileslist class method)": [[12, "matflow.CommandFilesList.from_json_like"]], "get() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.get"]], "get_all() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.get_all"]], "list_attrs() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.list_attrs"]], "to_dict() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.to_dict"]], "to_json_like() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.to_json_like"]], "default_shebang_args (matflow.directposix attribute)": [[13, "matflow.DirectPosix.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.directposix attribute)": [[13, "matflow.DirectPosix.DEFAULT_SHELL_ARGS"]], "default_shell_executable (matflow.directposix attribute)": [[13, "matflow.DirectPosix.DEFAULT_SHELL_EXECUTABLE"]], "directposix (class in matflow)": [[13, "matflow.DirectPosix"]], "app (matflow.directposix attribute)": [[13, "matflow.DirectPosix.app"]], "cancel_jobs() (matflow.directposix method)": [[13, "matflow.DirectPosix.cancel_jobs"]], "get_job_state_info() (matflow.directposix method)": [[13, "matflow.DirectPosix.get_job_state_info"]], "get_submit_command() (matflow.directposix method)": [[13, "matflow.DirectPosix.get_submit_command"]], "get_version_info() (matflow.directposix method)": [[13, "matflow.DirectPosix.get_version_info"]], "is_jobscript_active() (matflow.directposix method)": [[13, "matflow.DirectPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.directposix static method)": [[13, "matflow.DirectPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.directposix method)": [[13, "matflow.DirectPosix.parse_submission_output"]], "process_resources() (matflow.directposix class method)": [[13, "matflow.DirectPosix.process_resources"]], "unique_properties (matflow.directposix property)": [[13, "matflow.DirectPosix.unique_properties"]], "wait_for_jobscripts() (matflow.directposix class method)": [[13, "matflow.DirectPosix.wait_for_jobscripts"]], "default_shebang_args (matflow.directwindows attribute)": [[14, "matflow.DirectWindows.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.directwindows attribute)": [[14, "matflow.DirectWindows.DEFAULT_SHELL_ARGS"]], "default_shell_executable (matflow.directwindows attribute)": [[14, "matflow.DirectWindows.DEFAULT_SHELL_EXECUTABLE"]], "directwindows (class in matflow)": [[14, "matflow.DirectWindows"]], "app (matflow.directwindows attribute)": [[14, "matflow.DirectWindows.app"]], "cancel_jobs() (matflow.directwindows method)": [[14, "matflow.DirectWindows.cancel_jobs"]], "get_job_state_info() (matflow.directwindows method)": [[14, "matflow.DirectWindows.get_job_state_info"]], "get_submit_command() (matflow.directwindows method)": [[14, "matflow.DirectWindows.get_submit_command"]], "get_version_info() (matflow.directwindows method)": [[14, "matflow.DirectWindows.get_version_info"]], "is_jobscript_active() (matflow.directwindows method)": [[14, "matflow.DirectWindows.is_jobscript_active"]], "is_num_cores_supported() (matflow.directwindows static method)": [[14, "matflow.DirectWindows.is_num_cores_supported"]], "parse_submission_output() (matflow.directwindows method)": [[14, "matflow.DirectWindows.parse_submission_output"]], "process_resources() (matflow.directwindows class method)": [[14, "matflow.DirectWindows.process_resources"]], "unique_properties (matflow.directwindows property)": [[14, "matflow.DirectWindows.unique_properties"]], "wait_for_jobscripts() (matflow.directwindows class method)": [[14, "matflow.DirectWindows.wait_for_jobscripts"]], "element (class in matflow)": [[15, "matflow.Element"]], "action_runs (matflow.element property)": [[15, "matflow.Element.action_runs"]], "actions (matflow.element property)": [[15, "matflow.Element.actions"]], "app (matflow.element attribute)": [[15, "matflow.Element.app"]], "dir_name (matflow.element property)": [[15, "matflow.Element.dir_name"]], "element_set (matflow.element property)": [[15, "matflow.Element.element_set"]], "element_set_idx (matflow.element property)": [[15, "matflow.Element.element_set_idx"]], "get() (matflow.element method)": [[15, "matflow.Element.get"]], "get_ear_dependencies() (matflow.element method)": [[15, "matflow.Element.get_EAR_dependencies"]], "get_data_idx() (matflow.element method)": [[15, "matflow.Element.get_data_idx"]], "get_dependent_ears() (matflow.element method)": [[15, "matflow.Element.get_dependent_EARs"]], "get_dependent_element_iterations() (matflow.element method)": [[15, "matflow.Element.get_dependent_element_iterations"]], "get_dependent_elements() (matflow.element method)": [[15, "matflow.Element.get_dependent_elements"]], "get_dependent_elements_recursively() (matflow.element method)": [[15, "matflow.Element.get_dependent_elements_recursively"]], "get_dependent_tasks() (matflow.element method)": [[15, "matflow.Element.get_dependent_tasks"]], "get_element_dependencies() (matflow.element method)": [[15, "matflow.Element.get_element_dependencies"]], "get_element_iteration_dependencies() (matflow.element method)": [[15, "matflow.Element.get_element_iteration_dependencies"]], "get_input_dependencies() (matflow.element method)": [[15, "matflow.Element.get_input_dependencies"]], "get_parameter_sources() (matflow.element method)": [[15, "matflow.Element.get_parameter_sources"]], "get_sequence_value() (matflow.element method)": [[15, "matflow.Element.get_sequence_value"]], "get_task_dependencies() (matflow.element method)": [[15, "matflow.Element.get_task_dependencies"]], "id_ (matflow.element property)": [[15, "matflow.Element.id_"]], "index (matflow.element property)": [[15, "matflow.Element.index"]], "init_loop_index() (matflow.element method)": [[15, "matflow.Element.init_loop_index"]], "input_files (matflow.element property)": [[15, "matflow.Element.input_files"]], "input_source_idx (matflow.element property)": [[15, "matflow.Element.input_source_idx"]], "input_sources (matflow.element property)": [[15, "matflow.Element.input_sources"]], "inputs (matflow.element property)": [[15, "matflow.Element.inputs"]], "is_pending (matflow.element property)": [[15, "matflow.Element.is_pending"]], "iteration_ids (matflow.element property)": [[15, "matflow.Element.iteration_IDs"]], "iterations (matflow.element property)": [[15, "matflow.Element.iterations"]], "latest_iteration (matflow.element property)": [[15, "matflow.Element.latest_iteration"]], "output_files (matflow.element property)": [[15, "matflow.Element.output_files"]], "outputs (matflow.element property)": [[15, "matflow.Element.outputs"]], "schema_parameters (matflow.element property)": [[15, "matflow.Element.schema_parameters"]], "sequence_idx (matflow.element property)": [[15, "matflow.Element.sequence_idx"]], "task (matflow.element property)": [[15, "matflow.Element.task"]], "to_element_set_data() (matflow.element method)": [[15, "matflow.Element.to_element_set_data"]], "workflow (matflow.element property)": [[15, "matflow.Element.workflow"]], "elementaction (class in matflow)": [[16, "matflow.ElementAction"]], "action (matflow.elementaction property)": [[16, "matflow.ElementAction.action"]], "action_idx (matflow.elementaction property)": [[16, "matflow.ElementAction.action_idx"]], "app (matflow.elementaction attribute)": [[16, "matflow.ElementAction.app"]], "element (matflow.elementaction property)": [[16, "matflow.ElementAction.element"]], "element_iteration (matflow.elementaction property)": [[16, "matflow.ElementAction.element_iteration"]], "get() (matflow.elementaction method)": [[16, "matflow.ElementAction.get"]], "get_data_idx() (matflow.elementaction method)": [[16, "matflow.ElementAction.get_data_idx"]], "get_parameter_names() (matflow.elementaction method)": [[16, "matflow.ElementAction.get_parameter_names"]], "get_parameter_sources() (matflow.elementaction method)": [[16, "matflow.ElementAction.get_parameter_sources"]], "input_files (matflow.elementaction property)": [[16, "matflow.ElementAction.input_files"]], "inputs (matflow.elementaction property)": [[16, "matflow.ElementAction.inputs"]], "num_runs (matflow.elementaction property)": [[16, "matflow.ElementAction.num_runs"]], "output_files (matflow.elementaction property)": [[16, "matflow.ElementAction.output_files"]], "outputs (matflow.elementaction property)": [[16, "matflow.ElementAction.outputs"]], "runs (matflow.elementaction property)": [[16, "matflow.ElementAction.runs"]], "task (matflow.elementaction property)": [[16, "matflow.ElementAction.task"]], "elementactionrun (class in matflow)": [[17, "matflow.ElementActionRun"]], "action (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.action"]], "app (matflow.elementactionrun attribute)": [[17, "matflow.ElementActionRun.app"]], "commands_idx (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.commands_idx"]], "compose_commands() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.compose_commands"]], "data_idx (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.data_idx"]], "dir_diff (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.dir_diff"]], "element (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.element"]], "element_action (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.element_action"]], "element_iteration (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.element_iteration"]], "end_time (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.end_time"]], "env_spec (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.env_spec"]], "exit_code (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.exit_code"]], "get() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get"]], "get_ear_dependencies() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_EAR_dependencies"]], "get_ifg_input_values() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_IFG_input_values"]], "get_ofp_inputs() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_OFP_inputs"]], "get_ofp_output_files() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_OFP_output_files"]], "get_ofp_outputs() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_OFP_outputs"]], "get_all_previous_iteration_runs() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_all_previous_iteration_runs"]], "get_data_idx() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_data_idx"]], "get_dependent_ears() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_dependent_EARs"]], "get_environment() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_environment"]], "get_environment_spec() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_environment_spec"]], "get_input_dependencies() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_input_dependencies"]], "get_input_values() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_input_values"]], "get_input_values_direct() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_input_values_direct"]], "get_parameter_names() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_parameter_names"]], "get_parameter_sources() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_parameter_sources"]], "get_resources() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_resources"]], "id_ (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.id_"]], "index (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.index"]], "input_files (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.input_files"]], "inputs (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.inputs"]], "is_pending (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.is_pending"]], "metadata (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.metadata"]], "output_files (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.output_files"]], "outputs (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.outputs"]], "resources (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.resources"]], "run_hostname (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.run_hostname"]], "skip (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.skip"]], "snapshot_end (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.snapshot_end"]], "snapshot_start (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.snapshot_start"]], "start_time (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.start_time"]], "status (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.status"]], "submission_idx (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.submission_idx"]], "success (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.success"]], "task (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.task"]], "workflow (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.workflow"]], "write_source() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.write_source"]], "elementfilter (class in matflow)": [[18, "matflow.ElementFilter"]], "app (matflow.elementfilter attribute)": [[18, "matflow.ElementFilter.app"]], "filter() (matflow.elementfilter method)": [[18, "matflow.ElementFilter.filter"]], "from_json_like() (matflow.elementfilter class method)": [[18, "matflow.ElementFilter.from_json_like"]], "rules (matflow.elementfilter attribute)": [[18, "matflow.ElementFilter.rules"]], "to_dict() (matflow.elementfilter method)": [[18, "matflow.ElementFilter.to_dict"]], "to_json_like() (matflow.elementfilter method)": [[18, "matflow.ElementFilter.to_json_like"]], "elementgroup (class in matflow)": [[19, "matflow.ElementGroup"]], "app (matflow.elementgroup attribute)": [[19, "matflow.ElementGroup.app"]], "from_json_like() (matflow.elementgroup class method)": [[19, "matflow.ElementGroup.from_json_like"]], "group_by_distinct (matflow.elementgroup attribute)": [[19, "matflow.ElementGroup.group_by_distinct"]], "name (matflow.elementgroup attribute)": [[19, "matflow.ElementGroup.name"]], "to_dict() (matflow.elementgroup method)": [[19, "matflow.ElementGroup.to_dict"]], "to_json_like() (matflow.elementgroup method)": [[19, "matflow.ElementGroup.to_json_like"]], "where (matflow.elementgroup attribute)": [[19, "matflow.ElementGroup.where"]], "elementinputfiles (class in matflow)": [[20, "matflow.ElementInputFiles"]], "prefixed_names_unlabelled (matflow.elementinputfiles property)": [[20, "matflow.ElementInputFiles.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementinputfiles property)": [[20, "matflow.ElementInputFiles.prefixed_names_unlabelled_str"]], "elementinputs (class in matflow)": [[21, "matflow.ElementInputs"]], "prefixed_names_unlabelled (matflow.elementinputs property)": [[21, "matflow.ElementInputs.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementinputs property)": [[21, "matflow.ElementInputs.prefixed_names_unlabelled_str"]], "ear_ids (matflow.elementiteration property)": [[22, "matflow.ElementIteration.EAR_IDs"]], "ear_ids_flat (matflow.elementiteration property)": [[22, "matflow.ElementIteration.EAR_IDs_flat"]], "ears_initialised (matflow.elementiteration property)": [[22, "matflow.ElementIteration.EARs_initialised"]], "elementiteration (class in matflow)": [[22, "matflow.ElementIteration"]], "action_runs (matflow.elementiteration property)": [[22, "matflow.ElementIteration.action_runs"]], "actions (matflow.elementiteration property)": [[22, "matflow.ElementIteration.actions"]], "app (matflow.elementiteration attribute)": [[22, "matflow.ElementIteration.app"]], "data_idx (matflow.elementiteration property)": [[22, "matflow.ElementIteration.data_idx"]], "element (matflow.elementiteration property)": [[22, "matflow.ElementIteration.element"]], "get() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get"]], "get_ear_dependencies() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_EAR_dependencies"]], "get_data_idx() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_data_idx"]], "get_dependent_ears() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_dependent_EARs"]], "get_dependent_element_iterations() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_dependent_element_iterations"]], "get_dependent_elements() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_dependent_elements"]], "get_dependent_tasks() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_dependent_tasks"]], "get_element_dependencies() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_element_dependencies"]], "get_element_iteration_dependencies() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_element_iteration_dependencies"]], "get_input_dependencies() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_input_dependencies"]], "get_parameter_names() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_parameter_names"]], "get_parameter_sources() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_parameter_sources"]], "get_resources() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_resources"]], "get_resources_obj() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_resources_obj"]], "get_task_dependencies() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_task_dependencies"]], "get_template_resources() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_template_resources"]], "id_ (matflow.elementiteration property)": [[22, "matflow.ElementIteration.id_"]], "index (matflow.elementiteration property)": [[22, "matflow.ElementIteration.index"]], "input_files (matflow.elementiteration property)": [[22, "matflow.ElementIteration.input_files"]], "inputs (matflow.elementiteration property)": [[22, "matflow.ElementIteration.inputs"]], "is_pending (matflow.elementiteration property)": [[22, "matflow.ElementIteration.is_pending"]], "loop_idx (matflow.elementiteration property)": [[22, "matflow.ElementIteration.loop_idx"]], "output_files (matflow.elementiteration property)": [[22, "matflow.ElementIteration.output_files"]], "outputs (matflow.elementiteration property)": [[22, "matflow.ElementIteration.outputs"]], "schema_parameters (matflow.elementiteration property)": [[22, "matflow.ElementIteration.schema_parameters"]], "task (matflow.elementiteration property)": [[22, "matflow.ElementIteration.task"]], "workflow (matflow.elementiteration property)": [[22, "matflow.ElementIteration.workflow"]], "elementoutputfiles (class in matflow)": [[23, "matflow.ElementOutputFiles"]], "prefixed_names_unlabelled (matflow.elementoutputfiles property)": [[23, "matflow.ElementOutputFiles.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementoutputfiles property)": [[23, "matflow.ElementOutputFiles.prefixed_names_unlabelled_str"]], "elementoutputs (class in matflow)": [[24, "matflow.ElementOutputs"]], "prefixed_names_unlabelled (matflow.elementoutputs property)": [[24, "matflow.ElementOutputs.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementoutputs property)": [[24, "matflow.ElementOutputs.prefixed_names_unlabelled_str"]], "elementparameter (class in matflow)": [[25, "matflow.ElementParameter"]], "app (matflow.elementparameter attribute)": [[25, "matflow.ElementParameter.app"]], "data_idx (matflow.elementparameter property)": [[25, "matflow.ElementParameter.data_idx"]], "data_idx_is_set (matflow.elementparameter property)": [[25, "matflow.ElementParameter.data_idx_is_set"]], "element (matflow.elementparameter attribute)": [[25, "matflow.ElementParameter.element"]], "get_size() (matflow.elementparameter method)": [[25, "matflow.ElementParameter.get_size"]], "is_set (matflow.elementparameter property)": [[25, "matflow.ElementParameter.is_set"]], "parent (matflow.elementparameter attribute)": [[25, "matflow.ElementParameter.parent"]], "path (matflow.elementparameter attribute)": [[25, "matflow.ElementParameter.path"]], "task (matflow.elementparameter attribute)": [[25, "matflow.ElementParameter.task"]], "value (matflow.elementparameter property)": [[25, "matflow.ElementParameter.value"]], "elementpropagation (class in matflow)": [[26, "matflow.ElementPropagation"]], "app (matflow.elementpropagation attribute)": [[26, "matflow.ElementPropagation.app"]], "element_set (matflow.elementpropagation property)": [[26, "matflow.ElementPropagation.element_set"]], "input_sources (matflow.elementpropagation attribute)": [[26, "matflow.ElementPropagation.input_sources"]], "nesting_order (matflow.elementpropagation attribute)": [[26, "matflow.ElementPropagation.nesting_order"]], "task (matflow.elementpropagation attribute)": [[26, "matflow.ElementPropagation.task"]], "elementrepeats (class in matflow)": [[27, "matflow.ElementRepeats"]], "number (matflow.elementrepeats attribute)": [[27, "matflow.ElementRepeats.number"]], "where (matflow.elementrepeats attribute)": [[27, "matflow.ElementRepeats.where"]], "elementresources (class in matflow)": [[28, "matflow.ElementResources"]], "sge_parallel_env (matflow.elementresources attribute)": [[28, "matflow.ElementResources.SGE_parallel_env"]], "slurm_is_parallel (matflow.elementresources property)": [[28, "matflow.ElementResources.SLURM_is_parallel"]], "slurm_num_cpus_per_task (matflow.elementresources attribute)": [[28, "matflow.ElementResources.SLURM_num_cpus_per_task"]], "slurm_num_nodes (matflow.elementresources attribute)": [[28, "matflow.ElementResources.SLURM_num_nodes"]], "slurm_num_tasks (matflow.elementresources attribute)": [[28, "matflow.ElementResources.SLURM_num_tasks"]], "slurm_num_tasks_per_node (matflow.elementresources attribute)": [[28, "matflow.ElementResources.SLURM_num_tasks_per_node"]], "slurm_partition (matflow.elementresources attribute)": [[28, "matflow.ElementResources.SLURM_partition"]], "app (matflow.elementresources attribute)": [[28, "matflow.ElementResources.app"]], "environments (matflow.elementresources attribute)": [[28, "matflow.ElementResources.environments"]], "from_json_like() (matflow.elementresources class method)": [[28, "matflow.ElementResources.from_json_like"]], "get_default_os_name() (matflow.elementresources static method)": [[28, "matflow.ElementResources.get_default_os_name"]], "get_default_scheduler() (matflow.elementresources class method)": [[28, "matflow.ElementResources.get_default_scheduler"]], "get_default_shell() (matflow.elementresources class method)": [[28, "matflow.ElementResources.get_default_shell"]], "get_env_instance_filterable_attributes() (matflow.elementresources static method)": [[28, "matflow.ElementResources.get_env_instance_filterable_attributes"]], "get_jobscript_hash() (matflow.elementresources method)": [[28, "matflow.ElementResources.get_jobscript_hash"]], "is_parallel (matflow.elementresources property)": [[28, "matflow.ElementResources.is_parallel"]], "max_array_items (matflow.elementresources attribute)": [[28, "matflow.ElementResources.max_array_items"]], "num_cores (matflow.elementresources attribute)": [[28, "matflow.ElementResources.num_cores"]], "num_cores_per_node (matflow.elementresources attribute)": [[28, "matflow.ElementResources.num_cores_per_node"]], "num_nodes (matflow.elementresources attribute)": [[28, "matflow.ElementResources.num_nodes"]], "num_threads (matflow.elementresources attribute)": [[28, "matflow.ElementResources.num_threads"]], "os_name (matflow.elementresources attribute)": [[28, "matflow.ElementResources.os_name"]], "parallel_mode (matflow.elementresources attribute)": [[28, "matflow.ElementResources.parallel_mode"]], "scheduler (matflow.elementresources attribute)": [[28, "matflow.ElementResources.scheduler"]], "scheduler_args (matflow.elementresources attribute)": [[28, "matflow.ElementResources.scheduler_args"]], "scratch (matflow.elementresources attribute)": [[28, "matflow.ElementResources.scratch"]], "set_defaults() (matflow.elementresources method)": [[28, "matflow.ElementResources.set_defaults"]], "shell (matflow.elementresources attribute)": [[28, "matflow.ElementResources.shell"]], "shell_args (matflow.elementresources attribute)": [[28, "matflow.ElementResources.shell_args"]], "time_limit (matflow.elementresources attribute)": [[28, "matflow.ElementResources.time_limit"]], "to_dict() (matflow.elementresources method)": [[28, "matflow.ElementResources.to_dict"]], "to_json_like() (matflow.elementresources method)": [[28, "matflow.ElementResources.to_json_like"]], "use_job_array (matflow.elementresources attribute)": [[28, "matflow.ElementResources.use_job_array"]], "validate_against_machine() (matflow.elementresources method)": [[28, "matflow.ElementResources.validate_against_machine"]], "elementset (class in matflow)": [[29, "matflow.ElementSet"]], "allow_non_coincident_task_sources (matflow.elementset attribute)": [[29, "matflow.ElementSet.allow_non_coincident_task_sources"]], "app (matflow.elementset attribute)": [[29, "matflow.ElementSet.app"]], "defined_input_types (matflow.elementset property)": [[29, "matflow.ElementSet.defined_input_types"]], "elem_iter_ids (matflow.elementset property)": [[29, "matflow.ElementSet.elem_iter_IDs"]], "element_iterations (matflow.elementset property)": [[29, "matflow.ElementSet.element_iterations"]], "element_local_idx_range (matflow.elementset property)": [[29, "matflow.ElementSet.element_local_idx_range"]], "elements (matflow.elementset property)": [[29, "matflow.ElementSet.elements"]], "ensure_element_sets() (matflow.elementset class method)": [[29, "matflow.ElementSet.ensure_element_sets"]], "env_preset (matflow.elementset attribute)": [[29, "matflow.ElementSet.env_preset"]], "environments (matflow.elementset attribute)": [[29, "matflow.ElementSet.environments"]], "from_json_like() (matflow.elementset class method)": [[29, "matflow.ElementSet.from_json_like"]], "get_defined_parameter_types() (matflow.elementset method)": [[29, "matflow.ElementSet.get_defined_parameter_types"]], "get_defined_sub_parameter_types() (matflow.elementset method)": [[29, "matflow.ElementSet.get_defined_sub_parameter_types"]], "get_locally_defined_inputs() (matflow.elementset method)": [[29, "matflow.ElementSet.get_locally_defined_inputs"]], "get_sequence_from_path() (matflow.elementset method)": [[29, "matflow.ElementSet.get_sequence_from_path"]], "get_task_dependencies() (matflow.elementset method)": [[29, "matflow.ElementSet.get_task_dependencies"]], "groups (matflow.elementset attribute)": [[29, "matflow.ElementSet.groups"]], "index (matflow.elementset property)": [[29, "matflow.ElementSet.index"]], "input_files (matflow.elementset attribute)": [[29, "matflow.ElementSet.input_files"]], "input_sources (matflow.elementset attribute)": [[29, "matflow.ElementSet.input_sources"]], "input_types (matflow.elementset property)": [[29, "matflow.ElementSet.input_types"]], "inputs (matflow.elementset attribute)": [[29, "matflow.ElementSet.inputs"]], "is_input_type_provided() (matflow.elementset method)": [[29, "matflow.ElementSet.is_input_type_provided"]], "merge_envs (matflow.elementset attribute)": [[29, "matflow.ElementSet.merge_envs"]], "nesting_order (matflow.elementset attribute)": [[29, "matflow.ElementSet.nesting_order"]], "prepare_persistent_copy() (matflow.elementset method)": [[29, "matflow.ElementSet.prepare_persistent_copy"]], "repeats (matflow.elementset attribute)": [[29, "matflow.ElementSet.repeats"]], "resources (matflow.elementset attribute)": [[29, "matflow.ElementSet.resources"]], "sequences (matflow.elementset attribute)": [[29, "matflow.ElementSet.sequences"]], "sourceable_elem_iters (matflow.elementset attribute)": [[29, "matflow.ElementSet.sourceable_elem_iters"]], "task (matflow.elementset property)": [[29, "matflow.ElementSet.task"]], "task_template (matflow.elementset property)": [[29, "matflow.ElementSet.task_template"]], "to_dict() (matflow.elementset method)": [[29, "matflow.ElementSet.to_dict"]], "to_json_like() (matflow.elementset method)": [[29, "matflow.ElementSet.to_json_like"]], "undefined_input_types (matflow.elementset property)": [[29, "matflow.ElementSet.undefined_input_types"]], "elements (class in matflow)": [[30, "matflow.Elements"]], "task (matflow.elements property)": [[30, "matflow.Elements.task"]], "environment (class in matflow)": [[31, "matflow.Environment"]], "app (matflow.environment attribute)": [[31, "matflow.Environment.app"]], "executables (matflow.environment attribute)": [[31, "matflow.Environment.executables"]], "from_json_like() (matflow.environment class method)": [[31, "matflow.Environment.from_json_like"]], "name (matflow.environment attribute)": [[31, "matflow.Environment.name"]], "setup (matflow.environment attribute)": [[31, "matflow.Environment.setup"]], "specifiers (matflow.environment attribute)": [[31, "matflow.Environment.specifiers"]], "to_dict() (matflow.environment method)": [[31, "matflow.Environment.to_dict"]], "to_json_like() (matflow.environment method)": [[31, "matflow.Environment.to_json_like"]], "environmentslist (class in matflow)": [[32, "matflow.EnvironmentsList"]], "add_object() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.add_object"]], "add_objects() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.add_objects"]], "from_json_like() (matflow.environmentslist class method)": [[32, "matflow.EnvironmentsList.from_json_like"]], "get() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.get"]], "get_all() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.get_all"]], "list_attrs() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.list_attrs"]], "to_dict() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.to_dict"]], "to_json_like() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.to_json_like"]], "executable (class in matflow)": [[33, "matflow.Executable"]], "app (matflow.executable attribute)": [[33, "matflow.Executable.app"]], "environment (matflow.executable property)": [[33, "matflow.Executable.environment"]], "filter_instances() (matflow.executable method)": [[33, "matflow.Executable.filter_instances"]], "from_json_like() (matflow.executable class method)": [[33, "matflow.Executable.from_json_like"]], "instances (matflow.executable attribute)": [[33, "matflow.Executable.instances"]], "label (matflow.executable attribute)": [[33, "matflow.Executable.label"]], "to_dict() (matflow.executable method)": [[33, "matflow.Executable.to_dict"]], "to_json_like() (matflow.executable method)": [[33, "matflow.Executable.to_json_like"]], "executableinstance (class in matflow)": [[34, "matflow.ExecutableInstance"]], "app (matflow.executableinstance attribute)": [[34, "matflow.ExecutableInstance.app"]], "command (matflow.executableinstance attribute)": [[34, "matflow.ExecutableInstance.command"]], "from_json_like() (matflow.executableinstance class method)": [[34, "matflow.ExecutableInstance.from_json_like"]], "from_spec() (matflow.executableinstance class method)": [[34, "matflow.ExecutableInstance.from_spec"]], "num_cores (matflow.executableinstance attribute)": [[34, "matflow.ExecutableInstance.num_cores"]], "parallel_mode (matflow.executableinstance attribute)": [[34, "matflow.ExecutableInstance.parallel_mode"]], "to_dict() (matflow.executableinstance method)": [[34, "matflow.ExecutableInstance.to_dict"]], "to_json_like() (matflow.executableinstance method)": [[34, "matflow.ExecutableInstance.to_json_like"]], "executableslist (class in matflow)": [[35, "matflow.ExecutablesList"]], "add_object() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.add_object"]], "add_objects() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.add_objects"]], "environment (matflow.executableslist attribute)": [[35, "matflow.ExecutablesList.environment"]], "from_json_like() (matflow.executableslist class method)": [[35, "matflow.ExecutablesList.from_json_like"]], "get() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.get"]], "get_all() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.get_all"]], "list_attrs() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.list_attrs"]], "to_dict() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.to_dict"]], "to_json_like() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.to_json_like"]], "filenameext (class in matflow)": [[36, "matflow.FileNameExt"]], "app (matflow.filenameext attribute)": [[36, "matflow.FileNameExt.app"]], "file_name (matflow.filenameext attribute)": [[36, "matflow.FileNameExt.file_name"]], "from_json_like() (matflow.filenameext class method)": [[36, "matflow.FileNameExt.from_json_like"]], "to_dict() (matflow.filenameext method)": [[36, "matflow.FileNameExt.to_dict"]], "to_json_like() (matflow.filenameext method)": [[36, "matflow.FileNameExt.to_json_like"]], "value() (matflow.filenameext method)": [[36, "matflow.FileNameExt.value"]], "filenamespec (class in matflow)": [[37, "matflow.FileNameSpec"]], "app (matflow.filenamespec attribute)": [[37, "matflow.FileNameSpec.app"]], "args (matflow.filenamespec attribute)": [[37, "matflow.FileNameSpec.args"]], "ext (matflow.filenamespec property)": [[37, "matflow.FileNameSpec.ext"]], "from_json_like() (matflow.filenamespec class method)": [[37, "matflow.FileNameSpec.from_json_like"]], "is_regex (matflow.filenamespec attribute)": [[37, "matflow.FileNameSpec.is_regex"]], "name (matflow.filenamespec attribute)": [[37, "matflow.FileNameSpec.name"]], "stem (matflow.filenamespec property)": [[37, "matflow.FileNameSpec.stem"]], "to_dict() (matflow.filenamespec method)": [[37, "matflow.FileNameSpec.to_dict"]], "to_json_like() (matflow.filenamespec method)": [[37, "matflow.FileNameSpec.to_json_like"]], "value() (matflow.filenamespec method)": [[37, "matflow.FileNameSpec.value"]], "filenamestem (class in matflow)": [[38, "matflow.FileNameStem"]], "app (matflow.filenamestem attribute)": [[38, "matflow.FileNameStem.app"]], "file_name (matflow.filenamestem attribute)": [[38, "matflow.FileNameStem.file_name"]], "from_json_like() (matflow.filenamestem class method)": [[38, "matflow.FileNameStem.from_json_like"]], "to_dict() (matflow.filenamestem method)": [[38, "matflow.FileNameStem.to_dict"]], "to_json_like() (matflow.filenamestem method)": [[38, "matflow.FileNameStem.to_json_like"]], "value() (matflow.filenamestem method)": [[38, "matflow.FileNameStem.value"]], "filespec (class in matflow)": [[39, "matflow.FileSpec"]], "app (matflow.filespec attribute)": [[39, "matflow.FileSpec.app"]], "ext (matflow.filespec property)": [[39, "matflow.FileSpec.ext"]], "from_json_like() (matflow.filespec class method)": [[39, "matflow.FileSpec.from_json_like"]], "label (matflow.filespec attribute)": [[39, "matflow.FileSpec.label"]], "name (matflow.filespec attribute)": [[39, "matflow.FileSpec.name"]], "stem (matflow.filespec property)": [[39, "matflow.FileSpec.stem"]], "to_dict() (matflow.filespec method)": [[39, "matflow.FileSpec.to_dict"]], "to_json_like() (matflow.filespec method)": [[39, "matflow.FileSpec.to_json_like"]], "value() (matflow.filespec method)": [[39, "matflow.FileSpec.value"]], "grouplist (class in matflow)": [[40, "matflow.GroupList"]], "add_object() (matflow.grouplist method)": [[40, "matflow.GroupList.add_object"]], "add_objects() (matflow.grouplist method)": [[40, "matflow.GroupList.add_objects"]], "from_json_like() (matflow.grouplist class method)": [[40, "matflow.GroupList.from_json_like"]], "get() (matflow.grouplist method)": [[40, "matflow.GroupList.get"]], "get_all() (matflow.grouplist method)": [[40, "matflow.GroupList.get_all"]], "list_attrs() (matflow.grouplist method)": [[40, "matflow.GroupList.list_attrs"]], "to_dict() (matflow.grouplist method)": [[40, "matflow.GroupList.to_dict"]], "to_json_like() (matflow.grouplist method)": [[40, "matflow.GroupList.to_json_like"]], "inputfile (class in matflow)": [[41, "matflow.InputFile"]], "app (matflow.inputfile attribute)": [[41, "matflow.InputFile.app"]], "contents (matflow.inputfile property)": [[41, "matflow.InputFile.contents"]], "extension (matflow.inputfile property)": [[41, "matflow.InputFile.extension"]], "file (matflow.inputfile attribute)": [[41, "matflow.InputFile.file"]], "from_json_like() (matflow.inputfile class method)": [[41, "matflow.InputFile.from_json_like"]], "make_persistent() (matflow.inputfile method)": [[41, "matflow.InputFile.make_persistent"]], "normalised_files_path (matflow.inputfile property)": [[41, "matflow.InputFile.normalised_files_path"]], "normalised_path (matflow.inputfile property)": [[41, "matflow.InputFile.normalised_path"]], "path (matflow.inputfile property)": [[41, "matflow.InputFile.path"]], "read_contents() (matflow.inputfile method)": [[41, "matflow.InputFile.read_contents"]], "store_contents (matflow.inputfile property)": [[41, "matflow.InputFile.store_contents"]], "to_dict() (matflow.inputfile method)": [[41, "matflow.InputFile.to_dict"]], "to_json_like() (matflow.inputfile method)": [[41, "matflow.InputFile.to_json_like"]], "workflow (matflow.inputfile property)": [[41, "matflow.InputFile.workflow"]], "inputfilegenerator (class in matflow)": [[42, "matflow.InputFileGenerator"]], "abortable (matflow.inputfilegenerator attribute)": [[42, "matflow.InputFileGenerator.abortable"]], "app (matflow.inputfilegenerator attribute)": [[42, "matflow.InputFileGenerator.app"]], "compose_source() (matflow.inputfilegenerator method)": [[42, "matflow.InputFileGenerator.compose_source"]], "environment (matflow.inputfilegenerator attribute)": [[42, "matflow.InputFileGenerator.environment"]], "from_json_like() (matflow.inputfilegenerator class method)": [[42, "matflow.InputFileGenerator.from_json_like"]], "get_action_rules() (matflow.inputfilegenerator method)": [[42, "matflow.InputFileGenerator.get_action_rules"]], "input_file (matflow.inputfilegenerator attribute)": [[42, "matflow.InputFileGenerator.input_file"]], "inputs (matflow.inputfilegenerator attribute)": [[42, "matflow.InputFileGenerator.inputs"]], "rules (matflow.inputfilegenerator attribute)": [[42, "matflow.InputFileGenerator.rules"]], "script (matflow.inputfilegenerator attribute)": [[42, "matflow.InputFileGenerator.script"]], "script_pass_env_spec (matflow.inputfilegenerator attribute)": [[42, "matflow.InputFileGenerator.script_pass_env_spec"]], "to_dict() (matflow.inputfilegenerator method)": [[42, "matflow.InputFileGenerator.to_dict"]], "to_json_like() (matflow.inputfilegenerator method)": [[42, "matflow.InputFileGenerator.to_json_like"]], "write_source() (matflow.inputfilegenerator method)": [[42, "matflow.InputFileGenerator.write_source"]], "inputfilegeneratorsource (class in matflow)": [[43, "matflow.InputFileGeneratorSource"]], "app (matflow.inputfilegeneratorsource attribute)": [[43, "matflow.InputFileGeneratorSource.app"]], "contents (matflow.inputfilegeneratorsource property)": [[43, "matflow.InputFileGeneratorSource.contents"]], "extension (matflow.inputfilegeneratorsource property)": [[43, "matflow.InputFileGeneratorSource.extension"]], "from_json_like() (matflow.inputfilegeneratorsource class method)": [[43, "matflow.InputFileGeneratorSource.from_json_like"]], "generator (matflow.inputfilegeneratorsource attribute)": [[43, "matflow.InputFileGeneratorSource.generator"]], "make_persistent() (matflow.inputfilegeneratorsource method)": [[43, "matflow.InputFileGeneratorSource.make_persistent"]], "path (matflow.inputfilegeneratorsource property)": [[43, "matflow.InputFileGeneratorSource.path"]], "read_contents() (matflow.inputfilegeneratorsource method)": [[43, "matflow.InputFileGeneratorSource.read_contents"]], "store_contents (matflow.inputfilegeneratorsource property)": [[43, "matflow.InputFileGeneratorSource.store_contents"]], "to_dict() (matflow.inputfilegeneratorsource method)": [[43, "matflow.InputFileGeneratorSource.to_dict"]], "to_json_like() (matflow.inputfilegeneratorsource method)": [[43, "matflow.InputFileGeneratorSource.to_json_like"]], "workflow (matflow.inputfilegeneratorsource property)": [[43, "matflow.InputFileGeneratorSource.workflow"]], "inputsource (class in matflow)": [[44, "matflow.InputSource"]], "app (matflow.inputsource attribute)": [[44, "matflow.InputSource.app"]], "default() (matflow.inputsource class method)": [[44, "matflow.InputSource.default"]], "element_iters (matflow.inputsource attribute)": [[44, "matflow.InputSource.element_iters"]], "from_json_like() (matflow.inputsource class method)": [[44, "matflow.InputSource.from_json_like"]], "from_string() (matflow.inputsource class method)": [[44, "matflow.InputSource.from_string"]], "get_task() (matflow.inputsource method)": [[44, "matflow.InputSource.get_task"]], "import_() (matflow.inputsource class method)": [[44, "matflow.InputSource.import_"]], "import_ref (matflow.inputsource attribute)": [[44, "matflow.InputSource.import_ref"]], "is_in() (matflow.inputsource method)": [[44, "matflow.InputSource.is_in"]], "local() (matflow.inputsource class method)": [[44, "matflow.InputSource.local"]], "path (matflow.inputsource attribute)": [[44, "matflow.InputSource.path"]], "source_type (matflow.inputsource attribute)": [[44, "matflow.InputSource.source_type"]], "task() (matflow.inputsource class method)": [[44, "matflow.InputSource.task"]], "task_ref (matflow.inputsource attribute)": [[44, "matflow.InputSource.task_ref"]], "task_source_type (matflow.inputsource attribute)": [[44, "matflow.InputSource.task_source_type"]], "to_dict() (matflow.inputsource method)": [[44, "matflow.InputSource.to_dict"]], "to_json_like() (matflow.inputsource method)": [[44, "matflow.InputSource.to_json_like"]], "to_string() (matflow.inputsource method)": [[44, "matflow.InputSource.to_string"]], "where (matflow.inputsource attribute)": [[44, "matflow.InputSource.where"]], "default (matflow.inputsourcetype attribute)": [[45, "matflow.InputSourceType.DEFAULT"]], "import (matflow.inputsourcetype attribute)": [[45, "matflow.InputSourceType.IMPORT"]], "inputsourcetype (class in matflow)": [[45, "matflow.InputSourceType"]], "local (matflow.inputsourcetype attribute)": [[45, "matflow.InputSourceType.LOCAL"]], "task (matflow.inputsourcetype attribute)": [[45, "matflow.InputSourceType.TASK"]], "inputvalue (class in matflow)": [[46, "matflow.InputValue"]], "app (matflow.inputvalue attribute)": [[46, "matflow.InputValue.app"]], "from_json_like() (matflow.inputvalue class method)": [[46, "matflow.InputValue.from_json_like"]], "is_sub_value (matflow.inputvalue property)": [[46, "matflow.InputValue.is_sub_value"]], "label (matflow.inputvalue attribute)": [[46, "matflow.InputValue.label"]], "labelled_type (matflow.inputvalue property)": [[46, "matflow.InputValue.labelled_type"]], "make_persistent() (matflow.inputvalue method)": [[46, "matflow.InputValue.make_persistent"]], "normalised_inputs_path (matflow.inputvalue property)": [[46, "matflow.InputValue.normalised_inputs_path"]], "normalised_path (matflow.inputvalue property)": [[46, "matflow.InputValue.normalised_path"]], "parameter (matflow.inputvalue attribute)": [[46, "matflow.InputValue.parameter"]], "path (matflow.inputvalue attribute)": [[46, "matflow.InputValue.path"]], "to_dict() (matflow.inputvalue method)": [[46, "matflow.InputValue.to_dict"]], "to_json_like() (matflow.inputvalue method)": [[46, "matflow.InputValue.to_json_like"]], "value (matflow.inputvalue property)": [[46, "matflow.InputValue.value"]], "value_class_method (matflow.inputvalue attribute)": [[46, "matflow.InputValue.value_class_method"]], "workflow (matflow.inputvalue property)": [[46, "matflow.InputValue.workflow"]], "ear_id (matflow.jobscript property)": [[47, "matflow.Jobscript.EAR_ID"]], "ear_id_file_name (matflow.jobscript property)": [[47, "matflow.Jobscript.EAR_ID_file_name"]], "ear_id_file_path (matflow.jobscript property)": [[47, "matflow.Jobscript.EAR_ID_file_path"]], "jobscript (class in matflow)": [[47, "matflow.Jobscript"]], "all_ear_ids (matflow.jobscript property)": [[47, "matflow.Jobscript.all_EAR_IDs"]], "all_ears (matflow.jobscript property)": [[47, "matflow.Jobscript.all_EARs"]], "app (matflow.jobscript attribute)": [[47, "matflow.Jobscript.app"]], "cancel() (matflow.jobscript method)": [[47, "matflow.Jobscript.cancel"]], "compose_jobscript() (matflow.jobscript method)": [[47, "matflow.Jobscript.compose_jobscript"]], "dependencies (matflow.jobscript property)": [[47, "matflow.Jobscript.dependencies"]], "direct_stderr_file_name (matflow.jobscript property)": [[47, "matflow.Jobscript.direct_stderr_file_name"]], "direct_stderr_path (matflow.jobscript property)": [[47, "matflow.Jobscript.direct_stderr_path"]], "direct_stdout_file_name (matflow.jobscript property)": [[47, "matflow.Jobscript.direct_stdout_file_name"]], "direct_stdout_path (matflow.jobscript property)": [[47, "matflow.Jobscript.direct_stdout_path"]], "direct_win_pid_file_name (matflow.jobscript property)": [[47, "matflow.Jobscript.direct_win_pid_file_name"]], "direct_win_pid_file_path (matflow.jobscript property)": [[47, "matflow.Jobscript.direct_win_pid_file_path"]], "element_run_dir_file_name (matflow.jobscript property)": [[47, "matflow.Jobscript.element_run_dir_file_name"]], "element_run_dir_file_path (matflow.jobscript property)": [[47, "matflow.Jobscript.element_run_dir_file_path"]], "end_time (matflow.jobscript property)": [[47, "matflow.Jobscript.end_time"]], "from_json_like() (matflow.jobscript class method)": [[47, "matflow.Jobscript.from_json_like"]], "get_active_states() (matflow.jobscript method)": [[47, "matflow.Jobscript.get_active_states"]], "get_commands_file_name() (matflow.jobscript method)": [[47, "matflow.Jobscript.get_commands_file_name"]], "get_task_loop_idx_array() (matflow.jobscript method)": [[47, "matflow.Jobscript.get_task_loop_idx_array"]], "index (matflow.jobscript property)": [[47, "matflow.Jobscript.index"]], "is_array (matflow.jobscript property)": [[47, "matflow.Jobscript.is_array"]], "is_submitted (matflow.jobscript property)": [[47, "matflow.Jobscript.is_submitted"]], "jobscript_name (matflow.jobscript property)": [[47, "matflow.Jobscript.jobscript_name"]], "jobscript_path (matflow.jobscript property)": [[47, "matflow.Jobscript.jobscript_path"]], "make_artifact_dirs() (matflow.jobscript method)": [[47, "matflow.Jobscript.make_artifact_dirs"]], "num_actions (matflow.jobscript property)": [[47, "matflow.Jobscript.num_actions"]], "num_elements (matflow.jobscript property)": [[47, "matflow.Jobscript.num_elements"]], "os_name (matflow.jobscript property)": [[47, "matflow.Jobscript.os_name"]], "process_id (matflow.jobscript property)": [[47, "matflow.Jobscript.process_ID"]], "resources (matflow.jobscript property)": [[47, "matflow.Jobscript.resources"]], "scheduler (matflow.jobscript property)": [[47, "matflow.Jobscript.scheduler"]], "scheduler_job_id (matflow.jobscript property)": [[47, "matflow.Jobscript.scheduler_job_ID"]], "scheduler_js_ref (matflow.jobscript property)": [[47, "matflow.Jobscript.scheduler_js_ref"]], "scheduler_name (matflow.jobscript property)": [[47, "matflow.Jobscript.scheduler_name"]], "scheduler_ref (matflow.jobscript property)": [[47, "matflow.Jobscript.scheduler_ref"]], "shell (matflow.jobscript property)": [[47, "matflow.Jobscript.shell"]], "shell_name (matflow.jobscript property)": [[47, "matflow.Jobscript.shell_name"]], "start_time (matflow.jobscript property)": [[47, "matflow.Jobscript.start_time"]], "submission (matflow.jobscript property)": [[47, "matflow.Jobscript.submission"]], "submit() (matflow.jobscript method)": [[47, "matflow.Jobscript.submit"]], "submit_cmdline (matflow.jobscript property)": [[47, "matflow.Jobscript.submit_cmdline"]], "submit_hostname (matflow.jobscript property)": [[47, "matflow.Jobscript.submit_hostname"]], "submit_machine (matflow.jobscript property)": [[47, "matflow.Jobscript.submit_machine"]], "submit_time (matflow.jobscript property)": [[47, "matflow.Jobscript.submit_time"]], "task_actions (matflow.jobscript property)": [[47, "matflow.Jobscript.task_actions"]], "task_elements (matflow.jobscript property)": [[47, "matflow.Jobscript.task_elements"]], "task_insert_ids (matflow.jobscript property)": [[47, "matflow.Jobscript.task_insert_IDs"]], "task_loop_idx (matflow.jobscript property)": [[47, "matflow.Jobscript.task_loop_idx"]], "to_dict() (matflow.jobscript method)": [[47, "matflow.Jobscript.to_dict"]], "to_json_like() (matflow.jobscript method)": [[47, "matflow.Jobscript.to_json_like"]], "version_info (matflow.jobscript property)": [[47, "matflow.Jobscript.version_info"]], "workflow (matflow.jobscript property)": [[47, "matflow.Jobscript.workflow"]], "workflow_app_alias (matflow.jobscript property)": [[47, "matflow.Jobscript.workflow_app_alias"]], "write_ear_id_file() (matflow.jobscript method)": [[47, "matflow.Jobscript.write_EAR_ID_file"]], "write_element_run_dir_file() (matflow.jobscript method)": [[47, "matflow.Jobscript.write_element_run_dir_file"]], "write_jobscript() (matflow.jobscript method)": [[47, "matflow.Jobscript.write_jobscript"]], "loop (class in matflow)": [[48, "matflow.Loop"]], "app (matflow.loop attribute)": [[48, "matflow.Loop.app"]], "from_json_like() (matflow.loop class method)": [[48, "matflow.Loop.from_json_like"]], "name (matflow.loop property)": [[48, "matflow.Loop.name"]], "non_iterable_parameters (matflow.loop property)": [[48, "matflow.Loop.non_iterable_parameters"]], "num_iterations (matflow.loop property)": [[48, "matflow.Loop.num_iterations"]], "task_insert_ids (matflow.loop property)": [[48, "matflow.Loop.task_insert_IDs"]], "task_objects (matflow.loop property)": [[48, "matflow.Loop.task_objects"]], "termination (matflow.loop property)": [[48, "matflow.Loop.termination"]], "to_dict() (matflow.loop method)": [[48, "matflow.Loop.to_dict"]], "to_json_like() (matflow.loop method)": [[48, "matflow.Loop.to_json_like"]], "workflow_template (matflow.loop property)": [[48, "matflow.Loop.workflow_template"]], "numcores (class in matflow)": [[49, "matflow.NumCores"]], "app (matflow.numcores attribute)": [[49, "matflow.NumCores.app"]], "from_json_like() (matflow.numcores class method)": [[49, "matflow.NumCores.from_json_like"]], "start (matflow.numcores attribute)": [[49, "matflow.NumCores.start"]], "step (matflow.numcores attribute)": [[49, "matflow.NumCores.step"]], "stop (matflow.numcores attribute)": [[49, "matflow.NumCores.stop"]], "to_dict() (matflow.numcores method)": [[49, "matflow.NumCores.to_dict"]], "to_json_like() (matflow.numcores method)": [[49, "matflow.NumCores.to_json_like"]], "outputfileparser (class in matflow)": [[50, "matflow.OutputFileParser"]], "abortable (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.abortable"]], "app (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.app"]], "clean_up (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.clean_up"]], "compose_source() (matflow.outputfileparser method)": [[50, "matflow.OutputFileParser.compose_source"]], "environment (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.environment"]], "from_json_like() (matflow.outputfileparser class method)": [[50, "matflow.OutputFileParser.from_json_like"]], "get_action_rules() (matflow.outputfileparser method)": [[50, "matflow.OutputFileParser.get_action_rules"]], "inputs (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.inputs"]], "options (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.options"]], "output (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.output"]], "output_files (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.output_files"]], "outputs (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.outputs"]], "rules (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.rules"]], "save_files (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.save_files"]], "script (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.script"]], "script_pass_env_spec (matflow.outputfileparser attribute)": [[50, "matflow.OutputFileParser.script_pass_env_spec"]], "to_dict() (matflow.outputfileparser method)": [[50, "matflow.OutputFileParser.to_dict"]], "to_json_like() (matflow.outputfileparser method)": [[50, "matflow.OutputFileParser.to_json_like"]], "write_source() (matflow.outputfileparser method)": [[50, "matflow.OutputFileParser.write_source"]], "outputfileparsersource (class in matflow)": [[51, "matflow.OutputFileParserSource"]], "app (matflow.outputfileparsersource attribute)": [[51, "matflow.OutputFileParserSource.app"]], "contents (matflow.outputfileparsersource property)": [[51, "matflow.OutputFileParserSource.contents"]], "extension (matflow.outputfileparsersource property)": [[51, "matflow.OutputFileParserSource.extension"]], "from_json_like() (matflow.outputfileparsersource class method)": [[51, "matflow.OutputFileParserSource.from_json_like"]], "make_persistent() (matflow.outputfileparsersource method)": [[51, "matflow.OutputFileParserSource.make_persistent"]], "parser (matflow.outputfileparsersource attribute)": [[51, "matflow.OutputFileParserSource.parser"]], "path (matflow.outputfileparsersource property)": [[51, "matflow.OutputFileParserSource.path"]], "read_contents() (matflow.outputfileparsersource method)": [[51, "matflow.OutputFileParserSource.read_contents"]], "store_contents (matflow.outputfileparsersource property)": [[51, "matflow.OutputFileParserSource.store_contents"]], "to_dict() (matflow.outputfileparsersource method)": [[51, "matflow.OutputFileParserSource.to_dict"]], "to_json_like() (matflow.outputfileparsersource method)": [[51, "matflow.OutputFileParserSource.to_json_like"]], "workflow (matflow.outputfileparsersource property)": [[51, "matflow.OutputFileParserSource.workflow"]], "outputlabel (class in matflow)": [[52, "matflow.OutputLabel"]], "app (matflow.outputlabel attribute)": [[52, "matflow.OutputLabel.app"]], "from_json_like() (matflow.outputlabel class method)": [[52, "matflow.OutputLabel.from_json_like"]], "label (matflow.outputlabel attribute)": [[52, "matflow.OutputLabel.label"]], "parameter (matflow.outputlabel attribute)": [[52, "matflow.OutputLabel.parameter"]], "to_dict() (matflow.outputlabel method)": [[52, "matflow.OutputLabel.to_dict"]], "to_json_like() (matflow.outputlabel method)": [[52, "matflow.OutputLabel.to_json_like"]], "where (matflow.outputlabel attribute)": [[52, "matflow.OutputLabel.where"]], "parameter (class in matflow)": [[53, "matflow.Parameter"]], "app (matflow.parameter attribute)": [[53, "matflow.Parameter.app"]], "from_json_like() (matflow.parameter class method)": [[53, "matflow.Parameter.from_json_like"]], "is_file (matflow.parameter attribute)": [[53, "matflow.Parameter.is_file"]], "sub_parameters (matflow.parameter attribute)": [[53, "matflow.Parameter.sub_parameters"]], "to_dict() (matflow.parameter method)": [[53, "matflow.Parameter.to_dict"]], "to_json_like() (matflow.parameter method)": [[53, "matflow.Parameter.to_json_like"]], "typ (matflow.parameter attribute)": [[53, "matflow.Parameter.typ"]], "url_slug (matflow.parameter property)": [[53, "matflow.Parameter.url_slug"]], "parameterpath (class in matflow)": [[54, "matflow.ParameterPath"]], "app (matflow.parameterpath attribute)": [[54, "matflow.ParameterPath.app"]], "from_json_like() (matflow.parameterpath class method)": [[54, "matflow.ParameterPath.from_json_like"]], "path (matflow.parameterpath attribute)": [[54, "matflow.ParameterPath.path"]], "task (matflow.parameterpath attribute)": [[54, "matflow.ParameterPath.task"]], "to_dict() (matflow.parameterpath method)": [[54, "matflow.ParameterPath.to_dict"]], "to_json_like() (matflow.parameterpath method)": [[54, "matflow.ParameterPath.to_json_like"]], "explicit (matflow.parameterpropagationmode attribute)": [[55, "matflow.ParameterPropagationMode.EXPLICIT"]], "implicit (matflow.parameterpropagationmode attribute)": [[55, "matflow.ParameterPropagationMode.IMPLICIT"]], "never (matflow.parameterpropagationmode attribute)": [[55, "matflow.ParameterPropagationMode.NEVER"]], "parameterpropagationmode (class in matflow)": [[55, "matflow.ParameterPropagationMode"]], "parametervalue (class in matflow)": [[56, "matflow.ParameterValue"]], "dump_to_hdf5_group() (matflow.parametervalue method)": [[56, "matflow.ParameterValue.dump_to_HDF5_group"]], "prepare_json_dump() (matflow.parametervalue method)": [[56, "matflow.ParameterValue.prepare_JSON_dump"]], "save_from_hdf5_group() (matflow.parametervalue class method)": [[56, "matflow.ParameterValue.save_from_HDF5_group"]], "save_from_json() (matflow.parametervalue class method)": [[56, "matflow.ParameterValue.save_from_JSON"]], "to_dict() (matflow.parametervalue method)": [[56, "matflow.ParameterValue.to_dict"]], "parameters (class in matflow)": [[57, "matflow.Parameters"]], "default (matflow.parameters attribute)": [[57, "matflow.Parameters.default"]], "path (matflow.parameters attribute)": [[57, "matflow.Parameters.path"]], "raise_on_missing (matflow.parameters attribute)": [[57, "matflow.Parameters.raise_on_missing"]], "raise_on_unset (matflow.parameters attribute)": [[57, "matflow.Parameters.raise_on_unset"]], "return_element_parameters (matflow.parameters attribute)": [[57, "matflow.Parameters.return_element_parameters"]], "task (matflow.parameters attribute)": [[57, "matflow.Parameters.task"]], "parameterslist (class in matflow)": [[58, "matflow.ParametersList"]], "add_object() (matflow.parameterslist method)": [[58, "matflow.ParametersList.add_object"]], "add_objects() (matflow.parameterslist method)": [[58, "matflow.ParametersList.add_objects"]], "from_json_like() (matflow.parameterslist class method)": [[58, "matflow.ParametersList.from_json_like"]], "get() (matflow.parameterslist method)": [[58, "matflow.ParametersList.get"]], "get_all() (matflow.parameterslist method)": [[58, "matflow.ParametersList.get_all"]], "list_attrs() (matflow.parameterslist method)": [[58, "matflow.ParametersList.list_attrs"]], "to_dict() (matflow.parameterslist method)": [[58, "matflow.ParametersList.to_dict"]], "to_json_like() (matflow.parameterslist method)": [[58, "matflow.ParametersList.to_json_like"]], "resourcelist (class in matflow)": [[59, "matflow.ResourceList"]], "add_object() (matflow.resourcelist method)": [[59, "matflow.ResourceList.add_object"]], "element_set (matflow.resourcelist property)": [[59, "matflow.ResourceList.element_set"]], "from_json_like() (matflow.resourcelist class method)": [[59, "matflow.ResourceList.from_json_like"]], "get() (matflow.resourcelist method)": [[59, "matflow.ResourceList.get"]], "get_all() (matflow.resourcelist method)": [[59, "matflow.ResourceList.get_all"]], "get_scopes() (matflow.resourcelist method)": [[59, "matflow.ResourceList.get_scopes"]], "list_attrs() (matflow.resourcelist method)": [[59, "matflow.ResourceList.list_attrs"]], "merge_other() (matflow.resourcelist method)": [[59, "matflow.ResourceList.merge_other"]], "normalise() (matflow.resourcelist class method)": [[59, "matflow.ResourceList.normalise"]], "to_dict() (matflow.resourcelist method)": [[59, "matflow.ResourceList.to_dict"]], "to_json_like() (matflow.resourcelist method)": [[59, "matflow.ResourceList.to_json_like"]], "workflow_template (matflow.resourcelist property)": [[59, "matflow.ResourceList.workflow_template"]], "allowed_parameters (matflow.resourcespec attribute)": [[60, "matflow.ResourceSpec.ALLOWED_PARAMETERS"]], "resourcespec (class in matflow)": [[60, "matflow.ResourceSpec"]], "sge_parallel_env (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.SGE_parallel_env"]], "slurm_num_cpus_per_task (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.SLURM_num_cpus_per_task"]], "slurm_num_nodes (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.SLURM_num_nodes"]], "slurm_num_tasks (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.SLURM_num_tasks"]], "slurm_num_tasks_per_node (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.SLURM_num_tasks_per_node"]], "slurm_partition (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.SLURM_partition"]], "app (matflow.resourcespec attribute)": [[60, "matflow.ResourceSpec.app"]], "copy_non_persistent() (matflow.resourcespec method)": [[60, "matflow.ResourceSpec.copy_non_persistent"]], "element_set (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.element_set"]], "environments (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.environments"]], "from_json_like() (matflow.resourcespec class method)": [[60, "matflow.ResourceSpec.from_json_like"]], "make_persistent() (matflow.resourcespec method)": [[60, "matflow.ResourceSpec.make_persistent"]], "max_array_items (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.max_array_items"]], "normalised_path (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.normalised_path"]], "normalised_resources_path (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.normalised_resources_path"]], "num_cores (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.num_cores"]], "num_cores_per_node (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.num_cores_per_node"]], "num_nodes (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.num_nodes"]], "num_threads (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.num_threads"]], "os_name (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.os_name"]], "parallel_mode (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.parallel_mode"]], "scheduler (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.scheduler"]], "scheduler_args (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.scheduler_args"]], "scope (matflow.resourcespec attribute)": [[60, "matflow.ResourceSpec.scope"]], "scratch (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.scratch"]], "shell (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.shell"]], "shell_args (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.shell_args"]], "time_limit (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.time_limit"]], "to_dict() (matflow.resourcespec method)": [[60, "matflow.ResourceSpec.to_dict"]], "to_json_like() (matflow.resourcespec method)": [[60, "matflow.ResourceSpec.to_json_like"]], "use_job_array (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.use_job_array"]], "workflow (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.workflow"]], "workflow_template (matflow.resourcespec property)": [[60, "matflow.ResourceSpec.workflow_template"]], "rule (class in matflow)": [[61, "matflow.Rule"]], "app (matflow.rule attribute)": [[61, "matflow.Rule.app"]], "cast (matflow.rule attribute)": [[61, "matflow.Rule.cast"]], "check_exists (matflow.rule attribute)": [[61, "matflow.Rule.check_exists"]], "check_missing (matflow.rule attribute)": [[61, "matflow.Rule.check_missing"]], "condition (matflow.rule attribute)": [[61, "matflow.Rule.condition"]], "doc (matflow.rule attribute)": [[61, "matflow.Rule.doc"]], "from_json_like() (matflow.rule class method)": [[61, "matflow.Rule.from_json_like"]], "path (matflow.rule attribute)": [[61, "matflow.Rule.path"]], "test() (matflow.rule method)": [[61, "matflow.Rule.test"]], "to_dict() (matflow.rule method)": [[61, "matflow.Rule.to_dict"]], "to_json_like() (matflow.rule method)": [[61, "matflow.Rule.to_json_like"]], "rundirappfiles (class in matflow)": [[62, "matflow.RunDirAppFiles"]], "app (matflow.rundirappfiles attribute)": [[62, "matflow.RunDirAppFiles.app"]], "get_commands_file_name() (matflow.rundirappfiles class method)": [[62, "matflow.RunDirAppFiles.get_commands_file_name"]], "get_log_file_name() (matflow.rundirappfiles class method)": [[62, "matflow.RunDirAppFiles.get_log_file_name"]], "get_run_file_prefix() (matflow.rundirappfiles static method)": [[62, "matflow.RunDirAppFiles.get_run_file_prefix"]], "get_run_param_dump_file_prefix() (matflow.rundirappfiles class method)": [[62, "matflow.RunDirAppFiles.get_run_param_dump_file_prefix"]], "get_run_param_load_file_prefix() (matflow.rundirappfiles class method)": [[62, "matflow.RunDirAppFiles.get_run_param_load_file_prefix"]], "get_std_file_name() (matflow.rundirappfiles class method)": [[62, "matflow.RunDirAppFiles.get_std_file_name"]], "take_snapshot() (matflow.rundirappfiles class method)": [[62, "matflow.RunDirAppFiles.take_snapshot"]], "default_array_item_var (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.DEFAULT_ARRAY_ITEM_VAR"]], "default_array_switch (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.DEFAULT_ARRAY_SWITCH"]], "default_cwd_switch (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.DEFAULT_CWD_SWITCH"]], "default_del_cmd (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.DEFAULT_DEL_CMD"]], "default_js_cmd (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.DEFAULT_JS_CMD"]], "default_login_nodes_cmd (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.DEFAULT_LOGIN_NODES_CMD"]], "default_login_node_match (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.DEFAULT_LOGIN_NODE_MATCH"]], "default_shebang_args (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.DEFAULT_SHELL_ARGS"]], "default_show_cmd (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.DEFAULT_SHOW_CMD"]], "default_submit_cmd (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.DEFAULT_SUBMIT_CMD"]], "sgeposix (class in matflow)": [[63, "matflow.SGEPosix"]], "app (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.app"]], "cancel_jobs() (matflow.sgeposix method)": [[63, "matflow.SGEPosix.cancel_jobs"]], "format_options() (matflow.sgeposix method)": [[63, "matflow.SGEPosix.format_options"]], "format_switch() (matflow.sgeposix method)": [[63, "matflow.SGEPosix.format_switch"]], "get_job_state_info() (matflow.sgeposix method)": [[63, "matflow.SGEPosix.get_job_state_info"]], "get_job_statuses() (matflow.sgeposix method)": [[63, "matflow.SGEPosix.get_job_statuses"]], "get_login_nodes() (matflow.sgeposix method)": [[63, "matflow.SGEPosix.get_login_nodes"]], "get_submit_command() (matflow.sgeposix method)": [[63, "matflow.SGEPosix.get_submit_command"]], "get_version_info() (matflow.sgeposix method)": [[63, "matflow.SGEPosix.get_version_info"]], "is_jobscript_active() (matflow.sgeposix method)": [[63, "matflow.SGEPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.sgeposix static method)": [[63, "matflow.SGEPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.sgeposix method)": [[63, "matflow.SGEPosix.parse_submission_output"]], "process_resources() (matflow.sgeposix class method)": [[63, "matflow.SGEPosix.process_resources"]], "state_lookup (matflow.sgeposix attribute)": [[63, "matflow.SGEPosix.state_lookup"]], "unique_properties (matflow.sgeposix property)": [[63, "matflow.SGEPosix.unique_properties"]], "wait_for_jobscripts() (matflow.sgeposix method)": [[63, "matflow.SGEPosix.wait_for_jobscripts"]], "schemainput (class in matflow)": [[64, "matflow.SchemaInput"]], "all_labelled_types (matflow.schemainput property)": [[64, "matflow.SchemaInput.all_labelled_types"]], "app (matflow.schemainput attribute)": [[64, "matflow.SchemaInput.app"]], "default_value (matflow.schemainput property)": [[64, "matflow.SchemaInput.default_value"]], "from_json_like() (matflow.schemainput class method)": [[64, "matflow.SchemaInput.from_json_like"]], "input_or_output (matflow.schemainput property)": [[64, "matflow.SchemaInput.input_or_output"]], "labelled_info() (matflow.schemainput method)": [[64, "matflow.SchemaInput.labelled_info"]], "labels (matflow.schemainput attribute)": [[64, "matflow.SchemaInput.labels"]], "multiple (matflow.schemainput attribute)": [[64, "matflow.SchemaInput.multiple"]], "name (matflow.schemainput property)": [[64, "matflow.SchemaInput.name"]], "parameter (matflow.schemainput attribute)": [[64, "matflow.SchemaInput.parameter"]], "single_label (matflow.schemainput property)": [[64, "matflow.SchemaInput.single_label"]], "single_labelled_data (matflow.schemainput property)": [[64, "matflow.SchemaInput.single_labelled_data"]], "single_labelled_type (matflow.schemainput property)": [[64, "matflow.SchemaInput.single_labelled_type"]], "task_schema (matflow.schemainput property)": [[64, "matflow.SchemaInput.task_schema"]], "to_dict() (matflow.schemainput method)": [[64, "matflow.SchemaInput.to_dict"]], "to_json_like() (matflow.schemainput method)": [[64, "matflow.SchemaInput.to_json_like"]], "typ (matflow.schemainput property)": [[64, "matflow.SchemaInput.typ"]], "schemaoutput (class in matflow)": [[65, "matflow.SchemaOutput"]], "app (matflow.schemaoutput attribute)": [[65, "matflow.SchemaOutput.app"]], "from_json_like() (matflow.schemaoutput class method)": [[65, "matflow.SchemaOutput.from_json_like"]], "input_or_output (matflow.schemaoutput property)": [[65, "matflow.SchemaOutput.input_or_output"]], "name (matflow.schemaoutput property)": [[65, "matflow.SchemaOutput.name"]], "parameter (matflow.schemaoutput attribute)": [[65, "matflow.SchemaOutput.parameter"]], "propagation_mode (matflow.schemaoutput attribute)": [[65, "matflow.SchemaOutput.propagation_mode"]], "to_dict() (matflow.schemaoutput method)": [[65, "matflow.SchemaOutput.to_dict"]], "to_json_like() (matflow.schemaoutput method)": [[65, "matflow.SchemaOutput.to_json_like"]], "typ (matflow.schemaoutput property)": [[65, "matflow.SchemaOutput.typ"]], "schemaparameter (class in matflow)": [[66, "matflow.SchemaParameter"]], "app (matflow.schemaparameter attribute)": [[66, "matflow.SchemaParameter.app"]], "from_json_like() (matflow.schemaparameter class method)": [[66, "matflow.SchemaParameter.from_json_like"]], "name (matflow.schemaparameter property)": [[66, "matflow.SchemaParameter.name"]], "to_dict() (matflow.schemaparameter method)": [[66, "matflow.SchemaParameter.to_dict"]], "to_json_like() (matflow.schemaparameter method)": [[66, "matflow.SchemaParameter.to_json_like"]], "typ (matflow.schemaparameter property)": [[66, "matflow.SchemaParameter.typ"]], "default_array_item_var (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.DEFAULT_ARRAY_ITEM_VAR"]], "default_array_switch (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.DEFAULT_ARRAY_SWITCH"]], "default_del_cmd (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.DEFAULT_DEL_CMD"]], "default_js_cmd (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.DEFAULT_JS_CMD"]], "default_login_nodes_cmd (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.DEFAULT_LOGIN_NODES_CMD"]], "default_login_node_match (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.DEFAULT_LOGIN_NODE_MATCH"]], "default_shebang_args (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.DEFAULT_SHELL_ARGS"]], "default_shell_executable (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.DEFAULT_SHELL_EXECUTABLE"]], "default_show_cmd (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.DEFAULT_SHOW_CMD"]], "default_submit_cmd (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.DEFAULT_SUBMIT_CMD"]], "slurmposix (class in matflow)": [[67, "matflow.SlurmPosix"]], "app (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.app"]], "cancel_jobs() (matflow.slurmposix method)": [[67, "matflow.SlurmPosix.cancel_jobs"]], "format_options() (matflow.slurmposix method)": [[67, "matflow.SlurmPosix.format_options"]], "format_switch() (matflow.slurmposix method)": [[67, "matflow.SlurmPosix.format_switch"]], "get_job_state_info() (matflow.slurmposix method)": [[67, "matflow.SlurmPosix.get_job_state_info"]], "get_submit_command() (matflow.slurmposix method)": [[67, "matflow.SlurmPosix.get_submit_command"]], "get_version_info() (matflow.slurmposix method)": [[67, "matflow.SlurmPosix.get_version_info"]], "is_jobscript_active() (matflow.slurmposix method)": [[67, "matflow.SlurmPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.slurmposix static method)": [[67, "matflow.SlurmPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.slurmposix method)": [[67, "matflow.SlurmPosix.parse_submission_output"]], "process_resources() (matflow.slurmposix class method)": [[67, "matflow.SlurmPosix.process_resources"]], "state_lookup (matflow.slurmposix attribute)": [[67, "matflow.SlurmPosix.state_lookup"]], "unique_properties (matflow.slurmposix property)": [[67, "matflow.SlurmPosix.unique_properties"]], "wait_for_jobscripts() (matflow.slurmposix method)": [[67, "matflow.SlurmPosix.wait_for_jobscripts"]], "subparameter (class in matflow)": [[68, "matflow.SubParameter"]], "address (matflow.subparameter attribute)": [[68, "matflow.SubParameter.address"]], "parameter (matflow.subparameter attribute)": [[68, "matflow.SubParameter.parameter"]], "ears_by_elements (matflow.submission property)": [[69, "matflow.Submission.EARs_by_elements"]], "js_parallelism (matflow.submission property)": [[69, "matflow.Submission.JS_parallelism"]], "submission (class in matflow)": [[69, "matflow.Submission"]], "abort_ears_file_name (matflow.submission property)": [[69, "matflow.Submission.abort_EARs_file_name"]], "abort_ears_file_path (matflow.submission property)": [[69, "matflow.Submission.abort_EARs_file_path"]], "all_ear_ids (matflow.submission property)": [[69, "matflow.Submission.all_EAR_IDs"]], "all_ears (matflow.submission property)": [[69, "matflow.Submission.all_EARs"]], "app (matflow.submission attribute)": [[69, "matflow.Submission.app"]], "cancel() (matflow.submission method)": [[69, "matflow.Submission.cancel"]], "end_time (matflow.submission property)": [[69, "matflow.Submission.end_time"]], "environments (matflow.submission property)": [[69, "matflow.Submission.environments"]], "from_json_like() (matflow.submission class method)": [[69, "matflow.Submission.from_json_like"]], "get_active_jobscripts() (matflow.submission method)": [[69, "matflow.Submission.get_active_jobscripts"]], "get_end_time() (matflow.submission method)": [[69, "matflow.Submission.get_end_time"]], "get_start_time() (matflow.submission method)": [[69, "matflow.Submission.get_start_time"]], "get_unique_schedulers() (matflow.submission method)": [[69, "matflow.Submission.get_unique_schedulers"]], "get_unique_schedulers_of_jobscripts() (matflow.submission static method)": [[69, "matflow.Submission.get_unique_schedulers_of_jobscripts"]], "get_unique_shells() (matflow.submission method)": [[69, "matflow.Submission.get_unique_shells"]], "index (matflow.submission property)": [[69, "matflow.Submission.index"]], "jobscript_indices (matflow.submission property)": [[69, "matflow.Submission.jobscript_indices"]], "jobscripts (matflow.submission property)": [[69, "matflow.Submission.jobscripts"]], "needs_submit (matflow.submission property)": [[69, "matflow.Submission.needs_submit"]], "outstanding_jobscripts (matflow.submission property)": [[69, "matflow.Submission.outstanding_jobscripts"]], "path (matflow.submission property)": [[69, "matflow.Submission.path"]], "start_time (matflow.submission property)": [[69, "matflow.Submission.start_time"]], "status (matflow.submission property)": [[69, "matflow.Submission.status"]], "submission_parts (matflow.submission property)": [[69, "matflow.Submission.submission_parts"]], "submit() (matflow.submission method)": [[69, "matflow.Submission.submit"]], "submitted_jobscripts (matflow.submission property)": [[69, "matflow.Submission.submitted_jobscripts"]], "to_dict() (matflow.submission method)": [[69, "matflow.Submission.to_dict"]], "to_json_like() (matflow.submission method)": [[69, "matflow.Submission.to_json_like"]], "workflow (matflow.submission property)": [[69, "matflow.Submission.workflow"]], "task (class in matflow)": [[70, "matflow.Task"]], "add_group() (matflow.task method)": [[70, "matflow.Task.add_group"]], "all_schema_actions() (matflow.task method)": [[70, "matflow.Task.all_schema_actions"]], "all_schema_input_normalised_paths (matflow.task property)": [[70, "matflow.Task.all_schema_input_normalised_paths"]], "all_schema_input_types (matflow.task property)": [[70, "matflow.Task.all_schema_input_types"]], "all_schema_inputs (matflow.task property)": [[70, "matflow.Task.all_schema_inputs"]], "all_schema_output_types (matflow.task property)": [[70, "matflow.Task.all_schema_output_types"]], "all_schema_outputs (matflow.task property)": [[70, "matflow.Task.all_schema_outputs"]], "all_sourced_normalised_paths (matflow.task property)": [[70, "matflow.Task.all_sourced_normalised_paths"]], "app (matflow.task attribute)": [[70, "matflow.Task.app"]], "defined_input_types (matflow.task property)": [[70, "matflow.Task.defined_input_types"]], "dir_name (matflow.task property)": [[70, "matflow.Task.dir_name"]], "element_sets (matflow.task property)": [[70, "matflow.Task.element_sets"]], "from_json_like() (matflow.task class method)": [[70, "matflow.Task.from_json_like"]], "get_available_task_input_sources() (matflow.task method)": [[70, "matflow.Task.get_available_task_input_sources"]], "get_input_statuses() (matflow.task method)": [[70, "matflow.Task.get_input_statuses"]], "get_param_provided_element_sets() (matflow.task method)": [[70, "matflow.Task.get_param_provided_element_sets"]], "get_schema_action() (matflow.task method)": [[70, "matflow.Task.get_schema_action"]], "get_task_unique_names() (matflow.task static method)": [[70, "matflow.Task.get_task_unique_names"]], "index (matflow.task property)": [[70, "matflow.Task.index"]], "insert_id (matflow.task property)": [[70, "matflow.Task.insert_ID"]], "is_input_type_required() (matflow.task method)": [[70, "matflow.Task.is_input_type_required"]], "merge_envs (matflow.task attribute)": [[70, "matflow.Task.merge_envs"]], "name (matflow.task property)": [[70, "matflow.Task.name"]], "non_universal_input_types (matflow.task property)": [[70, "matflow.Task.non_universal_input_types"]], "num_all_schema_actions (matflow.task property)": [[70, "matflow.Task.num_all_schema_actions"]], "num_element_sets (matflow.task property)": [[70, "matflow.Task.num_element_sets"]], "objective (matflow.task property)": [[70, "matflow.Task.objective"]], "output_labels (matflow.task property)": [[70, "matflow.Task.output_labels"]], "prepare_element_resolution() (matflow.task method)": [[70, "matflow.Task.prepare_element_resolution"]], "provides_parameters() (matflow.task method)": [[70, "matflow.Task.provides_parameters"]], "schema (matflow.task property)": [[70, "matflow.Task.schema"]], "schemas (matflow.task property)": [[70, "matflow.Task.schemas"]], "set_sequence_parameters() (matflow.task method)": [[70, "matflow.Task.set_sequence_parameters"]], "to_dict() (matflow.task method)": [[70, "matflow.Task.to_dict"]], "to_json_like() (matflow.task method)": [[70, "matflow.Task.to_json_like"]], "to_persistent() (matflow.task method)": [[70, "matflow.Task.to_persistent"]], "undefined_input_types (matflow.task property)": [[70, "matflow.Task.undefined_input_types"]], "undefined_inputs (matflow.task property)": [[70, "matflow.Task.undefined_inputs"]], "universal_input_types (matflow.task property)": [[70, "matflow.Task.universal_input_types"]], "workflow_template (matflow.task attribute)": [[70, "matflow.Task.workflow_template"]], "taskinputparameters (class in matflow)": [[71, "matflow.TaskInputParameters"]], "task (matflow.taskinputparameters attribute)": [[71, "matflow.TaskInputParameters.task"]], "tasklist (class in matflow)": [[72, "matflow.TaskList"]], "add_object() (matflow.tasklist method)": [[72, "matflow.TaskList.add_object"]], "add_objects() (matflow.tasklist method)": [[72, "matflow.TaskList.add_objects"]], "from_json_like() (matflow.tasklist class method)": [[72, "matflow.TaskList.from_json_like"]], "get() (matflow.tasklist method)": [[72, "matflow.TaskList.get"]], "get_all() (matflow.tasklist method)": [[72, "matflow.TaskList.get_all"]], "list_attrs() (matflow.tasklist method)": [[72, "matflow.TaskList.list_attrs"]], "to_dict() (matflow.tasklist method)": [[72, "matflow.TaskList.to_dict"]], "to_json_like() (matflow.tasklist method)": [[72, "matflow.TaskList.to_json_like"]], "taskobjective (class in matflow)": [[73, "matflow.TaskObjective"]], "app (matflow.taskobjective attribute)": [[73, "matflow.TaskObjective.app"]], "from_json_like() (matflow.taskobjective class method)": [[73, "matflow.TaskObjective.from_json_like"]], "name (matflow.taskobjective attribute)": [[73, "matflow.TaskObjective.name"]], "to_dict() (matflow.taskobjective method)": [[73, "matflow.TaskObjective.to_dict"]], "to_json_like() (matflow.taskobjective method)": [[73, "matflow.TaskObjective.to_json_like"]], "taskoutputparameters (class in matflow)": [[74, "matflow.TaskOutputParameters"]], "task (matflow.taskoutputparameters attribute)": [[74, "matflow.TaskOutputParameters.task"]], "taskschema (class in matflow)": [[75, "matflow.TaskSchema"]], "actions (matflow.taskschema attribute)": [[75, "matflow.TaskSchema.actions"]], "app (matflow.taskschema attribute)": [[75, "matflow.TaskSchema.app"]], "basic_info (matflow.taskschema property)": [[75, "matflow.TaskSchema.basic_info"]], "environment_presets (matflow.taskschema attribute)": [[75, "matflow.TaskSchema.environment_presets"]], "from_json_like() (matflow.taskschema class method)": [[75, "matflow.TaskSchema.from_json_like"]], "get_by_key() (matflow.taskschema class method)": [[75, "matflow.TaskSchema.get_by_key"]], "get_info_html() (matflow.taskschema method)": [[75, "matflow.TaskSchema.get_info_html"]], "get_key() (matflow.taskschema method)": [[75, "matflow.TaskSchema.get_key"]], "get_parameter_dependence() (matflow.taskschema method)": [[75, "matflow.TaskSchema.get_parameter_dependence"]], "ignore_invalid_actions() (matflow.taskschema class method)": [[75, "matflow.TaskSchema.ignore_invalid_actions"]], "implementation (matflow.taskschema attribute)": [[75, "matflow.TaskSchema.implementation"]], "info (matflow.taskschema property)": [[75, "matflow.TaskSchema.info"]], "input_types (matflow.taskschema property)": [[75, "matflow.TaskSchema.input_types"]], "inputs (matflow.taskschema attribute)": [[75, "matflow.TaskSchema.inputs"]], "make_persistent() (matflow.taskschema method)": [[75, "matflow.TaskSchema.make_persistent"]], "method (matflow.taskschema attribute)": [[75, "matflow.TaskSchema.method"]], "multi_input_types (matflow.taskschema property)": [[75, "matflow.TaskSchema.multi_input_types"]], "name (matflow.taskschema property)": [[75, "matflow.TaskSchema.name"]], "objective (matflow.taskschema attribute)": [[75, "matflow.TaskSchema.objective"]], "output_types (matflow.taskschema property)": [[75, "matflow.TaskSchema.output_types"]], "outputs (matflow.taskschema attribute)": [[75, "matflow.TaskSchema.outputs"]], "parameter_class_modules (matflow.taskschema attribute)": [[75, "matflow.TaskSchema.parameter_class_modules"]], "provides_parameters (matflow.taskschema property)": [[75, "matflow.TaskSchema.provides_parameters"]], "task_template (matflow.taskschema property)": [[75, "matflow.TaskSchema.task_template"]], "to_dict() (matflow.taskschema method)": [[75, "matflow.TaskSchema.to_dict"]], "to_json_like() (matflow.taskschema method)": [[75, "matflow.TaskSchema.to_json_like"]], "version (matflow.taskschema attribute)": [[75, "matflow.TaskSchema.version"]], "web_doc (matflow.taskschema attribute)": [[75, "matflow.TaskSchema.web_doc"]], "taskschemaslist (class in matflow)": [[76, "matflow.TaskSchemasList"]], "add_object() (matflow.taskschemaslist method)": [[76, "matflow.TaskSchemasList.add_object"]], "add_objects() (matflow.taskschemaslist method)": [[76, "matflow.TaskSchemasList.add_objects"]], "from_json_like() (matflow.taskschemaslist class method)": [[76, "matflow.TaskSchemasList.from_json_like"]], "get() (matflow.taskschemaslist method)": [[76, "matflow.TaskSchemasList.get"]], "get_all() (matflow.taskschemaslist method)": [[76, "matflow.TaskSchemasList.get_all"]], "list_attrs() (matflow.taskschemaslist method)": [[76, "matflow.TaskSchemasList.list_attrs"]], "to_dict() (matflow.taskschemaslist method)": [[76, "matflow.TaskSchemasList.to_dict"]], "to_json_like() (matflow.taskschemaslist method)": [[76, "matflow.TaskSchemasList.to_json_like"]], "any (matflow.tasksourcetype attribute)": [[77, "matflow.TaskSourceType.ANY"]], "input (matflow.tasksourcetype attribute)": [[77, "matflow.TaskSourceType.INPUT"]], "output (matflow.tasksourcetype attribute)": [[77, "matflow.TaskSourceType.OUTPUT"]], "tasksourcetype (class in matflow)": [[77, "matflow.TaskSourceType"]], "tasktemplatelist (class in matflow)": [[78, "matflow.TaskTemplateList"]], "add_object() (matflow.tasktemplatelist method)": [[78, "matflow.TaskTemplateList.add_object"]], "add_objects() (matflow.tasktemplatelist method)": [[78, "matflow.TaskTemplateList.add_objects"]], "from_json_like() (matflow.tasktemplatelist class method)": [[78, "matflow.TaskTemplateList.from_json_like"]], "get() (matflow.tasktemplatelist method)": [[78, "matflow.TaskTemplateList.get"]], "get_all() (matflow.tasktemplatelist method)": [[78, "matflow.TaskTemplateList.get_all"]], "list_attrs() (matflow.tasktemplatelist method)": [[78, "matflow.TaskTemplateList.list_attrs"]], "to_dict() (matflow.tasktemplatelist method)": [[78, "matflow.TaskTemplateList.to_dict"]], "to_json_like() (matflow.tasktemplatelist method)": [[78, "matflow.TaskTemplateList.to_json_like"]], "valueperturbation (class in matflow)": [[79, "matflow.ValuePerturbation"]], "additive_factor (matflow.valueperturbation attribute)": [[79, "matflow.ValuePerturbation.additive_factor"]], "app (matflow.valueperturbation attribute)": [[79, "matflow.ValuePerturbation.app"]], "from_json_like() (matflow.valueperturbation class method)": [[79, "matflow.ValuePerturbation.from_json_like"]], "from_spec() (matflow.valueperturbation class method)": [[79, "matflow.ValuePerturbation.from_spec"]], "make_persistent() (matflow.valueperturbation method)": [[79, "matflow.ValuePerturbation.make_persistent"]], "multiplicative_factor (matflow.valueperturbation attribute)": [[79, "matflow.ValuePerturbation.multiplicative_factor"]], "name (matflow.valueperturbation attribute)": [[79, "matflow.ValuePerturbation.name"]], "path (matflow.valueperturbation attribute)": [[79, "matflow.ValuePerturbation.path"]], "to_dict() (matflow.valueperturbation method)": [[79, "matflow.ValuePerturbation.to_dict"]], "to_json_like() (matflow.valueperturbation method)": [[79, "matflow.ValuePerturbation.to_json_like"]], "value (matflow.valueperturbation property)": [[79, "matflow.ValuePerturbation.value"]], "workflow (matflow.valueperturbation property)": [[79, "matflow.ValuePerturbation.workflow"]], "valuesequence (class in matflow)": [[80, "matflow.ValueSequence"]], "app (matflow.valuesequence attribute)": [[80, "matflow.ValueSequence.app"]], "from_file() (matflow.valuesequence class method)": [[80, "matflow.ValueSequence.from_file"]], "from_geometric_space() (matflow.valuesequence class method)": [[80, "matflow.ValueSequence.from_geometric_space"]], "from_json_like() (matflow.valuesequence class method)": [[80, "matflow.ValueSequence.from_json_like"]], "from_linear_space() (matflow.valuesequence class method)": [[80, "matflow.ValueSequence.from_linear_space"]], "from_log_space() (matflow.valuesequence class method)": [[80, "matflow.ValueSequence.from_log_space"]], "from_random_uniform() (matflow.valuesequence class method)": [[80, "matflow.ValueSequence.from_random_uniform"]], "from_range() (matflow.valuesequence class method)": [[80, "matflow.ValueSequence.from_range"]], "from_rectangle() (matflow.valuesequence class method)": [[80, "matflow.ValueSequence.from_rectangle"]], "input_path (matflow.valuesequence property)": [[80, "matflow.ValueSequence.input_path"]], "input_type (matflow.valuesequence property)": [[80, "matflow.ValueSequence.input_type"]], "is_sub_value (matflow.valuesequence property)": [[80, "matflow.ValueSequence.is_sub_value"]], "label (matflow.valuesequence attribute)": [[80, "matflow.ValueSequence.label"]], "labelled_type (matflow.valuesequence property)": [[80, "matflow.ValueSequence.labelled_type"]], "make_persistent() (matflow.valuesequence method)": [[80, "matflow.ValueSequence.make_persistent"]], "nesting_order (matflow.valuesequence attribute)": [[80, "matflow.ValueSequence.nesting_order"]], "normalised_inputs_path (matflow.valuesequence property)": [[80, "matflow.ValueSequence.normalised_inputs_path"]], "normalised_path (matflow.valuesequence property)": [[80, "matflow.ValueSequence.normalised_path"]], "parameter (matflow.valuesequence property)": [[80, "matflow.ValueSequence.parameter"]], "path (matflow.valuesequence attribute)": [[80, "matflow.ValueSequence.path"]], "path_split (matflow.valuesequence property)": [[80, "matflow.ValueSequence.path_split"]], "path_type (matflow.valuesequence property)": [[80, "matflow.ValueSequence.path_type"]], "resource_scope (matflow.valuesequence property)": [[80, "matflow.ValueSequence.resource_scope"]], "to_dict() (matflow.valuesequence method)": [[80, "matflow.ValueSequence.to_dict"]], "to_json_like() (matflow.valuesequence method)": [[80, "matflow.ValueSequence.to_json_like"]], "value_class_method (matflow.valuesequence attribute)": [[80, "matflow.ValueSequence.value_class_method"]], "values (matflow.valuesequence property)": [[80, "matflow.ValueSequence.values"]], "workflow (matflow.valuesequence property)": [[80, "matflow.ValueSequence.workflow"]], "workflow (class in matflow)": [[81, "matflow.Workflow"]], "abort_run() (matflow.workflow method)": [[81, "matflow.Workflow.abort_run"]], "add_loop() (matflow.workflow method)": [[81, "matflow.Workflow.add_loop"]], "add_submission() (matflow.workflow method)": [[81, "matflow.Workflow.add_submission"]], "add_task() (matflow.workflow method)": [[81, "matflow.Workflow.add_task"]], "add_task_after() (matflow.workflow method)": [[81, "matflow.Workflow.add_task_after"]], "add_task_before() (matflow.workflow method)": [[81, "matflow.Workflow.add_task_before"]], "app (matflow.workflow attribute)": [[81, "matflow.Workflow.app"]], "artifacts_path (matflow.workflow property)": [[81, "matflow.Workflow.artifacts_path"]], "batch_update() (matflow.workflow method)": [[81, "matflow.Workflow.batch_update"]], "cancel() (matflow.workflow method)": [[81, "matflow.Workflow.cancel"]], "check_loop_termination() (matflow.workflow method)": [[81, "matflow.Workflow.check_loop_termination"]], "check_parameters_exist() (matflow.workflow method)": [[81, "matflow.Workflow.check_parameters_exist"]], "copy() (matflow.workflow method)": [[81, "matflow.Workflow.copy"]], "creation_info (matflow.workflow property)": [[81, "matflow.Workflow.creation_info"]], "delete() (matflow.workflow method)": [[81, "matflow.Workflow.delete"]], "elements() (matflow.workflow method)": [[81, "matflow.Workflow.elements"]], "execution_path (matflow.workflow property)": [[81, "matflow.Workflow.execution_path"]], "from_json_file() (matflow.workflow class method)": [[81, "matflow.Workflow.from_JSON_file"]], "from_json_string() (matflow.workflow class method)": [[81, "matflow.Workflow.from_JSON_string"]], "from_yaml_file() (matflow.workflow class method)": [[81, "matflow.Workflow.from_YAML_file"]], "from_yaml_string() (matflow.workflow class method)": [[81, "matflow.Workflow.from_YAML_string"]], "from_file() (matflow.workflow class method)": [[81, "matflow.Workflow.from_file"]], "from_template() (matflow.workflow class method)": [[81, "matflow.Workflow.from_template"]], "from_template_data() (matflow.workflow class method)": [[81, "matflow.Workflow.from_template_data"]], "get_ear_ids_of_tasks() (matflow.workflow method)": [[81, "matflow.Workflow.get_EAR_IDs_of_tasks"]], "get_ear_skipped() (matflow.workflow method)": [[81, "matflow.Workflow.get_EAR_skipped"]], "get_ears_from_ids() (matflow.workflow method)": [[81, "matflow.Workflow.get_EARs_from_IDs"]], "get_ears_of_tasks() (matflow.workflow method)": [[81, "matflow.Workflow.get_EARs_of_tasks"]], "get_all_ears() (matflow.workflow method)": [[81, "matflow.Workflow.get_all_EARs"]], "get_all_element_iterations() (matflow.workflow method)": [[81, "matflow.Workflow.get_all_element_iterations"]], "get_all_elements() (matflow.workflow method)": [[81, "matflow.Workflow.get_all_elements"]], "get_all_parameter_data() (matflow.workflow method)": [[81, "matflow.Workflow.get_all_parameter_data"]], "get_all_parameter_sources() (matflow.workflow method)": [[81, "matflow.Workflow.get_all_parameter_sources"]], "get_all_parameters() (matflow.workflow method)": [[81, "matflow.Workflow.get_all_parameters"]], "get_all_submission_run_ids() (matflow.workflow method)": [[81, "matflow.Workflow.get_all_submission_run_IDs"]], "get_element_ids_from_ear_ids() (matflow.workflow method)": [[81, "matflow.Workflow.get_element_IDs_from_EAR_IDs"]], "get_element_iteration_ids_from_ear_ids() (matflow.workflow method)": [[81, "matflow.Workflow.get_element_iteration_IDs_from_EAR_IDs"]], "get_element_iterations_from_ids() (matflow.workflow method)": [[81, "matflow.Workflow.get_element_iterations_from_IDs"]], "get_element_iterations_of_tasks() (matflow.workflow method)": [[81, "matflow.Workflow.get_element_iterations_of_tasks"]], "get_elements_from_ids() (matflow.workflow method)": [[81, "matflow.Workflow.get_elements_from_IDs"]], "get_iteration_final_run_ids() (matflow.workflow method)": [[81, "matflow.Workflow.get_iteration_final_run_IDs"]], "get_iteration_task_pathway() (matflow.workflow method)": [[81, "matflow.Workflow.get_iteration_task_pathway"]], "get_loop_map() (matflow.workflow method)": [[81, "matflow.Workflow.get_loop_map"]], "get_parameter() (matflow.workflow method)": [[81, "matflow.Workflow.get_parameter"]], "get_parameter_data() (matflow.workflow method)": [[81, "matflow.Workflow.get_parameter_data"]], "get_parameter_set_statuses() (matflow.workflow method)": [[81, "matflow.Workflow.get_parameter_set_statuses"]], "get_parameter_source() (matflow.workflow method)": [[81, "matflow.Workflow.get_parameter_source"]], "get_parameter_sources() (matflow.workflow method)": [[81, "matflow.Workflow.get_parameter_sources"]], "get_parameters() (matflow.workflow method)": [[81, "matflow.Workflow.get_parameters"]], "get_running_elements() (matflow.workflow method)": [[81, "matflow.Workflow.get_running_elements"]], "get_running_runs() (matflow.workflow method)": [[81, "matflow.Workflow.get_running_runs"]], "get_store_ears() (matflow.workflow method)": [[81, "matflow.Workflow.get_store_EARs"]], "get_store_element_iterations() (matflow.workflow method)": [[81, "matflow.Workflow.get_store_element_iterations"]], "get_store_elements() (matflow.workflow method)": [[81, "matflow.Workflow.get_store_elements"]], "get_store_tasks() (matflow.workflow method)": [[81, "matflow.Workflow.get_store_tasks"]], "get_task_ids_from_element_ids() (matflow.workflow method)": [[81, "matflow.Workflow.get_task_IDs_from_element_IDs"]], "get_task_elements() (matflow.workflow method)": [[81, "matflow.Workflow.get_task_elements"]], "get_task_unique_names() (matflow.workflow method)": [[81, "matflow.Workflow.get_task_unique_names"]], "id_ (matflow.workflow property)": [[81, "matflow.Workflow.id_"]], "input_files_path (matflow.workflow property)": [[81, "matflow.Workflow.input_files_path"]], "is_parameter_set() (matflow.workflow method)": [[81, "matflow.Workflow.is_parameter_set"]], "loops (matflow.workflow property)": [[81, "matflow.Workflow.loops"]], "name (matflow.workflow property)": [[81, "matflow.Workflow.name"]], "num_ears (matflow.workflow property)": [[81, "matflow.Workflow.num_EARs"]], "num_added_tasks (matflow.workflow property)": [[81, "matflow.Workflow.num_added_tasks"]], "num_element_iterations (matflow.workflow property)": [[81, "matflow.Workflow.num_element_iterations"]], "num_elements (matflow.workflow property)": [[81, "matflow.Workflow.num_elements"]], "num_loops (matflow.workflow property)": [[81, "matflow.Workflow.num_loops"]], "num_submissions (matflow.workflow property)": [[81, "matflow.Workflow.num_submissions"]], "num_tasks (matflow.workflow property)": [[81, "matflow.Workflow.num_tasks"]], "process_shell_parameter_output() (matflow.workflow method)": [[81, "matflow.Workflow.process_shell_parameter_output"]], "rechunk() (matflow.workflow method)": [[81, "matflow.Workflow.rechunk"]], "rechunk_parameter_base() (matflow.workflow method)": [[81, "matflow.Workflow.rechunk_parameter_base"]], "rechunk_runs() (matflow.workflow method)": [[81, "matflow.Workflow.rechunk_runs"]], "reload() (matflow.workflow method)": [[81, "matflow.Workflow.reload"]], "resolve_jobscripts() (matflow.workflow method)": [[81, "matflow.Workflow.resolve_jobscripts"]], "save_parameter() (matflow.workflow method)": [[81, "matflow.Workflow.save_parameter"]], "set_ear_end() (matflow.workflow method)": [[81, "matflow.Workflow.set_EAR_end"]], "set_ear_skip() (matflow.workflow method)": [[81, "matflow.Workflow.set_EAR_skip"]], "set_ear_start() (matflow.workflow method)": [[81, "matflow.Workflow.set_EAR_start"]], "set_ear_submission_index() (matflow.workflow method)": [[81, "matflow.Workflow.set_EAR_submission_index"]], "set_ears_initialised() (matflow.workflow method)": [[81, "matflow.Workflow.set_EARs_initialised"]], "set_parameter_value() (matflow.workflow method)": [[81, "matflow.Workflow.set_parameter_value"]], "show_all_ear_statuses() (matflow.workflow method)": [[81, "matflow.Workflow.show_all_EAR_statuses"]], "store_format (matflow.workflow property)": [[81, "matflow.Workflow.store_format"]], "submissions (matflow.workflow property)": [[81, "matflow.Workflow.submissions"]], "submissions_path (matflow.workflow property)": [[81, "matflow.Workflow.submissions_path"]], "submit() (matflow.workflow method)": [[81, "matflow.Workflow.submit"]], "task_artifacts_path (matflow.workflow property)": [[81, "matflow.Workflow.task_artifacts_path"]], "tasks (matflow.workflow property)": [[81, "matflow.Workflow.tasks"]], "template (matflow.workflow property)": [[81, "matflow.Workflow.template"]], "template_components (matflow.workflow property)": [[81, "matflow.Workflow.template_components"]], "temporary_rename() (matflow.workflow class method)": [[81, "matflow.Workflow.temporary_rename"]], "ts_fmt (matflow.workflow property)": [[81, "matflow.Workflow.ts_fmt"]], "ts_name_fmt (matflow.workflow property)": [[81, "matflow.Workflow.ts_name_fmt"]], "unzip() (matflow.workflow method)": [[81, "matflow.Workflow.unzip"]], "url (matflow.workflow property)": [[81, "matflow.Workflow.url"]], "wait() (matflow.workflow method)": [[81, "matflow.Workflow.wait"]], "write_commands() (matflow.workflow method)": [[81, "matflow.Workflow.write_commands"]], "zip() (matflow.workflow method)": [[81, "matflow.Workflow.zip"]], "workflowblueprint (class in matflow)": [[82, "matflow.WorkflowBlueprint"]], "workflow_template (matflow.workflowblueprint attribute)": [[82, "matflow.WorkflowBlueprint.workflow_template"]], "workflowloop (class in matflow)": [[83, "matflow.WorkflowLoop"]], "add_iteration() (matflow.workflowloop method)": [[83, "matflow.WorkflowLoop.add_iteration"]], "app (matflow.workflowloop attribute)": [[83, "matflow.WorkflowLoop.app"]], "downstream_tasks (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.downstream_tasks"]], "get_child_loops() (matflow.workflowloop method)": [[83, "matflow.WorkflowLoop.get_child_loops"]], "get_parent_loops() (matflow.workflowloop method)": [[83, "matflow.WorkflowLoop.get_parent_loops"]], "index (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.index"]], "iterable_parameters (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.iterable_parameters"]], "name (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.name"]], "new_empty_loop() (matflow.workflowloop class method)": [[83, "matflow.WorkflowLoop.new_empty_loop"]], "num_added_iterations (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.num_added_iterations"]], "num_iterations (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.num_iterations"]], "parents (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.parents"]], "task_indices (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.task_indices"]], "task_insert_ids (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.task_insert_IDs"]], "task_objects (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.task_objects"]], "template (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.template"]], "test_termination() (matflow.workflowloop method)": [[83, "matflow.WorkflowLoop.test_termination"]], "upstream_tasks (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.upstream_tasks"]], "workflow (matflow.workflowloop property)": [[83, "matflow.WorkflowLoop.workflow"]], "workflowlooplist (class in matflow)": [[84, "matflow.WorkflowLoopList"]], "add_object() (matflow.workflowlooplist method)": [[84, "matflow.WorkflowLoopList.add_object"]], "add_objects() (matflow.workflowlooplist method)": [[84, "matflow.WorkflowLoopList.add_objects"]], "app (matflow.workflowlooplist attribute)": [[84, "matflow.WorkflowLoopList.app"]], "from_json_like() (matflow.workflowlooplist class method)": [[84, "matflow.WorkflowLoopList.from_json_like"]], "get() (matflow.workflowlooplist method)": [[84, "matflow.WorkflowLoopList.get"]], "get_all() (matflow.workflowlooplist method)": [[84, "matflow.WorkflowLoopList.get_all"]], "list_attrs() (matflow.workflowlooplist method)": [[84, "matflow.WorkflowLoopList.list_attrs"]], "to_dict() (matflow.workflowlooplist method)": [[84, "matflow.WorkflowLoopList.to_dict"]], "to_json_like() (matflow.workflowlooplist method)": [[84, "matflow.WorkflowLoopList.to_json_like"]], "workflowtask (class in matflow)": [[85, "matflow.WorkflowTask"]], "add_elements() (matflow.workflowtask method)": [[85, "matflow.WorkflowTask.add_elements"]], "app (matflow.workflowtask attribute)": [[85, "matflow.WorkflowTask.app"]], "dir_name (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.dir_name"]], "downstream_tasks (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.downstream_tasks"]], "element_ids (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.element_IDs"]], "elements (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.elements"]], "ensure_input_sources() (matflow.workflowtask method)": [[85, "matflow.WorkflowTask.ensure_input_sources"]], "generate_new_elements() (matflow.workflowtask method)": [[85, "matflow.WorkflowTask.generate_new_elements"]], "get() (matflow.workflowtask method)": [[85, "matflow.WorkflowTask.get"]], "get_all_element_iterations() (matflow.workflowtask method)": [[85, "matflow.WorkflowTask.get_all_element_iterations"]], "get_dependent_elements() (matflow.workflowtask method)": [[85, "matflow.WorkflowTask.get_dependent_elements"]], "get_dependent_tasks() (matflow.workflowtask method)": [[85, "matflow.WorkflowTask.get_dependent_tasks"]], "get_dir_name() (matflow.workflowtask method)": [[85, "matflow.WorkflowTask.get_dir_name"]], "get_element_dependencies() (matflow.workflowtask method)": [[85, "matflow.WorkflowTask.get_element_dependencies"]], "get_task_dependencies() (matflow.workflowtask method)": [[85, "matflow.WorkflowTask.get_task_dependencies"]], "index (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.index"]], "initialise_ears() (matflow.workflowtask method)": [[85, "matflow.WorkflowTask.initialise_EARs"]], "inputs (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.inputs"]], "insert_id (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.insert_ID"]], "name (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.name"]], "new_empty_task() (matflow.workflowtask class method)": [[85, "matflow.WorkflowTask.new_empty_task"]], "num_actions (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.num_actions"]], "num_element_sets (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.num_element_sets"]], "num_elements (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.num_elements"]], "outputs (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.outputs"]], "resolve_element_data_indices() (matflow.workflowtask static method)": [[85, "matflow.WorkflowTask.resolve_element_data_indices"]], "template (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.template"]], "unique_name (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.unique_name"]], "upstream_tasks (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.upstream_tasks"]], "workflow (matflow.workflowtask property)": [[85, "matflow.WorkflowTask.workflow"]], "workflowtasklist (class in matflow)": [[86, "matflow.WorkflowTaskList"]], "add_object() (matflow.workflowtasklist method)": [[86, "matflow.WorkflowTaskList.add_object"]], "add_objects() (matflow.workflowtasklist method)": [[86, "matflow.WorkflowTaskList.add_objects"]], "app (matflow.workflowtasklist attribute)": [[86, "matflow.WorkflowTaskList.app"]], "from_json_like() (matflow.workflowtasklist class method)": [[86, "matflow.WorkflowTaskList.from_json_like"]], "get() (matflow.workflowtasklist method)": [[86, "matflow.WorkflowTaskList.get"]], "get_all() (matflow.workflowtasklist method)": [[86, "matflow.WorkflowTaskList.get_all"]], "list_attrs() (matflow.workflowtasklist method)": [[86, "matflow.WorkflowTaskList.list_attrs"]], "to_dict() (matflow.workflowtasklist method)": [[86, "matflow.WorkflowTaskList.to_dict"]], "to_json_like() (matflow.workflowtasklist method)": [[86, "matflow.WorkflowTaskList.to_json_like"]], "workflowtemplate (class in matflow)": [[87, "matflow.WorkflowTemplate"]], "app (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.app"]], "doc (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.doc"]], "env_presets (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.env_presets"]], "environments (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.environments"]], "from_json_file() (matflow.workflowtemplate class method)": [[87, "matflow.WorkflowTemplate.from_JSON_file"]], "from_json_string() (matflow.workflowtemplate class method)": [[87, "matflow.WorkflowTemplate.from_JSON_string"]], "from_yaml_file() (matflow.workflowtemplate class method)": [[87, "matflow.WorkflowTemplate.from_YAML_file"]], "from_yaml_string() (matflow.workflowtemplate class method)": [[87, "matflow.WorkflowTemplate.from_YAML_string"]], "from_file() (matflow.workflowtemplate class method)": [[87, "matflow.WorkflowTemplate.from_file"]], "from_json_like() (matflow.workflowtemplate class method)": [[87, "matflow.WorkflowTemplate.from_json_like"]], "loops (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.loops"]], "merge_envs (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.merge_envs"]], "merge_resources (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.merge_resources"]], "name (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.name"]], "resources (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.resources"]], "source_file (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.source_file"]], "store_kwargs (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.store_kwargs"]], "tasks (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.tasks"]], "to_dict() (matflow.workflowtemplate method)": [[87, "matflow.WorkflowTemplate.to_dict"]], "to_json_like() (matflow.workflowtemplate method)": [[87, "matflow.WorkflowTemplate.to_json_like"]], "workflow (matflow.workflowtemplate attribute)": [[87, "matflow.WorkflowTemplate.workflow"]], "app (in module matflow)": [[88, "matflow.app"]], "cancel() (in module matflow)": [[89, "matflow.cancel"]], "matflow.cli": [[90, "module-matflow.cli"]], "get_os_info() (in module matflow)": [[91, "matflow.get_OS_info"]], "get_known_submissions() (in module matflow)": [[92, "matflow.get_known_submissions"]], "get_shell_info() (in module matflow)": [[93, "matflow.get_shell_info"]], "make_and_submit_demo_workflow() (in module matflow)": [[94, "matflow.make_and_submit_demo_workflow"]], "make_and_submit_workflow() (in module matflow)": [[95, "matflow.make_and_submit_workflow"]], "make_demo_workflow() (in module matflow)": [[96, "matflow.make_demo_workflow"]], "make_workflow() (in module matflow)": [[97, "matflow.make_workflow"]], "matflow.param_classes": [[98, "module-matflow.param_classes"]], "matflow.param_classes.load": [[99, "module-matflow.param_classes.load"]], "loadcase (class in matflow.param_classes.load)": [[100, "matflow.param_classes.load.LoadCase"]], "biaxial() (matflow.param_classes.load.loadcase class method)": [[100, "matflow.param_classes.load.LoadCase.biaxial"]], "dump_to_hdf5_group() (matflow.param_classes.load.loadcase method)": [[100, "matflow.param_classes.load.LoadCase.dump_to_HDF5_group"]], "example_uniaxial() (matflow.param_classes.load.loadcase class method)": [[100, "matflow.param_classes.load.LoadCase.example_uniaxial"]], "multistep() (matflow.param_classes.load.loadcase class method)": [[100, "matflow.param_classes.load.LoadCase.multistep"]], "num_steps (matflow.param_classes.load.loadcase property)": [[100, "matflow.param_classes.load.LoadCase.num_steps"]], "planar_2d() (matflow.param_classes.load.loadcase class method)": [[100, "matflow.param_classes.load.LoadCase.planar_2D"]], "plane_strain() (matflow.param_classes.load.loadcase class method)": [[100, "matflow.param_classes.load.LoadCase.plane_strain"]], "prepare_json_dump() (matflow.param_classes.load.loadcase method)": [[100, "matflow.param_classes.load.LoadCase.prepare_JSON_dump"]], "random_2d() (matflow.param_classes.load.loadcase class method)": [[100, "matflow.param_classes.load.LoadCase.random_2D"]], "random_3d() (matflow.param_classes.load.loadcase class method)": [[100, "matflow.param_classes.load.LoadCase.random_3D"]], "save_from_hdf5_group() (matflow.param_classes.load.loadcase class method)": [[100, "matflow.param_classes.load.LoadCase.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.load.loadcase class method)": [[100, "matflow.param_classes.load.LoadCase.save_from_JSON"]], "steps (matflow.param_classes.load.loadcase attribute)": [[100, "matflow.param_classes.load.LoadCase.steps"]], "to_dict() (matflow.param_classes.load.loadcase method)": [[100, "matflow.param_classes.load.LoadCase.to_dict"]], "type (matflow.param_classes.load.loadcase property)": [[100, "matflow.param_classes.load.LoadCase.type"]], "types (matflow.param_classes.load.loadcase property)": [[100, "matflow.param_classes.load.LoadCase.types"]], "uniaxial() (matflow.param_classes.load.loadcase class method)": [[100, "matflow.param_classes.load.LoadCase.uniaxial"]], "uniaxial_cyclic() (matflow.param_classes.load.loadcase class method)": [[100, "matflow.param_classes.load.LoadCase.uniaxial_cyclic"]], "loadstep (class in matflow.param_classes.load)": [[101, "matflow.param_classes.load.LoadStep"]], "biaxial() (matflow.param_classes.load.loadstep class method)": [[101, "matflow.param_classes.load.LoadStep.biaxial"]], "dump_to_hdf5_group() (matflow.param_classes.load.loadstep method)": [[101, "matflow.param_classes.load.LoadStep.dump_to_HDF5_group"]], "example_uniaxial() (matflow.param_classes.load.loadstep class method)": [[101, "matflow.param_classes.load.LoadStep.example_uniaxial"]], "method_args (matflow.param_classes.load.loadstep property)": [[101, "matflow.param_classes.load.LoadStep.method_args"]], "method_name (matflow.param_classes.load.loadstep property)": [[101, "matflow.param_classes.load.LoadStep.method_name"]], "planar_2d() (matflow.param_classes.load.loadstep class method)": [[101, "matflow.param_classes.load.LoadStep.planar_2D"]], "plane_strain() (matflow.param_classes.load.loadstep class method)": [[101, "matflow.param_classes.load.LoadStep.plane_strain"]], "prepare_json_dump() (matflow.param_classes.load.loadstep method)": [[101, "matflow.param_classes.load.LoadStep.prepare_JSON_dump"]], "random_2d() (matflow.param_classes.load.loadstep class method)": [[101, "matflow.param_classes.load.LoadStep.random_2D"]], "random_3d() (matflow.param_classes.load.loadstep class method)": [[101, "matflow.param_classes.load.LoadStep.random_3D"]], "save_from_hdf5_group() (matflow.param_classes.load.loadstep class method)": [[101, "matflow.param_classes.load.LoadStep.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.load.loadstep class method)": [[101, "matflow.param_classes.load.LoadStep.save_from_JSON"]], "strain_like_tensor (matflow.param_classes.load.loadstep property)": [[101, "matflow.param_classes.load.LoadStep.strain_like_tensor"]], "to_dict() (matflow.param_classes.load.loadstep method)": [[101, "matflow.param_classes.load.LoadStep.to_dict"]], "type (matflow.param_classes.load.loadstep property)": [[101, "matflow.param_classes.load.LoadStep.type"]], "uniaxial() (matflow.param_classes.load.loadstep class method)": [[101, "matflow.param_classes.load.LoadStep.uniaxial"]], "uniaxial_cyclic() (matflow.param_classes.load.loadstep class method)": [[101, "matflow.param_classes.load.LoadStep.uniaxial_cyclic"]], "def_grad_rate (matflow.param_classes.load.strainratemode attribute)": [[102, "matflow.param_classes.load.StrainRateMode.DEF_GRAD_RATE"]], "strainratemode (class in matflow.param_classes.load)": [[102, "matflow.param_classes.load.StrainRateMode"]], "vel_grad (matflow.param_classes.load.strainratemode attribute)": [[102, "matflow.param_classes.load.StrainRateMode.VEL_GRAD"]], "vel_grad_approx (matflow.param_classes.load.strainratemode attribute)": [[102, "matflow.param_classes.load.StrainRateMode.VEL_GRAD_APPROX"]], "matflow.param_classes.orientations": [[103, "module-matflow.param_classes.orientations"]], "bunge (matflow.param_classes.orientations.eulerdefinition attribute)": [[104, "matflow.param_classes.orientations.EulerDefinition.BUNGE"]], "eulerdefinition (class in matflow.param_classes.orientations)": [[104, "matflow.param_classes.orientations.EulerDefinition"]], "a (matflow.param_classes.orientations.latticedirection attribute)": [[105, "matflow.param_classes.orientations.LatticeDirection.A"]], "a_star (matflow.param_classes.orientations.latticedirection attribute)": [[105, "matflow.param_classes.orientations.LatticeDirection.A_STAR"]], "b (matflow.param_classes.orientations.latticedirection attribute)": [[105, "matflow.param_classes.orientations.LatticeDirection.B"]], "b_star (matflow.param_classes.orientations.latticedirection attribute)": [[105, "matflow.param_classes.orientations.LatticeDirection.B_STAR"]], "c (matflow.param_classes.orientations.latticedirection attribute)": [[105, "matflow.param_classes.orientations.LatticeDirection.C"]], "c_star (matflow.param_classes.orientations.latticedirection attribute)": [[105, "matflow.param_classes.orientations.LatticeDirection.C_STAR"]], "latticedirection (class in matflow.param_classes.orientations)": [[105, "matflow.param_classes.orientations.LatticeDirection"]], "orientationrepresentation (class in matflow.param_classes.orientations)": [[106, "matflow.param_classes.orientations.OrientationRepresentation"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.orientationrepresentation method)": [[106, "matflow.param_classes.orientations.OrientationRepresentation.dump_to_HDF5_group"]], "euler_definition (matflow.param_classes.orientations.orientationrepresentation attribute)": [[106, "matflow.param_classes.orientations.OrientationRepresentation.euler_definition"]], "euler_is_degrees (matflow.param_classes.orientations.orientationrepresentation attribute)": [[106, "matflow.param_classes.orientations.OrientationRepresentation.euler_is_degrees"]], "prepare_json_dump() (matflow.param_classes.orientations.orientationrepresentation method)": [[106, "matflow.param_classes.orientations.OrientationRepresentation.prepare_JSON_dump"]], "quat_order (matflow.param_classes.orientations.orientationrepresentation attribute)": [[106, "matflow.param_classes.orientations.OrientationRepresentation.quat_order"]], "save_from_hdf5_group() (matflow.param_classes.orientations.orientationrepresentation class method)": [[106, "matflow.param_classes.orientations.OrientationRepresentation.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.orientations.orientationrepresentation class method)": [[106, "matflow.param_classes.orientations.OrientationRepresentation.save_from_JSON"]], "to_dict() (matflow.param_classes.orientations.orientationrepresentation method)": [[106, "matflow.param_classes.orientations.OrientationRepresentation.to_dict"]], "type (matflow.param_classes.orientations.orientationrepresentation attribute)": [[106, "matflow.param_classes.orientations.OrientationRepresentation.type"]], "euler (matflow.param_classes.orientations.orientationrepresentationtype attribute)": [[107, "matflow.param_classes.orientations.OrientationRepresentationType.EULER"]], "orientationrepresentationtype (class in matflow.param_classes.orientations)": [[107, "matflow.param_classes.orientations.OrientationRepresentationType"]], "quaternion (matflow.param_classes.orientations.orientationrepresentationtype attribute)": [[107, "matflow.param_classes.orientations.OrientationRepresentationType.QUATERNION"]], "orientations (class in matflow.param_classes.orientations)": [[108, "matflow.param_classes.orientations.Orientations"]], "data (matflow.param_classes.orientations.orientations attribute)": [[108, "matflow.param_classes.orientations.Orientations.data"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.orientations method)": [[108, "matflow.param_classes.orientations.Orientations.dump_to_HDF5_group"]], "from_json_like() (matflow.param_classes.orientations.orientations class method)": [[108, "matflow.param_classes.orientations.Orientations.from_JSON_like"]], "from_file() (matflow.param_classes.orientations.orientations class method)": [[108, "matflow.param_classes.orientations.Orientations.from_file"]], "from_random() (matflow.param_classes.orientations.orientations class method)": [[108, "matflow.param_classes.orientations.Orientations.from_random"]], "prepare_json_dump() (matflow.param_classes.orientations.orientations method)": [[108, "matflow.param_classes.orientations.Orientations.prepare_JSON_dump"]], "quat_sample_random() (matflow.param_classes.orientations.orientations static method)": [[108, "matflow.param_classes.orientations.Orientations.quat_sample_random"]], "representation (matflow.param_classes.orientations.orientations attribute)": [[108, "matflow.param_classes.orientations.Orientations.representation"]], "save_from_hdf5_group() (matflow.param_classes.orientations.orientations class method)": [[108, "matflow.param_classes.orientations.Orientations.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.orientations.orientations class method)": [[108, "matflow.param_classes.orientations.Orientations.save_from_JSON"]], "to_dict() (matflow.param_classes.orientations.orientations method)": [[108, "matflow.param_classes.orientations.Orientations.to_dict"]], "unit_cell_alignment (matflow.param_classes.orientations.orientations attribute)": [[108, "matflow.param_classes.orientations.Orientations.unit_cell_alignment"]], "quatorder (class in matflow.param_classes.orientations)": [[109, "matflow.param_classes.orientations.QuatOrder"]], "scalar_vector (matflow.param_classes.orientations.quatorder attribute)": [[109, "matflow.param_classes.orientations.QuatOrder.SCALAR_VECTOR"]], "vector_scalar (matflow.param_classes.orientations.quatorder attribute)": [[109, "matflow.param_classes.orientations.QuatOrder.VECTOR_SCALAR"]], "unitcellalignment (class in matflow.param_classes.orientations)": [[110, "matflow.param_classes.orientations.UnitCellAlignment"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.unitcellalignment method)": [[110, "matflow.param_classes.orientations.UnitCellAlignment.dump_to_HDF5_group"]], "from_hex_convention_damask() (matflow.param_classes.orientations.unitcellalignment class method)": [[110, "matflow.param_classes.orientations.UnitCellAlignment.from_hex_convention_DAMASK"]], "from_hex_convention_mtex() (matflow.param_classes.orientations.unitcellalignment class method)": [[110, "matflow.param_classes.orientations.UnitCellAlignment.from_hex_convention_MTEX"]], "prepare_json_dump() (matflow.param_classes.orientations.unitcellalignment method)": [[110, "matflow.param_classes.orientations.UnitCellAlignment.prepare_JSON_dump"]], "save_from_hdf5_group() (matflow.param_classes.orientations.unitcellalignment class method)": [[110, "matflow.param_classes.orientations.UnitCellAlignment.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.orientations.unitcellalignment class method)": [[110, "matflow.param_classes.orientations.UnitCellAlignment.save_from_JSON"]], "to_dict() (matflow.param_classes.orientations.unitcellalignment method)": [[110, "matflow.param_classes.orientations.UnitCellAlignment.to_dict"]], "x (matflow.param_classes.orientations.unitcellalignment attribute)": [[110, "matflow.param_classes.orientations.UnitCellAlignment.x"]], "y (matflow.param_classes.orientations.unitcellalignment attribute)": [[110, "matflow.param_classes.orientations.UnitCellAlignment.y"]], "z (matflow.param_classes.orientations.unitcellalignment attribute)": [[110, "matflow.param_classes.orientations.UnitCellAlignment.z"]], "matflow.param_classes.seeds": [[111, "module-matflow.param_classes.seeds"]], "microstructureseeds (class in matflow.param_classes.seeds)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds"]], "box_size (matflow.param_classes.seeds.microstructureseeds attribute)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.box_size"]], "dump_to_hdf5_group() (matflow.param_classes.seeds.microstructureseeds method)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.dump_to_HDF5_group"]], "from_json_like() (matflow.param_classes.seeds.microstructureseeds class method)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.from_JSON_like"]], "from_file() (matflow.param_classes.seeds.microstructureseeds class method)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.from_file"]], "from_random() (matflow.param_classes.seeds.microstructureseeds class method)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.from_random"]], "num_seeds (matflow.param_classes.seeds.microstructureseeds property)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.num_seeds"]], "orientations (matflow.param_classes.seeds.microstructureseeds attribute)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.orientations"]], "phase_label (matflow.param_classes.seeds.microstructureseeds attribute)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.phase_label"]], "position (matflow.param_classes.seeds.microstructureseeds attribute)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.position"]], "prepare_json_dump() (matflow.param_classes.seeds.microstructureseeds method)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.prepare_JSON_dump"]], "random_seed (matflow.param_classes.seeds.microstructureseeds attribute)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.random_seed"]], "save_from_hdf5_group() (matflow.param_classes.seeds.microstructureseeds class method)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.seeds.microstructureseeds class method)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.save_from_JSON"]], "show() (matflow.param_classes.seeds.microstructureseeds method)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.show"]], "to_dict() (matflow.param_classes.seeds.microstructureseeds method)": [[112, "matflow.param_classes.seeds.MicrostructureSeeds.to_dict"]], "matflow.param_classes.single_crystal_parameters": [[113, "module-matflow.param_classes.single_crystal_parameters"]], "singlecrystalparameters (class in matflow.param_classes.single_crystal_parameters)": [[114, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters"]], "as_base() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[114, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.as_base"]], "base (matflow.param_classes.single_crystal_parameters.singlecrystalparameters property)": [[114, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.base"]], "dump_to_hdf5_group() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[114, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.dump_to_HDF5_group"]], "perturbations (matflow.param_classes.single_crystal_parameters.singlecrystalparameters property)": [[114, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.perturbations"]], "phases (matflow.param_classes.single_crystal_parameters.singlecrystalparameters property)": [[114, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.phases"]], "prepare_json_dump() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[114, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.prepare_JSON_dump"]], "save_from_hdf5_group() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters class method)": [[114, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters class method)": [[114, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.save_from_JSON"]], "to_dict() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[114, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.to_dict"]], "matflow.param_classes.utils": [[115, "module-matflow.param_classes.utils"]], "masked_array_from_list() (in module matflow.param_classes.utils)": [[116, "matflow.param_classes.utils.masked_array_from_list"]], "run_hpcflow_tests() (in module matflow)": [[117, "matflow.run_hpcflow_tests"]], "run_tests() (in module matflow)": [[118, "matflow.run_tests"]], "show() (in module matflow)": [[119, "matflow.show"]], "show_legend() (in module matflow)": [[120, "matflow.show_legend"]], "submit_workflow() (in module matflow)": [[121, "matflow.submit_workflow"]], "matflow.tests": [[122, "module-matflow.tests"]], "matflow.tests.conftest": [[123, "module-matflow.tests.conftest"]], "new_null_config() (in module matflow.tests.conftest)": [[124, "matflow.tests.conftest.new_null_config"]], "null_config() (in module matflow.tests.conftest)": [[125, "matflow.tests.conftest.null_config"]], "pytest_addoption() (in module matflow.tests.conftest)": [[126, "matflow.tests.conftest.pytest_addoption"]], "pytest_collection_modifyitems() (in module matflow.tests.conftest)": [[127, "matflow.tests.conftest.pytest_collection_modifyitems"]], "pytest_configure() (in module matflow.tests.conftest)": [[128, "matflow.tests.conftest.pytest_configure"]], "pytest_unconfigure() (in module matflow.tests.conftest)": [[129, "matflow.tests.conftest.pytest_unconfigure"]], "matflow.tests.test_cli": [[130, "module-matflow.tests.test_cli"]], "test_hpcflow_version() (in module matflow.tests.test_cli)": [[131, "matflow.tests.test_cli.test_hpcflow_version"]], "test_version() (in module matflow.tests.test_cli)": [[132, "matflow.tests.test_cli.test_version"]], "matflow.tests.test_utils": [[133, "module-matflow.tests.test_utils"]], "test_masked_array_from_list_1d() (in module matflow.tests.test_utils)": [[134, "matflow.tests.test_utils.test_masked_array_from_list_1D"]], "test_masked_array_from_list_1d_masked() (in module matflow.tests.test_utils)": [[135, "matflow.tests.test_utils.test_masked_array_from_list_1D_masked"]], "test_masked_array_from_list_2d() (in module matflow.tests.test_utils)": [[136, "matflow.tests.test_utils.test_masked_array_from_list_2D"]], "test_masked_array_from_list_2d_masked() (in module matflow.tests.test_utils)": [[137, "matflow.tests.test_utils.test_masked_array_from_list_2D_masked"]], "--add-to-known": [[139, "cmdoption-matflow-demo-workflow-go-add-to-known"], [139, "cmdoption-matflow-go-add-to-known"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"]], "--all": [[139, "cmdoption-matflow-config-get-all"], [139, "cmdoption-matflow-demo-data-cache-all"]], "--backup": [[139, "cmdoption-matflow-rechunk-backup"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup"]], "--cancel": [[139, "cmdoption-matflow-demo-workflow-go-cancel"], [139, "cmdoption-matflow-go-cancel"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-cancel"]], "--chunk-size": [[139, "cmdoption-matflow-rechunk-chunk-size"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-chunk-size"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-chunk-size"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-chunk-size"]], "--config-dir": [[139, "cmdoption-matflow-config-dir"], [139, "cmdoption-matflow-manage-get-config-path-config-dir"], [139, "cmdoption-matflow-manage-reset-config-config-dir"]], "--config-key": [[139, "cmdoption-matflow-config-key"]], "--defaults": [[139, "cmdoption-matflow-config-add-scheduler-defaults"], [139, "cmdoption-matflow-config-add-shell-defaults"], [139, "cmdoption-matflow-config-add-shell-wsl-defaults"]], "--doc": [[139, "cmdoption-matflow-demo-workflow-copy-doc"], [139, "cmdoption-matflow-demo-workflow-show-doc"]], "--element": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element"]], "--env-source-file": [[139, "cmdoption-matflow-configure-env-env-source-file"]], "--exclude-os": [[139, "cmdoption-matflow-submission-shell-info-exclude-os"]], "--file": [[139, "cmdoption-matflow-config-get-file"], [139, "cmdoption-matflow-helper-pid-f"]], "--format": [[139, "cmdoption-matflow-demo-workflow-go-format"], [139, "cmdoption-matflow-demo-workflow-make-format"], [139, "cmdoption-matflow-go-format"], [139, "cmdoption-matflow-make-format"]], "--full": [[139, "cmdoption-matflow-show-f"]], "--help": [[139, "cmdoption-matflow-help"]], "--hostname": [[139, "cmdoption-matflow-manage-clear-cache-hostname"]], "--hpcflow-version": [[139, "cmdoption-matflow-hpcflow-version"]], "--include-execute": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-execute"], [139, "cmdoption-matflow-zip-include-execute"]], "--include-rechunk-backups": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-rechunk-backups"], [139, "cmdoption-matflow-zip-include-rechunk-backups"]], "--infile1": [[139, "cmdoption-matflow-demo-software-doSomething-i1"]], "--infile2": [[139, "cmdoption-matflow-demo-software-doSomething-i2"]], "--jobscripts": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "--js-parallelism": [[139, "cmdoption-matflow-demo-workflow-go-js-parallelism"], [139, "cmdoption-matflow-go-js-parallelism"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism"]], "--json": [[139, "cmdoption-matflow-config-append-json"], [139, "cmdoption-matflow-config-prepend-json"], [139, "cmdoption-matflow-config-set-json"], [139, "cmdoption-matflow-config-update-json"], [139, "cmdoption-matflow-submission-get-known-json"]], "--legend": [[139, "cmdoption-matflow-show-legend"]], "--list": [[139, "cmdoption-matflow-demo-data-l"], [139, "cmdoption-matflow-demo-workflow-l"]], "--log": [[139, "cmdoption-matflow-unzip-log"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-log"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log"], [139, "cmdoption-matflow-zip-log"]], "--max-recent": [[139, "cmdoption-matflow-show-r"]], "--metadata": [[139, "cmdoption-matflow-config-get-metadata"]], "--name": [[139, "cmdoption-matflow-demo-workflow-go-name"], [139, "cmdoption-matflow-demo-workflow-make-name"], [139, "cmdoption-matflow-go-name"], [139, "cmdoption-matflow-make-name"], [139, "cmdoption-matflow-open-env-source-name"]], "--new": [[139, "cmdoption-matflow-config-import-new"]], "--no-add-to-known": [[139, "cmdoption-matflow-demo-workflow-go-add-to-known"], [139, "cmdoption-matflow-go-add-to-known"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"]], "--no-backup": [[139, "cmdoption-matflow-rechunk-backup"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup"]], "--no-callback": [[139, "cmdoption-matflow-config-no-callback"]], "--no-doc": [[139, "cmdoption-matflow-demo-workflow-copy-doc"], [139, "cmdoption-matflow-demo-workflow-show-doc"]], "--no-rename": [[139, "cmdoption-matflow-config-import-rename"]], "--no-status": [[139, "cmdoption-matflow-demo-workflow-go-status"], [139, "cmdoption-matflow-demo-workflow-make-status"], [139, "cmdoption-matflow-go-status"], [139, "cmdoption-matflow-make-status"], [139, "cmdoption-matflow-rechunk-status"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status"]], "--no-syntax": [[139, "cmdoption-matflow-demo-workflow-show-syntax"]], "--no-update": [[139, "cmdoption-matflow-show-no-update"]], "--os-info": [[139, "cmdoption-matflow-submission-os-info"]], "--out": [[139, "cmdoption-matflow-demo-software-doSomething-o"]], "--overwrite": [[139, "cmdoption-matflow-demo-workflow-go-overwrite"], [139, "cmdoption-matflow-demo-workflow-make-overwrite"], [139, "cmdoption-matflow-go-overwrite"], [139, "cmdoption-matflow-make-overwrite"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-overwrite"], [139, "cmdoption-matflow-zip-overwrite"]], "--path": [[139, "cmdoption-matflow-config-init-path"], [139, "cmdoption-matflow-config-open-path"], [139, "cmdoption-matflow-demo-workflow-go-path"], [139, "cmdoption-matflow-demo-workflow-make-path"], [139, "cmdoption-matflow-go-path"], [139, "cmdoption-matflow-make-path"], [139, "cmdoption-matflow-open-config-path"], [139, "cmdoption-matflow-open-demo-data-cache-dir-path"], [139, "cmdoption-matflow-open-env-source-path"], [139, "cmdoption-matflow-open-known-subs-path"], [139, "cmdoption-matflow-open-log-path"], [139, "cmdoption-matflow-open-user-cache-dir-path"], [139, "cmdoption-matflow-open-user-cache-hostname-dir-path"], [139, "cmdoption-matflow-open-user-data-dir-path"], [139, "cmdoption-matflow-open-user-data-hostname-dir-path"], [139, "cmdoption-matflow-open-user-runtime-dir-path"], [139, "cmdoption-matflow-open-workflow-path"], [139, "cmdoption-matflow-unzip-path"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-path"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-path"], [139, "cmdoption-matflow-zip-path"]], "--print-idx": [[139, "cmdoption-matflow-demo-workflow-go-print-idx"], [139, "cmdoption-matflow-go-print-idx"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-print-idx"]], "--ref-type": [[139, "cmdoption-matflow-cancel-r"], [139, "cmdoption-matflow-open-workflow-r"], [139, "cmdoption-matflow-rechunk-r"], [139, "cmdoption-matflow-workflow-r"], [139, "cmdoption-matflow-zip-r"]], "--rename": [[139, "cmdoption-matflow-config-import-rename"]], "--run-time-info": [[139, "cmdoption-matflow-run-time-info"]], "--setup": [[139, "cmdoption-matflow-configure-env-setup"]], "--status": [[139, "cmdoption-matflow-demo-workflow-go-status"], [139, "cmdoption-matflow-demo-workflow-make-status"], [139, "cmdoption-matflow-go-status"], [139, "cmdoption-matflow-make-status"], [139, "cmdoption-matflow-rechunk-status"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status"]], "--stderr": [[139, "cmdoption-matflow-internal-workflow-PATH-save-parameter-stderr"]], "--store": [[139, "cmdoption-matflow-demo-workflow-go-store"], [139, "cmdoption-matflow-demo-workflow-make-store"], [139, "cmdoption-matflow-go-store"], [139, "cmdoption-matflow-make-store"]], "--string": [[139, "cmdoption-matflow-go-string"], [139, "cmdoption-matflow-make-string"]], "--submission": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission"]], "--syntax": [[139, "cmdoption-matflow-demo-workflow-show-syntax"]], "--task": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task"]], "--tasks": [[139, "cmdoption-matflow-demo-workflow-go-tasks"], [139, "cmdoption-matflow-go-tasks"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-tasks"]], "--timeit": [[139, "cmdoption-matflow-timeit"]], "--timeit-file": [[139, "cmdoption-matflow-timeit-file"]], "--timeout": [[139, "cmdoption-matflow-helper-restart-timeout"], [139, "cmdoption-matflow-helper-run-timeout"], [139, "cmdoption-matflow-helper-start-timeout"]], "--timeout-check-interval": [[139, "cmdoption-matflow-helper-restart-timeout-check-interval"], [139, "cmdoption-matflow-helper-run-timeout-check-interval"], [139, "cmdoption-matflow-helper-start-timeout-check-interval"]], "--ts-fmt": [[139, "cmdoption-matflow-demo-workflow-go-ts-fmt"], [139, "cmdoption-matflow-demo-workflow-make-ts-fmt"], [139, "cmdoption-matflow-go-ts-fmt"], [139, "cmdoption-matflow-make-ts-fmt"]], "--ts-name-fmt": [[139, "cmdoption-matflow-demo-workflow-go-ts-name-fmt"], [139, "cmdoption-matflow-demo-workflow-make-ts-name-fmt"], [139, "cmdoption-matflow-go-ts-name-fmt"], [139, "cmdoption-matflow-make-ts-name-fmt"]], "--use-current-env": [[139, "cmdoption-matflow-configure-env-use-current-env"]], "--value": [[139, "cmdoption-matflow-demo-software-doSomething-v"]], "--var": [[139, "cmdoption-matflow-demo-workflow-go-v"], [139, "cmdoption-matflow-demo-workflow-make-v"], [139, "cmdoption-matflow-go-v"], [139, "cmdoption-matflow-make-v"]], "--version": [[139, "cmdoption-matflow-version"]], "--wait": [[139, "cmdoption-matflow-demo-workflow-go-wait"], [139, "cmdoption-matflow-go-wait"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait"]], "--watch-interval": [[139, "cmdoption-matflow-helper-restart-watch-interval"], [139, "cmdoption-matflow-helper-run-watch-interval"], [139, "cmdoption-matflow-helper-start-watch-interval"]], "--with-config": [[139, "cmdoption-matflow-with-config"]], "-f": [[139, "cmdoption-matflow-helper-pid-f"], [139, "cmdoption-matflow-show-f"]], "-i1": [[139, "cmdoption-matflow-demo-software-doSomething-i1"]], "-i2": [[139, "cmdoption-matflow-demo-software-doSomething-i2"]], "-j": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "-l": [[139, "cmdoption-matflow-demo-data-l"], [139, "cmdoption-matflow-demo-workflow-l"]], "-o": [[139, "cmdoption-matflow-demo-software-doSomething-o"]], "-r": [[139, "cmdoption-matflow-cancel-r"], [139, "cmdoption-matflow-open-workflow-r"], [139, "cmdoption-matflow-rechunk-r"], [139, "cmdoption-matflow-show-r"], [139, "cmdoption-matflow-workflow-r"], [139, "cmdoption-matflow-zip-r"]], "-v": [[139, "cmdoption-matflow-demo-software-doSomething-v"], [139, "cmdoption-matflow-demo-workflow-go-v"], [139, "cmdoption-matflow-demo-workflow-make-v"], [139, "cmdoption-matflow-go-v"], [139, "cmdoption-matflow-make-v"]], "cmd_idx": [[139, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-CMD_IDX"]], "destination": [[139, "cmdoption-matflow-demo-data-copy-arg-DESTINATION"], [139, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION"]], "ear_id": [[139, "cmdoption-matflow-internal-workflow-PATH-check-loop-arg-EAR_ID"], [139, "cmdoption-matflow-internal-workflow-PATH-get-ear-skipped-arg-EAR_ID"], [139, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID"], [139, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EAR_ID"], [139, "cmdoption-matflow-internal-workflow-PATH-set-ear-skip-arg-EAR_ID"], [139, "cmdoption-matflow-internal-workflow-PATH-set-ear-start-arg-EAR_ID"], [139, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-EAR_ID"]], "exit_code": [[139, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EXIT_CODE"]], "file_name": [[139, "cmdoption-matflow-demo-data-cache-arg-FILE_NAME"], [139, "cmdoption-matflow-demo-data-copy-arg-FILE_NAME"]], "file_path": [[139, "cmdoption-matflow-config-import-arg-FILE_PATH"]], "index": [[139, "cmdoption-matflow-config-pop-arg-INDEX"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX"]], "jobscript_idx": [[139, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JOBSCRIPT_IDX"]], "js_action_idx": [[139, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JS_ACTION_IDX"]], "js_act_idx": [[139, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_ACT_IDX"]], "js_idx": [[139, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_IDX"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX"]], "known_name": [[139, "cmdoption-matflow-config-init-arg-KNOWN_NAME"]], "loop_name": [[139, "cmdoption-matflow-internal-workflow-PATH-check-loop-arg-LOOP_NAME"]], "name": [[139, "cmdoption-matflow-config-add-scheduler-arg-NAME"], [139, "cmdoption-matflow-config-add-shell-arg-NAME"], [139, "cmdoption-matflow-config-append-arg-NAME"], [139, "cmdoption-matflow-config-get-arg-NAME"], [139, "cmdoption-matflow-config-pop-arg-NAME"], [139, "cmdoption-matflow-config-prepend-arg-NAME"], [139, "cmdoption-matflow-config-set-arg-NAME"], [139, "cmdoption-matflow-config-unset-arg-NAME"], [139, "cmdoption-matflow-config-update-arg-NAME"], [139, "cmdoption-matflow-configure-env-arg-NAME"], [139, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME"]], "path": [[139, "cmdoption-matflow-internal-workflow-arg-PATH"]], "py_test_args": [[139, "cmdoption-matflow-test-arg-PY_TEST_ARGS"], [139, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS"]], "scheduler_name": [[139, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME"]], "sha": [[139, "cmdoption-matflow-config-set-github-demo-data-dir-arg-SHA"]], "shell_name": [[139, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME"]], "submission_idx": [[139, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-SUBMISSION_IDX"]], "sub_idx": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX"]], "template_file_or_str": [[139, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR"], [139, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR"]], "value": [[139, "cmdoption-matflow-config-append-arg-VALUE"], [139, "cmdoption-matflow-config-prepend-arg-VALUE"], [139, "cmdoption-matflow-config-set-arg-VALUE"], [139, "cmdoption-matflow-config-update-arg-VALUE"], [139, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE"]], "workflow_name": [[139, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME"], [139, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME"], [139, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME"], [139, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME"]], "workflow_path": [[139, "cmdoption-matflow-unzip-arg-WORKFLOW_PATH"]], "workflow_ref": [[139, "cmdoption-matflow-cancel-arg-WORKFLOW_REF"], [139, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF"], [139, "cmdoption-matflow-rechunk-arg-WORKFLOW_REF"], [139, "cmdoption-matflow-workflow-arg-WORKFLOW_REF"], [139, "cmdoption-matflow-zip-arg-WORKFLOW_REF"]], "matflow command line option": [[139, "cmdoption-matflow-config-dir"], [139, "cmdoption-matflow-config-key"], [139, "cmdoption-matflow-help"], [139, "cmdoption-matflow-hpcflow-version"], [139, "cmdoption-matflow-run-time-info"], [139, "cmdoption-matflow-timeit"], [139, "cmdoption-matflow-timeit-file"], [139, "cmdoption-matflow-version"], [139, "cmdoption-matflow-with-config"]], "matflow-cancel command line option": [[139, "cmdoption-matflow-cancel-arg-WORKFLOW_REF"], [139, "cmdoption-matflow-cancel-r"]], "matflow-config command line option": [[139, "cmdoption-matflow-config-no-callback"]], "matflow-config-add-scheduler command line option": [[139, "cmdoption-matflow-config-add-scheduler-arg-NAME"], [139, "cmdoption-matflow-config-add-scheduler-defaults"]], "matflow-config-add-shell command line option": [[139, "cmdoption-matflow-config-add-shell-arg-NAME"], [139, "cmdoption-matflow-config-add-shell-defaults"]], "matflow-config-add-shell-wsl command line option": [[139, "cmdoption-matflow-config-add-shell-wsl-defaults"]], "matflow-config-append command line option": [[139, "cmdoption-matflow-config-append-arg-NAME"], [139, "cmdoption-matflow-config-append-arg-VALUE"], [139, "cmdoption-matflow-config-append-json"]], "matflow-config-get command line option": [[139, "cmdoption-matflow-config-get-all"], [139, "cmdoption-matflow-config-get-arg-NAME"], [139, "cmdoption-matflow-config-get-file"], [139, "cmdoption-matflow-config-get-metadata"]], "matflow-config-import command line option": [[139, "cmdoption-matflow-config-import-arg-FILE_PATH"], [139, "cmdoption-matflow-config-import-new"], [139, "cmdoption-matflow-config-import-rename"]], "matflow-config-init command line option": [[139, "cmdoption-matflow-config-init-arg-KNOWN_NAME"], [139, "cmdoption-matflow-config-init-path"]], "matflow-config-open command line option": [[139, "cmdoption-matflow-config-open-path"]], "matflow-config-pop command line option": [[139, "cmdoption-matflow-config-pop-arg-INDEX"], [139, "cmdoption-matflow-config-pop-arg-NAME"]], "matflow-config-prepend command line option": [[139, "cmdoption-matflow-config-prepend-arg-NAME"], [139, "cmdoption-matflow-config-prepend-arg-VALUE"], [139, "cmdoption-matflow-config-prepend-json"]], "matflow-config-set command line option": [[139, "cmdoption-matflow-config-set-arg-NAME"], [139, "cmdoption-matflow-config-set-arg-VALUE"], [139, "cmdoption-matflow-config-set-json"]], "matflow-config-set-github-demo-data-dir command line option": [[139, "cmdoption-matflow-config-set-github-demo-data-dir-arg-SHA"]], "matflow-config-unset command line option": [[139, "cmdoption-matflow-config-unset-arg-NAME"]], "matflow-config-update command line option": [[139, "cmdoption-matflow-config-update-arg-NAME"], [139, "cmdoption-matflow-config-update-arg-VALUE"], [139, "cmdoption-matflow-config-update-json"]], "matflow-configure-env command line option": [[139, "cmdoption-matflow-configure-env-arg-NAME"], [139, "cmdoption-matflow-configure-env-env-source-file"], [139, "cmdoption-matflow-configure-env-setup"], [139, "cmdoption-matflow-configure-env-use-current-env"]], "matflow-demo-data command line option": [[139, "cmdoption-matflow-demo-data-l"]], "matflow-demo-data-cache command line option": [[139, "cmdoption-matflow-demo-data-cache-all"], [139, "cmdoption-matflow-demo-data-cache-arg-FILE_NAME"]], "matflow-demo-data-copy command line option": [[139, "cmdoption-matflow-demo-data-copy-arg-DESTINATION"], [139, "cmdoption-matflow-demo-data-copy-arg-FILE_NAME"]], "matflow-demo-software-dosomething command line option": [[139, "cmdoption-matflow-demo-software-doSomething-i1"], [139, "cmdoption-matflow-demo-software-doSomething-i2"], [139, "cmdoption-matflow-demo-software-doSomething-o"], [139, "cmdoption-matflow-demo-software-doSomething-v"]], "matflow-demo-workflow command line option": [[139, "cmdoption-matflow-demo-workflow-l"]], "matflow-demo-workflow-copy command line option": [[139, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION"], [139, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME"], [139, "cmdoption-matflow-demo-workflow-copy-doc"]], "matflow-demo-workflow-go command line option": [[139, "cmdoption-matflow-demo-workflow-go-add-to-known"], [139, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME"], [139, "cmdoption-matflow-demo-workflow-go-cancel"], [139, "cmdoption-matflow-demo-workflow-go-format"], [139, "cmdoption-matflow-demo-workflow-go-js-parallelism"], [139, "cmdoption-matflow-demo-workflow-go-name"], [139, "cmdoption-matflow-demo-workflow-go-overwrite"], [139, "cmdoption-matflow-demo-workflow-go-path"], [139, "cmdoption-matflow-demo-workflow-go-print-idx"], [139, "cmdoption-matflow-demo-workflow-go-status"], [139, "cmdoption-matflow-demo-workflow-go-store"], [139, "cmdoption-matflow-demo-workflow-go-tasks"], [139, "cmdoption-matflow-demo-workflow-go-ts-fmt"], [139, "cmdoption-matflow-demo-workflow-go-ts-name-fmt"], [139, "cmdoption-matflow-demo-workflow-go-v"], [139, "cmdoption-matflow-demo-workflow-go-wait"]], "matflow-demo-workflow-make command line option": [[139, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME"], [139, "cmdoption-matflow-demo-workflow-make-format"], [139, "cmdoption-matflow-demo-workflow-make-name"], [139, "cmdoption-matflow-demo-workflow-make-overwrite"], [139, "cmdoption-matflow-demo-workflow-make-path"], [139, "cmdoption-matflow-demo-workflow-make-status"], [139, "cmdoption-matflow-demo-workflow-make-store"], [139, "cmdoption-matflow-demo-workflow-make-ts-fmt"], [139, "cmdoption-matflow-demo-workflow-make-ts-name-fmt"], [139, "cmdoption-matflow-demo-workflow-make-v"]], "matflow-demo-workflow-show command line option": [[139, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME"], [139, "cmdoption-matflow-demo-workflow-show-doc"], [139, "cmdoption-matflow-demo-workflow-show-syntax"]], "matflow-go command line option": [[139, "cmdoption-matflow-go-add-to-known"], [139, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR"], [139, "cmdoption-matflow-go-cancel"], [139, "cmdoption-matflow-go-format"], [139, "cmdoption-matflow-go-js-parallelism"], [139, "cmdoption-matflow-go-name"], [139, "cmdoption-matflow-go-overwrite"], [139, "cmdoption-matflow-go-path"], [139, "cmdoption-matflow-go-print-idx"], [139, "cmdoption-matflow-go-status"], [139, "cmdoption-matflow-go-store"], [139, "cmdoption-matflow-go-string"], [139, "cmdoption-matflow-go-tasks"], [139, "cmdoption-matflow-go-ts-fmt"], [139, "cmdoption-matflow-go-ts-name-fmt"], [139, "cmdoption-matflow-go-v"], [139, "cmdoption-matflow-go-wait"]], "matflow-helper-pid command line option": [[139, "cmdoption-matflow-helper-pid-f"]], "matflow-helper-restart command line option": [[139, "cmdoption-matflow-helper-restart-timeout"], [139, "cmdoption-matflow-helper-restart-timeout-check-interval"], [139, "cmdoption-matflow-helper-restart-watch-interval"]], "matflow-helper-run command line option": [[139, "cmdoption-matflow-helper-run-timeout"], [139, "cmdoption-matflow-helper-run-timeout-check-interval"], [139, "cmdoption-matflow-helper-run-watch-interval"]], "matflow-helper-start command line option": [[139, "cmdoption-matflow-helper-start-timeout"], [139, "cmdoption-matflow-helper-start-timeout-check-interval"], [139, "cmdoption-matflow-helper-start-watch-interval"]], "matflow-internal-workflow command line option": [[139, "cmdoption-matflow-internal-workflow-arg-PATH"]], "matflow-internal-workflow-path-check-loop command line option": [[139, "cmdoption-matflow-internal-workflow-PATH-check-loop-arg-EAR_ID"], [139, "cmdoption-matflow-internal-workflow-PATH-check-loop-arg-LOOP_NAME"]], "matflow-internal-workflow-path-get-ear-skipped command line option": [[139, "cmdoption-matflow-internal-workflow-PATH-get-ear-skipped-arg-EAR_ID"]], "matflow-internal-workflow-path-save-parameter command line option": [[139, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-CMD_IDX"], [139, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID"], [139, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME"], [139, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE"], [139, "cmdoption-matflow-internal-workflow-PATH-save-parameter-stderr"]], "matflow-internal-workflow-path-set-ear-end command line option": [[139, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EAR_ID"], [139, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-EXIT_CODE"], [139, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_ACT_IDX"], [139, "cmdoption-matflow-internal-workflow-PATH-set-ear-end-arg-JS_IDX"]], "matflow-internal-workflow-path-set-ear-skip command line option": [[139, "cmdoption-matflow-internal-workflow-PATH-set-ear-skip-arg-EAR_ID"]], "matflow-internal-workflow-path-set-ear-start command line option": [[139, "cmdoption-matflow-internal-workflow-PATH-set-ear-start-arg-EAR_ID"]], "matflow-internal-workflow-path-write-commands command line option": [[139, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-EAR_ID"], [139, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JOBSCRIPT_IDX"], [139, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-JS_ACTION_IDX"], [139, "cmdoption-matflow-internal-workflow-PATH-write-commands-arg-SUBMISSION_IDX"]], "matflow-make command line option": [[139, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR"], [139, "cmdoption-matflow-make-format"], [139, "cmdoption-matflow-make-name"], [139, "cmdoption-matflow-make-overwrite"], [139, "cmdoption-matflow-make-path"], [139, "cmdoption-matflow-make-status"], [139, "cmdoption-matflow-make-store"], [139, "cmdoption-matflow-make-string"], [139, "cmdoption-matflow-make-ts-fmt"], [139, "cmdoption-matflow-make-ts-name-fmt"], [139, "cmdoption-matflow-make-v"]], "matflow-manage-clear-cache command line option": [[139, "cmdoption-matflow-manage-clear-cache-hostname"]], "matflow-manage-get-config-path command line option": [[139, "cmdoption-matflow-manage-get-config-path-config-dir"]], "matflow-manage-reset-config command line option": [[139, "cmdoption-matflow-manage-reset-config-config-dir"]], "matflow-open-config command line option": [[139, "cmdoption-matflow-open-config-path"]], "matflow-open-demo-data-cache-dir command line option": [[139, "cmdoption-matflow-open-demo-data-cache-dir-path"]], "matflow-open-env-source command line option": [[139, "cmdoption-matflow-open-env-source-name"], [139, "cmdoption-matflow-open-env-source-path"]], "matflow-open-known-subs command line option": [[139, "cmdoption-matflow-open-known-subs-path"]], "matflow-open-log command line option": [[139, "cmdoption-matflow-open-log-path"]], "matflow-open-user-cache-dir command line option": [[139, "cmdoption-matflow-open-user-cache-dir-path"]], "matflow-open-user-cache-hostname-dir command line option": [[139, "cmdoption-matflow-open-user-cache-hostname-dir-path"]], "matflow-open-user-data-dir command line option": [[139, "cmdoption-matflow-open-user-data-dir-path"]], "matflow-open-user-data-hostname-dir command line option": [[139, "cmdoption-matflow-open-user-data-hostname-dir-path"]], "matflow-open-user-runtime-dir command line option": [[139, "cmdoption-matflow-open-user-runtime-dir-path"]], "matflow-open-workflow command line option": [[139, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF"], [139, "cmdoption-matflow-open-workflow-path"], [139, "cmdoption-matflow-open-workflow-r"]], "matflow-rechunk command line option": [[139, "cmdoption-matflow-rechunk-arg-WORKFLOW_REF"], [139, "cmdoption-matflow-rechunk-backup"], [139, "cmdoption-matflow-rechunk-chunk-size"], [139, "cmdoption-matflow-rechunk-r"], [139, "cmdoption-matflow-rechunk-status"]], "matflow-show command line option": [[139, "cmdoption-matflow-show-f"], [139, "cmdoption-matflow-show-legend"], [139, "cmdoption-matflow-show-no-update"], [139, "cmdoption-matflow-show-r"]], "matflow-submission command line option": [[139, "cmdoption-matflow-submission-os-info"]], "matflow-submission-get-known command line option": [[139, "cmdoption-matflow-submission-get-known-json"]], "matflow-submission-scheduler command line option": [[139, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME"]], "matflow-submission-shell-info command line option": [[139, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME"], [139, "cmdoption-matflow-submission-shell-info-exclude-os"]], "matflow-test command line option": [[139, "cmdoption-matflow-test-arg-PY_TEST_ARGS"]], "matflow-test-hpcflow command line option": [[139, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS"]], "matflow-unzip command line option": [[139, "cmdoption-matflow-unzip-arg-WORKFLOW_PATH"], [139, "cmdoption-matflow-unzip-log"], [139, "cmdoption-matflow-unzip-path"]], "matflow-workflow command line option": [[139, "cmdoption-matflow-workflow-arg-WORKFLOW_REF"], [139, "cmdoption-matflow-workflow-r"]], "matflow-workflow-workflow_ref-abort-run command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task"]], "matflow-workflow-workflow_ref-get-param command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX"]], "matflow-workflow-workflow_ref-get-param-source command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX"]], "matflow-workflow-workflow_ref-is-param-set command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX"]], "matflow-workflow-workflow_ref-rechunk command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-chunk-size"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status"]], "matflow-workflow-workflow_ref-rechunk-parameter-base command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-chunk-size"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status"]], "matflow-workflow-workflow_ref-rechunk-runs command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-chunk-size"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status"]], "matflow-workflow-workflow_ref-sub command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX"]], "matflow-workflow-workflow_ref-sub-sub_idx-js command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX"]], "matflow-workflow-workflow_ref-submit command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-cancel"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-print-idx"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-tasks"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait"]], "matflow-workflow-workflow_ref-unzip command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-log"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-path"]], "matflow-workflow-workflow_ref-wait command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "matflow-workflow-workflow_ref-zip command line option": [[139, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-execute"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-rechunk-backups"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-overwrite"], [139, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-path"]], "matflow-zip command line option": [[139, "cmdoption-matflow-zip-arg-WORKFLOW_REF"], [139, "cmdoption-matflow-zip-include-execute"], [139, "cmdoption-matflow-zip-include-rechunk-backups"], [139, "cmdoption-matflow-zip-log"], [139, "cmdoption-matflow-zip-overwrite"], [139, "cmdoption-matflow-zip-path"], [139, "cmdoption-matflow-zip-r"]]}})