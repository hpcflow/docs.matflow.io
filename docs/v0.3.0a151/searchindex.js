Search.setIndex({"docnames": ["contribute/index", "development/environments", "development/index", "index", "installation", "reference/_autosummary/matflow", "reference/_autosummary/matflow.Action", "reference/_autosummary/matflow.ActionEnvironment", "reference/_autosummary/matflow.ActionRule", "reference/_autosummary/matflow.ActionScope", "reference/_autosummary/matflow.ActionScopeType", "reference/_autosummary/matflow.Command", "reference/_autosummary/matflow.CommandFilesList", "reference/_autosummary/matflow.DirectPosix", "reference/_autosummary/matflow.DirectWindows", "reference/_autosummary/matflow.Element", "reference/_autosummary/matflow.ElementAction", "reference/_autosummary/matflow.ElementActionRun", "reference/_autosummary/matflow.ElementFilter", "reference/_autosummary/matflow.ElementGroup", "reference/_autosummary/matflow.ElementInputFiles", "reference/_autosummary/matflow.ElementInputs", "reference/_autosummary/matflow.ElementIteration", "reference/_autosummary/matflow.ElementOutputFiles", "reference/_autosummary/matflow.ElementOutputs", "reference/_autosummary/matflow.ElementParameter", "reference/_autosummary/matflow.ElementPropagation", "reference/_autosummary/matflow.ElementRepeats", "reference/_autosummary/matflow.ElementResources", "reference/_autosummary/matflow.ElementSet", "reference/_autosummary/matflow.Elements", "reference/_autosummary/matflow.Environment", "reference/_autosummary/matflow.EnvironmentsList", "reference/_autosummary/matflow.Executable", "reference/_autosummary/matflow.ExecutableInstance", "reference/_autosummary/matflow.ExecutablesList", "reference/_autosummary/matflow.Executor", "reference/_autosummary/matflow.FileNameExt", "reference/_autosummary/matflow.FileNameSpec", "reference/_autosummary/matflow.FileNameStem", "reference/_autosummary/matflow.FileSpec", "reference/_autosummary/matflow.GroupList", "reference/_autosummary/matflow.InputFile", "reference/_autosummary/matflow.InputFileGenerator", "reference/_autosummary/matflow.InputFileGeneratorSource", "reference/_autosummary/matflow.InputSource", "reference/_autosummary/matflow.InputSourceType", "reference/_autosummary/matflow.InputValue", "reference/_autosummary/matflow.Jobscript", "reference/_autosummary/matflow.JobscriptBlock", "reference/_autosummary/matflow.Loop", "reference/_autosummary/matflow.MetaTask", "reference/_autosummary/matflow.MetaTaskSchema", "reference/_autosummary/matflow.MultiPathSequence", "reference/_autosummary/matflow.NumCores", "reference/_autosummary/matflow.OutputFileParser", "reference/_autosummary/matflow.OutputFileParserSource", "reference/_autosummary/matflow.OutputLabel", "reference/_autosummary/matflow.Parameter", "reference/_autosummary/matflow.ParameterPath", "reference/_autosummary/matflow.ParameterPropagationMode", "reference/_autosummary/matflow.ParameterValue", "reference/_autosummary/matflow.Parameters", "reference/_autosummary/matflow.ParametersList", "reference/_autosummary/matflow.QueuedScheduler", "reference/_autosummary/matflow.ResourceList", "reference/_autosummary/matflow.ResourceSpec", "reference/_autosummary/matflow.Rule", "reference/_autosummary/matflow.RunDirAppFiles", "reference/_autosummary/matflow.SGEPosix", "reference/_autosummary/matflow.SchemaInput", "reference/_autosummary/matflow.SchemaOutput", "reference/_autosummary/matflow.SchemaParameter", "reference/_autosummary/matflow.SlurmPosix", "reference/_autosummary/matflow.SubParameter", "reference/_autosummary/matflow.Submission", "reference/_autosummary/matflow.Task", "reference/_autosummary/matflow.TaskInputParameters", "reference/_autosummary/matflow.TaskList", "reference/_autosummary/matflow.TaskObjective", "reference/_autosummary/matflow.TaskOutputParameters", "reference/_autosummary/matflow.TaskSchema", "reference/_autosummary/matflow.TaskSchemasList", "reference/_autosummary/matflow.TaskSourceType", "reference/_autosummary/matflow.TaskTemplateList", "reference/_autosummary/matflow.ValuePerturbation", "reference/_autosummary/matflow.ValueSequence", "reference/_autosummary/matflow.Workflow", "reference/_autosummary/matflow.WorkflowBlueprint", "reference/_autosummary/matflow.WorkflowLoop", "reference/_autosummary/matflow.WorkflowLoopList", "reference/_autosummary/matflow.WorkflowTask", "reference/_autosummary/matflow.WorkflowTaskList", "reference/_autosummary/matflow.WorkflowTemplate", "reference/_autosummary/matflow.app", "reference/_autosummary/matflow.cancel", "reference/_autosummary/matflow.cli", "reference/_autosummary/matflow.get_OS_info", "reference/_autosummary/matflow.get_known_submissions", "reference/_autosummary/matflow.get_shell_info", "reference/_autosummary/matflow.make_and_submit_demo_workflow", "reference/_autosummary/matflow.make_and_submit_workflow", "reference/_autosummary/matflow.make_demo_workflow", "reference/_autosummary/matflow.make_workflow", "reference/_autosummary/matflow.param_classes", "reference/_autosummary/matflow.param_classes.load", "reference/_autosummary/matflow.param_classes.load.LoadCase", "reference/_autosummary/matflow.param_classes.load.LoadStep", "reference/_autosummary/matflow.param_classes.load.StrainRateMode", "reference/_autosummary/matflow.param_classes.orientations", "reference/_autosummary/matflow.param_classes.orientations.EulerDefinition", "reference/_autosummary/matflow.param_classes.orientations.LatticeDirection", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentation", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentationType", "reference/_autosummary/matflow.param_classes.orientations.Orientations", "reference/_autosummary/matflow.param_classes.orientations.QuatOrder", "reference/_autosummary/matflow.param_classes.orientations.UnitCellAlignment", "reference/_autosummary/matflow.param_classes.seeds", "reference/_autosummary/matflow.param_classes.seeds.MicrostructureSeeds", "reference/_autosummary/matflow.param_classes.single_crystal_parameters", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.Perturbation", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.SingleCrystalParameters", "reference/_autosummary/matflow.param_classes.utils", "reference/_autosummary/matflow.param_classes.utils.masked_array_from_list", "reference/_autosummary/matflow.run_hpcflow_tests", "reference/_autosummary/matflow.run_tests", "reference/_autosummary/matflow.show", "reference/_autosummary/matflow.show_legend", "reference/_autosummary/matflow.submit_workflow", "reference/_autosummary/matflow.tests", "reference/_autosummary/matflow.tests.conftest", "reference/_autosummary/matflow.tests.conftest.load_case_1", "reference/_autosummary/matflow.tests.conftest.new_null_config", "reference/_autosummary/matflow.tests.conftest.null_config", "reference/_autosummary/matflow.tests.conftest.orientations_1", "reference/_autosummary/matflow.tests.conftest.pytest_addoption", "reference/_autosummary/matflow.tests.conftest.pytest_collection_modifyitems", "reference/_autosummary/matflow.tests.conftest.pytest_configure", "reference/_autosummary/matflow.tests.conftest.pytest_unconfigure", "reference/_autosummary/matflow.tests.conftest.seeds_1", "reference/_autosummary/matflow.tests.data", "reference/_autosummary/matflow.tests.test_cli", "reference/_autosummary/matflow.tests.test_cli.test_hpcflow_version", "reference/_autosummary/matflow.tests.test_cli.test_version", "reference/_autosummary/matflow.tests.test_utils", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D_masked", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D_masked", "reference/_autosummary/matflow.tests.utils", "reference/api", "reference/cli", "reference/config_file", "reference/glossary", "reference/index", "reference/template_components", "reference/template_components/command_files", "reference/template_components/environments", "reference/template_components/parameters", "reference/template_components/task_schemas", "reference/workflows", "user/how_to/config", "user/how_to/environments", "user/how_to/index", "user/how_to/loops", "user/how_to/meta_tasks", "user/how_to/task_schemas", "user/how_to/template_components", "user/how_to/workflow_templates", "user/how_to/workflows", "user/index", "user/tutorials/index", "user/tutorials/notebooks/index", "user/tutorials/notebooks/simulate_yield_surface_2D"], "filenames": ["contribute/index.rst", "development/environments.rst", "development/index.rst", "index.rst", "installation.rst", "reference/_autosummary/matflow.rst", "reference/_autosummary/matflow.Action.rst", "reference/_autosummary/matflow.ActionEnvironment.rst", "reference/_autosummary/matflow.ActionRule.rst", "reference/_autosummary/matflow.ActionScope.rst", "reference/_autosummary/matflow.ActionScopeType.rst", "reference/_autosummary/matflow.Command.rst", "reference/_autosummary/matflow.CommandFilesList.rst", "reference/_autosummary/matflow.DirectPosix.rst", "reference/_autosummary/matflow.DirectWindows.rst", "reference/_autosummary/matflow.Element.rst", "reference/_autosummary/matflow.ElementAction.rst", "reference/_autosummary/matflow.ElementActionRun.rst", "reference/_autosummary/matflow.ElementFilter.rst", "reference/_autosummary/matflow.ElementGroup.rst", "reference/_autosummary/matflow.ElementInputFiles.rst", "reference/_autosummary/matflow.ElementInputs.rst", "reference/_autosummary/matflow.ElementIteration.rst", "reference/_autosummary/matflow.ElementOutputFiles.rst", "reference/_autosummary/matflow.ElementOutputs.rst", "reference/_autosummary/matflow.ElementParameter.rst", "reference/_autosummary/matflow.ElementPropagation.rst", "reference/_autosummary/matflow.ElementRepeats.rst", "reference/_autosummary/matflow.ElementResources.rst", "reference/_autosummary/matflow.ElementSet.rst", "reference/_autosummary/matflow.Elements.rst", "reference/_autosummary/matflow.Environment.rst", "reference/_autosummary/matflow.EnvironmentsList.rst", "reference/_autosummary/matflow.Executable.rst", "reference/_autosummary/matflow.ExecutableInstance.rst", "reference/_autosummary/matflow.ExecutablesList.rst", "reference/_autosummary/matflow.Executor.rst", "reference/_autosummary/matflow.FileNameExt.rst", "reference/_autosummary/matflow.FileNameSpec.rst", "reference/_autosummary/matflow.FileNameStem.rst", "reference/_autosummary/matflow.FileSpec.rst", "reference/_autosummary/matflow.GroupList.rst", "reference/_autosummary/matflow.InputFile.rst", "reference/_autosummary/matflow.InputFileGenerator.rst", "reference/_autosummary/matflow.InputFileGeneratorSource.rst", "reference/_autosummary/matflow.InputSource.rst", "reference/_autosummary/matflow.InputSourceType.rst", "reference/_autosummary/matflow.InputValue.rst", "reference/_autosummary/matflow.Jobscript.rst", "reference/_autosummary/matflow.JobscriptBlock.rst", "reference/_autosummary/matflow.Loop.rst", "reference/_autosummary/matflow.MetaTask.rst", "reference/_autosummary/matflow.MetaTaskSchema.rst", "reference/_autosummary/matflow.MultiPathSequence.rst", "reference/_autosummary/matflow.NumCores.rst", "reference/_autosummary/matflow.OutputFileParser.rst", "reference/_autosummary/matflow.OutputFileParserSource.rst", "reference/_autosummary/matflow.OutputLabel.rst", "reference/_autosummary/matflow.Parameter.rst", "reference/_autosummary/matflow.ParameterPath.rst", "reference/_autosummary/matflow.ParameterPropagationMode.rst", "reference/_autosummary/matflow.ParameterValue.rst", "reference/_autosummary/matflow.Parameters.rst", "reference/_autosummary/matflow.ParametersList.rst", "reference/_autosummary/matflow.QueuedScheduler.rst", "reference/_autosummary/matflow.ResourceList.rst", "reference/_autosummary/matflow.ResourceSpec.rst", "reference/_autosummary/matflow.Rule.rst", "reference/_autosummary/matflow.RunDirAppFiles.rst", "reference/_autosummary/matflow.SGEPosix.rst", "reference/_autosummary/matflow.SchemaInput.rst", "reference/_autosummary/matflow.SchemaOutput.rst", "reference/_autosummary/matflow.SchemaParameter.rst", "reference/_autosummary/matflow.SlurmPosix.rst", "reference/_autosummary/matflow.SubParameter.rst", "reference/_autosummary/matflow.Submission.rst", "reference/_autosummary/matflow.Task.rst", "reference/_autosummary/matflow.TaskInputParameters.rst", "reference/_autosummary/matflow.TaskList.rst", "reference/_autosummary/matflow.TaskObjective.rst", "reference/_autosummary/matflow.TaskOutputParameters.rst", "reference/_autosummary/matflow.TaskSchema.rst", "reference/_autosummary/matflow.TaskSchemasList.rst", "reference/_autosummary/matflow.TaskSourceType.rst", "reference/_autosummary/matflow.TaskTemplateList.rst", "reference/_autosummary/matflow.ValuePerturbation.rst", "reference/_autosummary/matflow.ValueSequence.rst", "reference/_autosummary/matflow.Workflow.rst", "reference/_autosummary/matflow.WorkflowBlueprint.rst", "reference/_autosummary/matflow.WorkflowLoop.rst", "reference/_autosummary/matflow.WorkflowLoopList.rst", "reference/_autosummary/matflow.WorkflowTask.rst", "reference/_autosummary/matflow.WorkflowTaskList.rst", "reference/_autosummary/matflow.WorkflowTemplate.rst", "reference/_autosummary/matflow.app.rst", "reference/_autosummary/matflow.cancel.rst", "reference/_autosummary/matflow.cli.rst", "reference/_autosummary/matflow.get_OS_info.rst", "reference/_autosummary/matflow.get_known_submissions.rst", "reference/_autosummary/matflow.get_shell_info.rst", "reference/_autosummary/matflow.make_and_submit_demo_workflow.rst", "reference/_autosummary/matflow.make_and_submit_workflow.rst", "reference/_autosummary/matflow.make_demo_workflow.rst", "reference/_autosummary/matflow.make_workflow.rst", "reference/_autosummary/matflow.param_classes.rst", "reference/_autosummary/matflow.param_classes.load.rst", "reference/_autosummary/matflow.param_classes.load.LoadCase.rst", "reference/_autosummary/matflow.param_classes.load.LoadStep.rst", "reference/_autosummary/matflow.param_classes.load.StrainRateMode.rst", "reference/_autosummary/matflow.param_classes.orientations.rst", "reference/_autosummary/matflow.param_classes.orientations.EulerDefinition.rst", "reference/_autosummary/matflow.param_classes.orientations.LatticeDirection.rst", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentation.rst", "reference/_autosummary/matflow.param_classes.orientations.OrientationRepresentationType.rst", "reference/_autosummary/matflow.param_classes.orientations.Orientations.rst", "reference/_autosummary/matflow.param_classes.orientations.QuatOrder.rst", "reference/_autosummary/matflow.param_classes.orientations.UnitCellAlignment.rst", "reference/_autosummary/matflow.param_classes.seeds.rst", "reference/_autosummary/matflow.param_classes.seeds.MicrostructureSeeds.rst", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.rst", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.Perturbation.rst", "reference/_autosummary/matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.rst", "reference/_autosummary/matflow.param_classes.utils.rst", "reference/_autosummary/matflow.param_classes.utils.masked_array_from_list.rst", "reference/_autosummary/matflow.run_hpcflow_tests.rst", "reference/_autosummary/matflow.run_tests.rst", "reference/_autosummary/matflow.show.rst", "reference/_autosummary/matflow.show_legend.rst", "reference/_autosummary/matflow.submit_workflow.rst", "reference/_autosummary/matflow.tests.rst", "reference/_autosummary/matflow.tests.conftest.rst", "reference/_autosummary/matflow.tests.conftest.load_case_1.rst", "reference/_autosummary/matflow.tests.conftest.new_null_config.rst", "reference/_autosummary/matflow.tests.conftest.null_config.rst", "reference/_autosummary/matflow.tests.conftest.orientations_1.rst", "reference/_autosummary/matflow.tests.conftest.pytest_addoption.rst", "reference/_autosummary/matflow.tests.conftest.pytest_collection_modifyitems.rst", "reference/_autosummary/matflow.tests.conftest.pytest_configure.rst", "reference/_autosummary/matflow.tests.conftest.pytest_unconfigure.rst", "reference/_autosummary/matflow.tests.conftest.seeds_1.rst", "reference/_autosummary/matflow.tests.data.rst", "reference/_autosummary/matflow.tests.test_cli.rst", "reference/_autosummary/matflow.tests.test_cli.test_hpcflow_version.rst", "reference/_autosummary/matflow.tests.test_cli.test_version.rst", "reference/_autosummary/matflow.tests.test_utils.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_1D_masked.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D.rst", "reference/_autosummary/matflow.tests.test_utils.test_masked_array_from_list_2D_masked.rst", "reference/_autosummary/matflow.tests.utils.rst", "reference/api.rst", "reference/cli.rst", "reference/config_file.rst", "reference/glossary.rst", "reference/index.rst", "reference/template_components.rst", "reference/template_components/command_files.rst", "reference/template_components/environments.rst", "reference/template_components/parameters.rst", "reference/template_components/task_schemas.rst", "reference/workflows.rst", "user/how_to/config.rst", "user/how_to/environments.rst", "user/how_to/index.rst", "user/how_to/loops.rst", "user/how_to/meta_tasks.rst", "user/how_to/task_schemas.rst", "user/how_to/template_components.rst", "user/how_to/workflow_templates.rst", "user/how_to/workflows.rst", "user/index.rst", "user/tutorials/index.rst", "user/tutorials/notebooks/index.rst", "user/tutorials/notebooks/simulate_yield_surface_2D.ipynb"], "titles": ["Contribute", "Environments", "Development", "Welcome to MatFlow\u2019s documentation!", "Installation", "matflow", "matflow.Action", "matflow.ActionEnvironment", "matflow.ActionRule", "matflow.ActionScope", "matflow.ActionScopeType", "matflow.Command", "matflow.CommandFilesList", "matflow.DirectPosix", "matflow.DirectWindows", "matflow.Element", "matflow.ElementAction", "matflow.ElementActionRun", "matflow.ElementFilter", "matflow.ElementGroup", "matflow.ElementInputFiles", "matflow.ElementInputs", "matflow.ElementIteration", "matflow.ElementOutputFiles", "matflow.ElementOutputs", "matflow.ElementParameter", "matflow.ElementPropagation", "matflow.ElementRepeats", "matflow.ElementResources", "matflow.ElementSet", "matflow.Elements", "matflow.Environment", "matflow.EnvironmentsList", "matflow.Executable", "matflow.ExecutableInstance", "matflow.ExecutablesList", "matflow.Executor", "matflow.FileNameExt", "matflow.FileNameSpec", "matflow.FileNameStem", "matflow.FileSpec", "matflow.GroupList", "matflow.InputFile", "matflow.InputFileGenerator", "matflow.InputFileGeneratorSource", "matflow.InputSource", "matflow.InputSourceType", "matflow.InputValue", "matflow.Jobscript", "matflow.JobscriptBlock", "matflow.Loop", "matflow.MetaTask", "matflow.MetaTaskSchema", "matflow.MultiPathSequence", "matflow.NumCores", "matflow.OutputFileParser", "matflow.OutputFileParserSource", "matflow.OutputLabel", "matflow.Parameter", "matflow.ParameterPath", "matflow.ParameterPropagationMode", "matflow.ParameterValue", "matflow.Parameters", "matflow.ParametersList", "matflow.QueuedScheduler", "matflow.ResourceList", "matflow.ResourceSpec", "matflow.Rule", "matflow.RunDirAppFiles", "matflow.SGEPosix", "matflow.SchemaInput", "matflow.SchemaOutput", "matflow.SchemaParameter", "matflow.SlurmPosix", "matflow.SubParameter", "matflow.Submission", "matflow.Task", "matflow.TaskInputParameters", "matflow.TaskList", "matflow.TaskObjective", "matflow.TaskOutputParameters", "matflow.TaskSchema", "matflow.TaskSchemasList", "matflow.TaskSourceType", "matflow.TaskTemplateList", "matflow.ValuePerturbation", "matflow.ValueSequence", "matflow.Workflow", "matflow.WorkflowBlueprint", "matflow.WorkflowLoop", "matflow.WorkflowLoopList", "matflow.WorkflowTask", "matflow.WorkflowTaskList", "matflow.WorkflowTemplate", "matflow.app", "matflow.cancel", "matflow.cli", "matflow.get_OS_info", "matflow.get_known_submissions", "matflow.get_shell_info", "matflow.make_and_submit_demo_workflow", "matflow.make_and_submit_workflow", "matflow.make_demo_workflow", "matflow.make_workflow", "matflow.param_classes", "matflow.param_classes.load", "matflow.param_classes.load.LoadCase", "matflow.param_classes.load.LoadStep", "matflow.param_classes.load.StrainRateMode", "matflow.param_classes.orientations", "matflow.param_classes.orientations.EulerDefinition", "matflow.param_classes.orientations.LatticeDirection", "matflow.param_classes.orientations.OrientationRepresentation", "matflow.param_classes.orientations.OrientationRepresentationType", "matflow.param_classes.orientations.Orientations", "matflow.param_classes.orientations.QuatOrder", "matflow.param_classes.orientations.UnitCellAlignment", "matflow.param_classes.seeds", "matflow.param_classes.seeds.MicrostructureSeeds", "matflow.param_classes.single_crystal_parameters", "matflow.param_classes.single_crystal_parameters.Perturbation", "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters", "matflow.param_classes.utils", "matflow.param_classes.utils.masked_array_from_list", "matflow.run_hpcflow_tests", "matflow.run_tests", "matflow.show", "matflow.show_legend", "matflow.submit_workflow", "matflow.tests", "matflow.tests.conftest", "matflow.tests.conftest.load_case_1", "matflow.tests.conftest.new_null_config", "matflow.tests.conftest.null_config", "matflow.tests.conftest.orientations_1", "matflow.tests.conftest.pytest_addoption", "matflow.tests.conftest.pytest_collection_modifyitems", "matflow.tests.conftest.pytest_configure", "matflow.tests.conftest.pytest_unconfigure", "matflow.tests.conftest.seeds_1", "matflow.tests.data", "matflow.tests.test_cli", "matflow.tests.test_cli.test_hpcflow_version", "matflow.tests.test_cli.test_version", "matflow.tests.test_utils", "matflow.tests.test_utils.test_masked_array_from_list_1D", "matflow.tests.test_utils.test_masked_array_from_list_1D_masked", "matflow.tests.test_utils.test_masked_array_from_list_2D", "matflow.tests.test_utils.test_masked_array_from_list_2D_masked", "matflow.tests.utils", "Python API", "Command-line interface", "Configuration file", "Glossary", "Reference", "Template components", "Command files", "Environments", "Parameters", "Task schemas", "Demo workflows", "Configuration how-tos", "Environment how-tos", "How-To Guides", "Loops", "Meta-tasks", "Task schema how-tos", "Template components", "Workflow templates how-tos", "Workflow how-tos", "User Guide", "Tutorials", "Jupyter notebooks", "Simulating yield surfaces with DAMASK simulations"], "terms": {"convent": [0, 110, 116, 167], "commit": [0, 48, 87], "click": [0, 4, 151], "first": [0, 4, 29, 48, 75, 76, 89, 107, 115, 120, 151, 158, 160, 161, 162, 164, 165, 173], "git": 0, "see": [0, 3, 16, 17, 22, 48, 106, 153, 158, 160, 161, 167, 169], "ssh": [0, 169], "below": [0, 1, 4, 161, 162, 165], "make": [0, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 100, 102, 107, 112, 153, 158, 160, 161, 169], "sure": [0, 153], "you": [0, 4, 153, 160, 161, 162, 163, 164, 169], "switch": [0, 1, 64, 69, 73], "branch": 0, "thi": [0, 1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 100, 101, 102, 103, 104, 106, 107, 108, 112, 114, 116, 118, 120, 121, 124, 128, 151, 152, 155, 158, 160, 161, 162, 163, 164, 165, 167, 169, 173], "i": [0, 1, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 47, 48, 50, 52, 53, 55, 56, 60, 62, 64, 65, 66, 69, 70, 71, 73, 74, 75, 76, 79, 81, 85, 86, 87, 89, 91, 100, 101, 102, 103, 104, 106, 107, 112, 113, 114, 120, 124, 152, 153, 158, 160, 161, 162, 164, 165, 167, 169, 173], "protect": 0, "so": [0, 6, 87, 100, 101, 102, 103, 151, 153, 158, 160, 162, 165], "creat": [0, 1, 4, 15, 55, 68, 87, 89, 91, 100, 101, 102, 103, 114, 120, 121, 151, 153, 158], "featur": [0, 87, 100, 101, 128, 151], "befor": [0, 6, 8, 17, 22, 87, 161], "push": 0, "github": [0, 1, 4, 153, 168], "com": [0, 4, 73, 114], "new": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "should": [0, 4, 15, 17, 26, 28, 47, 50, 52, 55, 57, 66, 70, 76, 81, 87, 89, 100, 101, 102, 103, 107, 151, 152, 158, 160, 162, 164, 165], "abl": 0, "simpli": [0, 6, 70, 164], "run": [0, 1, 4, 6, 11, 13, 14, 15, 16, 17, 22, 28, 31, 33, 36, 43, 48, 49, 55, 64, 66, 67, 68, 69, 73, 75, 87, 96, 124, 125, 126, 153, 157, 160, 161, 164], "hpc": [0, 3, 4, 69, 154], "flow": 0, "folder": [0, 1, 4], "take": [0, 17, 68, 87, 164], "care": 0, "everyth": [0, 4, 153], "If": [0, 4, 6, 11, 12, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 32, 33, 35, 38, 41, 45, 48, 63, 65, 66, 67, 70, 76, 78, 82, 84, 86, 87, 89, 91, 93, 98, 99, 100, 101, 102, 103, 107, 118, 120, 126, 128, 151, 152, 161, 162, 164, 169], "some": [0, 6, 13, 14, 16, 29, 34, 53, 87, 114, 153, 164], "reason": 0, "fail": [0, 73, 87, 161, 173], "try": [0, 4, 17, 73, 91], "follow": [0, 4, 120, 151, 152, 161, 164, 168], "delet": [0, 6, 64, 87, 151], "virtualenv": 0, "need": [0, 4, 28, 43, 75, 76, 153, 157, 160, 161, 165], "find": [0, 6, 8, 52, 74, 81, 87, 91, 173], "version": [0, 1, 4, 13, 14, 25, 48, 52, 64, 65, 69, 73, 81, 94, 151, 152, 153, 161, 163, 170], "ar": [0, 1, 3, 4, 6, 11, 12, 13, 14, 15, 16, 17, 22, 28, 29, 32, 33, 35, 41, 42, 44, 47, 48, 49, 50, 52, 55, 56, 62, 63, 68, 69, 70, 73, 75, 76, 78, 81, 82, 84, 86, 87, 88, 89, 91, 93, 98, 100, 101, 102, 103, 104, 106, 107, 112, 114, 115, 118, 120, 126, 127, 128, 151, 152, 158, 160, 162, 164, 165, 169], "us": [0, 1, 6, 15, 17, 18, 19, 22, 28, 29, 31, 34, 38, 44, 45, 47, 48, 52, 53, 55, 56, 58, 62, 64, 66, 67, 69, 70, 73, 75, 76, 81, 86, 87, 89, 93, 100, 101, 102, 103, 107, 110, 112, 114, 115, 116, 118, 121, 128, 151, 152, 153, 157, 158, 159, 160, 161, 163, 164, 166, 168, 169, 170, 173], "env": [0, 1, 11, 36, 162], "info": [0, 48, 52, 81, 87, 100, 101, 102, 103, 152, 166], "remov": [0, 48, 55, 98, 120, 126, 151, 161], "virtual": [0, 4, 87, 154, 157], "environ": [0, 2, 3, 4, 6, 7, 11, 17, 28, 29, 32, 33, 35, 43, 48, 52, 55, 66, 75, 76, 81, 93, 151, 154, 155, 159, 161, 163, 170], "3": [0, 1, 4, 10, 25, 46, 94, 98, 107, 111, 126, 152, 158, 159, 160, 162, 173], "10": [0, 1, 3, 86, 151, 160], "6": [0, 158, 159, 160], "clear": [0, 120, 163, 170], "all": [0, 1, 6, 12, 13, 14, 15, 17, 22, 28, 29, 32, 35, 41, 48, 69, 70, 73, 75, 76, 77, 78, 80, 82, 84, 87, 90, 91, 92, 93, 100, 101, 114, 120, 128, 158, 160, 162, 165, 173], "cach": [0, 42, 87, 89, 173], "list": [0, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 100, 101, 104, 106, 107, 112, 114, 115, 116, 118, 120, 121, 123, 128, 136, 152, 158, 160, 161, 162, 165, 173], "pypi": [0, 4], "reinstal": 0, "open": [0, 3, 4], "enviro": 0, "shell": [0, 1, 4, 6, 11, 13, 14, 17, 22, 28, 48, 64, 66, 68, 69, 73, 75, 87, 99, 152, 165], "can": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 17, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 90, 92, 93, 151, 152, 153, 160, 161, 162, 164, 165, 168, 169], "interact": [0, 1, 28, 151, 153, 161], "call": [0, 6, 11, 104, 161, 164, 165], "python3": 0, "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "help": [0, 17, 115, 151, 153, 163], "To": [0, 4, 151, 158, 162, 165], "immedi": [0, 55, 87, 100, 101, 151], "chang": [0, 17, 29, 87, 161, 162], "reflect": 0, "reconfigur": 0, "point": [0, 4, 152, 158, 160, 162, 173], "your": [0, 4, 153, 160, 161], "copi": [0, 29, 66, 76, 87, 114, 120, 121, 153, 160, 161], "do": [0, 48, 50, 91, 98, 102, 103, 126, 151, 158, 162, 164, 165], "add": [0, 1, 12, 32, 35, 41, 63, 65, 76, 78, 82, 84, 87, 89, 90, 91, 92, 100, 101, 102, 103, 158, 159, 160, 162], "edit": 0, "home": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "updat": [0, 64, 69, 73, 98, 120, 126, 160, 161, 165, 173], "doe": [0, 6, 17, 20, 21, 23, 24, 38, 45, 66, 67, 70, 87, 100, 101, 102, 103, 120, 128, 151, 161, 165], "manual": 0, "modifi": [0, 6, 17, 66, 76, 151, 160, 161, 164, 165], "pyproject": 0, "toml": 0, "file": [0, 1, 3, 4, 6, 9, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 28, 29, 37, 38, 39, 40, 42, 43, 44, 48, 49, 55, 56, 58, 64, 66, 68, 69, 73, 75, 76, 86, 87, 91, 93, 98, 100, 101, 102, 103, 114, 118, 126, 153, 154, 155, 158, 159, 160, 162, 163, 165, 168, 169, 170], "replac": 0, "new2": 0, "0": [0, 1, 4, 10, 25, 46, 60, 70, 73, 83, 85, 86, 87, 94, 108, 110, 111, 113, 114, 115, 118, 158, 160, 164, 173], "2": [0, 10, 46, 60, 69, 73, 83, 93, 107, 108, 111, 120, 158, 159, 160, 162, 164, 165, 173], "0a14": 0, "path": [0, 1, 4, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 22, 25, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 100, 101, 102, 103, 114, 118, 120, 128, 132, 133, 152, 159, 160, 161, 165, 169, 173], "true": [0, 1, 6, 8, 11, 12, 15, 17, 22, 28, 29, 32, 35, 38, 41, 42, 43, 47, 48, 52, 53, 55, 63, 65, 67, 70, 75, 76, 78, 81, 82, 84, 86, 87, 91, 93, 95, 98, 99, 100, 101, 102, 103, 126, 128, 151, 159, 160, 162, 173], "Then": 0, "accordingli": 0, "lock": 0, "rm": [0, 1, 4], "re": [0, 29, 76], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "runner": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "There": [1, 4, 165, 169], "two": [1, 4, 6, 22, 89, 107, 153, 162, 164, 165], "wai": [1, 4, 64, 65, 153, 162, 164, 165], "task": [1, 6, 9, 15, 16, 17, 22, 25, 26, 28, 29, 30, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 66, 70, 71, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 100, 101, 128, 154, 155, 160, 163, 164, 170, 173], "mtex": [1, 116, 156, 157, 158, 159, 160], "script": [1, 3, 6, 17, 28, 43, 48, 55, 64, 66, 75, 87, 151, 159], "either": [1, 3, 15, 22, 86, 87, 91, 93, 101, 103, 107, 120, 151, 160], "compil": [1, 159, 160], "applic": [1, 4, 6, 17, 22, 25, 33, 48, 151, 153, 162], "directli": [1, 6, 17, 48, 53, 58, 76, 86, 107, 114, 160], "control": [1, 17, 64, 69, 70, 73, 156, 158, 161, 162, 169], "input": [1, 6, 9, 11, 15, 16, 17, 20, 21, 22, 23, 24, 26, 29, 42, 43, 44, 45, 46, 47, 50, 52, 53, 55, 56, 57, 66, 70, 71, 76, 77, 81, 83, 85, 86, 87, 91, 153, 158, 159, 160, 162, 164, 165, 166, 173], "paramet": [1, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 112, 114, 116, 118, 119, 121, 123, 124, 125, 126, 128, 132, 133, 135, 136, 137, 138, 139, 153, 154, 155, 159, 160, 162, 163, 164, 165, 166, 170, 173], "which": [1, 3, 6, 15, 17, 19, 20, 21, 23, 24, 25, 28, 29, 43, 45, 47, 48, 50, 52, 59, 66, 70, 75, 76, 81, 86, 87, 89, 91, 93, 95, 100, 101, 102, 103, 104, 106, 107, 115, 151, 152, 158, 160, 161, 162, 165, 173], "fals": [1, 6, 11, 12, 15, 16, 17, 20, 21, 22, 23, 24, 28, 29, 32, 35, 38, 41, 43, 48, 55, 58, 62, 63, 65, 67, 70, 75, 76, 78, 82, 84, 87, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 112, 126, 128, 151, 159, 160, 173], "default": [1, 6, 13, 14, 15, 16, 17, 22, 28, 29, 45, 46, 52, 54, 62, 63, 64, 66, 69, 70, 73, 76, 81, 87, 91, 93, 95, 100, 101, 107, 114, 116, 118, 120, 128, 151, 154, 157, 158, 160, 162, 163, 164], "when": [1, 6, 11, 17, 38, 44, 45, 48, 53, 56, 62, 66, 73, 87, 93, 100, 101, 102, 103, 151, 158, 161, 162, 164, 165, 173], "run_mtex": [1, 159], "execut": [1, 4, 6, 11, 15, 17, 22, 28, 31, 34, 35, 36, 48, 49, 52, 54, 66, 75, 81, 87, 93, 95, 100, 101, 128, 152, 153, 159, 162], "must": [1, 6, 8, 17, 43, 49, 53, 55, 65, 67, 70, 76, 152, 158, 160, 161, 162, 164, 165, 167], "defin": [1, 15, 17, 20, 21, 22, 23, 24, 29, 50, 52, 70, 76, 81, 87, 89, 91, 104, 153, 158, 159, 160, 164, 165], "compile_mtex": [1, 159], "run_compiled_mtex": [1, 159], "exectu": 1, "both": [1, 4, 86, 107], "fine": 1, "In": [1, 4, 48, 120, 160, 161, 162, 164, 165, 166, 169], "mean": [1, 70, 86, 87, 107, 164, 167, 173], "For": [1, 3, 6, 16, 17, 22, 70, 76, 77, 80, 87, 88, 112, 114, 118, 151, 157, 158, 160, 162, 165, 168, 169], "direct": [1, 13, 14, 48, 69, 73, 75, 87, 100, 101, 107, 111, 116, 128, 151, 152, 158, 159, 160, 162, 173], "matlab": [1, 157], "batch": [1, 73, 87], "document": [1, 7, 8, 31, 40, 52, 81, 93, 106, 151, 153, 161, 169], "here": [1, 87, 152, 153, 158, 162], "note": [1, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93, 160, 161, 162, 164, 165], "requir": [1, 6, 7, 8, 9, 11, 12, 17, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 90, 92, 93, 118, 151, 162, 165], "instal": [1, 2, 3, 118, 153], "perform": [1, 13, 14, 50, 64, 69, 73, 153], "via": [1, 4, 6, 17, 40, 76, 87, 114, 118, 160, 162, 165, 169], "explor": [1, 4, 151], "within": [1, 6, 7, 11, 15, 17, 22, 42, 47, 48, 49, 52, 58, 68, 70, 74, 75, 76, 81, 87, 89, 91, 151, 152, 153, 161, 163, 165], "gui": [1, 160], "todo": [1, 169, 173], "current": [1, 6, 48, 64, 66, 69, 73, 87, 91, 100, 101, 102, 103, 107, 151, 152, 160, 161], "test": [1, 6, 8, 13, 14, 43, 55, 64, 66, 67, 69, 73, 87, 100, 101, 116, 124, 125, 157, 159, 160], "onli": [1, 6, 15, 17, 22, 29, 42, 44, 48, 52, 56, 75, 76, 81, 86, 87, 98, 100, 101, 106, 107, 124, 128, 151, 160, 161, 162, 164], "name": [1, 4, 6, 8, 10, 11, 13, 14, 15, 17, 19, 20, 21, 23, 24, 25, 28, 31, 32, 33, 37, 38, 39, 40, 41, 42, 44, 46, 48, 50, 52, 53, 55, 56, 57, 60, 64, 66, 68, 69, 70, 73, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 107, 108, 110, 111, 113, 115, 151, 152, 158, 160, 161, 163, 164, 165, 169, 170, 173], "label": [1, 6, 11, 12, 16, 17, 20, 21, 22, 23, 24, 33, 35, 40, 47, 52, 53, 57, 70, 76, 81, 86, 118, 152, 158, 160, 162], "instanc": [1, 6, 7, 8, 9, 11, 12, 16, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 91, 92, 93, 98, 107, 151, 158, 162, 169], "command": [1, 3, 4, 6, 8, 12, 13, 14, 17, 31, 34, 36, 48, 52, 64, 68, 69, 73, 75, 81, 87, 96, 100, 101, 116, 127, 153, 154, 155, 160, 161, 162, 164, 165], "c": [1, 111, 114, 160], "ex": [1, 4, 14, 159, 162], "addpath": 1, "script_dir": 1, "script_name_no_ext": 1, "arg": [1, 38, 64, 69, 73, 124, 125, 151, 158, 160], "num_cor": [1, 13, 14, 28, 33, 34, 64, 66, 69, 73, 93, 152, 162, 165], "1": [1, 3, 10, 12, 15, 16, 22, 32, 35, 41, 46, 48, 53, 54, 60, 63, 65, 69, 73, 78, 82, 83, 84, 85, 86, 87, 90, 92, 107, 108, 110, 111, 113, 115, 158, 159, 160, 162, 164, 165, 173], "parallel_mod": [1, 28, 33, 34, 66, 152, 162], "null": [1, 70, 162], "mtex_path": 1, "mcc": 1, "bat": 1, "r": [1, 69, 151, 160, 173], "singlecompthread": 1, "m": [1, 159, 160, 165], "script_path": [1, 6], "o": [1, 28, 37, 39, 40, 48, 66, 151, 160], "matlab_ex": 1, "data": [1, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 22, 25, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 90, 91, 92, 93, 106, 107, 112, 114, 116, 118, 121, 152, 153, 156, 158, 159, 160, 165, 173], "plot": [1, 118], "plotting_tool": 1, "color": 1, "mat": [1, 160], "setup": [1, 31, 151], "set": [1, 11, 13, 15, 17, 22, 25, 26, 28, 29, 47, 53, 65, 66, 67, 69, 70, 73, 76, 87, 91, 93, 98, 100, 101, 120, 128, 152, 153, 157, 158, 160, 162, 163, 170, 173], "up": [1, 17, 22, 28, 31, 58, 59, 66, 67, 76, 87, 89, 91, 151, 173], "e": [1, 6, 17, 29, 47, 48, 66, 70, 93, 120, 151, 158, 160, 162, 165, 167, 173], "g": [1, 6, 17, 93, 151, 158, 160, 162, 165, 173], "load": [1, 4, 6, 52, 68, 76, 81, 87, 93, 114, 118, 131, 153, 156, 159, 160, 161, 163, 170], "matlab_dir": 1, "runtim": [1, 173], "directori": [1, 6, 15, 17, 37, 38, 39, 40, 43, 48, 55, 68, 69, 73, 75, 76, 87, 91, 100, 101, 102, 103, 151, 152, 160, 162], "dream_3d_runn": [1, 159], "pipelin": [1, 153, 156, 159, 160], "process": [1, 9, 10, 11, 13, 14, 48, 64, 69, 73, 75, 87, 98, 153, 158, 160], "json": [1, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 90, 92, 93, 98, 100, 101, 102, 103, 106, 107, 112, 114, 116, 118, 121, 151, 152, 159, 160, 165, 169], "python_script": [1, 159, 162], "gener": [1, 4, 6, 9, 15, 17, 43, 44, 48, 53, 58, 65, 67, 75, 76, 86, 87, 89, 93, 100, 101, 102, 103, 107, 114, 116, 118, 123, 131, 134, 139, 151, 152, 159, 160, 162, 163, 170, 173], "python": [1, 2, 3, 6, 17, 28, 38, 66, 79, 151, 152, 153, 154, 157, 160, 161, 163, 166, 167, 169], "dream3d": [1, 115], "bin": [1, 13, 73], "pipelinerunn": [1, 160], "The": [1, 4, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 100, 101, 102, 103, 104, 106, 107, 108, 110, 114, 116, 118, 120, 121, 151, 152, 153, 158, 160, 161, 162, 165, 173], "includ": [1, 8, 15, 17, 22, 29, 48, 52, 68, 75, 76, 81, 86, 87, 93, 98, 100, 101, 102, 103, 121, 128, 151, 158, 160, 161, 162, 165, 167], "defdap": [1, 154, 157, 159], "work": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "93": [1, 160], "4": [1, 10, 111, 114, 160, 162], "numpi": [1, 75, 86, 87, 100, 101, 102, 103, 107, 114, 151, 157, 173], "23": 1, "5": [1, 73, 111, 158, 160], "we": [1, 4, 29, 53, 64, 69, 73, 87, 114, 151, 153, 158, 160, 161, 162, 164, 165, 169], "our": 1, "cento": 1, "docker": 1, "imag": [1, 158, 159, 173], "org": [1, 3, 69, 73, 153, 160, 169], "hpcflow": [1, 2, 4, 6, 15, 16, 17, 18, 22, 27, 29, 50, 76, 87, 89, 91, 124, 154, 167], "produc": [1, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93, 160], "relocat": 1, "conda": 1, "matflow": [1, 2, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pack": [1, 58], "becaus": [1, 17, 70, 87, 100, 101, 102, 103, 104, 151, 153, 162, 165], "glibc": 1, "compat": [1, 4, 33, 70, 87, 98, 151, 165], "contain": [1, 4, 6, 7, 8, 9, 11, 12, 15, 17, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 89, 90, 92, 93, 100, 101, 103, 104, 118, 123, 151, 152, 160], "miniconda": 1, "bash": [1, 4, 13, 73, 151, 152], "http": [1, 3, 4, 69, 73, 114, 115, 153, 160, 169], "doc": [1, 8, 31, 40, 52, 67, 81, 93, 151, 153], "io": [1, 153], "project": [1, 4], "en": [1, 153], "latest": [1, 4, 15, 153, 162], "user": [1, 3, 4, 13, 14, 43, 58, 69, 73, 107, 162, 169], "guid": [1, 3], "html": [1, 52, 69, 81, 114, 153], "initialis": [1, 22, 29, 70, 76, 91, 114, 118], "init": 1, "reload": [1, 87, 152], "bashrc": [1, 4], "sourc": [1, 2, 3, 6, 15, 17, 26, 29, 42, 44, 45, 46, 47, 52, 55, 56, 66, 70, 76, 81, 83, 85, 86, 87, 91, 161, 164, 168], "pars": [1, 13, 14, 17, 45, 55, 56, 64, 76, 87, 100, 101, 102, 103, 151, 154], "n": [1, 160, 173], "matflow_damask_parse_v3a7_env": 1, "libgl": 1, "vtk": 1, "packag": [1, 3, 104, 153], "yum": 1, "mesa": 1, "activ": [1, 3, 4, 48, 75, 98], "pip": 1, "deactiv": 1, "tarbal": 1, "save": [1, 6, 29, 42, 44, 47, 48, 55, 56, 66, 76, 85, 86, 87, 114, 152, 161], "result": [1, 3, 6, 7, 8, 9, 11, 12, 17, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 90, 91, 92, 93, 107, 158, 160, 173], "compress": [1, 153, 160], "outsid": 1, "transfer": [1, 159], "target": [1, 48, 107, 160], "machin": [1, 6, 17, 22, 28, 48, 75, 98, 152, 153, 161, 162], "On": [1, 70], "unpack": 1, "mkdir": 1, "tar": 1, "xzf": 1, "gz": 1, "now": [1, 98, 158, 162], "normal": [1, 52, 53, 54, 58, 81, 86, 107, 151, 158, 165, 173], "abov": [1, 4, 164, 165], "resourc": [1, 4, 13, 14, 17, 22, 28, 29, 48, 64, 65, 66, 69, 73, 76, 86, 87, 91, 93, 151, 153, 162, 165], "index": [1, 3, 6, 12, 15, 16, 17, 22, 29, 32, 35, 41, 47, 48, 49, 63, 64, 65, 75, 76, 78, 82, 84, 85, 87, 89, 90, 91, 92, 108, 110, 128, 151, 158, 164, 173], "manag": [1, 3, 11, 17, 33, 48, 52, 58, 81, 87, 153, 161, 170], "an": [1, 3, 4, 6, 7, 8, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 92, 93, 106, 107, 112, 114, 116, 118, 120, 121, 128, 134, 151, 152, 153, 158, 159, 160, 162, 165, 168, 169, 173], "160": [1, 160], "damask_parse_env": 1, "matflow_damask_parse_env": 1, "damask_env": 1, "damask_grid": [1, 159], "volum": [1, 107, 158, 159, 160], "pwd": [1, 159], "wd": 1, "omp_num_thread": 1, "eisenforschung": 1, "grid": [1, 158, 159, 160], "alpha7": 1, "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173], "matlab_env": 2, "exampl": [2, 3, 4, 6, 22, 45, 70, 88, 106, 107, 151, 152, 158, 162, 163, 164, 168, 170], "definit": [2, 45, 112, 118, 162], "window": [2, 4, 14, 48, 66, 75, 151], "linux": [2, 4], "maco": [2, 4], "dream_3d_env": 2, "defdap_env": 2, "damask_pars": [2, 157, 158], "damask": [2, 106, 116, 154, 156, 157, 158, 159, 160, 170, 172], "contribut": [2, 3, 4], "recommend": [2, 4], "read": [2, 11, 114, 118, 160], "clone": 2, "repo": 2, "depend": [2, 4, 15, 17, 22, 28, 29, 48, 49, 66, 87, 89, 91, 93, 151, 153, 162, 164, 173], "poetri": 2, "framework": 3, "comput": [3, 28, 66, 153, 173], "materi": [3, 153, 156, 158, 159, 160, 170], "scienc": [3, 153, 160, 170], "workflow": [3, 4, 6, 11, 15, 17, 22, 29, 38, 40, 42, 44, 45, 47, 48, 49, 50, 52, 55, 56, 58, 61, 62, 65, 66, 70, 75, 76, 81, 85, 86, 88, 89, 90, 91, 92, 93, 95, 98, 100, 101, 102, 103, 106, 107, 112, 114, 116, 118, 121, 126, 128, 154, 159, 161, 163, 165, 170, 173], "It": [3, 4, 28, 152], "design": [3, 4, 153], "flexibl": 3, "extens": [3, 6, 37, 38, 40, 42, 44, 56, 87, 93], "allow": [3, 4, 29, 43, 55, 70, 76, 87, 100, 101, 114, 118, 128, 151, 153, 165], "link": [3, 4], "togeth": [3, 6, 17, 48, 53, 86, 87, 165], "exist": [3, 29, 48, 63, 67, 70, 76, 87, 100, 101, 102, 103, 128, 151, 152, 153, 161, 162, 164], "tool": [3, 153], "anlaysi": 3, "cohes": 3, "deploi": 3, "local": [3, 4, 15, 17, 22, 29, 45, 46, 76, 87, 91, 151, 152, 164, 169], "power": 3, "system": [3, 4, 13, 28, 48, 64, 66, 97, 99, 151, 153, 157], "These": [3, 160, 161, 167], "describ": [3, 11, 52, 81, 117, 158], "form": [3, 6, 52, 81, 87], "simpl": [3, 4, 86, 160, 162, 163, 170], "yaml": [3, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 90, 92, 93, 100, 101, 102, 103, 114, 118, 131, 134, 139, 151, 156, 159, 162, 165, 168, 169], "text": [3, 48, 49, 67, 87, 114, 118, 151], "share": [3, 4, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93, 153], "reus": 3, "reproduc": [3, 153], "wa": [3, 4, 15, 17, 22, 29, 48, 50, 65, 87, 89, 93], "origin": [3, 16, 22, 42, 45, 159, 160], "develop": [3, 4, 87], "adam": 3, "plowman": 3, "lightform": [3, 153], "uk": [3, 73], "peopl": 3, "dr": [3, 69], "support": [3, 4, 6, 13, 14, 28, 34, 48, 54, 64, 69, 73, 87, 99, 100, 101, 107, 128, 151, 160, 169], "research": [3, 160], "univers": [3, 76], "manchest": [3, 73], "clari": 3, "formerli": 3, "group": [3, 6, 17, 19, 29, 41, 42, 44, 47, 48, 56, 61, 66, 70, 75, 76, 85, 91, 106, 107, 112, 114, 116, 118, 121, 153, 160, 165, 173], "collabor": 3, "ukaea": 3, "usag": [3, 73], "et": [3, 160], "al": [3, 160], "2023": 3, "doi": [3, 160], "12688": 3, "materialsopenr": 3, "17516": 3, "cli": [3, 151, 154, 160, 161, 169], "download": [3, 153], "binari": [3, 158, 160], "advanc": 3, "releas": [3, 162], "how": [3, 6, 11, 26, 28, 29, 44, 47, 56, 60, 66, 70, 71, 74, 76, 107, 110, 112, 113, 114, 151, 153, 170], "tutori": [3, 170], "refer": [3, 20, 21, 23, 24, 45, 48, 69, 73, 87, 93, 114, 115, 151, 152, 153, 160, 161, 165, 169, 173], "api": [3, 4, 154, 158, 160, 161, 163, 166], "line": [3, 4, 6, 11, 13, 14, 48, 49, 64, 69, 73, 96, 114, 118, 126, 153, 154, 160], "interfac": [3, 4, 96, 153, 154], "templat": [3, 17, 22, 29, 38, 50, 52, 65, 66, 76, 81, 84, 87, 88, 89, 91, 93, 100, 101, 102, 103, 151, 154, 160, 161, 163, 164, 165, 170, 173], "compon": [3, 6, 15, 74, 86, 87, 107, 115, 116, 151, 154, 160, 161, 163, 165, 170], "demo": [3, 100, 102, 152, 154, 173], "configur": [3, 28, 76, 87, 118, 130, 154, 162, 163, 170], "glossari": [3, 154], "search": [3, 38], "page": [3, 4], "option": [4, 6, 13, 14, 17, 40, 47, 52, 55, 57, 64, 65, 67, 69, 70, 73, 81, 91, 107, 151, 152, 158, 160, 161, 162, 169], "beginn": 4, "strongli": 4, "want": [4, 161, 162, 164], "cluster": [4, 154], "comfort": 4, "interest": 4, "place": 4, "start": [4, 6, 10, 17, 46, 48, 53, 54, 60, 75, 83, 86, 87, 108, 110, 111, 113, 114, 115, 118, 160, 162, 167], "simultan": [4, 87, 100, 101, 128, 151], "through": [4, 70, 163], "termin": [4, 15, 22, 50, 87, 89], "prompt": 4, "past": 4, "shown": [4, 151], "press": 4, "enter": [4, 31], "touch": 4, "tmp": [4, 75], "sh": [4, 69], "curl": 4, "fssl": 4, "raw": 4, "githubusercont": 4, "main": [4, 9, 10, 74, 75], "src": 4, "prereleas": 4, "univlink": 4, "powershel": [4, 14, 151, 152], "scriptblock": 4, "object": [4, 6, 7, 8, 9, 11, 12, 15, 18, 19, 22, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 90, 91, 92, 93, 102, 103, 104, 106, 114, 120, 131, 134, 139, 151, 160, 162, 164, 165, 166, 167, 169], "net": [4, 69, 115], "webclient": 4, "downloadstr": 4, "ps1": 4, "repositori": [4, 153, 168], "zip": [4, 87, 152, 169], "archiv": [4, 152, 169], "singl": [4, 47, 48, 65, 70, 76, 87, 91, 106, 107, 119, 120, 121, 151, 158, 160, 165, 169], "extract": [4, 6, 61, 69, 73, 106, 107, 112, 114, 116, 118, 121, 160], "access": [4, 12, 17, 32, 35, 41, 63, 65, 78, 82, 84, 90, 92, 107, 160], "locat": [4, 151, 158, 160, 161], "oper": [4, 34, 97, 99, 151, 158], "librari": [4, 153], "usernam": 4, "appdata": 4, "A": [4, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 32, 33, 34, 35, 40, 41, 47, 48, 49, 50, 52, 53, 54, 58, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 89, 90, 92, 93, 106, 107, 111, 112, 114, 116, 120, 131, 139, 152, 153, 158, 160, 162, 163, 165, 170], "symbol": [4, 108], "alia": [4, 48, 151], "ad": [4, 26, 47, 65, 87, 89, 91], "zshrc": 4, "profil": 4, "ani": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 100, 101, 102, 103, 106, 107, 112, 114, 116, 118, 121, 151, 161, 162, 165], "detect": 4, "alreadi": [4, 42, 65, 87, 100, 101, 102, 103, 151], "stop": [4, 36, 43, 50, 53, 54, 86, 160, 162], "exit": [4, 17, 87, 151], "check": [4, 8, 29, 45, 67, 76, 87, 89, 91, 114, 151, 159], "success": [4, 17], "print": [4, 48, 75, 87, 151, 161, 166], "give": [4, 158], "error": [4, 6, 11, 13, 14, 28, 48, 64, 66, 68, 69, 73, 75, 87, 151, 152, 156], "connect": 4, "internet": 4, "might": [4, 13, 14, 158, 161, 162], "proxi": 4, "separ": [4, 48, 114, 118, 151, 165], "differ": [4, 6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 90, 92, 93, 153, 160, 162, 164, 165], "avoid": [4, 114], "conflict": [4, 104], "have": [4, 6, 13, 14, 17, 22, 28, 52, 53, 65, 75, 81, 89, 151, 153, 158, 161, 162, 165, 169], "correct": [4, 66], "confirm": 4, "appear": [4, 6, 13, 14, 69, 73], "bracket": [4, 70], "9": [4, 160], "14": 4, "newest": 4, "avail": [4, 76, 124, 151, 152, 162, 165], "come": [4, 15, 22, 29, 45, 76, 91, 160], "soon": 4, "format": [4, 6, 17, 38, 52, 64, 69, 73, 81, 87, 93, 100, 101, 102, 103, 151, 153, 160, 162, 165, 168, 169], "correspond": [4, 6, 17, 29, 53, 75, 91, 106, 107, 114, 118, 120, 153, 162, 165], "pyinstal": 4, "platform": 4, "executablematflow": 4, "v0": 4, "0a151": [4, 25, 94, 152], "linuxlinux": 4, "foldermatflow": 4, "dir": 4, "zipmaco": 4, "macosmaco": 4, "zipwindow": 4, "win": 4, "switcher": 4, "top": [4, 17, 86, 152, 153, 160], "right": [4, 86, 160], "corner": 4, "other": [4, 15, 22, 28, 45, 55, 65, 70, 76, 87, 91, 115, 162, 164, 165, 173], "attribut": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 162, 167], "function": [5, 17, 48, 75, 122, 124, 130, 141, 144, 149, 151, 152, 158, 159, 160, 162, 169], "class": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 152, 158], "none": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 98, 100, 101, 102, 103, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 126, 127, 128, 159, 160, 173], "script_data_in": [6, 162], "script_data_out": [6, 162], "script_data_files_use_opt": 6, "script_ex": [6, 162], "script_pass_env_spec": [6, 43, 55, 162], "abort": [6, 36, 43, 55, 87], "input_file_gener": [6, 9, 10, 159], "output_file_pars": [6, 9, 10, 159], "input_fil": [6, 15, 16, 17, 22, 29, 43, 76, 91, 159, 160], "output_fil": [6, 15, 16, 17, 22, 55, 159], "rule": [6, 8, 11, 18, 19, 27, 43, 45, 50, 55, 57, 167], "save_fil": [6, 55], "clean_up": [6, 55], "requires_dir": [6, 43, 55], "base": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121], "atom": [6, 17], "enact": [6, 7, 15, 16, 17], "iter": [6, 8, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 32, 35, 41, 45, 50, 52, 62, 63, 65, 67, 70, 75, 76, 78, 81, 82, 84, 87, 89, 90, 91, 92, 120, 160, 164], "structur": [6, 7, 8, 9, 11, 12, 17, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 90, 92, 93, 160], "actionenviron": 6, "str": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 106, 107, 108, 110, 112, 114, 116, 118, 120, 121, 123, 124, 125, 152, 158], "inform": [6, 16, 17, 22, 26, 48, 49, 52, 69, 75, 81, 87, 89, 91, 93, 97, 98, 99, 109, 118, 126, 128, 151, 158, 163, 170], "about": [6, 16, 17, 22, 48, 52, 69, 81, 91, 97, 98, 99, 126, 151, 163, 169, 170], "output": [6, 9, 11, 13, 14, 15, 16, 17, 22, 23, 24, 28, 45, 48, 52, 55, 56, 57, 64, 66, 69, 70, 71, 73, 75, 76, 80, 81, 83, 87, 89, 91, 126, 127, 151, 153, 156, 158, 159, 160, 162, 164, 165, 166, 173], "bool": [6, 8, 11, 12, 13, 14, 15, 16, 17, 22, 25, 28, 29, 32, 35, 38, 41, 42, 43, 44, 47, 48, 52, 53, 55, 56, 58, 62, 63, 64, 65, 66, 67, 69, 70, 73, 75, 76, 78, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 107, 112, 114, 118, 126, 128, 158], "pass": [6, 11, 13, 14, 17, 28, 43, 55, 66, 69, 73, 75, 76, 87, 93, 100, 101, 102, 103, 107, 151, 160], "like": [6, 12, 17, 32, 35, 41, 53, 63, 65, 73, 78, 82, 84, 87, 90, 92, 93, 104, 107, 120, 151, 152, 160, 161, 162, 165, 169], "hdf5": [6, 61, 106, 107, 112, 114, 116, 118, 121, 156, 159], "etc": [6, 17, 48, 87, 173], "own": [6, 25, 42, 44, 56, 66], "alwai": [6, 70, 71, 87, 100, 101, 102, 103, 151], "overwritten": [6, 87, 100, 101, 102, 103, 151], "regardless": [6, 87], "its": [6, 22, 29, 48, 52, 76, 81, 89, 91, 161, 162, 164, 165], "initi": [6, 15, 93, 121, 158, 167], "valu": [6, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 28, 29, 31, 32, 35, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 69, 70, 73, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 123, 151, 152, 158, 159, 160, 162, 163, 164, 165, 173], "whether": [6, 11, 13, 14, 15, 17, 22, 25, 28, 29, 38, 42, 43, 44, 47, 48, 49, 52, 55, 56, 58, 62, 64, 66, 69, 70, 71, 73, 75, 76, 81, 85, 87, 93, 95, 101, 112, 128, 158], "detail": [6, 17, 76, 155, 158, 167, 169], "inputfilegener": [6, 44], "outputfilepars": [6, 56], "parser": [6, 9, 17, 55, 56, 135, 162], "filespec": [6, 12, 42, 43, 44, 55, 56], "": [6, 13, 14, 15, 16, 17, 29, 42, 44, 47, 48, 52, 53, 56, 58, 69, 73, 75, 76, 81, 85, 87, 89, 91, 100, 101, 102, 103, 106, 116, 120, 151, 153, 155, 159, 160, 162, 164, 165, 173], "actionrul": [6, 11, 43, 55], "determin": [6, 13, 14, 17, 64, 67, 70, 75, 101, 103, 151, 158], "explicitli": [6, 17, 70], "after": [6, 17, 29, 87], "each": [6, 15, 17, 22, 28, 48, 49, 53, 65, 75, 76, 86, 87, 89, 91, 100, 101, 126, 151, 152, 158, 160, 162, 165, 173], "step": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93, 106, 107, 160], "method": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 100, 101, 102, 103, 106, 107, 108, 110, 112, 114, 116, 118, 120, 121, 167], "compose_sourc": 6, "snip_path": 6, "content": [6, 42, 44, 48, 56, 87, 151], "return": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 112, 114, 116, 118, 120, 121, 123, 124, 125, 126, 127, 128, 131, 134, 139, 151, 152, 173], "type": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 121, 123, 124, 125, 126, 127, 128, 131, 134, 139, 151, 152, 158, 160, 162, 165, 167], "static": [6, 13, 14, 28, 64, 68, 69, 73, 75, 76, 91, 114], "env_spec_from_hash": 6, "env_spec_h": 6, "tupl": [6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 100, 101, 114, 118, 120, 123, 173], "dict": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 100, 101, 102, 103, 106, 107, 112, 114, 116, 118, 120, 121, 128, 152, 158], "env_spec_to_hash": 6, "env_spec": [6, 17, 162], "map": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75, 76, 78, 79, 81, 82, 84, 85, 87, 89, 90, 91, 92, 93, 97, 100, 101, 120, 128, 151, 152, 158, 160, 162, 165], "expand": 6, "necessari": [6, 162], "convert": [6, 7, 8, 9, 11, 12, 17, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 90, 92, 93, 169], "sequenc": [6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 98, 100, 101, 106, 160, 165], "classmethod": [6, 7, 8, 9, 11, 12, 13, 14, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 106, 107, 112, 114, 116, 118, 121], "from_json_lik": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93, 114, 118, 158], "json_lik": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93], "shared_data": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93], "jsone": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 50, 51, 52, 54, 56, 57, 58, 59, 63, 65, 66, 67, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 90, 92, 93], "deserialis": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93], "objectlist": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 50, 51, 52, 54, 56, 57, 58, 59, 63, 65, 66, 67, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 90, 92, 93], "jsonabl": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93], "context": [6, 7, 8, 9, 11, 12, 17, 18, 19, 25, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 90, 92, 93], "generate_data_index": 6, "act_idx": 6, "ear_id": [6, 22, 48, 49, 87, 151], "schema_data_idx": 6, "all_data_idx": 6, "param_sourc": 6, "element": [6, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 43, 45, 48, 49, 53, 55, 61, 62, 64, 65, 66, 67, 69, 70, 73, 75, 76, 77, 80, 87, 89, 91, 93, 106, 107, 108, 112, 114, 116, 118, 121, 123, 127, 151, 158, 159, 160, 162, 173], "whose": [6, 12, 17, 32, 35, 41, 47, 52, 63, 70, 76, 78, 81, 82, 84, 87, 89, 91, 123, 151, 152, 158, 173], "overal": [6, 17, 22], "mutat": [6, 13, 14, 64, 69, 73, 91], "int": [6, 12, 13, 14, 15, 16, 17, 22, 27, 28, 29, 32, 33, 34, 35, 36, 41, 42, 44, 45, 47, 48, 49, 50, 52, 53, 54, 56, 59, 61, 63, 64, 65, 66, 69, 70, 73, 75, 76, 78, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 95, 98, 100, 101, 106, 107, 108, 110, 112, 114, 116, 118, 120, 121, 123, 124, 125, 126, 128, 158, 164, 165, 173], "dataindex": [6, 15, 16, 17, 22, 25, 91], "paramsourc": [6, 15, 16, 17, 22, 42, 44, 47, 52, 56, 66, 81, 85, 86, 87], "get_block_act_idx_shell_var": 6, "jobscript": [6, 13, 14, 17, 28, 49, 64, 66, 68, 69, 73, 75, 87, 100, 101, 127, 128], "block": [6, 17, 48, 49, 87, 100, 101, 151, 162, 165], "idx": [6, 76, 151, 173], "variabl": [6, 11, 17, 64, 69, 73, 87, 93, 100, 101, 102, 103, 151, 152, 165], "substitut": [6, 11, 87, 93, 100, 101, 102, 103, 151], "seem": [6, 115], "agnost": [6, 28], "least": 6, "those": [6, 17, 28, 70, 87, 152, 162, 165], "blockactionkei": [6, 17, 48, 68, 87], "get_command_file_label": 6, "get": [6, 11, 12, 13, 14, 15, 16, 17, 22, 25, 28, 29, 32, 35, 37, 38, 39, 41, 42, 43, 44, 48, 49, 50, 52, 55, 56, 63, 64, 65, 68, 69, 70, 73, 75, 76, 78, 81, 82, 83, 84, 87, 89, 90, 91, 92, 97, 99, 120, 152, 163, 170, 173], "get_command_input_typ": 6, "sub_paramet": [6, 58], "sub": [6, 29, 47, 75, 76, 86, 87, 104, 161, 162, 173], "dot": [6, 12, 32, 35, 41, 45, 47, 63, 78, 82, 84, 90, 91, 92, 151, 173], "delimit": [6, 45, 47, 49, 114, 118, 151, 160], "untouch": 6, "root": 6, "disregard": 6, "part": [6, 15, 17, 22, 25, 47, 58, 75, 86, 89, 165], "get_command_output_typ": 6, "stdout": [6, 11, 13, 14, 17, 64, 69, 73, 87, 159, 162, 164, 165], "stderr": [6, 11, 17, 87, 159], "argument": [6, 9, 11, 13, 14, 17, 28, 29, 38, 47, 64, 65, 66, 69, 70, 73, 87, 93, 100, 101, 102, 103, 106, 107, 151, 158, 162], "get_command_parameter_typ": 6, "get_commands_action_env": 6, "actual": [6, 11, 17, 34, 38, 42, 44, 56], "get_commands_file_hash": [6, 17], "data_idx": [6, 17, 22, 25], "action_idx": [6, 15, 16, 22, 48, 49], "hash": [6, 12, 13, 14, 17, 28, 32, 35, 41, 58, 63, 64, 69, 73, 78, 82, 84], "same": [6, 17, 22, 29, 42, 44, 48, 56, 76, 87, 91, 153, 160, 163, 164, 165, 170], "stabl": [6, 17, 87, 153, 162], "across": [6, 15, 17, 48, 53, 77, 80, 151], "session": [6, 17, 161], "get_environ": [6, 17], "primari": [6, 158, 160], "get_environment_nam": 6, "get_environment_spec": [6, 17], "specif": [6, 13, 14, 17, 22, 28, 34, 37, 39, 40, 52, 64, 66, 69, 73, 81, 85, 91], "envion": 6, "assum": [6, 70, 87, 95, 114, 151], "ha": [6, 17, 20, 21, 22, 23, 24, 48, 70, 106, 120, 151, 159, 162, 165], "been": [6, 17, 22, 48, 75, 89, 151], "get_input_file_generator_action_env": 6, "get_input_file_label": 6, "get_input_typ": 6, "consum": 6, "get_output_file_label": 6, "get_output_file_parser_action_env": 6, "get_output_typ": [6, 11], "standard": [6, 11, 13, 14, 17, 28, 42, 48, 64, 66, 68, 69, 73, 75, 87, 130, 151, 156], "get_param_dump_file_path_hdf5": 6, "block_act_kei": [6, 17, 48, 68, 87], "dump": [6, 68, 107, 158], "get_param_dump_file_path_json": 6, "get_param_load_file_path_hdf5": 6, "get_param_load_file_path_json": 6, "get_parameter_depend": [6, 52, 81], "where": [6, 8, 15, 16, 17, 19, 22, 27, 38, 42, 44, 45, 47, 48, 49, 52, 56, 57, 65, 66, 67, 75, 76, 81, 85, 87, 89, 91, 100, 101, 102, 103, 107, 120, 121, 151, 152, 158, 160, 162, 173], "given": [6, 10, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 26, 29, 32, 33, 35, 41, 43, 45, 46, 49, 52, 55, 60, 63, 64, 67, 69, 73, 75, 76, 78, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 99, 108, 110, 111, 113, 115, 120, 151, 164], "schemaparamet": [6, 52, 81], "parameterdepend": 6, "get_parameter_nam": [6, 16, 17, 22], "prefix": [6, 16, 17, 20, 21, 22, 23, 24, 47, 68, 69, 73, 76, 86], "associ": [6, 16, 17, 20, 21, 22, 23, 24, 25, 29, 47, 49, 68, 70, 75, 76, 87, 91, 93, 108, 151, 158, 162], "would": [6, 22, 53, 104, 162], "p1": [6, 22, 70, 162, 164, 165], "p2": [6, 22, 162, 165], "ignor": [6, 16, 17, 22, 29, 52, 76, 81, 87, 93, 151], "accept": [6, 12, 22, 32, 35, 41, 47, 63, 78, 82, 84], "one": [6, 17, 22, 29, 50, 53, 58, 64, 65, 67, 70, 76, 86, 87, 89, 91, 100, 101, 102, 103, 107, 151, 158, 160, 162, 164, 165], "distinct": [6, 22, 29, 76], "taskschema": [6, 52, 59, 70, 76, 82, 165, 166], "level": [6, 17, 22, 93, 152, 161, 162], "wherea": [6, 22, 115, 160], "schema": [6, 9, 15, 17, 20, 21, 22, 23, 24, 41, 51, 52, 55, 57, 58, 70, 72, 76, 77, 80, 81, 82, 151, 154, 155, 160, 163, 164, 165, 170], "One": [6, 16, 17, 22, 89, 93, 95, 99, 107], "get_possible_scop": 6, "scope": [6, 7, 9, 10, 17, 22, 29, 65, 66, 76, 86, 87, 93, 159, 162], "inclus": 6, "order": [6, 26, 53, 86, 91, 110, 112, 115, 120, 160, 165, 173], "decreas": 6, "sdk": [6, 15, 16, 17, 18, 22, 27, 29, 76, 87, 89, 91, 167], "core": [6, 13, 14, 15, 16, 17, 18, 22, 27, 28, 29, 33, 34, 54, 64, 66, 69, 73, 76, 87, 89, 91, 107, 167], "actionscop": [6, 7, 65, 66], "get_precise_scop": 6, "exact": 6, "prior": [6, 67], "get_required_execut": [6, 11], "get_script_artifact_nam": [6, 17], "ret_specifi": 6, "include_suffix": 6, "specs_suffix_delim": 6, "write": [6, 11, 17, 48, 49, 61, 106, 107, 112, 114, 116, 118, 121, 151, 158, 162, 165], "artifact": [6, 17, 87], "get_script_nam": [6, 17], "snippet": [6, 17, 162, 163], "get_script_determinant_hash": 6, "uniqu": [6, 12, 13, 14, 32, 35, 41, 63, 64, 65, 69, 73, 75, 76, 78, 82, 84, 87, 90, 91, 92], "get_script_determin": 6, "affect": 6, "get_script_input_output_file_command_arg": 6, "get_script_input_output_file_path": 6, "final": [6, 7, 8, 9, 11, 12, 15, 18, 19, 22, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 89, 90, 92, 93, 165], "get_snippet_script_path": 6, "specifi": [6, 13, 14, 15, 17, 19, 22, 28, 29, 31, 39, 43, 47, 50, 55, 65, 66, 67, 69, 70, 73, 75, 76, 86, 87, 89, 91, 93, 100, 101, 102, 103, 107, 120, 151, 152, 158, 160, 163, 165, 169], "also": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 90, 92, 93, 114, 118, 158, 160, 161, 162, 165, 167], "kei": [6, 12, 17, 31, 32, 35, 41, 49, 52, 63, 70, 75, 76, 78, 81, 82, 84, 91, 98, 106, 120, 151, 152, 158, 160, 162, 165], "found": [6, 17, 98, 120, 173], "get_snippet_script_str": 6, "complet": [6, 13, 14, 36, 73, 87, 89, 100, 101, 128, 151, 165], "properti": [6, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 36, 38, 40, 42, 44, 47, 48, 49, 50, 52, 53, 56, 58, 64, 65, 66, 69, 70, 71, 72, 73, 75, 76, 81, 85, 86, 87, 89, 91, 106, 107, 108, 110, 118, 121, 166], "is_ifg": 6, "is_ofp": 6, "is_input_type_requir": [6, 76], "typ": [6, 9, 15, 16, 17, 22, 58, 70, 71, 72, 76, 159, 167], "provided_fil": 6, "is_snippet_script": [6, 17], "provid": [6, 9, 17, 29, 50, 52, 58, 63, 67, 76, 81, 87, 120, 126, 151, 152, 160, 161, 162, 164, 165, 168], "string": [6, 9, 17, 42, 44, 45, 47, 48, 52, 56, 66, 70, 75, 76, 81, 87, 93, 100, 101, 102, 103, 107, 151, 152, 158, 162, 165], "repres": [6, 8, 9, 17, 26, 29, 43, 49, 52, 55, 58, 66, 67, 70, 77, 80, 81, 87, 89, 91, 93, 100, 101, 106, 107, 112, 113, 114, 151, 173], "receiv": [6, 17, 162], "process_script_data_format": 6, "scriptdata": 6, "script_data_in_group": 6, "script_data_in_has_direct": 6, "app": [6, 25, 28, 48, 50, 66, 68, 75, 76, 87, 124, 151, 152, 162, 168, 169], "script_data_in_has_fil": 6, "intermedi": 6, "script_data_out_group": 6, "out": [6, 48, 68, 107, 120, 151, 159, 165, 173], "script_data_out_has_direct": 6, "script_data_out_has_fil": 6, "script_is_python_snippet": 6, "task_schema": [6, 70, 165], "came": 6, "test_rul": 6, "element_it": [6, 18, 45, 89], "against": [6, 28, 162], "elementiter": [6, 8, 15, 16, 17, 18, 20, 21, 23, 24, 25, 29, 67, 87, 91], "to_dict": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93, 106, 107, 112, 114, 116, 118, 121], "serial": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93], "dictionari": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93, 106, 107, 112, 114, 116, 118, 120, 121, 158], "to_json_lik": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93], "dct": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93], "exclud": [6, 7, 8, 9, 11, 12, 18, 19, 22, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93, 98, 99, 151], "trivial": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93], "just": [6, 7, 8, 9, 11, 12, 17, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 91, 92, 93, 161], "_jsondeserst": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93], "jsondocu": [6, 7, 8, 9, 11, 12, 18, 19, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 90, 92, 93], "action": [7, 8, 9, 10, 11, 15, 16, 17, 20, 21, 22, 23, 24, 43, 48, 49, 52, 55, 66, 67, 75, 76, 81, 87, 91, 93, 159, 164, 165], "check_exist": [8, 67], "check_miss": [8, 67], "condit": [8, 50, 67, 87, 107, 152, 158, 160], "cast": [8, 47, 67], "appli": [8, 15, 17, 18, 45, 57, 66, 67, 70, 85, 87, 93, 105, 106, 107, 110, 112, 120, 121, 158, 159, 162, 165, 167], "special": [8, 157], "enabl": [8, 55, 64, 69, 73], "present": [8, 17, 33, 120], "absent": [8, 17, 62], "conditionlik": [8, 67], "more": [8, 16, 17, 29, 53, 64, 65, 70, 76, 87, 89, 107, 126, 162, 164, 167, 169], "complex": [8, 28, 107, 114, 118], "guard": 8, "element_iter": [8, 16, 17, 20, 21, 23, 24, 29], "hold": [8, 48], "particular": [8, 13, 14, 16, 17, 22, 34, 40, 48, 64, 69, 70, 71, 73, 87, 91, 100, 101, 102, 103, 151, 158, 162], "kwarg": [9, 12, 13, 14, 32, 35, 41, 63, 64, 65, 67, 69, 73, 78, 82, 84, 86, 87, 90, 92, 106, 118], "identif": 9, "subset": [9, 17, 57, 76, 87, 89, 160, 164], "filter": [9, 13, 14, 18, 19, 22, 27, 28, 45, 57, 69, 73, 115, 160], "actionscopetyp": 9, "extra": 9, "keyword": [9, 13, 14, 47, 65, 69, 70, 73, 87, 100, 101, 102, 103], "to_str": [9, 45], "render": [9, 40, 45, 64], "qualnam": [10, 46, 60, 83, 108, 110, 111, 113, 115], "boundari": [10, 46, 60, 83, 107, 108, 110, 111, 113, 115], "enum": [10, 46, 60, 83, 108, 110, 111, 113, 115], "stdin": 11, "factori": [11, 18, 28, 43, 55, 58, 93, 107], "mai": [11, 15, 17, 22, 26, 29, 31, 33, 66, 70, 76, 87, 91, 93, 123, 126, 151, 152, 160, 162, 167], "prepar": [11, 17, 48, 61, 106, 107, 112, 114, 116, 118, 121], "state": [11, 13, 14, 17, 48, 64, 66, 69, 73, 75, 127, 151], "elig": 11, "overrid": [11, 69, 151], "get_command_lin": 11, "ear": [11, 15, 16, 17, 20, 21, 22, 23, 24, 48, 49, 75, 87, 91, 127, 151], "resolv": [11, 15, 17, 22, 38, 40, 87, 152, 158], "ordinarili": 11, "time": [11, 17, 27, 28, 29, 48, 73, 75, 87, 93, 100, 101, 102, 103, 107, 151, 164, 165], "write_command": 11, "elementactionrun": [11, 15, 16, 20, 21, 22, 23, 24, 25, 48, 49, 67, 75, 87], "process_std_stream": 11, "descript": [11, 20, 21, 23, 24, 29, 48, 49, 65, 67, 75, 87, 89, 114, 116, 153, 156, 158], "stread": 11, "becom": [11, 162], "later": 11, "thing": [11, 79, 161], "stream": [11, 13, 14, 28, 48, 64, 66, 69, 73, 75, 87, 151], "handl": [11, 29, 38, 40, 64, 100, 101, 128], "_object": [12, 32, 35, 41, 63, 65, 78, 82, 84, 90, 92], "notat": [12, 32, 35, 41, 63, 78, 82, 84, 90, 92], "add_object": [12, 32, 35, 41, 63, 65, 78, 82, 84, 90, 92], "obj": [12, 32, 35, 41, 61, 63, 65, 78, 82, 84, 90, 92, 106, 107, 112, 114, 116, 118, 121], "skip_dupl": [12, 32, 35, 41, 63, 65, 78, 82, 84, 90, 92], "t": [12, 29, 32, 35, 41, 63, 65, 69, 76, 78, 82, 84, 90, 92, 151, 160], "multipl": [12, 17, 20, 21, 23, 24, 28, 32, 35, 38, 41, 47, 48, 52, 53, 55, 63, 66, 70, 76, 78, 81, 82, 84, 85, 87, 90, 91, 92, 100, 101, 106, 120, 126, 128, 151, 153, 160, 163, 164, 165, 170], "is_hash": [12, 32, 35, 41, 63, 78, 82, 84], "access_attribute_valu": [12, 32, 35, 41, 63, 78, 82, 84, 90, 92], "match": [12, 32, 33, 35, 38, 41, 63, 64, 69, 70, 73, 75, 78, 82, 84, 87, 90, 92, 152, 162], "criteria": [12, 32, 35, 41, 63, 78, 82, 84, 90, 92], "get_al": [12, 32, 35, 41, 63, 65, 78, 82, 84, 90, 92, 152], "list_attr": [12, 32, 35, 41, 63, 78, 82, 84, 90, 92], "constitu": [12, 32, 35, 41, 63, 78, 82, 84, 90, 92], "shell_arg": [13, 14, 28, 48, 66, 69, 73], "shebang_arg": [13, 14, 69, 73, 152], "schedul": [13, 14, 22, 28, 48, 64, 66, 69, 73, 75, 87, 98, 100, 101, 128, 152, 153], "posix": 13, "pre": [13, 14, 69, 73, 87, 88], "quot": [13, 14, 69, 73, 152, 158], "shebang": [13, 14, 64, 69, 73], "default_shebang_arg": [13, 14, 64, 69, 73], "classvar": [13, 14, 25, 64, 66, 69, 73], "default_shell_arg": [13, 14, 64, 69, 73], "default_shell_execut": [13, 14, 73], "cancel_job": [13, 14, 64, 69, 73], "js_ref": [13, 14, 64, 69, 73], "cancel": [13, 14, 64, 69, 73, 75, 87, 100, 101], "job": [13, 14, 17, 28, 48, 64, 66, 69, 73, 75, 87], "directref": [13, 14], "get_job_state_info": [13, 14, 64, 69, 73], "queri": [13, 14, 64, 69, 73, 151], "id": [13, 14, 15, 17, 22, 29, 48, 49, 50, 64, 69, 73, 75, 76, 87, 89, 91, 95, 98], "statu": [13, 14, 17, 69, 73, 75, 87, 89, 95, 98, 100, 101, 102, 103], "jobscriptelementst": [13, 14, 48, 64, 69, 73, 75], "get_std_out_err_filenam": [13, 14, 64, 69, 73], "js_idx": [13, 14, 64, 69, 73, 87, 151], "combin": [13, 14, 28, 29, 48, 64, 66, 67, 69, 73, 75, 87, 93, 100, 101, 102, 103], "get_stderr_filenam": [13, 14, 64, 69, 73], "get_stdout_filenam": [13, 14, 64, 69, 73], "get_submit_command": [13, 14, 64, 69, 73], "js_path": [13, 14, 64, 69, 73, 75], "dep": [13, 14, 48, 64, 69, 73], "concret": [13, 14, 16, 29, 33, 52, 81, 87, 93], "submiss": [13, 14, 17, 48, 49, 64, 69, 73, 87, 95, 98, 100, 101, 102, 103, 126, 128, 163, 170], "get_version_info": [13, 14, 64, 69, 73], "versioninfo": [13, 14, 48, 64, 69, 73, 99], "is_jobscript_act": [13, 14, 64, 69, 73], "process_id": [13, 14, 48], "process_cmdlin": [13, 14], "wait": [13, 14, 64, 69, 73, 87, 100, 101, 128], "upstream": [13, 14, 15, 17, 22, 29, 55, 87, 89, 91, 173], "is_num_cores_support": [13, 14, 64, 69, 73], "core_rang": [13, 14, 64, 69, 73], "number": [13, 14, 16, 22, 27, 28, 31, 33, 34, 49, 50, 54, 64, 66, 69, 70, 73, 76, 86, 87, 89, 91, 98, 106, 107, 114, 118, 126, 151, 158, 160, 165, 167], "rang": [13, 14, 53, 54, 64, 69, 73, 86, 173], "parse_submission_output": [13, 14, 64, 69, 73], "process_resourc": [13, 14, 64, 69, 73], "scheduler_config": [13, 14, 64, 69, 73], "schedulerconfigdescriptor": [13, 14, 64, 69, 73], "unique_properti": [13, 14, 64, 69, 73, 75], "wait_for_jobscript": [13, 14, 64, 69, 73], "callback": [13, 14, 151], "until": [13, 14, 87, 100, 101, 151], "callabl": [13, 14], "psutil": [13, 14], "id_": [15, 17, 22, 87], "is_pend": [15, 17, 22], "es_idx": 15, "seq_idx": 15, "src_idx": 15, "iteration_id": 15, "basic": [15, 71, 163, 170], "pend": [15, 17, 22, 64, 69, 73], "workflowtask": [15, 16, 17, 22, 25, 26, 29, 30, 45, 50, 62, 76, 77, 80, 87, 89, 92], "indic": [15, 16, 17, 22, 25, 28, 29, 42, 44, 48, 49, 53, 56, 66, 75, 76, 87, 89, 91, 100, 101, 128, 151, 160, 165, 173], "known": [15, 17, 22, 33, 42, 44, 48, 56, 76, 85, 87, 91, 98, 100, 101, 107, 126, 163, 170, 173], "action_run": [15, 22], "taken": [15, 17, 22, 160], "elementact": [15, 17, 20, 21, 22, 23, 24, 25], "most": [15, 17, 28, 87, 115, 165], "recent": [15, 17, 87, 98, 100, 101, 151, 161], "skip": [15, 17, 22, 28, 66, 87, 89, 114, 118], "due": [15, 17, 22, 87], "loop": [15, 17, 22, 48, 49, 87, 89, 90, 93, 160, 163, 170, 173], "dir_nam": [15, 76, 91], "temporari": [15, 26, 75, 87, 91, 161], "element_set": [15, 26, 29, 65, 66, 76, 91, 160], "elementset": [15, 26, 65, 66, 76, 85, 91], "element_set_idx": 15, "run_idx": [15, 16, 22], "raise_on_miss": [15, 16, 17, 22, 62, 91], "raise_on_unset": [15, 16, 17, 22, 62], "get_ear_depend": [15, 17, 22], "as_object": [15, 17, 22, 29, 91, 173], "get_data_idx": [15, 16, 17, 22], "get_dependent_ear": [15, 17, 22], "get_dependent_element_iter": [15, 22], "get_dependent_el": [15, 22, 91], "get_dependent_elements_recurs": 15, "task_insert_id": [15, 48, 49, 50, 87, 89], "downstream": [15, 17, 22, 26, 28, 66, 70, 87, 89, 91], "recurs": [15, 89], "identifi": [15, 47, 76, 79, 167], "previou": [15, 17, 164], "parametris": [15, 55, 76, 87, 93, 100, 101, 103, 106, 107, 160, 163, 164, 170], "get_dependent_task": [15, 22, 91], "get_element_depend": [15, 22, 91, 173], "get_element_iteration_depend": [15, 22], "get_input_depend": [15, 17, 22], "get_parameter_sourc": [15, 16, 17, 22, 87], "as_str": [15, 16, 17, 22], "use_task_index": [15, 16, 17, 22], "rather": [15, 22], "than": [15, 22, 29, 76], "insert": [15, 22, 48, 49, 50, 76, 87, 89, 91, 120], "get_sequence_valu": 15, "sequence_path": [15, 29], "get_task_depend": [15, 22, 29, 91], "global_idx": 15, "elementinputfil": [15, 16, 17, 22], "input_source_idx": 15, "input_sourc": [15, 26, 29, 70, 76, 91, 160], "inputsourc": [15, 26, 29, 76, 91], "elementinput": [15, 16, 17, 22], "latest_iter": 15, "latest_iteration_non_skip": 15, "elementoutputfil": [15, 16, 17, 22], "elementoutput": [15, 16, 17, 22], "schema_paramet": [15, 22], "sequence_idx": 15, "to_element_set_data": 15, "bound": [15, 53, 62, 72, 89, 91], "inputvalu": [15, 29, 70, 76, 91], "resourcelist": [15, 29, 93], "resourcespec": [15, 65, 93], "abstract": [16, 29, 31, 33, 64], "represent": [16, 58, 112, 113, 114, 160], "model": [16, 22, 156, 158, 159, 160], "num_run": 16, "element_act": [17, 20, 21, 23, 24], "commands_idx": 17, "start_tim": [17, 48, 75], "end_tim": [17, 48, 75], "snapshot_start": 17, "snapshot_end": 17, "submission_idx": [17, 87, 151], "commands_file_id": 17, "exit_cod": [17, 87], "metadata": [17, 64, 87, 151, 156, 162], "run_hostnam": 17, "port_numb": [17, 36, 87], "unit": [17, 48, 111, 114, 116, 158, 173], "submit": [17, 28, 48, 64, 69, 73, 75, 87, 100, 101, 102, 103, 128, 162], "program": [17, 33, 115, 153], "With": 17, "over": [17, 29, 75, 76, 89, 164], "sai": [17, 160], "space": [17, 28, 66, 86, 111, 114, 118, 151], "mani": [17, 28, 66, 114], "per": [17, 28, 49, 66, 107, 151, 160], "collect": [17, 29, 75, 173], "look": [17, 31, 58, 59, 67, 87, 93, 151, 160, 162, 173], "datetim": [17, 48, 75, 87, 100, 101, 102, 103, 151], "ever": 17, "end": [17, 48, 75, 87, 151, 162], "snapshot": 17, "unspecifi": [17, 28], "what": [17, 27, 34, 42, 44, 48, 49, 56, 89, 112, 158, 165], "succeed": 17, "code": [17, 44, 56, 58, 69, 70, 71, 72, 73, 87, 151], "compose_command": 17, "disk": [17, 87], "word": [17, 69, 73, 164, 165], "shell_var": 17, "environmentslist": [17, 75], "dir_diff": 17, "directorysnapshotdiff": 17, "finish": [17, 73, 98, 151], "env_spec_hash": 17, "underli": [17, 48, 153], "rais": [17, 62, 70, 76, 87, 100, 101, 120, 128, 151], "except": [17, 62, 66, 151, 167], "unset": [17, 62, 70, 152], "get_ifg_input_valu": 17, "get_ofp_input": 17, "get_ofp_output_fil": 17, "go": [17, 33, 48, 53, 160], "get_ofp_output": 17, "get_all_previous_iteration_run": 17, "include_self": 17, "get_app_log_path": [17, 75], "get_app_std_path": [17, 48, 75], "get_directori": 17, "aim": [17, 107, 165], "get_input_valu": 17, "label_dict": 17, "all_iter": [17, 159], "arrang": [17, 114], "get_input_values_direct": 17, "human": 17, "readabl": 17, "get_py_script_func_kwarg": 17, "add_script_fil": 17, "blk_act_kei": 17, "retriev": [17, 48, 66, 70, 77, 80, 87, 98, 151, 161, 173], "addit": [17, 28, 31, 65, 66, 85, 87, 93, 162], "_input_fil": 17, "_output_fil": 17, "js_blk_act_kei": 17, "three": [17, 162, 165, 173], "integ": [17, 28, 42, 44, 56, 66, 70, 87, 91, 158], "get_resourc": [17, 22], "consid": [17, 22, 29, 45, 73, 76, 87, 89, 91, 158, 164], "raise_on_failure_threshold": 17, "track": [17, 87, 100, 101, 102, 103, 151, 161], "were": 17, "_get_merged_parameter_data": 17, "unsetparamtrack": 17, "elementresourc": [17, 22, 48, 64, 69, 73], "skip_reason": [17, 87], "jsonlikedirsnapshot": [17, 68], "earstatu": 17, "did": 17, "succe": 17, "implement": [17, 52, 58, 81, 165, 167], "try_write_command": 17, "attempt": [17, 73, 79, 87, 93], "write_script_input_fil": 17, "select": [18, 19, 33, 87, 163], "subsequ": [18, 29, 76, 89, 164], "group_by_distinct": [19, 76], "elementfilt": [19, 27, 45, 57, 76], "parameterpath": [19, 76], "element_action_run": [20, 21, 23, 24], "prefixed_names_unlabel": [20, 21, 23, 24], "between": [20, 21, 23, 24, 73, 151, 153, 163, 164], "even": [20, 21, 23, 24, 48, 87, 151], "empti": [20, 21, 23, 24, 70, 89, 120, 152, 162], "prefixed_names_unlabelled_str": [20, 21, 23, 24], "ears_initialis": [22, 87], "loop_idx": [22, 91], "parent": [22, 25, 48, 49, 53, 65, 87, 89], "resolut": [22, 76, 159], "ear_ids_flat": 22, "persist": [22, 29, 42, 44, 47, 52, 55, 56, 66, 76, 81, 85, 86, 87, 93, 100, 101, 102, 103, 114, 151, 161, 163, 165, 170], "store": [22, 42, 44, 47, 48, 55, 56, 66, 85, 87, 93, 100, 101, 102, 103, 128, 151, 160, 161, 169], "ones": 22, "relev": [22, 52, 81], "set_default": [22, 28], "os_nam": [22, 28, 48, 66], "get_resources_obj": 22, "searchabl": 22, "get_template_resourc": 22, "loopindex": 22, "loop_skip": 22, "entir": [22, 91], "entiti": [25, 89], "baseapp": 25, "data_idx_is_set": 25, "get_siz": 25, "store_kwarg": [25, 87, 93, 100, 101, 102, 103], "size": [25, 118, 151, 159, 160], "is_set": 25, "nesting_ord": [26, 29, 53, 76, 86, 91, 160], "newli": [26, 47, 69, 73, 85, 91, 114], "propag": [26, 60, 70, 71, 91], "float": [26, 28, 29, 53, 59, 66, 70, 73, 85, 86, 91, 107, 114, 118, 120, 121, 123, 158, 159, 173], "nest": [26, 29, 47, 53, 76, 86, 91, 107, 152], "move": 26, "reinterpret": 26, "repetit": 27, "repeat": [27, 29, 76, 91, 160, 164, 165], "scratch": [28, 66], "num_cores_per_nod": [28, 66, 152], "num_thread": [28, 66], "num_nod": [28, 66, 152], "use_job_arrai": [28, 66], "max_array_item": [28, 66], "write_app_log": [28, 66], "combine_jobscript_std": [28, 48, 66], "combine_script": [28, 48, 66], "time_limit": [28, 66], "scheduler_arg": [28, 48, 66], "resources_id": [28, 66], "skip_downstream_on_failur": [28, 66], "allow_failed_depend": [28, 66, 70], "sge_parallel_env": [28, 66], "slurm_partit": [28, 66], "slurm_num_task": [28, 66], "slurm_num_tasks_per_nod": [28, 66], "slurm_num_nod": [28, 66], "slurm_num_cpus_per_task": [28, 66], "common": [28, 48, 68, 153, 160, 162, 163], "leav": 28, "them": [28, 87, 91], "parallelmod": [28, 66], "parallel": [28, 33, 34, 66, 75, 87, 100, 101, 128, 151], "mode": [28, 33, 34, 64, 66, 70, 108, 159], "request": [28, 66, 100, 101, 128], "node": [28, 64, 66, 69, 73, 136], "thread": [28, 66], "arrai": [28, 48, 49, 64, 66, 69, 73, 87, 107, 114, 123, 151, 173], "item": [28, 64, 66, 70, 87, 91, 106, 120, 136, 151, 163, 165, 170, 173], "log": [28, 64, 66, 68, 73, 75, 87, 152, 161], "written": [28, 66, 107, 165], "long": [28, 66, 158], "arbitrari": [28, 66, 162], "forc": [28, 66, 87, 100, 101, 102, 103, 151], "failur": [28, 66, 70, 87, 158], "toler": [28, 66], "respect": [28, 38, 40, 66, 114, 118, 152, 158, 164], "proport": [28, 66, 70], "sge": [28, 66, 69, 73, 152], "slurm": [28, 66, 73, 152], "partit": [28, 66, 152], "cpu": [28, 66], "ask": [28, 66], "slurm_is_parallel": 28, "get_default_os_nam": 28, "get_default_schedul": 28, "shell_nam": [28, 48, 99, 151], "get_default_shel": 28, "get_env_instance_filterable_attribut": 28, "get_jobscript_hash": 28, "distinguish": [28, 70], "is_parallel": 28, "validate_against_machin": 28, "valid": [28, 29, 58, 79, 91, 93, 154, 161, 167], "multi_path_sequ": [29, 76], "env_preset": [29, 76, 93, 162], "sourceable_elem_it": [29, 76, 91], "allow_non_coincident_task_sourc": [29, 76], "is_creat": 29, "parameteris": [29, 76, 88], "inputfil": [29, 76, 91], "valuesequ": [29, 53, 76, 91], "multipathsequ": [29, 76], "multi": [29, 53, 76, 87, 153], "elementgroup": [29, 76], "descriptor": [29, 48, 49, 70, 75, 87, 112, 114, 156, 158], "preset": [29, 76, 93, 160], "don": [29, 65], "global": [29, 91], "sourceabl": [29, 91], "intersect": [29, 76], "merg": [29, 65, 76, 93], "belong": [29, 87], "defined_input_typ": [29, 76], "elem_iter_id": 29, "element_local_idx_rang": 29, "ensure_element_set": 29, "repeatsdescriptor": [29, 91], "self": [29, 45, 53, 61, 65, 76, 86, 87, 91, 106, 107, 112, 114, 116, 118, 121], "get_defined_parameter_typ": 29, "get_defined_sub_parameter_typ": 29, "get_locally_defined_input": 29, "get_sequence_from_path": 29, "input_typ": [29, 52, 81, 86], "reconstruct": [29, 158, 159], "case": [29, 48, 52, 81, 106, 107, 120, 131, 152, 153, 159, 160, 161, 162, 164, 165, 167], "is_input_type_provid": 29, "labelled_path": [29, 76], "prepare_persistent_copi": 29, "made": [29, 76, 87, 107, 161], "dure": [29, 87, 95, 151], "integr": 29, "task_templ": [29, 52, 81], "deriv": [29, 37, 39, 76, 93, 124, 160], "undefined_input_typ": [29, 76], "aren": 29, "relat": [29, 42, 44, 56, 87, 121, 151], "_hash_valu": [31, 40, 52, 58, 81], "suppli": [31, 71, 86, 89], "pair": [31, 75, 120, 162, 173], "executableinst": 33, "filter_inst": 33, "desir": 33, "numcor": 34, "from_spec": [34, 85], "spec": [34, 65, 66, 85], "construct": [34, 85, 160], "cmd": 36, "package_nam": 36, "q": [36, 160], "launch": 36, "subprocess": [36, 48, 87], "onc": [36, 114], "zmq": 36, "server": 36, "kill": [36, 151], "shutdown": 36, "messag": [36, 151], "sent": 36, "send_abort": 36, "hostnam": [36, 69, 152], "send": 36, "start_zmq_serv": 36, "stop_zmq_serv": 36, "zmq_context": 36, "file_nam": [37, 39, 151], "filenamespec": [37, 39, 40], "pathlik": [37, 38, 39, 40, 87, 93, 100, 101, 102, 103, 128], "is_regex": 38, "pattern": [38, 64, 69, 73, 151, 156], "posit": [38, 91, 118], "omit": [38, 65, 118], "regex": 38, "filenamepart": 38, "ext": [38, 40], "filenameext": [38, 40], "stem": [38, 39, 40, 160], "filenamestem": [38, 40], "possibli": [39, 158], "jinja": 40, "store_cont": [42, 44, 56], "make_persist": [42, 44, 47, 52, 56, 66, 81, 85, 86, 91], "zarr": [42, 44, 47, 56, 66, 85, 87, 100, 101, 102, 103, 114, 151, 169], "normalised_files_path": 42, "normalised_path": [42, 44, 47, 56, 66, 85, 86], "full": [42, 44, 47, 56, 66, 87, 126, 151, 158, 160], "filesystem": [42, 44, 56], "close": [42, 44, 56, 173], "read_cont": [42, 44, 56], "earli": 43, "quick": [43, 163], "tend": 43, "get_action_rul": [43, 55], "recreat": [44, 56], "source_typ": [45, 160], "import_ref": 45, "task_ref": [45, 87, 160], "task_source_typ": 45, "inputsourcetyp": 45, "import": [45, 46, 76, 160, 161, 168, 169, 173], "tasksourcetyp": 45, "goe": 45, "from_str": 45, "str_defn": 45, "get_task": 45, "referenc": [45, 162, 165], "import_": 45, "is_in": 45, "other_input_sourc": 45, "without": [45, 47, 76, 86, 91, 151, 165], "value_class_method": [47, 53, 86], "_check_obj": 47, "schemainput": [47, 52, 76, 81, 85, 165], "obtain": 47, "real": [47, 111], "invok": [47, 68, 75, 106, 151, 161, 165], "is_sub_valu": [47, 86], "interpret": [47, 87, 151, 153], "labelled_typ": [47, 86], "normalis": [47, 65, 76, 85, 86, 173], "normalised_inputs_path": [47, 86], "itself": [47, 70, 85], "is_arrai": [48, 64, 69, 73], "at_submit_metadata": [48, 75], "submit_hostnam": 48, "submit_machin": 48, "shell_idx": [48, 75], "version_info": 48, "resource_hash": 48, "task_act": [48, 49], "task_loop_idx": [48, 49], "js_action_idx": [48, 49], "task_el": [48, 49], "js_element_idx": [48, 49], "task_element_idx": [48, 49], "plai": [48, 49], "submit_tim": [48, 75], "submit_cmdlin": 48, "scheduler_job_id": 48, "scheduler_nam": [48, 151], "jobscriptblock": 48, "ear_id_file_nam": 48, "ear_id_file_path": 48, "all_ear_id": [48, 75], "ndarrai": [48, 49, 53, 75, 87, 107, 114, 118, 123, 173], "miss": [48, 62, 159], "all_ear": [48, 49, 75], "combined_script_indices_file_nam": 48, "combined_script_indices_file_path": 48, "compose_combined_script": 48, "action_script": 48, "compose_jobscript": 48, "account": 48, "direct_std_out_err_path": 48, "otherwis": [48, 87, 120, 151, 161], "direct_stdout_path": 48, "direct_stderr_path": 48, "get_stdout_path": 48, "get_stderr_path": 48, "direct_win_pid_file_nam": 48, "pid": 48, "direct_win_pid_file_path": 48, "last": [48, 120], "get_active_st": 48, "as_json": [48, 75, 98], "get_commands_file_nam": [48, 68], "get_std_out_err_path": 48, "array_idx": [48, 64, 69, 73, 151], "get_stderr": 48, "non": [48, 66, 75, 76, 87, 91, 106, 107, 152], "whole": [48, 87, 165], "get_stdout": 48, "is_schedul": [48, 75], "is_submit": 48, "jobscript_functions_nam": 48, "jobscript_functions_path": 48, "jobscript_nam": 48, "jobscript_path": 48, "print_stderr": 48, "print_stdout": [48, 75, 87], "scheduler_js_ref": 48, "compos": [48, 53, 86], "std_path": 48, "scheduler_ref": 48, "behalf": 48, "workflow_app_alia": [48, 75], "write_jobscript": 48, "os_arg": [48, 152], "write_script_indices_fil": 48, "num_elem": 48, "num_act": [48, 49, 91], "combined_script": 48, "rectangular": 49, "resolvedjobscriptblockdepend": 49, "get_task_loop_idx_arrai": 49, "maxim": 49, "num_el": [49, 64, 69, 73, 87, 91], "variou": [49, 158], "write_ear_id_fil": 49, "fp": 49, "token": 49, "textio": 49, "num_iter": [50, 89, 160, 164], "non_iterable_paramet": 50, "termination_task": 50, "v": [50, 120, 151, 160], "criterion": [50, 158, 173], "express": 50, "evalu": [50, 67], "insert_id": [50, 76, 91], "extent": [50, 89], "task_object": [50, 89], "termination_task_insert_id": 50, "workflow_templ": [50, 65, 66, 76, 88], "workflowtempl": [50, 65, 66, 76, 87, 88, 100, 101, 168], "metataskschema": [51, 165], "web_doc": [52, 81], "environment_preset": [52, 81, 162], "effect": [52, 160, 165], "taskobject": [52, 76, 81], "schemaoutput": [52, 76, 81, 165], "sphinx": [52, 81], "built": [52, 81, 88, 152, 155, 165], "overridden": [52, 63, 64, 81], "basic_info": [52, 81], "show": [52, 64, 69, 73, 81, 87, 95, 100, 101, 118, 127, 159, 161, 163, 170], "tabl": [52, 75, 81, 87, 151], "get_by_kei": [52, 81], "config": [52, 81, 87, 93, 136, 137, 138, 154, 163, 170], "get_info_html": [52, 81], "get_kei": [52, 81], "hashabl": [52, 81], "actparameterdepend": [52, 81], "ignore_invalid_act": [52, 81], "invalid": [52, 81, 87, 93, 151], "multi_input_typ": [52, 81], "output_typ": [52, 81], "parameter_class_modul": [52, 81], "handler": [52, 61, 81], "provides_paramet": [52, 76, 81], "tasktempl": [52, 59, 81, 84], "distribut": [53, 114, 158, 160], "interdepend": 53, "thei": [53, 75, 76, 89, 153, 165, 167], "Not": [53, 55, 58, 86], "from_latin_hypercub": 53, "num_sampl": 53, "scrambl": 53, "strength": 53, "optim": 53, "rng": 53, "scipi": 53, "latin": 53, "hypercub": 53, "sampler": 53, "stat": [53, 160], "qmc": 53, "latinhypercub": 53, "liter": [53, 70, 75, 87, 93, 100, 101, 102, 103, 128, 159], "random": [53, 86, 106, 107, 114, 118, 159, 160], "cd": 53, "lloyd": 53, "sequence_indic": [53, 91], "child": [53, 65, 89], "minimum": [54, 107], "maximum": [54, 75, 87, 98, 107, 126, 151], "singular": 55, "confus": 55, "plural": [55, 162], "miscellan": [55, 122], "initvar": 55, "is_fil": 58, "_value_class": 58, "_valid": 58, "parametervalu": [58, 104, 106, 107, 112, 114, 116, 118, 121], "subparamet": 58, "url_slug": 58, "url": [58, 87, 152, 168], "explicit": [60, 70], "implicit": [60, 70, 71], "never": [60, 70], "intend": 61, "subclass": 61, "dump_element_group_to_hdf5_group": [61, 106, 107, 112, 114, 116, 118, 121], "hdf5group": [61, 106, 107, 112, 114, 116, 118, 121], "dump_to_hdf5_group": [61, 106, 107, 112, 114, 116, 118, 121], "prepare_json_dump": [61, 106, 107, 112, 114, 116, 118, 121], "serialis": [61, 106, 107, 112, 114, 116, 118, 121], "save_from_hdf5_group": [61, 106, 107, 112, 114, 116, 118, 121, 158], "param_id": [61, 87, 106, 107, 112, 114, 116, 118, 121], "save_from_json": [61, 106, 107, 112, 114, 116, 118, 121], "return_element_paramet": 62, "submit_cmd": [64, 73, 152], "show_cmd": [64, 73, 152], "del_cmd": [64, 73, 152], "js_cmd": [64, 73, 152], "login_nodes_cmd": [64, 73], "array_switch": [64, 73, 152], "array_item_var": [64, 73, 152], "login": [64, 69, 73], "default_array_item_var": [64, 69, 73], "containin": 64, "default_array_switch": [64, 69, 73], "default_del_cmd": [64, 69, 73], "default_js_cmd": [64, 69, 73], "marker": 64, "default_login_nodes_cmd": [64, 69, 73], "default_login_node_match": [64, 69, 73], "default_show_cmd": [64, 69, 73], "default_submit_cmd": [64, 69, 73], "jsreftyp": 64, "format_opt": [64, 69, 73], "sub_idx": [64, 69, 73, 75, 87, 151], "format_switch": [64, 69, 73], "j": [64, 69, 73, 107, 160], "job_id": [64, 69, 73], "filenam": [64, 69, 73, 158, 160], "append": [65, 173], "get_scop": 65, "merge_on": 65, "lower": [65, 167], "preced": [65, 87], "simplifi": 65, "merge_oth": 65, "potenti": [65, 164, 165], "sever": [65, 169], "wsl": [66, 152], "still": [66, 162], "nt": 66, "allowed_paramet": 66, "copy_non_persist": 66, "resourcepersistingworkflow": 66, "intern": 66, "normalised_resources_path": 66, "unus": [66, 160], "testabl": 67, "exactli": 67, "element_lik": 67, "encapsul": 68, "recognit": 68, "get_run_file_prefix": 68, "get_run_param_dump_file_prefix": 68, "get_run_param_load_file_prefix": 68, "take_snapshot": 68, "root_path": [68, 160], "cwd_switch": [69, 152], "gridschedul": 69, "sourceforg": 69, "htmlman": 69, "htmlman1": 69, "qsub": 69, "softpanorama": 69, "grid_engin": 69, "queue": [69, 73], "queue_stat": 69, "shtml": 69, "sge_task_id": 69, "default_cwd_switch": 69, "cwd": 69, "qdel": 69, "qconf": 69, "qstat": 69, "get_job_status": 69, "get_login_nod": 69, "administr": 69, "report": [69, 87], "state_lookup": [69, 73], "eh": 69, "eq": [69, 173], "rt": 69, "rr": 69, "d": [69, 120], "dt": 69, "hr": 69, "hq": 69, "qw": 69, "tt": 69, "default_valu": 70, "nulldefault": 70, "propagation_mod": [70, 71], "parameterpropagationmod": [70, 71], "expect": [70, 76, 93, 162], "squar": 70, "labelinfo": 70, "catch": 70, "remain": [70, 76, 107, 165], "treat": [70, 77, 80], "By": [70, 87, 93, 100, 101, 107, 128, 151, 152, 167], "inaccess": 70, "unsetparameterdataerror": 70, "equival": [70, 161, 173], "permit": 70, "all_labelled_typ": 70, "input_or_output": [70, 71], "labelled_info": 70, "labellingdescriptor": 70, "single_label": 70, "single_labelled_data": 70, "single_labelled_typ": 70, "memori": [73, 114, 173], "stackoverflow": [73, 114], "44143229": 73, "5042280": [73, 114], "manpag": 73, "sbatch": 73, "ri": 73, "itservic": 73, "ac": 73, "csf4": 73, "slurm_array_task_id": 73, "scancel": 73, "squeue": 73, "me": 73, "inter_state_query_delai": 73, "delai": 73, "second": [73, 107, 151, 160, 165], "num_state_query_tri": 73, "out_of_memori": 73, "timeout": [73, 151], "address": 74, "anoth": [74, 162], "js_parallel": [75, 87, 100, 101, 128, 151], "submission_part": 75, "exploit": 75, "app_std_dir_nam": 75, "app_std": 75, "commands_dir_nam": 75, "ears_by_el": 75, "js_dir_nam": 75, "js_funcs_dir_nam": 75, "js_func": 75, "js_run_ids_dir_nam": 75, "js_run_id": 75, "js_script_indices_dir_nam": 75, "js_script_indic": 75, "js_std_dir_nam": 75, "js_std": 75, "js_win_pids_dir_nam": 75, "js_pid": 75, "log_dir_nam": 75, "app_log": 75, "scripts_dir_nam": 75, "tmp_dir_nam": 75, "wkflow_app": 75, "all_ears_ids_by_jobscript": 75, "all_ears_by_jobscript": 75, "app_log_path": 75, "app_std_path": 75, "commands_path": 75, "get_active_jobscript": 75, "get_app_log_file_nam": 75, "run_id": [75, 87, 151], "get_app_log_file_path": 75, "submissions_path": [75, 87], "get_commands_path": 75, "get_end_tim": 75, "get_jobscript_functions_nam": 75, "get_jobscript_functions_path": 75, "get_js_funcs_path": 75, "commmand": 75, "get_js_path": 75, "get_js_run_ids_path": 75, "get_js_script_indices_path": 75, "get_js_std_path": 75, "get_js_win_pids_path": 75, "get_path": 75, "get_process_id": [75, 87], "get_scheduler_job_id": [75, 87], "get_scripts_path": 75, "get_start_tim": 75, "get_tmp_path": 75, "get_unique_schedul": 75, "scheduler_map": 75, "get_unique_schedulers_of_jobscript": 75, "queuedschedul": 75, "get_unique_shel": 75, "jobscript_indic": 75, "js_funcs_path": 75, "js_run_ids_path": 75, "js_script_indices_path": 75, "js_std_path": 75, "js_win_pids_path": 75, "list_jobscript": [75, 87], "max_j": [75, 87, 151], "width": [75, 87, 151, 173], "displai": [75, 87, 100, 101, 102, 103, 127, 151, 173], "cannot": [75, 87, 167], "charact": [75, 87, 107, 151], "list_task_jobscript": [75, 87], "task_nam": [75, 87, 151], "needs_app_log_dir": 75, "submis": 75, "needs_script_indices_dir": 75, "needs_submit": 75, "done": [75, 87, 107, 161], "needs_win_pids_dir": 75, "outstanding_jobscript": 75, "yet": [75, 91, 151], "successfulli": [75, 87], "scripts_path": 75, "submissionstatu": 75, "submissionpart": 75, "ignore_error": [75, 87], "add_to_known": [75, 87, 100, 101], "submitted_jobscript": 75, "tmp_path": [75, 132, 133], "output_label": 76, "merge_env": [76, 93], "isol": [76, 153], "satisfi": 76, "fetch": 76, "outputlabel": 76, "add_group": 76, "all_schema_act": 76, "all_schema_input_normalised_path": 76, "all_schema_input_typ": 76, "all_schema_input": 76, "all_schema_output_typ": 76, "all_schema_output": 76, "all_sourced_normalised_path": 76, "being": [76, 87, 89, 151], "artefact": 76, "get_available_task_input_sourc": 76, "source_task": 76, "possibl": 76, "get_input_status": 76, "elem_set": 76, "inputstatu": 76, "status": 76, "get_param_provided_element_set": 76, "caller": 76, "freeli": 76, "get_schema_act": 76, "get_task_unique_nam": [76, 87], "non_universal_input_typ": 76, "num_all_schema_act": 76, "total": [76, 87, 107], "num_element_set": [76, 91], "goal": 76, "prepare_element_resolut": 76, "input_data_indic": [76, 91], "especi": 76, "multiplicitydescriptor": [76, 91], "els": [76, 86, 120], "set_sequence_paramet": 76, "to_persist": 76, "doesn": 76, "undefined_input": 76, "undefin": 76, "universal_input_typ": 76, "unmodifi": [77, 80], "namespac": [77, 80], "achiev": [79, 107], "mechan": [81, 158, 160], "_workflow": [85, 100, 101, 102, 103], "_element_set": 85, "_schema_input": 85, "_valu": 85, "_value_group_idx": 85, "multiplicative_factor": 85, "additive_factor": 85, "perturb": [85, 121, 160], "numer": [85, 153, 156, 160], "factor": [85, 158, 173], "from_fil": [86, 87, 93, 114, 118, 158], "file_path": [86, 151], "build": 86, "from_geometric_spac": 86, "num": [86, 160], "endpoint": 86, "geometr": 86, "from_linear_spac": 86, "linear": [86, 158], "from_log_spac": 86, "logarithm": 86, "from_random_uniform": 86, "low": 86, "high": [86, 153, 159], "seed": [86, 139, 158, 159], "uniform": [86, 160], "from_rang": 86, "from_rectangl": [86, 160], "coord": [86, 160], "cover": 86, "rectangl": 86, "coordin": 86, "edg": 86, "choos": [86, 162], "bottom": 86, "left": 86, "input_path": 86, "path_split": 86, "path_typ": 86, "resource_scop": 86, "workflow_ref": [87, 95, 151], "store_fmt": 87, "fs_kwarg": 87, "phase": [87, 118, 121, 158, 159, 160], "abort_run": 87, "task_idx": 87, "element_idx": 87, "add_loop": 87, "add_submiss": [87, 102, 103], "force_arrai": 87, "purpos": [87, 151], "add_task": 87, "new_index": 87, "add_task_aft": 87, "new_task": 87, "add_task_befor": 87, "begin": 87, "artifacts_path": 87, "batch_upd": 87, "is_workflow_cr": 87, "cached_merged_paramet": 87, "check_parameters_exist": 87, "id_lst": 87, "creation_info": 87, "creationinfo": 87, "creation": [87, 101, 102, 103, 151], "ensure_commands_fil": 87, "ensur": [87, 151], "execute_combined_run": 87, "jobscript_idx": [87, 151], "execute_run": 87, "execution_path": 87, "from_json_fil": [87, 93], "json_path": 87, "overwrit": [87, 100, 101, 102, 103, 151, 165], "ts_fmt": [87, 100, 101, 102, 103, 151], "ts_name_fmt": [87, 100, 101, 102, 103, 151], "join": [87, 100, 101, 102, 103, 151], "date": [87, 93, 100, 101, 102, 103, 151], "timestamp": [87, 100, 101, 102, 103, 151], "utc": [87, 100, 101, 102, 103, 151], "zone": [87, 100, 101, 102, 103, 151, 158, 159, 160], "write_empty_workflow": [87, 100, 101, 102, 103], "var": [87, 93, 151, 160], "occur": [87, 93], "from_json_str": [87, 93], "json_str": 87, "from_yaml_fil": [87, 93, 168], "yaml_path": 87, "from_yaml_str": [87, 93], "yaml_str": 87, "template_path": 87, "template_format": [87, 93, 100, 101, 102, 103], "yml": 87, "from_templ": [87, 169], "from_template_data": [87, 165], "template_nam": [87, 165], "workflow_nam": [87, 100, 102, 151, 160], "whenev": 87, "get_ear_ids_of_task": 87, "get_ear_skip": 87, "get_ears_from_id": 87, "as_dict": 87, "get_ears_of_task": 87, "get_all_ear": 87, "get_all_element_iter": [87, 91], "get_all_el": 87, "get_all_parameter_data": 87, "dataset_copi": 87, "get_all_parameter_sourc": 87, "get_all_paramet": 87, "storeparamet": 87, "get_all_submission_run_id": 87, "get_element_ids_from_ear_id": 87, "get_element_iteration_ids_from_ear_id": 87, "get_element_iterations_from_id": 87, "get_element_iterations_of_task": 87, "get_elements_from_id": 87, "get_iteration_task_pathwai": 87, "ret_iter_id": 87, "ret_data_idx": 87, "pathwai": [87, 151], "get_paramet": 87, "kwtype": 87, "get_parameter_data": 87, "get_parameter_set_status": 87, "get_run_directori": 87, "dir_indices_arr": 87, "pathlib": [87, 152, 158], "_local": [87, 152, 158], "get_running_el": 87, "accord": [87, 91, 98, 151, 158, 162, 173], "get_running_run": 87, "get_store_ear": 87, "storeear": 87, "get_store_element_iter": 87, "storeelementit": 87, "get_store_el": 87, "storeel": 87, "get_store_task": 87, "storetask": 87, "get_task_ids_from_element_id": 87, "get_task_el": 87, "idx_lst": 87, "map_to_insert_id": 87, "get_text_fil": 87, "input_files_path": 87, "is_parameter_set": 87, "workflowlooplist": 87, "num_ear": 87, "num_added_task": 87, "num_element_iter": 87, "num_loop": 87, "num_submiss": 87, "num_task": 87, "process_shell_parameter_output": 87, "cmd_idx": [87, 151], "rechunk": 87, "chunk_siz": [87, 151], "backup": [87, 151], "effici": [87, 89], "rechunk_parameter_bas": 87, "reorganis": 87, "chunk": [87, 151], "rechunk_run": 87, "resolve_jobscript": 87, "objectcach": 87, "save_paramet": 87, "set_ear_end": 87, "zero": [87, 107, 173], "set_ear_skip": 87, "record": [87, 169], "met": 87, "skipreason": 87, "set_ear_start": 87, "run_dir": 87, "set_ears_initialis": 87, "iter_id": [87, 91], "set_multi_run_end": 87, "set_multi_run_start": 87, "set_parameter_valu": 87, "show_all_ear_status": 87, "everi": [87, 107], "store_format": 87, "th": 87, "return_idx": [87, 100, 101, 128], "halt": 87, "jobscript_parallel": [87, 100, 101, 128, 151], "hide": [87, 159], "monitor": [87, 100, 101], "benchmark": [87, 100, 101, 151], "live": [87, 95, 100, 101, 102, 103, 151], "progress": [87, 100, 101, 102, 103, 151, 160, 164], "task_artifacts_path": 87, "workflowtasklist": 87, "template_compon": [87, 153, 165], "templatecompon": 87, "temporary_renam": 87, "f": [87, 120, 151, 160, 173], "renam": [87, 151], "restor": 87, "abstractfilesystem": 87, "unzip": 87, "fsspec": [87, 151, 152, 168], "sub_j": 87, "include_execut": 87, "include_rechunk_backup": 87, "simpler": 88, "fit": [88, 158, 160], "insid": [88, 89], "blueprint": 88, "num_added_iter": 89, "iterable_paramet": 89, "output_paramet": 89, "iterableparam": 89, "add_iter": 89, "parent_loop_indic": 89, "got": 89, "loopcach": 89, "downstream_task": [89, 91], "get_child_loop": 89, "ident": 89, "get_element_id": 89, "get_el": 89, "get_parent_loop": 89, "superset": 89, "new_empty_loop": 89, "iter_loop_idx": 89, "skip_downstream_iter": 89, "elem_it": 89, "dep_element_id": 89, "task_indic": 89, "test_termin": 89, "upstream_task": [89, 91], "workflowloop": 90, "element_id": 91, "bind": 91, "add_el": 91, "base_el": 91, "propagate_to": 91, "return_indic": 91, "elementpropag": 91, "ensure_input_sourc": 91, "behaviour": 91, "generate_new_el": 91, "output_data_indic": 91, "element_data_indic": 91, "source_indic": 91, "get_dir_nam": 91, "initialise_ear": 91, "uninitialis": 91, "taskinputparamet": 91, "new_empty_task": 91, "taskoutputparamet": 91, "resolve_element_data_indic": 91, "element_dat_idx": 91, "product": [91, 173], "instead": [91, 151, 158], "cross": [91, 173], "unique_nam": 91, "source_fil": 93, "merge_resourc": 93, "limit": 93, "logic": 93, "stamp": 93, "constructor": [93, 158], "ref_is_path": 95, "max_rec": [98, 126, 151], "no_upd": [98, 126], "inact": [98, 126, 151], "knownsubmissionitem": 98, "exclude_o": 99, "template_file_or_str": [101, 103, 151], "is_str": [101, 103], "template_path_or_str": [101, 103], "builtin": [102, 151], "_submiss": [102, 103], "simul": [105, 107, 153, 158, 160, 170, 172], "sampl": [105, 107, 158, 159, 160], "consist": 106, "loadstep": 106, "biaxial": [106, 107, 158], "create_damask_loading_plan": 106, "turn": 106, "plan": [106, 114], "example_uniaxi": [106, 107, 158], "uniaxi": [106, 107, 158, 159, 160], "multistep": [106, 158], "remaind": 106, "num_step": 106, "planar_2d": [106, 107, 158], "planar": [106, 107, 158], "2d": [106, 107, 123, 159], "plane_strain": [106, 107, 158], "plane": [106, 107, 173], "strain": [106, 107, 108, 160, 173], "random_2d": [106, 107, 158], "random_3d": [106, 107, 158, 160], "3d": [106, 107, 156, 157, 160, 173], "uniaxial_cycl": [106, 107, 158], "cyclic": [106, 107], "total_tim": [107, 160], "num_incr": [107, 160], "normal_direct": 107, "target_def_grad": [107, 160], "target_def_grad_r": [107, 160], "target_vel_grad": 107, "stress": [107, 158, 159, 160, 173], "dump_frequ": [107, 160], "increment": [107, 158, 160, 164], "vector": [107, 112, 115, 173], "ma": 107, "maskedarrai": 107, "shape": [107, 114, 151, 173], "deform": [107, 108, 153], "gradient": [107, 108], "tensor": [107, 173], "mask": [107, 123], "unmask": 107, "rate": [107, 108], "veloc": [107, 108], "ij": [107, 173], "x": [107, 116, 123, 158, 159, 160, 173], "y": [107, 116, 158, 159, 160, 173], "z": [107, 116, 158, 159, 160], "along": 107, "frequent": 107, "method_arg": 107, "method_nam": 107, "flat": 107, "fourth": 107, "row": [107, 173], "column": [107, 158, 173], "shear": [107, 173], "third": [107, 160, 165], "strain_rate_mod": 107, "strainratemod": 107, "def_grad_r": [107, 108], "vel_grad": [107, 108], "vel_grad_approx": [107, 108], "mix": 107, "randomli": [107, 160], "interv": [107, 151], "strain_like_tensor": 107, "buffer": [107, 114, 118, 158, 159, 160], "_supportsarrai": [107, 114, 118], "dtype": [107, 114, 118, 123], "_nestedsequ": [107, 114, 118], "byte": [107, 114, 118], "friendli": 107, "max_stress": 107, "min_stress": 107, "cycle_frequ": 107, "num_increments_per_cycl": 107, "num_cycl": 107, "waveform": 107, "sine": 107, "scalar": [107, 112, 115, 173], "cycl": 107, "_strainratemod": 108, "approxim": 108, "enumer": [108, 110, 173], "crystal": [109, 117, 119, 121, 153, 158, 159, 160], "_eulerdefinit": 110, "euler": [110, 112, 113, 153, 160, 173], "angl": [110, 112, 113, 153, 160, 173], "bung": [110, 112, 160], "typic": [110, 153, 158], "crystallographi": 110, "rotation_ord": 110, "rotat": [110, 158], "lattic": [111, 160], "cell": [111, 114, 116], "a_star": 111, "reciproc": 111, "b": [111, 160], "b_star": 111, "c_star": 111, "euler_definit": [112, 160], "euler_is_degre": [112, 160], "quat_ord": 112, "orientationrepresentationtyp": 112, "eulerdefinit": 112, "degre": [112, 160, 162], "radian": 112, "quatord": 112, "quaternion": [112, 113, 114, 115, 153], "wrt": 112, "is_degre": 112, "scalar_vector": [112, 115], "unit_cell_align": [114, 160], "_type": 114, "_array_lik": 114, "_scalartype_co": [114, 118, 123], "unitcellalign": 114, "align": [114, 116, 160], "orientationrepresent": 114, "ori_format": 114, "custom": [114, 118, 160, 161], "start_index": [114, 118], "header": [114, 118], "comma": [114, 118, 151], "tab": [114, 118], "sensibl": [114, 118], "csv": [114, 118, 158, 159, 160], "tsv": [114, 118], "from_random": [114, 118, 158, 160], "quat_sample_random": 114, "uniformli": 114, "quat": 114, "44031492": 114, "uiuc": 114, "edu": 114, "node198": 114, "firstli": 114, "small": 114, "datastor": 114, "four": 115, "bluequartz": 115, "orientationanalysisfilt": 115, "convertquaternion": 115, "vector_scalar": 115, "latticedirect": 116, "from_hex_convention_damask": 116, "hexagon": [116, 158, 160], "symmetri": [116, 158], "from_hex_convention_mtex": 116, "crystalsymmetri": [116, 158], "scheme": [117, 158], "grow": 117, "box_siz": [118, 160], "phase_label": [118, 160], "orient": [118, 134, 139, 153, 159, 160], "random_se": 118, "crystallin": [118, 159], "microstructur": [118, 139, 158, 159], "box": [118, 158], "num_se": [118, 160], "matplotlib": 118, "typeddict": 120, "shallow": 120, "fromkei": 120, "view": 120, "pop": 120, "k": [120, 173], "keyerror": 120, "popitem": 120, "lifo": 120, "setdefault": 120, "lack": 120, "bulk": 121, "as_bas": 121, "arr": 123, "fill_valu": 123, "1d": 123, "fill": 123, "suit": [124, 125, 151], "span": 126, "longer": [126, 151], "legend": [127, 151], "workflow_path": [128, 151], "fixtur": 130, "pytest": [130, 151], "compar": [131, 134, 139], "define_load": 131, "loadcas": [131, 154, 158], "define_orient": [134, 158], "_pytest": 136, "orientations_1": 139, "define_se": 139, "microstructurese": [139, 158], "assist": 149, "config_dir": 151, "config_kei": [151, 152], "with_config": 151, "timeit": 151, "summari": 151, "decor": 151, "timeit_fil": 151, "std": 151, "std_stream": 151, "redirect": 151, "ref": 151, "ref_typ": 151, "guess": 151, "no_callback": 151, "known_nam": 151, "sha": 151, "env_source_fil": 151, "l": [151, 160], "destin": [151, 160], "i1": 151, "infile1": 151, "i2": 151, "infile2": 151, "fmt": 151, "syntax": 151, "3600": 151, "timeout_check_interv": 151, "exceed": 151, "60": [151, 160], "watch_interv": 151, "poll": 151, "click_exit_cod": 151, "sleep": 151, "block_idx": 151, "block_action_idx": 151, "infrequ": 151, "app_nam": [151, 152], "bak": 151, "equal": [151, 160], "max": 151, "py_test_arg": 151, "submitt": 151, "colon": 151, "semicolon": 151, "invoc": 152, "environment_setup": 152, "log_file_path": 152, "matflow_v0": 152, "environment_sourc": [152, 162], "task_schema_sourc": 152, "command_file_sourc": 152, "parameter_sourc": 152, "default_schedul": 152, "default_shel": 152, "conform": 152, "conditionand": [152, 158], "valuedatatyp": 152, "equal_to": [152, 158, 159, 160], "lt": [152, 158, 159], "x27": [152, 158], "gt": [152, 158, 159], "keys_is_inst": 152, "optionalcondit": [152, 158], "required_kei": 152, "requiredcondit": 152, "allowed_kei": 152, "noneconfig": 152, "forbidden_kei": 152, "config_directori": 152, "config_file_nam": 152, "config_file_path": 152, "config_file_cont": 152, "config_schema": 152, "invoking_user_id": 152, "host_user_id": 152, "host_user_id_file_path": 152, "config_callback": 152, "_set": 152, "user_orcid": 152, "user_nam": 152, "user_affili": 152, "wsl_execut": 152, "wsl_distribut": 152, "wsl_user": 152, "noneexecut": 152, "nonewsl_us": 152, "nonewsl_execut": 152, "nonewsl_distribut": 152, "nonewsl": 152, "nonepowershel": 152, "nonebash": 152, "noneschedul": 152, "direct_posix": 152, "parallel_environ": 152, "noneparallel_environ": 152, "nonedefault": 152, "noneshow_cmd": 152, "noneshebang_arg": 152, "noneopt": 152, "nonejs_cmd": 152, "nonedel_cmd": 152, "nonecwd_switch": 152, "nonearray_switch": 152, "nonearray_item_var": 152, "noneslurm": 152, "nonenum_nod": 152, "nonenum_cores_per_nod": 152, "nonenum_cor": 152, "nonesg": 152, "nonedirect_posix": 152, "nonedirect": 152, "noneparameter_sourc": 152, "socket": 152, "gethostnam": 152, "is_inst": [152, 158], "app_vers": 152, "rel": [152, 158, 160], "log_file_level": 152, "notset": 152, "debug": [152, 161], "warn": 152, "critic": 152, "in_": [152, 158], "log_console_level": [152, 161], "linux_release_fil": 152, "demo_data_manifest_fil": 152, "manifest": 152, "in_zip": 152, "text_fil": 152, "demo_data_dir": 152, "u": [153, 160, 165], "jupyt": [153, 170, 171, 173], "notebook": [153, 170, 171, 173], "fortran": 153, "physic": [153, 158], "plastic": [153, 158, 160], "offici": 153, "webpag": 153, "multiphys": 153, "translat": 153, "analysi": 153, "manipul": 153, "readthedoc": 153, "mechmicroman": 153, "softwar": [153, 163, 170], "piec": 153, "compet": 153, "someon": 153, "layer": 153, "focus": 153, "stretch": 153, "roll": 153, "rve_extrusion_ebsd": 154, "rve_extrusion_ebsd_d": 154, "cubic_textur": 154, "damask_input_fil": 154, "damask_numer": [154, 159], "fit_single_crystal_paramet": [154, 158], "fit_yield_func": 154, "generate_volume_element_from_statist": 154, "modify_volume_element_grid_s": 154, "read_tensile_test_csv": [154, 159], "sample_orientations_crc_fil": 154, "sample_orientations_ctf_fil": 154, "sample_texture_crc_fil": 154, "sample_texture_ctf_fil": 154, "sample_texture_odf_mat": [154, 159], "sample_texture_model_odf": [154, 159], "sample_texture_random": [154, 159], "simulate_yield_surface_2d": [154, 173], "simulate_yield_surface_2d_brass": 154, "tension_damask_": 154, "tension_damask_al_n_repeat": 154, "tension_damask_mg": 154, "tension_damask_ti": 154, "formabl": [154, 157, 159], "section": 155, "geometri": [156, 160], "visualis": [156, 158, 160], "figur": [156, 160], "pole": [156, 160], "invers": 156, "dream": [156, 157, 160], "h5py": 157, "pathcondit": 158, "channel": [158, 159], "oxford": 158, "instrument": 158, "sample_textur": [158, 160], "sample_orient": [158, 160], "dictcondit": 158, "read_tensile_test": 158, "ctf": [158, 159, 160], "hkl": 158, "crop": [158, 160], "scale": [158, 160, 173], "homog_point": [158, 160], "min_grain_s": [158, 160], "digit": 158, "correl": 158, "load_microstructur": 158, "boundary_tol": [158, 160], "electron": [158, 159], "backscatt": [158, 159], "diffract": [158, 159], "strcondit": 158, "euler_to_spati": [158, 159], "spatial_to_eul": [158, 159], "converteuler2spatialreferencefram": [158, 159, 160], "convertspatial2eulerreferencefram": [158, 159], "referemc": 158, "frame": 158, "transform": [158, 160], "euler_angles_deg": 158, "keep_xi": 158, "keep_eul": 158, "visualise_orient": 158, "odf": [158, 159, 160], "length": [158, 159, 160], "valuelength": 158, "pixel": [158, 160], "voxel": 158, "generate_volume_el": 158, "respons": [158, 159], "dump_all_yield_stress": 158, "fit_yield_funct": [158, 160], "simulate_ve_load": 158, "geom_path": 158, "incremental_data": 158, "volume_data": [158, 160], "phase_data": [158, 160, 173], "field_data": [158, 160], "grain_data": [158, 160], "read_hdf5_fil": 158, "consult": 158, "deprec": 158, "twice": 158, "elong": 158, "generate_microstructure_se": 158, "face": [158, 160], "modify_v": 158, "boolcondit": 158, "cubic": [158, 160], "symmetryexampl": 158, "post": 158, "opt": [158, 160], "add_absolut": 158, "add_calcul": 158, "add_stress_cauchi": [158, 160], "add_determin": 158, "add_devi": 158, "add_eigenvalu": 158, "add_eigenvector": 158, "add_ipf_color": [158, 160], "add_maximum_shear": 158, "add_equivalent_mis": 158, "add_norm": 158, "add_stress_second_piola_kirchhoff": 158, "add_pol": 158, "add_rot": 158, "add_spher": 158, "add_strain": [158, 160], "add_stretch_tensor": 158, "add_curl": 158, "add_diverg": 158, "add_gradi": 158, "thermal": 158, "damag": 158, "solver": 158, "phenomenon": 158, "spectral_polar": 158, "spectral_bas": 158, "conditionor": 158, "field": [158, 160], "visual": 158, "intcondit": 158, "warp": [158, 159], "floodfil": [158, 159], "grain": [158, 160], "emploi": 158, "sx": [158, 159, 160], "damp": 158, "listcondit": 158, "define_load_cas": [158, 160], "define_microstructure_se": 158, "generate_orient": 158, "generate_rv": 158, "visualise_v": 158, "ve": 158, "statist": [158, 159], "crystal_structur": [158, 160], "volume_fract": [158, 160], "size_distribut": [158, 160], "radial_distribution_funct": 158, "number_fraction_on_boundari": 158, "preset_statistics_model": 158, "axis_odf": 158, "matrix": 158, "floatcondit": 158, "singlecrystalparamet": 158, "specimen": 158, "understood": 158, "specimensymmetri": 158, "cubicexampl": 158, "orthorhomb": [158, 160], "pa": [158, 159], "mpa": [158, 159, 160], "gpa": [158, 159], "pascal": 158, "countour": 158, "colour": 158, "bar": 158, "yield": [158, 159, 160, 170, 172], "vonmis": 158, "von": [158, 173], "mise": [158, 173], "criteronexampl": 158, "tresca": 158, "ductil": 158, "criterionexampl": 158, "hosford": 158, "barlat_yld91": 158, "barlat": 158, "anisotrop": 158, "modelexampl": 158, "barlat_yld2000_2d": 158, "barlat_yld2004_18p": 158, "functionsexampl": 158, "hill1979": 158, "generalis": 158, "hill": 158, "hill1948": [158, 160], "quadrat": 158, "descriptionpseudo": 159, "inputsparametertypedefaultload_caseloadcas": 159, "outputsthi": 159, "actionsthi": 159, "inputsparametertypedefaultmicrostructure_seedsmicrostructurese": 159, "inputsparametertypedefaultorientationsorient": 159, "descriptiondump": 159, "inputsparametertypedefaultve_responsedict": 159, "yield_pointfloat": 159, "dump_pathstr": 159, "0rule": 159, "mainenviron": 159, "damask_parse_envscript": 159, "python_scriptscript": 159, "ve_responsedump_pathyield_pointcommand": 159, "0ex": 159, "descriptionfit": 159, "tensil": [159, 160], "under": [159, 162, 165], "single_crystal_parameterssinglecrystalparamet": 159, "tensile_test": 159, "initial_dampinglist": 159, "outputsparametertypesingle_crystal_parameterssinglecrystalparameterslevenberg_marquardt_fitterlistact": 159, "formable_envscript": 159, "ve_respons": [159, 160, 173], "single_crystal_paramet": [159, 160], "initial_dampingtensile_testscript": 159, "single_crystal_parameterslevenberg_marquardt_fittercommand": 159, "volumem": 159, "inputsparametertypedefaultyield_function_namestr": 159, "yield_point_criteria": [159, 160], "ve_responsedict": 159, "fit_yield_fixed_paramet": 159, "nonefit_yield_initial_paramet": 159, "nonefit_yield_opt_paramet": 159, "noneoutputsparametertypefitted_yield_funct": 159, "yield_function_namefit_yield_opt_parametersyield_point_criteriave_respons": 159, "fit_yield_fixed_parametersve_respons": 159, "multiaxi": [159, 160], "fit_yield_initial_parametersscript": 159, "fitted_yield_functionscommand": 159, "descriptiongener": 159, "inputsparametertypedefaultve_sizelist": 159, "num_grainsint": 159, "phase_labelstr": 159, "outputsparametertypemicrostructure_seedsmicrostructureseedsact": 159, "seeds_from_random": 159, "ve_sizenum_grainsphase_labelscript": 159, "microstructure_seedscommand": 159, "inputsparametertypedefaultnum_orientationsint": 159, "outputsparametertypeorientationsorientationsact": 159, "python_envscript": 159, "main_script_test": 159, "num_orientationsscript": 159, "orientationscommand": 159, "inputsparametertypedefaultgeom_path": 159, "material_path": 159, "orientationsorientationsnoneoutputsparametertypevolume_elementdictact": 159, "generate_volume_element_from_damask_input_fil": 159, "orientationsgeom_pathmaterial_pathscript": 159, "volume_elementcommand": 159, "voronoi": [159, 160], "diagram": 159, "ve_grid_sizelist": 159, "homog_labelstr": 159, "orientationsorientationsnonescale_morphologylist": 159, "3nonescale_update_sizebool": 159, "outputsparametertypevolume_elementdictact": 159, "generate_volume_element_voronoi": 159, "ve_grid_sizeorientationsmicrostructure_seedsscale_update_sizescale_morphologyhomog_labelscript": 159, "inputsparametertypedefaultgrid_sizelist": 159, "phase_statisticslist": 159, "resolutionlistnonesizelist": 159, "3noneoriginlist": 159, "3noneperiodicbool": 159, "precipitatesboolnoneorientationsorientationsnoneoutputsparametertypevolume_elementdictact": 159, "dream_3d_hdf5_fil": 159, "dream_3d_pipelin": 159, "dream_3d_envinput": 159, "dream_3d_pipelineinput": 159, "grid_siz": [159, 160], "period": 159, "phase_statist": [159, 160], "precipit": 159, "orientationsscript": 159, "dream_3d": 159, "generate_volume_element_statist": 159, "originphase_statisticsprecipitatessizeorientationsperiodicgrid_sizeresolutioncommand": 159, "1rule": 159, "dream_3d_envcommand": 159, "0cmd": 159, "json2rul": 159, "volume_el": [159, 160], "dream_3d_envoutput": 159, "volume_elementoutput": 159, "dream_3d_hdf5_filescript": 159, "parse_dream_3d_volume_el": 159, "extrus": 159, "inputsparametertypedefaultmicrostructure_imagedict": 159, "depthint": 159, "image_axeslist": 159, "phase_labelstrnonephase_label_mappingdictnoneoutputsparametertypevolume_elementdictact": 159, "microstructure_imagephase_labelphase_label_mappingimage_axeshomog_labeldepthscript": 159, "descriptionget": 159, "differenti": 159, "interfer": 159, "contrast": 159, "microscopi": 159, "inputsparametertypedefaultdicdict": 159, "ebsddict": 159, "root_pathstr": 159, "transform_typestr": 159, "affin": [159, 160], "scaling_factorint": 159, "find_grains_algorithmstr": 159, "outputsparametertypemicrostructure_imagedictact": 159, "defdap_envscript": 159, "find_grains_algorithmdictransform_typeroot_pathebsdscaling_factorscript": 159, "microstructure_imagecommand": 159, "inputsparametertypedefaultebsddict": 159, "scaling_factorroot_pathebsdscript": 159, "descriptionmodifi": 159, "around": 159, "inputsparametertypedefaultvolume_elementdict": 159, "buffer_sizeslist": 159, "phase_idslist": 159, "phase_labelslist": 159, "orderlist": 159, "3noneoutputsparametertypevolume_elementdictact": 159, "add_ve_buffer_zon": 159, "orderphase_idsbuffer_sizesvolume_elementhomog_labelphase_labelsscript": 159, "alter": 159, "new_grid_sizelist": 159, "volume_elementnew_grid_sizescript": 159, "descriptionread": 159, "inputsparametertypedefaultcsv_file_pathstr": 159, "csv_argumentsdict": 159, "eng_stress_col_indexintnoneeng_strain_col_indexintnonetrue_stress_col_indexintnonetrue_strain_col_indexintnonestress_unitsstr": 159, "plastic_rangelist": 159, "2noneoutputsparametertypetensile_test": 159, "true_stress_col_indextrue_strain_col_indexeng_stress_col_indexcsv_file_pathcsv_argumentsplastic_rangestress_unitseng_strain_col_indexscript": 159, "tensile_testcommand": 159, "inputsparametertypedefaultcompilebool": 159, "ctf_file_pathstr": 159, "specimen_symmetrystr": 159, "ebsd_phasestr": 159, "num_orientationsint": 159, "ebsd_reference_frame_transformationstr": 159, "ebsd_rotationdictnoneoutputsparametertypeorientationsorientationsact": 159, "matlab_envscript": 159, "sample_orientations_ctf": 159, "compile_mtexcommand": 159, "sample_orientations_ctfscript": 159, "run_compiled_mtexscript": 159, "ctf_file_pathnum_orientationscompileebsd_phaseebsd_rotationspecimen_symmetryebsd_reference_frame_transformationscript": 159, "2rule": 159, "run_mtexscript": 159, "crc_file_pathstr": 159, "sample_orientations_crc": 159, "sample_orientations_crcscript": 159, "num_orientationscompileebsd_phaseebsd_rotationspecimen_symmetrycrc_file_pathebsd_reference_frame_transformationscript": 159, "descriptionextract": 159, "sample_texture_ctf": 159, "sample_texture_ctfscript": 159, "sample_texture_crc": 159, "sample_texture_crcscript": 159, "odf_mat_file_pathstr": 159, "sample_texture_odf_matscript": 159, "num_orientationsodf_mat_file_pathcompilescript": 159, "crystal_symmetrystr": 159, "odf_componentslist": 159, "compilebool": 159, "sample_texture_model_odfscript": 159, "odf_componentscrystal_symmetrynum_orientationscompilespecimen_symmetryscript": 159, "sample_texture_randomscript": 159, "specimen_symmetrycrystal_symmetrynum_orientationscompilescript": 159, "descriptionsimul": 159, "load_caseloadcas": 159, "homogenizationdict": 159, "damask_phasesdict": 159, "damask_post_processinglist": 159, "ve_response_datadict": 159, "damask_viz": [159, 160], "nonesingle_crystal_parameterssinglecrystalparametersnonedamask_solverdictnonedamask_numericsdictnoneoutputsparametertypedamask_logdictdamask_post_processing_result": 159, "ve_responsedictdamask_viz_result": 159, "damask_stdout_fil": 159, "damask_hdf5_fil": 159, "damask_geom_fil": [159, 160], "damask_parse_envinput": 159, "damask_geom_fileinput": 159, "volume_elementscript": 159, "write_geom": 159, "damask_load_fil": [159, 160], "damask_load_fileinput": 159, "load_cas": [159, 160], "damask_solverscript": 159, "write_load": 159, "damask_solverload_casecommand": 159, "damask_material_fil": [159, 160], "damask_material_fileinput": 159, "homogen": [159, 160], "damask_phas": [159, 160], "single_crystal_parametersscript": 159, "write_materi": 159, "single_crystal_parametersvolume_elementdamask_phaseshomogenizationcommand": 159, "3rule": 159, "damask_numerics_fil": 159, "not_equal_to": 159, "damask_numerics_fileinput": 159, "damask_numericsscript": 159, "write_numer": 159, "damask_numericscommand": 159, "4rule": 159, "damask_envcommand": 159, "geom": [159, 160], "vtiout": 159, "logerr": 159, "log5rul": 159, "damask_log": 159, "damask_parse_envoutput": 159, "damask_logoutput": 159, "damask_stdout_filescript": 159, "read_log": 159, "damask_logcommand": 159, "6rule": 159, "damask_post_processing_result": 159, "damask_post_processing_resultoutput": 159, "damask_hdf5_filescript": 159, "process_damask_hdf5": 159, "damask_post_processingscript": 159, "damask_post_processing_resultcommand": 159, "7rule": 159, "ve_responseoutput": 159, "extract_damask_hdf5": 159, "ve_response_datascript": 159, "ve_responsecommand": 159, "8rule": 159, "damask_viz_result": 159, "damask_viz_resultoutput": 159, "viz_damask_hdf5": 159, "damask_vizscript": 159, "ve_responsedamask_viz_resultcommand": 159, "concurr": 159, "nonesingle_crystal_parameterssinglecrystalparametersnonedamask_solverdictnonedamask_numericsdictnoneoutputsparametertypeve_responsedictact": 159, "damask_solv": 159, "high_concurr": 159, "write_input_fil": 159, "load_casehomogenizationsingle_crystal_parametersdamask_solverdamask_numericsdamask_phasesvolume_elementcommand": 159, "log2rul": 159, "process_hdf5": 159, "damask_post_processingve_response_datadamask_vizscript": 159, "descriptionvisualis": 159, "pathstr": 159, "vti": [159, 160], "volume_elementpathcommand": 159, "pole_figure_directionslist": 159, "use_contoursbool": 159, "ipf_reference_directionstr": 159, "colourbar_limitslist": 159, "2noneuse_one_colourbarbool": 159, "plot_pole_figur": 159, "plot_pole_figuresscript": 159, "colourbar_limitspole_figure_directionsuse_one_colourbarcrystal_symmetryipf_reference_directioncompileuse_contourscommand": 159, "demonstr": 160, "somewher": 160, "mf": [160, 161, 168, 169, 173], "copy_demo_workflow": 160, "dst": 160, "ebsd": 160, "extrud": 160, "tension": 160, "load_microstructure_ebsd": 160, "demo_data_fil": 160, "defdap_small_dataset": 160, "scaling_factor": 160, "ebsd_data": 160, "flip_vert": 160, "8": 160, "30": 160, "generate_volume_element_extrus": 160, "depth": 160, "image_ax": 160, "homog_label": 160, "ti": 160, "visualise_ve_vtk": 160, "modify_ve_add_buffer_zon": 160, "buffer_s": 160, "phase_id": 160, "ti_iso": 160, "air": 160, "simulate_ve_loading_damask": [160, 173], "0e": 160, "n_constitu": 160, "hp": 160, "587": 160, "f_p": 160, "p": [160, 173], "elast": 160, "hook": 160, "c_11": 160, "0e9": 160, "c_12": 160, "90": [160, 173], "c_13": 160, "66": 160, "c_33": 160, "181": 160, "7e9": 160, "c_44": 160, "46": 160, "5e9": 160, "phenopowerlaw": 160, "gamma_sl": 160, "n_sl": 160, "12": [160, 173], "basal": 160, "prism": 160, "pyr": 160, "20": 160, "a_sl": 160, "dot_gamma_0_sl": 160, "001": 160, "xi_0_sl": 160, "349": 160, "150": 160, "1107": 160, "zambaldi": 160, "xi_inf_sl": 160, "568": 160, "7": 160, "3420": 160, "h_0_sl": 160, "sl": 160, "15": 160, "e6": 160, "h_sl": 160, "entri": 160, "cf": 160, "175": 160, "4e9": 160, "42": 160, "55e9": 160, "isotrop": 160, "1e8": 160, "1e6": 160, "49": 160, "5e6": 160, "xi": 160, "gamma": 160, "xi_0": 160, "3e6": 160, "xi_inf": 160, "6e6": 160, "dot_gamma_0": 160, "h_0": 160, "dilat": 160, "damask_post_process": 160, "ve_response_data": 160, "averag": 160, "quantiti": 160, "sim": 160, "field_nam": 160, "sigma": 160, "phase_nam": 160, "out_nam": 160, "vol_avg_stress": [160, 173], "mean_along_ax": 160, "epsilon_u": 160, "vol_avg_strain": 160, "spatial": 160, "probabl": 160, "u_n": 160, "itmin": 160, "itmax": 160, "100": [160, 162, 165], "fwbw_differ": 160, "dic": 160, "load_microstructure_ebsd_d": 160, "transform_typ": 160, "dic_data": 160, "txt": 160, "28": 160, "328e": 160, "micron": 160, "452": 160, "322": 160, "200": [160, 165], "417": 160, "159": 160, "144": 160, "352": 160, "269": 160, "102": [160, 164, 165], "33": 160, "500": 160, "48": 160, "295": 160, "245": 160, "176": 160, "437": 160, "61": 160, "382": 160, "391": 160, "398": 160, "240": 160, "208": 160, "780": 160, "606": 160, "374": 160, "816": 160, "285": 160, "385": 160, "612": 160, "543": 160, "186": 160, "218": 160, "839": 160, "149": 160, "516": 160, "519": 160, "335": 160, "856": 160, "145": 160, "794": 160, "686": 160, "743": 160, "424": 160, "470": 160, "textur": [160, 173], "kesten": 160, "h": 160, "pirgazi": 160, "2016": 160, "metal": 160, "alloi": 160, "technologi": 160, "32": 160, "13": 160, "1303": 160, "1315": 160, "1080": 160, "02670836": 160, "1231746": 160, "sample_texture_from_model_odf_mtex": [160, 173], "crystal_symmetri": 160, "specimen_symmetri": 160, "num_orient": 160, "2000": 160, "odf_compon": [160, 173], "unimod": 160, "component_fract": 160, "halfwidth": 160, "modal_orientation_eul": [160, 173], "35": [160, 173], "45": [160, 173], "copper": [160, 173], "59": [160, 173], "37": [160, 173], "63": [160, 173], "goss": [160, 173], "brass": [160, 173], "27": 160, "dillamor": 160, "cube": [160, 173], "visualise_orientations_pole_figure_mtex": 160, "orientaion": 160, "pole_figure_direct": 160, "add_mis": 160, "sigma_vm": 160, "vol_avg_equivalent_stress": 160, "epsilon_v": 160, "_vm": 160, "vol_avg_equivalent_strain": 160, "vol_avg_equivalent_plastic_strain": 160, "ipfcolor_": 160, "numerics_exampl": 160, "experiment": 160, "curv": 160, "levenberg": 160, "marquardt": 160, "generate_microstructure_seeds_from_random": 160, "ve_siz": 160, "num_grain": 160, "generate_volume_element_from_voronoi": [160, 173], "ve_grid_s": 160, "read_tensile_test_from_csv": 160, "csv_file_path": 160, "surfalex_tensile_test": 160, "csv_argument": 160, "skip_row": 160, "header_row": 160, "eng_strain_col_index": 160, "eng_stress_col_index": 160, "stress_unit": 160, "3500": 160, "170": 160, "400e6": 160, "30e6": 160, "95e6": 160, "106750000000": 160, "60410000000": 160, "28340000000": 160, "25": 160, "atol_xi": 160, "xi_sl": 160, "05": 160, "initial_damp": 160, "microstructure_se": 160, "multiaxial_load_cas": 160, "f_e": 160, "l_p": 160, "75": 160, "31": 160, "vol_avg_plastic_strain": [160, 173], "yield_function_nam": 160, "threshold": 160, "equivalent_plastic_strain": 160, "128": 160, "256": 160, "00": 160, "sum": [160, 165, 173], "esd_mean": 160, "esd_log_mean": 160, "esd_log_stddev": 160, "num_bin": 160, "bin_step_s": 160, "weight": 160, "100_000": 160, "200_000": 160, "s1": [160, 165], "s2": [160, 165], "rc": 160, "rd1": 160, "rd2": 160, "nd1": 160, "nd2": 160, "increas": 160, "modify_ve_grid_s": 160, "new_grid_s": 160, "16": 160, "crc": 160, "crc_file_path": 160, "cpr": 160, "pick": 160, "sample_orientations_from_crc_file_mtex": 160, "texture_al_crc": 160, "texture_": 160, "ebsd_reference_frame_transform": 160, "ebsd_phas": 160, "ebsd_rot": 160, "1000": 160, "use_contour": 160, "sample_orientations_from_ctf_file_mtex": 160, "ctf_file_path": 160, "sample_texture_from_crc_file_mtex": 160, "sample_texture_from_ctf_file_mtex": 160, "sample_texture_from_odf_mat_file_mtex": 160, "odf_mat_file_path": 160, "fraction": 160, "modal_orientation_hkl": 160, "modal_orientation_uvw": 160, "hex": 160, "sample_texture_random_mtex": 160, "surfac": [160, 170, 172], "aluminium": 160, "strong": 160, "1024": 160, "64": 160, "scale_morphologi": 160, "80": 160, "400": 160, "0002": 160, "17": 160, "107": 160, "3e": 160, "9e": 160, "499": 160, "912": 160, "2e": 160, "60c": 160, "138": 160, "300": [160, 165, 173], "wip": 160, "tessel": 160, "magnesium": 160, "mg": 160, "62350": 160, "troman": 160, "2011": 160, "anisotropi": 160, "hcp": 160, "polycryst": 160, "rho": 160, "1740": 160, "3e9": 160, "21": 160, "wang": 160, "acta": 160, "materialia": 160, "77": 160, "2014": 160, "1016": 160, "actamat": 160, "07": 160, "048": 160, "xi_tw": 160, "n_tw": 160, "55": 160, "40": 160, "135": 160, "xi_0_tw": 160, "dot_gamma_0_tw": 160, "f_sat_sl": 160, "tw": 160, "h_0_tw": 160, "50": 160, "h_tw": 160, "titanium": 160, "journal": 160, "356": 160, "367": 160, "2021": 160, "1557": 160, "jmr": 160, "334": 160, "132": 160, "598": 160, "610": 160, "2017": 160, "015": 160, "127": 160, "96": 160, "behavior": 161, "my": 161, "temporarili": 161, "load_config": 161, "reload_config": 161, "consol": 161, "usual": [161, 162], "howev": [161, 162, 165], "newer": 161, "incompat": 161, "sometim": [161, 162, 165], "reset_config": 161, "had": 161, "pointer": 161, "old": 161, "get_config_path": 161, "clear_known_submissions_fil": 161, "declar": 162, "runnabl": 162, "extern": 162, "whilst": 162, "older": 162, "comparison": 162, "facilit": 162, "my_env": 162, "alpha": 162, "my_execut": 162, "tell": [162, 169], "sole": 162, "my_task": [162, 164], "echo": [162, 164, 165], "could": [162, 165, 173], "restrict": 162, "p3": [162, 165], "101": [162, 164], "201": 162, "my_other_task": 162, "my_other_env": 162, "At": 162, "greatest": 162, "verbos": 162, "refin": 162, "chosen": 162, "similar": 162, "reset": 163, "disambigu": 163, "meta": [163, 170], "customis": [163, 170], "my_loop": 164, "sinc": [164, 165], "103": 164, "unlik": 165, "constitut": 165, "system_analysi": 165, "p4": 165, "compris": 165, "meta_task": 165, "s0": 165, "p2b": 165, "s3": 165, "p5": 165, "meta_task_schema": 165, "220": 165, "sake": 165, "hf": 165, "m1": 165, "metatask": 165, "wk": [165, 169, 173], "meta_task_workflow": 165, "individu": 165, "test_metatask_multi_element_sets_custom_parametris": 165, "301": 165, "fulli": 167, "alphanumer": 167, "underscor": 167, "util": 167, "check_valid_py_identifi": 167, "prefer": 167, "acronym": 167, "remot": [168, 169], "wkt": [168, 169], "host": 169, "sandbox": 169, "zenodo": 169, "1210144": 169, "defaultdict": 173, "np": 173, "ipython": 173, "plotli": 173, "subplot": 173, "make_subplot": 173, "graph_object": 173, "figurewidget": 173, "def": 173, "get_hydrostatic_tensor": 173, "hydrostat": 173, "diagon": 173, "hydro": 173, "zeros_lik": 173, "trace": 173, "axis1": 173, "axis2": 173, "get_von_mis": 173, "deviator": 173, "sqrt": 173, "axi": 173, "get_von_mises_stress": 173, "get_von_mises_strain": 173, "order_coplanar_point": 173, "anticlockwis": 173, "clockwis": 173, "coplanar": 173, "lie": 173, "opposit": 173, "linalg": 173, "norm": 173, "centroid": 173, "newaxi": 173, "cr": 173, "tripl": 173, "stp": 173, "einsum": 173, "ik": 173, "sign": 173, "ang": 173, "arctan2": 173, "ang_ord": 173, "argsort": 173, "group_elements_by_textur": 173, "err_id": 173, "rve": 173, "speed": 173, "sort": 173, "scenario": 173, "ouput": 173, "sim_elems_by_ori": 173, "elem": 173, "continu": 173, "gen_ve_elem": 173, "sample_texture_elem": 173, "modal_ori_eul": 173, "get_stress_at_yield": 173, "002": 173, "plastic_strain": 173, "plastic_strain_vm": 173, "yield_idx": 173, "ab": 173, "argmin": 173, "stress_at_yield": 173, "get_yield_tensor": 173, "sim_el": 173, "yield_tensor": 173, "closest": 173, "eq_stress_idx": 173, "eq_stress": 173, "plot_yield_surfac": 173, "texture_eul": 173, "nsubplot": 173, "len": 173, "ncol": 173, "nrow": 173, "ceil": 173, "fig": 173, "col": 173, "subplot_titl": 173, "vertical_spac": 173, "horizontal_spac": 173, "update_layout": 173, "height": 173, "showlegend": 173, "seaborn": 173, "title_text": 173, "layout": 173, "yaxi": 173, "scaleanchor": 173, "scaleratio": 173, "titl": 173, "\u03c3": 173, "td": 173, "xaxi": 173, "rd": 173, "text_nam": 173, "xy0": 173, "order_idx": 173, "concaten": 173, "add_scatt": 173, "19": 173, "min": 173, "write_imag": 173, "yield_surfac": 173, "png": 173}, "objects": {"": [[5, 0, 0, "-", "matflow"]], "matflow": [[6, 1, 1, "", "Action"], [7, 1, 1, "", "ActionEnvironment"], [8, 1, 1, "", "ActionRule"], [9, 1, 1, "", "ActionScope"], [10, 1, 1, "", "ActionScopeType"], [11, 1, 1, "", "Command"], [12, 1, 1, "", "CommandFilesList"], [13, 1, 1, "", "DirectPosix"], [14, 1, 1, "", "DirectWindows"], [15, 1, 1, "", "Element"], [16, 1, 1, "", "ElementAction"], [17, 1, 1, "", "ElementActionRun"], [18, 1, 1, "", "ElementFilter"], [19, 1, 1, "", "ElementGroup"], [20, 1, 1, "", "ElementInputFiles"], [21, 1, 1, "", "ElementInputs"], [22, 1, 1, "", "ElementIteration"], [23, 1, 1, "", "ElementOutputFiles"], [24, 1, 1, "", "ElementOutputs"], [25, 1, 1, "", "ElementParameter"], [26, 1, 1, "", "ElementPropagation"], [27, 1, 1, "", "ElementRepeats"], [28, 1, 1, "", "ElementResources"], [29, 1, 1, "", "ElementSet"], [30, 1, 1, "", "Elements"], [31, 1, 1, "", "Environment"], [32, 1, 1, "", "EnvironmentsList"], [33, 1, 1, "", "Executable"], [34, 1, 1, "", "ExecutableInstance"], [35, 1, 1, "", "ExecutablesList"], [36, 1, 1, "", "Executor"], [37, 1, 1, "", "FileNameExt"], [38, 1, 1, "", "FileNameSpec"], [39, 1, 1, "", "FileNameStem"], [40, 1, 1, "", "FileSpec"], [41, 1, 1, "", "GroupList"], [42, 1, 1, "", "InputFile"], [43, 1, 1, "", "InputFileGenerator"], [44, 1, 1, "", "InputFileGeneratorSource"], [45, 1, 1, "", "InputSource"], [46, 1, 1, "", "InputSourceType"], [47, 1, 1, "", "InputValue"], [48, 1, 1, "", "Jobscript"], [49, 1, 1, "", "JobscriptBlock"], [50, 1, 1, "", "Loop"], [51, 1, 1, "", "MetaTask"], [52, 1, 1, "", "MetaTaskSchema"], [53, 1, 1, "", "MultiPathSequence"], [54, 1, 1, "", "NumCores"], [55, 1, 1, "", "OutputFileParser"], [56, 1, 1, "", "OutputFileParserSource"], [57, 1, 1, "", "OutputLabel"], [58, 1, 1, "", "Parameter"], [59, 1, 1, "", "ParameterPath"], [60, 1, 1, "", "ParameterPropagationMode"], [61, 1, 1, "", "ParameterValue"], [62, 1, 1, "", "Parameters"], [63, 1, 1, "", "ParametersList"], [64, 1, 1, "", "QueuedScheduler"], [65, 1, 1, "", "ResourceList"], [66, 1, 1, "", "ResourceSpec"], [67, 1, 1, "", "Rule"], [68, 1, 1, "", "RunDirAppFiles"], [69, 1, 1, "", "SGEPosix"], [70, 1, 1, "", "SchemaInput"], [71, 1, 1, "", "SchemaOutput"], [72, 1, 1, "", "SchemaParameter"], [73, 1, 1, "", "SlurmPosix"], [74, 1, 1, "", "SubParameter"], [75, 1, 1, "", "Submission"], [76, 1, 1, "", "Task"], [77, 1, 1, "", "TaskInputParameters"], [78, 1, 1, "", "TaskList"], [79, 1, 1, "", "TaskObjective"], [80, 1, 1, "", "TaskOutputParameters"], [81, 1, 1, "", "TaskSchema"], [82, 1, 1, "", "TaskSchemasList"], [83, 1, 1, "", "TaskSourceType"], [84, 1, 1, "", "TaskTemplateList"], [85, 1, 1, "", "ValuePerturbation"], [86, 1, 1, "", "ValueSequence"], [87, 1, 1, "", "Workflow"], [88, 1, 1, "", "WorkflowBlueprint"], [89, 1, 1, "", "WorkflowLoop"], [90, 1, 1, "", "WorkflowLoopList"], [91, 1, 1, "", "WorkflowTask"], [92, 1, 1, "", "WorkflowTaskList"], [93, 1, 1, "", "WorkflowTemplate"], [94, 5, 1, "", "app"], [95, 6, 1, "", "cancel"], [96, 0, 0, "-", "cli"], [97, 6, 1, "", "get_OS_info"], [98, 6, 1, "", "get_known_submissions"], [99, 6, 1, "", "get_shell_info"], [100, 6, 1, "", "make_and_submit_demo_workflow"], [101, 6, 1, "", "make_and_submit_workflow"], [102, 6, 1, "", "make_demo_workflow"], [103, 6, 1, "", "make_workflow"], [104, 0, 0, "-", "param_classes"], [124, 6, 1, "", "run_hpcflow_tests"], [125, 6, 1, "", "run_tests"], [126, 6, 1, "", "show"], [127, 6, 1, "", "show_legend"], [128, 6, 1, "", "submit_workflow"], [129, 0, 0, "-", "tests"], [151, 7, 1, "cmdoption-matflow-config-dir", "--config-dir"], [151, 7, 1, "cmdoption-matflow-config-key", "--config-key"], [151, 7, 1, "cmdoption-matflow-help", "--help"], [151, 7, 1, "cmdoption-matflow-hpcflow-version", "--hpcflow-version"], [151, 7, 1, "cmdoption-matflow-run-time-info", "--run-time-info"], [151, 7, 1, "cmdoption-matflow-std-stream", "--std-stream"], [151, 7, 1, "cmdoption-matflow-timeit", "--timeit"], [151, 7, 1, "cmdoption-matflow-timeit-file", "--timeit-file"], [151, 7, 1, "cmdoption-matflow-version", "--version"], [151, 7, 1, "cmdoption-matflow-with-config", "--with-config"]], "matflow.Action": [[6, 2, 1, "", "abortable"], [6, 2, 1, "", "clean_up"], [6, 2, 1, "", "commands"], [6, 3, 1, "", "compose_source"], [6, 3, 1, "", "env_spec_from_hashable"], [6, 3, 1, "", "env_spec_to_hashable"], [6, 2, 1, "", "environments"], [6, 3, 1, "", "expand"], [6, 3, 1, "", "from_json_like"], [6, 3, 1, "", "generate_data_index"], [6, 3, 1, "", "get_block_act_idx_shell_vars"], [6, 3, 1, "", "get_command_file_labels"], [6, 3, 1, "", "get_command_input_types"], [6, 3, 1, "", "get_command_output_types"], [6, 3, 1, "", "get_command_parameter_types"], [6, 3, 1, "", "get_commands_action_env"], [6, 3, 1, "", "get_commands_file_hash"], [6, 3, 1, "", "get_environment"], [6, 3, 1, "", "get_environment_name"], [6, 3, 1, "", "get_environment_spec"], [6, 3, 1, "", "get_input_file_generator_action_env"], [6, 3, 1, "", "get_input_file_labels"], [6, 3, 1, "", "get_input_types"], [6, 3, 1, "", "get_output_file_labels"], [6, 3, 1, "", "get_output_file_parser_action_env"], [6, 3, 1, "", "get_output_types"], [6, 3, 1, "", "get_param_dump_file_path_HDF5"], [6, 3, 1, "", "get_param_dump_file_path_JSON"], [6, 3, 1, "", "get_param_load_file_path_HDF5"], [6, 3, 1, "", "get_param_load_file_path_JSON"], [6, 3, 1, "", "get_parameter_dependence"], [6, 3, 1, "", "get_parameter_names"], [6, 3, 1, "", "get_possible_scopes"], [6, 3, 1, "", "get_precise_scope"], [6, 3, 1, "", "get_required_executables"], [6, 3, 1, "", "get_script_artifact_name"], [6, 3, 1, "", "get_script_determinant_hash"], [6, 3, 1, "", "get_script_determinants"], [6, 3, 1, "", "get_script_input_output_file_command_args"], [6, 3, 1, "", "get_script_input_output_file_paths"], [6, 3, 1, "", "get_script_name"], [6, 3, 1, "", "get_snippet_script_path"], [6, 3, 1, "", "get_snippet_script_str"], [6, 2, 1, "", "input_file_generators"], [6, 2, 1, "", "input_files"], [6, 4, 1, "", "is_IFG"], [6, 4, 1, "", "is_OFP"], [6, 3, 1, "", "is_input_type_required"], [6, 3, 1, "", "is_snippet_script"], [6, 2, 1, "", "output_file_parsers"], [6, 2, 1, "", "output_files"], [6, 3, 1, "", "process_script_data_formats"], [6, 2, 1, "", "rules"], [6, 2, 1, "", "save_files"], [6, 2, 1, "", "script"], [6, 2, 1, "", "script_data_files_use_opt"], [6, 2, 1, "", "script_data_in"], [6, 4, 1, "", "script_data_in_grouped"], [6, 4, 1, "", "script_data_in_has_direct"], [6, 4, 1, "", "script_data_in_has_files"], [6, 2, 1, "", "script_data_out"], [6, 4, 1, "", "script_data_out_grouped"], [6, 4, 1, "", "script_data_out_has_direct"], [6, 4, 1, "", "script_data_out_has_files"], [6, 2, 1, "", "script_exe"], [6, 4, 1, "", "script_is_python_snippet"], [6, 2, 1, "", "script_pass_env_spec"], [6, 4, 1, "", "task_schema"], [6, 3, 1, "", "test_rules"], [6, 3, 1, "", "to_dict"], [6, 3, 1, "", "to_json_like"]], "matflow.ActionEnvironment": [[7, 2, 1, "", "environment"], [7, 3, 1, "", "from_json_like"], [7, 2, 1, "", "scope"], [7, 3, 1, "", "to_dict"], [7, 3, 1, "", "to_json_like"]], "matflow.ActionRule": [[8, 2, 1, "", "action"], [8, 3, 1, "", "check_exists"], [8, 3, 1, "", "check_missing"], [8, 2, 1, "", "command"], [8, 3, 1, "", "from_json_like"], [8, 2, 1, "", "rule"], [8, 3, 1, "", "test"], [8, 3, 1, "", "to_dict"], [8, 3, 1, "", "to_json_like"]], "matflow.ActionScope": [[9, 3, 1, "", "any"], [9, 3, 1, "", "from_json_like"], [9, 3, 1, "", "input_file_generator"], [9, 2, 1, "", "kwargs"], [9, 3, 1, "", "main"], [9, 3, 1, "", "output_file_parser"], [9, 3, 1, "", "processing"], [9, 3, 1, "", "to_dict"], [9, 3, 1, "", "to_json_like"], [9, 3, 1, "", "to_string"], [9, 2, 1, "", "typ"]], "matflow.ActionScopeType": [[10, 2, 1, "", "ANY"], [10, 2, 1, "", "INPUT_FILE_GENERATOR"], [10, 2, 1, "", "MAIN"], [10, 2, 1, "", "OUTPUT_FILE_PARSER"], [10, 2, 1, "", "PROCESSING"]], "matflow.Command": [[11, 2, 1, "", "action"], [11, 2, 1, "", "arguments"], [11, 2, 1, "", "command"], [11, 2, 1, "", "executable"], [11, 3, 1, "", "from_json_like"], [11, 3, 1, "", "get_command_line"], [11, 3, 1, "", "get_output_types"], [11, 3, 1, "", "get_required_executables"], [11, 3, 1, "", "process_std_stream"], [11, 2, 1, "", "rules"], [11, 2, 1, "", "stderr"], [11, 2, 1, "", "stdin"], [11, 2, 1, "", "stdout"], [11, 3, 1, "", "to_dict"], [11, 3, 1, "", "to_json_like"], [11, 2, 1, "", "variables"]], "matflow.CommandFilesList": [[12, 3, 1, "", "add_object"], [12, 3, 1, "", "add_objects"], [12, 3, 1, "", "from_json_like"], [12, 3, 1, "", "get"], [12, 3, 1, "", "get_all"], [12, 3, 1, "", "list_attrs"], [12, 3, 1, "", "to_dict"], [12, 3, 1, "", "to_json_like"]], "matflow.DirectPosix": [[13, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [13, 2, 1, "", "DEFAULT_SHELL_ARGS"], [13, 2, 1, "", "DEFAULT_SHELL_EXECUTABLE"], [13, 3, 1, "", "cancel_jobs"], [13, 3, 1, "", "get_job_state_info"], [13, 3, 1, "", "get_std_out_err_filename"], [13, 3, 1, "", "get_stderr_filename"], [13, 3, 1, "", "get_stdout_filename"], [13, 3, 1, "", "get_submit_command"], [13, 3, 1, "", "get_version_info"], [13, 3, 1, "", "is_jobscript_active"], [13, 3, 1, "", "is_num_cores_supported"], [13, 3, 1, "", "parse_submission_output"], [13, 3, 1, "", "process_resources"], [13, 4, 1, "", "unique_properties"], [13, 3, 1, "", "wait_for_jobscripts"]], "matflow.DirectWindows": [[14, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [14, 2, 1, "", "DEFAULT_SHELL_ARGS"], [14, 2, 1, "", "DEFAULT_SHELL_EXECUTABLE"], [14, 3, 1, "", "cancel_jobs"], [14, 3, 1, "", "get_job_state_info"], [14, 3, 1, "", "get_std_out_err_filename"], [14, 3, 1, "", "get_stderr_filename"], [14, 3, 1, "", "get_stdout_filename"], [14, 3, 1, "", "get_submit_command"], [14, 3, 1, "", "get_version_info"], [14, 3, 1, "", "is_jobscript_active"], [14, 3, 1, "", "is_num_cores_supported"], [14, 3, 1, "", "parse_submission_output"], [14, 3, 1, "", "process_resources"], [14, 4, 1, "", "unique_properties"], [14, 3, 1, "", "wait_for_jobscripts"]], "matflow.Element": [[15, 4, 1, "", "action_runs"], [15, 4, 1, "", "actions"], [15, 4, 1, "", "dir_name"], [15, 4, 1, "", "element_set"], [15, 4, 1, "", "element_set_idx"], [15, 3, 1, "", "get"], [15, 3, 1, "", "get_EAR_dependencies"], [15, 3, 1, "", "get_data_idx"], [15, 3, 1, "", "get_dependent_EARs"], [15, 3, 1, "", "get_dependent_element_iterations"], [15, 3, 1, "", "get_dependent_elements"], [15, 3, 1, "", "get_dependent_elements_recursively"], [15, 3, 1, "", "get_dependent_tasks"], [15, 3, 1, "", "get_element_dependencies"], [15, 3, 1, "", "get_element_iteration_dependencies"], [15, 3, 1, "", "get_input_dependencies"], [15, 3, 1, "", "get_parameter_sources"], [15, 3, 1, "", "get_sequence_value"], [15, 3, 1, "", "get_task_dependencies"], [15, 4, 1, "", "id_"], [15, 4, 1, "", "index"], [15, 4, 1, "", "input_files"], [15, 4, 1, "", "input_source_idx"], [15, 4, 1, "", "input_sources"], [15, 4, 1, "", "inputs"], [15, 4, 1, "", "is_pending"], [15, 4, 1, "", "iteration_IDs"], [15, 4, 1, "", "iterations"], [15, 4, 1, "", "latest_iteration"], [15, 4, 1, "", "latest_iteration_non_skipped"], [15, 4, 1, "", "output_files"], [15, 4, 1, "", "outputs"], [15, 4, 1, "", "schema_parameters"], [15, 4, 1, "", "sequence_idx"], [15, 4, 1, "", "task"], [15, 3, 1, "", "to_element_set_data"], [15, 4, 1, "", "workflow"]], "matflow.ElementAction": [[16, 4, 1, "", "action"], [16, 4, 1, "", "action_idx"], [16, 4, 1, "", "element"], [16, 4, 1, "", "element_iteration"], [16, 3, 1, "", "get"], [16, 3, 1, "", "get_data_idx"], [16, 3, 1, "", "get_parameter_names"], [16, 3, 1, "", "get_parameter_sources"], [16, 4, 1, "", "input_files"], [16, 4, 1, "", "inputs"], [16, 4, 1, "", "num_runs"], [16, 4, 1, "", "output_files"], [16, 4, 1, "", "outputs"], [16, 4, 1, "", "runs"], [16, 4, 1, "", "task"]], "matflow.ElementActionRun": [[17, 4, 1, "", "action"], [17, 4, 1, "", "commands_file_ID"], [17, 4, 1, "", "commands_idx"], [17, 3, 1, "", "compose_commands"], [17, 4, 1, "", "data_idx"], [17, 4, 1, "", "dir_diff"], [17, 4, 1, "", "element"], [17, 4, 1, "", "element_action"], [17, 4, 1, "", "element_iteration"], [17, 4, 1, "", "end_time"], [17, 4, 1, "", "env_spec"], [17, 4, 1, "", "env_spec_hashable"], [17, 4, 1, "", "exit_code"], [17, 3, 1, "", "get"], [17, 3, 1, "", "get_EAR_dependencies"], [17, 3, 1, "", "get_IFG_input_values"], [17, 3, 1, "", "get_OFP_inputs"], [17, 3, 1, "", "get_OFP_output_files"], [17, 3, 1, "", "get_OFP_outputs"], [17, 3, 1, "", "get_all_previous_iteration_runs"], [17, 3, 1, "", "get_app_log_path"], [17, 3, 1, "", "get_app_std_path"], [17, 3, 1, "", "get_commands_file_hash"], [17, 3, 1, "", "get_data_idx"], [17, 3, 1, "", "get_dependent_EARs"], [17, 3, 1, "", "get_directory"], [17, 3, 1, "", "get_environment"], [17, 3, 1, "", "get_environment_spec"], [17, 3, 1, "", "get_input_dependencies"], [17, 3, 1, "", "get_input_values"], [17, 3, 1, "", "get_input_values_direct"], [17, 3, 1, "", "get_parameter_names"], [17, 3, 1, "", "get_parameter_sources"], [17, 3, 1, "", "get_py_script_func_kwargs"], [17, 3, 1, "", "get_resources"], [17, 3, 1, "", "get_script_artifact_name"], [17, 4, 1, "", "id_"], [17, 4, 1, "", "index"], [17, 4, 1, "", "input_files"], [17, 4, 1, "", "inputs"], [17, 4, 1, "", "is_pending"], [17, 4, 1, "", "is_snippet_script"], [17, 4, 1, "", "metadata"], [17, 4, 1, "", "output_files"], [17, 4, 1, "", "outputs"], [17, 4, 1, "", "port_number"], [17, 3, 1, "", "raise_on_failure_threshold"], [17, 4, 1, "", "resources"], [17, 4, 1, "", "run_hostname"], [17, 4, 1, "", "skip"], [17, 4, 1, "", "skip_reason"], [17, 4, 1, "", "snapshot_end"], [17, 4, 1, "", "snapshot_start"], [17, 4, 1, "", "start_time"], [17, 4, 1, "", "status"], [17, 4, 1, "", "submission_idx"], [17, 4, 1, "", "success"], [17, 4, 1, "", "task"], [17, 3, 1, "", "try_write_commands"], [17, 4, 1, "", "workflow"], [17, 3, 1, "", "write_script_input_files"]], "matflow.ElementFilter": [[18, 3, 1, "", "filter"], [18, 3, 1, "", "from_json_like"], [18, 2, 1, "", "rules"], [18, 3, 1, "", "to_dict"], [18, 3, 1, "", "to_json_like"]], "matflow.ElementGroup": [[19, 3, 1, "", "from_json_like"], [19, 2, 1, "", "group_by_distinct"], [19, 2, 1, "", "name"], [19, 3, 1, "", "to_dict"], [19, 3, 1, "", "to_json_like"], [19, 2, 1, "", "where"]], "matflow.ElementInputFiles": [[20, 4, 1, "", "prefixed_names_unlabelled"], [20, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementInputs": [[21, 4, 1, "", "prefixed_names_unlabelled"], [21, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementIteration": [[22, 4, 1, "", "EAR_IDs"], [22, 4, 1, "", "EAR_IDs_flat"], [22, 4, 1, "", "EARs_initialised"], [22, 4, 1, "", "action_runs"], [22, 4, 1, "", "actions"], [22, 4, 1, "", "data_idx"], [22, 4, 1, "", "element"], [22, 3, 1, "", "get"], [22, 3, 1, "", "get_EAR_dependencies"], [22, 3, 1, "", "get_data_idx"], [22, 3, 1, "", "get_dependent_EARs"], [22, 3, 1, "", "get_dependent_element_iterations"], [22, 3, 1, "", "get_dependent_elements"], [22, 3, 1, "", "get_dependent_tasks"], [22, 3, 1, "", "get_element_dependencies"], [22, 3, 1, "", "get_element_iteration_dependencies"], [22, 3, 1, "", "get_input_dependencies"], [22, 3, 1, "", "get_parameter_names"], [22, 3, 1, "", "get_parameter_sources"], [22, 3, 1, "", "get_resources"], [22, 3, 1, "", "get_resources_obj"], [22, 3, 1, "", "get_task_dependencies"], [22, 3, 1, "", "get_template_resources"], [22, 4, 1, "", "id_"], [22, 4, 1, "", "index"], [22, 4, 1, "", "input_files"], [22, 4, 1, "", "inputs"], [22, 4, 1, "", "is_pending"], [22, 4, 1, "", "loop_idx"], [22, 4, 1, "", "loop_skipped"], [22, 4, 1, "", "output_files"], [22, 4, 1, "", "outputs"], [22, 4, 1, "", "schema_parameters"], [22, 4, 1, "", "task"], [22, 4, 1, "", "workflow"]], "matflow.ElementOutputFiles": [[23, 4, 1, "", "prefixed_names_unlabelled"], [23, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementOutputs": [[24, 4, 1, "", "prefixed_names_unlabelled"], [24, 4, 1, "", "prefixed_names_unlabelled_str"]], "matflow.ElementParameter": [[25, 2, 1, "", "app"], [25, 4, 1, "", "data_idx"], [25, 4, 1, "", "data_idx_is_set"], [25, 2, 1, "", "element"], [25, 3, 1, "", "get_size"], [25, 4, 1, "", "is_set"], [25, 2, 1, "", "parent"], [25, 2, 1, "", "path"], [25, 2, 1, "", "task"], [25, 4, 1, "", "value"]], "matflow.ElementPropagation": [[26, 4, 1, "", "element_set"], [26, 2, 1, "", "input_sources"], [26, 2, 1, "", "nesting_order"], [26, 2, 1, "", "task"]], "matflow.ElementRepeats": [[27, 2, 1, "", "number"], [27, 2, 1, "", "where"]], "matflow.ElementResources": [[28, 2, 1, "", "SGE_parallel_env"], [28, 4, 1, "", "SLURM_is_parallel"], [28, 2, 1, "", "SLURM_num_cpus_per_task"], [28, 2, 1, "", "SLURM_num_nodes"], [28, 2, 1, "", "SLURM_num_tasks"], [28, 2, 1, "", "SLURM_num_tasks_per_node"], [28, 2, 1, "", "SLURM_partition"], [28, 2, 1, "", "allow_failed_dependencies"], [28, 2, 1, "", "combine_jobscript_std"], [28, 2, 1, "", "combine_scripts"], [28, 2, 1, "", "environments"], [28, 3, 1, "", "from_json_like"], [28, 3, 1, "", "get_default_os_name"], [28, 3, 1, "", "get_default_scheduler"], [28, 3, 1, "", "get_default_shell"], [28, 3, 1, "", "get_env_instance_filterable_attributes"], [28, 3, 1, "", "get_jobscript_hash"], [28, 4, 1, "", "is_parallel"], [28, 2, 1, "", "max_array_items"], [28, 2, 1, "", "num_cores"], [28, 2, 1, "", "num_cores_per_node"], [28, 2, 1, "", "num_nodes"], [28, 2, 1, "", "num_threads"], [28, 2, 1, "", "os_name"], [28, 2, 1, "", "parallel_mode"], [28, 2, 1, "", "resources_id"], [28, 2, 1, "", "scheduler"], [28, 2, 1, "", "scheduler_args"], [28, 2, 1, "", "scratch"], [28, 3, 1, "", "set_defaults"], [28, 2, 1, "", "shell"], [28, 2, 1, "", "shell_args"], [28, 2, 1, "", "skip_downstream_on_failure"], [28, 2, 1, "", "time_limit"], [28, 3, 1, "", "to_dict"], [28, 3, 1, "", "to_json_like"], [28, 2, 1, "", "use_job_array"], [28, 3, 1, "", "validate_against_machine"], [28, 2, 1, "", "write_app_logs"]], "matflow.ElementSet": [[29, 2, 1, "", "allow_non_coincident_task_sources"], [29, 4, 1, "", "defined_input_types"], [29, 4, 1, "", "elem_iter_IDs"], [29, 4, 1, "", "element_iterations"], [29, 4, 1, "", "element_local_idx_range"], [29, 4, 1, "", "elements"], [29, 3, 1, "", "ensure_element_sets"], [29, 2, 1, "", "env_preset"], [29, 2, 1, "", "environments"], [29, 3, 1, "", "from_json_like"], [29, 3, 1, "", "get_defined_parameter_types"], [29, 3, 1, "", "get_defined_sub_parameter_types"], [29, 3, 1, "", "get_locally_defined_inputs"], [29, 3, 1, "", "get_sequence_from_path"], [29, 3, 1, "", "get_task_dependencies"], [29, 2, 1, "", "groups"], [29, 4, 1, "", "index"], [29, 2, 1, "", "input_files"], [29, 2, 1, "", "input_sources"], [29, 4, 1, "", "input_types"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "is_creation"], [29, 3, 1, "", "is_input_type_provided"], [29, 2, 1, "", "multi_path_sequences"], [29, 2, 1, "", "nesting_order"], [29, 3, 1, "", "prepare_persistent_copy"], [29, 2, 1, "", "repeats"], [29, 2, 1, "", "resources"], [29, 2, 1, "", "sequences"], [29, 2, 1, "", "sourceable_elem_iters"], [29, 4, 1, "", "task"], [29, 4, 1, "", "task_template"], [29, 3, 1, "", "to_dict"], [29, 3, 1, "", "to_json_like"], [29, 4, 1, "", "undefined_input_types"]], "matflow.Elements": [[30, 4, 1, "", "task"]], "matflow.Environment": [[31, 2, 1, "", "doc"], [31, 4, 1, "", "documentation"], [31, 2, 1, "", "executables"], [31, 3, 1, "", "from_json_like"], [31, 2, 1, "", "name"], [31, 2, 1, "", "setup"], [31, 2, 1, "", "specifiers"], [31, 3, 1, "", "to_dict"], [31, 3, 1, "", "to_json_like"]], "matflow.EnvironmentsList": [[32, 3, 1, "", "add_object"], [32, 3, 1, "", "add_objects"], [32, 3, 1, "", "from_json_like"], [32, 3, 1, "", "get"], [32, 3, 1, "", "get_all"], [32, 3, 1, "", "list_attrs"], [32, 3, 1, "", "to_dict"], [32, 3, 1, "", "to_json_like"]], "matflow.Executable": [[33, 4, 1, "", "environment"], [33, 3, 1, "", "filter_instances"], [33, 3, 1, "", "from_json_like"], [33, 2, 1, "", "instances"], [33, 2, 1, "", "label"], [33, 3, 1, "", "to_dict"], [33, 3, 1, "", "to_json_like"]], "matflow.ExecutableInstance": [[34, 2, 1, "", "command"], [34, 3, 1, "", "from_json_like"], [34, 3, 1, "", "from_spec"], [34, 2, 1, "", "num_cores"], [34, 2, 1, "", "parallel_mode"], [34, 3, 1, "", "to_dict"], [34, 3, 1, "", "to_json_like"]], "matflow.ExecutablesList": [[35, 3, 1, "", "add_object"], [35, 3, 1, "", "add_objects"], [35, 2, 1, "", "environment"], [35, 3, 1, "", "from_json_like"], [35, 3, 1, "", "get"], [35, 3, 1, "", "get_all"], [35, 3, 1, "", "list_attrs"], [35, 3, 1, "", "to_dict"], [35, 3, 1, "", "to_json_like"]], "matflow.Executor": [[36, 4, 1, "", "q"], [36, 3, 1, "", "run"], [36, 3, 1, "", "send_abort"], [36, 3, 1, "", "start_zmq_server"], [36, 3, 1, "", "stop_zmq_server"], [36, 4, 1, "", "zmq_context"]], "matflow.FileNameExt": [[37, 2, 1, "", "file_name"], [37, 3, 1, "", "from_json_like"], [37, 3, 1, "", "to_dict"], [37, 3, 1, "", "to_json_like"], [37, 3, 1, "", "value"]], "matflow.FileNameSpec": [[38, 2, 1, "", "args"], [38, 4, 1, "", "ext"], [38, 3, 1, "", "from_json_like"], [38, 2, 1, "", "is_regex"], [38, 2, 1, "", "name"], [38, 4, 1, "", "stem"], [38, 3, 1, "", "to_dict"], [38, 3, 1, "", "to_json_like"], [38, 3, 1, "", "value"]], "matflow.FileNameStem": [[39, 2, 1, "", "file_name"], [39, 3, 1, "", "from_json_like"], [39, 3, 1, "", "to_dict"], [39, 3, 1, "", "to_json_like"], [39, 3, 1, "", "value"]], "matflow.FileSpec": [[40, 2, 1, "", "doc"], [40, 4, 1, "", "documentation"], [40, 4, 1, "", "ext"], [40, 3, 1, "", "from_json_like"], [40, 2, 1, "", "label"], [40, 2, 1, "", "name"], [40, 4, 1, "", "stem"], [40, 3, 1, "", "to_dict"], [40, 3, 1, "", "to_json_like"], [40, 3, 1, "", "value"]], "matflow.GroupList": [[41, 3, 1, "", "add_object"], [41, 3, 1, "", "add_objects"], [41, 3, 1, "", "from_json_like"], [41, 3, 1, "", "get"], [41, 3, 1, "", "get_all"], [41, 3, 1, "", "list_attrs"], [41, 3, 1, "", "to_dict"], [41, 3, 1, "", "to_json_like"]], "matflow.InputFile": [[42, 4, 1, "", "contents"], [42, 4, 1, "", "extension"], [42, 2, 1, "", "file"], [42, 3, 1, "", "from_json_like"], [42, 3, 1, "", "make_persistent"], [42, 4, 1, "", "normalised_files_path"], [42, 4, 1, "", "normalised_path"], [42, 4, 1, "", "path"], [42, 3, 1, "", "read_contents"], [42, 4, 1, "", "store_contents"], [42, 3, 1, "", "to_dict"], [42, 3, 1, "", "to_json_like"], [42, 4, 1, "", "workflow"]], "matflow.InputFileGenerator": [[43, 2, 1, "", "abortable"], [43, 2, 1, "", "environment"], [43, 3, 1, "", "from_json_like"], [43, 3, 1, "", "get_action_rules"], [43, 2, 1, "", "input_file"], [43, 2, 1, "", "inputs"], [43, 2, 1, "", "requires_dir"], [43, 2, 1, "", "rules"], [43, 2, 1, "", "script"], [43, 2, 1, "", "script_pass_env_spec"], [43, 3, 1, "", "to_dict"], [43, 3, 1, "", "to_json_like"]], "matflow.InputFileGeneratorSource": [[44, 4, 1, "", "contents"], [44, 4, 1, "", "extension"], [44, 2, 1, "", "file"], [44, 3, 1, "", "from_json_like"], [44, 2, 1, "", "generator"], [44, 3, 1, "", "make_persistent"], [44, 4, 1, "", "normalised_path"], [44, 4, 1, "", "path"], [44, 3, 1, "", "read_contents"], [44, 4, 1, "", "store_contents"], [44, 3, 1, "", "to_dict"], [44, 3, 1, "", "to_json_like"], [44, 4, 1, "", "workflow"]], "matflow.InputSource": [[45, 3, 1, "", "default"], [45, 2, 1, "", "element_iters"], [45, 3, 1, "", "from_json_like"], [45, 3, 1, "", "from_string"], [45, 3, 1, "", "get_task"], [45, 3, 1, "", "import_"], [45, 2, 1, "", "import_ref"], [45, 3, 1, "", "is_in"], [45, 3, 1, "", "local"], [45, 2, 1, "", "path"], [45, 2, 1, "", "source_type"], [45, 3, 1, "", "task"], [45, 2, 1, "", "task_ref"], [45, 2, 1, "", "task_source_type"], [45, 3, 1, "", "to_dict"], [45, 3, 1, "", "to_json_like"], [45, 3, 1, "", "to_string"], [45, 2, 1, "", "where"]], "matflow.InputSourceType": [[46, 2, 1, "", "DEFAULT"], [46, 2, 1, "", "IMPORT"], [46, 2, 1, "", "LOCAL"], [46, 2, 1, "", "TASK"]], "matflow.InputValue": [[47, 3, 1, "", "from_json_like"], [47, 4, 1, "", "is_sub_value"], [47, 2, 1, "", "label"], [47, 4, 1, "", "labelled_type"], [47, 3, 1, "", "make_persistent"], [47, 4, 1, "", "normalised_inputs_path"], [47, 4, 1, "", "normalised_path"], [47, 2, 1, "", "parameter"], [47, 2, 1, "", "path"], [47, 3, 1, "", "to_dict"], [47, 3, 1, "", "to_json_like"], [47, 4, 1, "", "value"], [47, 2, 1, "", "value_class_method"], [47, 4, 1, "", "workflow"]], "matflow.Jobscript": [[48, 4, 1, "", "EAR_ID_file_name"], [48, 4, 1, "", "EAR_ID_file_path"], [48, 4, 1, "", "all_EAR_IDs"], [48, 4, 1, "", "all_EARs"], [48, 4, 1, "", "at_submit_metadata"], [48, 4, 1, "", "blocks"], [48, 4, 1, "", "combined_script_indices_file_name"], [48, 4, 1, "", "combined_script_indices_file_path"], [48, 3, 1, "", "compose_combined_script"], [48, 3, 1, "", "compose_jobscript"], [48, 4, 1, "", "dependencies"], [48, 4, 1, "", "direct_std_out_err_path"], [48, 4, 1, "", "direct_stderr_path"], [48, 4, 1, "", "direct_stdout_path"], [48, 4, 1, "", "direct_win_pid_file_name"], [48, 4, 1, "", "direct_win_pid_file_path"], [48, 4, 1, "", "end_time"], [48, 3, 1, "", "from_json_like"], [48, 3, 1, "", "get_active_states"], [48, 3, 1, "", "get_app_std_path"], [48, 3, 1, "", "get_commands_file_name"], [48, 3, 1, "", "get_std_out_err_path"], [48, 3, 1, "", "get_stderr"], [48, 3, 1, "", "get_stderr_path"], [48, 3, 1, "", "get_stdout"], [48, 3, 1, "", "get_stdout_path"], [48, 4, 1, "", "index"], [48, 4, 1, "", "is_array"], [48, 4, 1, "", "is_scheduled"], [48, 4, 1, "", "is_submitted"], [48, 4, 1, "", "jobscript_functions_name"], [48, 4, 1, "", "jobscript_functions_path"], [48, 4, 1, "", "jobscript_name"], [48, 4, 1, "", "jobscript_path"], [48, 4, 1, "", "os_name"], [48, 3, 1, "", "print_stderr"], [48, 3, 1, "", "print_stdout"], [48, 4, 1, "", "process_ID"], [48, 4, 1, "", "resources"], [48, 4, 1, "", "scheduler"], [48, 4, 1, "", "scheduler_job_ID"], [48, 4, 1, "", "scheduler_js_ref"], [48, 4, 1, "", "scheduler_name"], [48, 4, 1, "", "shell"], [48, 4, 1, "", "shell_idx"], [48, 4, 1, "", "shell_name"], [48, 4, 1, "", "start_time"], [48, 4, 1, "", "std_path"], [48, 4, 1, "", "submission"], [48, 3, 1, "", "submit"], [48, 4, 1, "", "submit_cmdline"], [48, 4, 1, "", "submit_hostname"], [48, 4, 1, "", "submit_machine"], [48, 4, 1, "", "submit_time"], [48, 3, 1, "", "to_dict"], [48, 3, 1, "", "to_json_like"], [48, 4, 1, "", "version_info"], [48, 4, 1, "", "workflow"], [48, 4, 1, "", "workflow_app_alias"], [48, 3, 1, "", "write_jobscript"], [48, 3, 1, "", "write_script_indices_file"]], "matflow.JobscriptBlock": [[49, 4, 1, "", "EAR_ID"], [49, 4, 1, "", "all_EARs"], [49, 4, 1, "", "dependencies"], [49, 3, 1, "", "from_json_like"], [49, 3, 1, "", "get_task_loop_idx_array"], [49, 4, 1, "", "index"], [49, 4, 1, "", "num_actions"], [49, 4, 1, "", "num_elements"], [49, 4, 1, "", "submission"], [49, 4, 1, "", "task_actions"], [49, 4, 1, "", "task_elements"], [49, 4, 1, "", "task_insert_IDs"], [49, 4, 1, "", "task_loop_idx"], [49, 3, 1, "", "to_dict"], [49, 3, 1, "", "to_json_like"], [49, 4, 1, "", "workflow"], [49, 3, 1, "", "write_EAR_ID_file"]], "matflow.Loop": [[50, 3, 1, "", "from_json_like"], [50, 4, 1, "", "name"], [50, 4, 1, "", "non_iterable_parameters"], [50, 4, 1, "", "num_iterations"], [50, 4, 1, "", "task_insert_IDs"], [50, 4, 1, "", "task_objects"], [50, 4, 1, "", "termination"], [50, 4, 1, "", "termination_task"], [50, 4, 1, "", "termination_task_insert_ID"], [50, 3, 1, "", "to_dict"], [50, 3, 1, "", "to_json_like"], [50, 4, 1, "", "workflow_template"]], "matflow.MetaTask": [[51, 3, 1, "", "from_json_like"], [51, 3, 1, "", "to_dict"], [51, 3, 1, "", "to_json_like"]], "matflow.MetaTaskSchema": [[52, 2, 1, "", "actions"], [52, 3, 1, "", "basic_info"], [52, 2, 1, "", "doc"], [52, 2, 1, "", "environment_presets"], [52, 3, 1, "", "from_json_like"], [52, 3, 1, "", "get_by_key"], [52, 3, 1, "", "get_info_html"], [52, 3, 1, "", "get_key"], [52, 3, 1, "", "get_parameter_dependence"], [52, 3, 1, "", "ignore_invalid_actions"], [52, 2, 1, "", "implementation"], [52, 3, 1, "", "info"], [52, 4, 1, "", "input_types"], [52, 2, 1, "", "inputs"], [52, 3, 1, "", "make_persistent"], [52, 2, 1, "", "method"], [52, 4, 1, "", "multi_input_types"], [52, 4, 1, "", "name"], [52, 2, 1, "", "objective"], [52, 4, 1, "", "output_types"], [52, 2, 1, "", "outputs"], [52, 2, 1, "", "parameter_class_modules"], [52, 4, 1, "", "provides_parameters"], [52, 4, 1, "", "task_template"], [52, 3, 1, "", "to_dict"], [52, 3, 1, "", "to_json_like"], [52, 2, 1, "", "version"], [52, 2, 1, "", "web_doc"]], "matflow.MultiPathSequence": [[53, 3, 1, "", "from_json_like"], [53, 3, 1, "", "from_latin_hypercube"], [53, 4, 1, "", "sequence_indices"], [53, 4, 1, "", "sequences"], [53, 3, 1, "", "to_dict"], [53, 3, 1, "", "to_json_like"], [53, 4, 1, "", "values"]], "matflow.NumCores": [[54, 3, 1, "", "from_json_like"], [54, 2, 1, "", "start"], [54, 2, 1, "", "step"], [54, 2, 1, "", "stop"], [54, 3, 1, "", "to_dict"], [54, 3, 1, "", "to_json_like"]], "matflow.OutputFileParser": [[55, 2, 1, "", "abortable"], [55, 2, 1, "", "clean_up"], [55, 2, 1, "", "environment"], [55, 3, 1, "", "from_json_like"], [55, 3, 1, "", "get_action_rules"], [55, 2, 1, "", "inputs"], [55, 2, 1, "", "options"], [55, 2, 1, "", "output"], [55, 2, 1, "", "output_files"], [55, 2, 1, "", "outputs"], [55, 2, 1, "", "requires_dir"], [55, 2, 1, "", "rules"], [55, 2, 1, "", "save_files"], [55, 2, 1, "", "script"], [55, 2, 1, "", "script_pass_env_spec"], [55, 3, 1, "", "to_dict"], [55, 3, 1, "", "to_json_like"]], "matflow.OutputFileParserSource": [[56, 4, 1, "", "contents"], [56, 4, 1, "", "extension"], [56, 2, 1, "", "file"], [56, 3, 1, "", "from_json_like"], [56, 3, 1, "", "make_persistent"], [56, 4, 1, "", "normalised_path"], [56, 2, 1, "", "parser"], [56, 4, 1, "", "path"], [56, 3, 1, "", "read_contents"], [56, 4, 1, "", "store_contents"], [56, 3, 1, "", "to_dict"], [56, 3, 1, "", "to_json_like"], [56, 4, 1, "", "workflow"]], "matflow.OutputLabel": [[57, 3, 1, "", "from_json_like"], [57, 2, 1, "", "label"], [57, 2, 1, "", "parameter"], [57, 3, 1, "", "to_dict"], [57, 3, 1, "", "to_json_like"], [57, 2, 1, "", "where"]], "matflow.Parameter": [[58, 3, 1, "", "from_json_like"], [58, 2, 1, "", "is_file"], [58, 2, 1, "", "sub_parameters"], [58, 3, 1, "", "to_dict"], [58, 3, 1, "", "to_json_like"], [58, 2, 1, "", "typ"], [58, 4, 1, "", "url_slug"]], "matflow.ParameterPath": [[59, 3, 1, "", "from_json_like"], [59, 2, 1, "", "path"], [59, 2, 1, "", "task"], [59, 3, 1, "", "to_dict"], [59, 3, 1, "", "to_json_like"]], "matflow.ParameterPropagationMode": [[60, 2, 1, "", "EXPLICIT"], [60, 2, 1, "", "IMPLICIT"], [60, 2, 1, "", "NEVER"]], "matflow.ParameterValue": [[61, 3, 1, "", "dump_element_group_to_HDF5_group"], [61, 3, 1, "", "dump_to_HDF5_group"], [61, 3, 1, "", "prepare_JSON_dump"], [61, 3, 1, "", "save_from_HDF5_group"], [61, 3, 1, "", "save_from_JSON"], [61, 3, 1, "", "to_dict"]], "matflow.Parameters": [[62, 2, 1, "", "default"], [62, 2, 1, "", "path"], [62, 2, 1, "", "raise_on_missing"], [62, 2, 1, "", "raise_on_unset"], [62, 2, 1, "", "return_element_parameters"], [62, 2, 1, "", "task"]], "matflow.ParametersList": [[63, 3, 1, "", "add_object"], [63, 3, 1, "", "add_objects"], [63, 3, 1, "", "from_json_like"], [63, 3, 1, "", "get"], [63, 3, 1, "", "get_all"], [63, 3, 1, "", "list_attrs"], [63, 3, 1, "", "to_dict"], [63, 3, 1, "", "to_json_like"]], "matflow.QueuedScheduler": [[64, 2, 1, "", "DEFAULT_ARRAY_ITEM_VAR"], [64, 2, 1, "", "DEFAULT_ARRAY_SWITCH"], [64, 2, 1, "", "DEFAULT_DEL_CMD"], [64, 2, 1, "", "DEFAULT_JS_CMD"], [64, 2, 1, "", "DEFAULT_LOGIN_NODES_CMD"], [64, 2, 1, "", "DEFAULT_LOGIN_NODE_MATCH"], [64, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [64, 2, 1, "", "DEFAULT_SHELL_ARGS"], [64, 2, 1, "", "DEFAULT_SHOW_CMD"], [64, 2, 1, "", "DEFAULT_SUBMIT_CMD"], [64, 3, 1, "", "cancel_jobs"], [64, 3, 1, "", "format_options"], [64, 3, 1, "", "format_switch"], [64, 3, 1, "", "get_job_state_info"], [64, 3, 1, "", "get_std_out_err_filename"], [64, 3, 1, "", "get_stderr_filename"], [64, 3, 1, "", "get_stdout_filename"], [64, 3, 1, "", "get_submit_command"], [64, 3, 1, "", "get_version_info"], [64, 3, 1, "", "is_jobscript_active"], [64, 3, 1, "", "is_num_cores_supported"], [64, 3, 1, "", "parse_submission_output"], [64, 3, 1, "", "process_resources"], [64, 4, 1, "", "unique_properties"], [64, 3, 1, "", "wait_for_jobscripts"]], "matflow.ResourceList": [[65, 3, 1, "", "add_object"], [65, 4, 1, "", "element_set"], [65, 3, 1, "", "from_json_like"], [65, 3, 1, "", "get"], [65, 3, 1, "", "get_all"], [65, 3, 1, "", "get_scopes"], [65, 3, 1, "", "merge_one"], [65, 3, 1, "", "merge_other"], [65, 3, 1, "", "normalise"], [65, 3, 1, "", "to_dict"], [65, 3, 1, "", "to_json_like"], [65, 4, 1, "", "workflow_template"]], "matflow.ResourceSpec": [[66, 2, 1, "", "ALLOWED_PARAMETERS"], [66, 4, 1, "", "SGE_parallel_env"], [66, 4, 1, "", "SLURM_num_cpus_per_task"], [66, 4, 1, "", "SLURM_num_nodes"], [66, 4, 1, "", "SLURM_num_tasks"], [66, 4, 1, "", "SLURM_num_tasks_per_node"], [66, 4, 1, "", "SLURM_partition"], [66, 4, 1, "", "combine_jobscript_std"], [66, 4, 1, "", "combine_scripts"], [66, 3, 1, "", "copy_non_persistent"], [66, 4, 1, "", "element_set"], [66, 4, 1, "", "environments"], [66, 3, 1, "", "from_json_like"], [66, 3, 1, "", "make_persistent"], [66, 4, 1, "", "max_array_items"], [66, 4, 1, "", "normalised_path"], [66, 4, 1, "", "normalised_resources_path"], [66, 4, 1, "", "num_cores"], [66, 4, 1, "", "num_cores_per_node"], [66, 4, 1, "", "num_nodes"], [66, 4, 1, "", "num_threads"], [66, 4, 1, "", "os_name"], [66, 4, 1, "", "parallel_mode"], [66, 4, 1, "", "resources_id"], [66, 4, 1, "", "scheduler"], [66, 4, 1, "", "scheduler_args"], [66, 2, 1, "", "scope"], [66, 4, 1, "", "scratch"], [66, 4, 1, "", "shell"], [66, 4, 1, "", "shell_args"], [66, 4, 1, "", "skip_downstream_on_failure"], [66, 4, 1, "", "time_limit"], [66, 3, 1, "", "to_dict"], [66, 3, 1, "", "to_json_like"], [66, 4, 1, "", "use_job_array"], [66, 4, 1, "", "workflow"], [66, 4, 1, "", "workflow_template"], [66, 4, 1, "", "write_app_logs"]], "matflow.Rule": [[67, 2, 1, "", "cast"], [67, 2, 1, "", "check_exists"], [67, 2, 1, "", "check_missing"], [67, 2, 1, "", "condition"], [67, 2, 1, "", "doc"], [67, 3, 1, "", "from_json_like"], [67, 2, 1, "", "path"], [67, 3, 1, "", "test"], [67, 3, 1, "", "to_dict"], [67, 3, 1, "", "to_json_like"]], "matflow.RunDirAppFiles": [[68, 3, 1, "", "get_commands_file_name"], [68, 3, 1, "", "get_run_file_prefix"], [68, 3, 1, "", "get_run_param_dump_file_prefix"], [68, 3, 1, "", "get_run_param_load_file_prefix"], [68, 3, 1, "", "take_snapshot"]], "matflow.SGEPosix": [[69, 2, 1, "", "DEFAULT_ARRAY_ITEM_VAR"], [69, 2, 1, "", "DEFAULT_ARRAY_SWITCH"], [69, 2, 1, "", "DEFAULT_CWD_SWITCH"], [69, 2, 1, "", "DEFAULT_DEL_CMD"], [69, 2, 1, "", "DEFAULT_JS_CMD"], [69, 2, 1, "", "DEFAULT_LOGIN_NODES_CMD"], [69, 2, 1, "", "DEFAULT_LOGIN_NODE_MATCH"], [69, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [69, 2, 1, "", "DEFAULT_SHELL_ARGS"], [69, 2, 1, "", "DEFAULT_SHOW_CMD"], [69, 2, 1, "", "DEFAULT_SUBMIT_CMD"], [69, 3, 1, "", "cancel_jobs"], [69, 3, 1, "", "format_options"], [69, 3, 1, "", "format_switch"], [69, 3, 1, "", "get_job_state_info"], [69, 3, 1, "", "get_job_statuses"], [69, 3, 1, "", "get_login_nodes"], [69, 3, 1, "", "get_std_out_err_filename"], [69, 3, 1, "", "get_stderr_filename"], [69, 3, 1, "", "get_stdout_filename"], [69, 3, 1, "", "get_submit_command"], [69, 3, 1, "", "get_version_info"], [69, 3, 1, "", "is_jobscript_active"], [69, 3, 1, "", "is_num_cores_supported"], [69, 3, 1, "", "parse_submission_output"], [69, 3, 1, "", "process_resources"], [69, 2, 1, "", "state_lookup"], [69, 4, 1, "", "unique_properties"], [69, 3, 1, "", "wait_for_jobscripts"]], "matflow.SchemaInput": [[70, 4, 1, "", "all_labelled_types"], [70, 4, 1, "", "default_value"], [70, 3, 1, "", "from_json_like"], [70, 4, 1, "", "input_or_output"], [70, 3, 1, "", "labelled_info"], [70, 2, 1, "", "labels"], [70, 2, 1, "", "multiple"], [70, 2, 1, "", "parameter"], [70, 4, 1, "", "single_label"], [70, 4, 1, "", "single_labelled_data"], [70, 4, 1, "", "single_labelled_type"], [70, 4, 1, "", "task_schema"], [70, 3, 1, "", "to_dict"], [70, 3, 1, "", "to_json_like"], [70, 4, 1, "", "typ"]], "matflow.SchemaOutput": [[71, 3, 1, "", "from_json_like"], [71, 4, 1, "", "input_or_output"], [71, 2, 1, "", "parameter"], [71, 2, 1, "", "propagation_mode"], [71, 3, 1, "", "to_dict"], [71, 3, 1, "", "to_json_like"], [71, 4, 1, "", "typ"]], "matflow.SchemaParameter": [[72, 3, 1, "", "from_json_like"], [72, 3, 1, "", "to_dict"], [72, 3, 1, "", "to_json_like"], [72, 4, 1, "", "typ"]], "matflow.SlurmPosix": [[73, 2, 1, "", "DEFAULT_ARRAY_ITEM_VAR"], [73, 2, 1, "", "DEFAULT_ARRAY_SWITCH"], [73, 2, 1, "", "DEFAULT_DEL_CMD"], [73, 2, 1, "", "DEFAULT_JS_CMD"], [73, 2, 1, "", "DEFAULT_LOGIN_NODES_CMD"], [73, 2, 1, "", "DEFAULT_LOGIN_NODE_MATCH"], [73, 2, 1, "", "DEFAULT_SHEBANG_ARGS"], [73, 2, 1, "", "DEFAULT_SHELL_ARGS"], [73, 2, 1, "", "DEFAULT_SHELL_EXECUTABLE"], [73, 2, 1, "", "DEFAULT_SHOW_CMD"], [73, 2, 1, "", "DEFAULT_SUBMIT_CMD"], [73, 2, 1, "", "INTER_STATE_QUERY_DELAY"], [73, 2, 1, "", "NUM_STATE_QUERY_TRIES"], [73, 3, 1, "", "cancel_jobs"], [73, 3, 1, "", "format_options"], [73, 3, 1, "", "format_switch"], [73, 3, 1, "", "get_job_state_info"], [73, 3, 1, "", "get_std_out_err_filename"], [73, 3, 1, "", "get_stderr_filename"], [73, 3, 1, "", "get_stdout_filename"], [73, 3, 1, "", "get_submit_command"], [73, 3, 1, "", "get_version_info"], [73, 3, 1, "", "is_jobscript_active"], [73, 3, 1, "", "is_num_cores_supported"], [73, 3, 1, "", "parse_submission_output"], [73, 3, 1, "", "process_resources"], [73, 2, 1, "", "state_lookup"], [73, 4, 1, "", "unique_properties"], [73, 3, 1, "", "wait_for_jobscripts"]], "matflow.SubParameter": [[74, 2, 1, "", "address"], [74, 2, 1, "", "parameter"]], "matflow.Submission": [[75, 2, 1, "", "APP_STD_DIR_NAME"], [75, 2, 1, "", "COMMANDS_DIR_NAME"], [75, 4, 1, "", "EARs_by_elements"], [75, 2, 1, "", "JS_DIR_NAME"], [75, 2, 1, "", "JS_FUNCS_DIR_NAME"], [75, 2, 1, "", "JS_RUN_IDS_DIR_NAME"], [75, 2, 1, "", "JS_SCRIPT_INDICES_DIR_NAME"], [75, 2, 1, "", "JS_STD_DIR_NAME"], [75, 2, 1, "", "JS_WIN_PIDS_DIR_NAME"], [75, 4, 1, "", "JS_parallelism"], [75, 2, 1, "", "LOG_DIR_NAME"], [75, 2, 1, "", "SCRIPTS_DIR_NAME"], [75, 2, 1, "", "TMP_DIR_NAME"], [75, 2, 1, "", "WORKFLOW_APP_ALIAS"], [75, 4, 1, "", "all_EAR_IDs"], [75, 4, 1, "", "all_EARs"], [75, 4, 1, "", "all_EARs_IDs_by_jobscript"], [75, 4, 1, "", "all_EARs_by_jobscript"], [75, 4, 1, "", "app_log_path"], [75, 4, 1, "", "app_std_path"], [75, 4, 1, "", "at_submit_metadata"], [75, 3, 1, "", "cancel"], [75, 4, 1, "", "commands_path"], [75, 4, 1, "", "end_time"], [75, 4, 1, "", "environments"], [75, 3, 1, "", "from_json_like"], [75, 3, 1, "", "get_active_jobscripts"], [75, 3, 1, "", "get_app_log_file_name"], [75, 3, 1, "", "get_app_log_file_path"], [75, 3, 1, "", "get_app_log_path"], [75, 3, 1, "", "get_app_std_path"], [75, 3, 1, "", "get_commands_path"], [75, 3, 1, "", "get_end_time"], [75, 3, 1, "", "get_jobscript_functions_name"], [75, 3, 1, "", "get_jobscript_functions_path"], [75, 3, 1, "", "get_js_funcs_path"], [75, 3, 1, "", "get_js_path"], [75, 3, 1, "", "get_js_run_ids_path"], [75, 3, 1, "", "get_js_script_indices_path"], [75, 3, 1, "", "get_js_std_path"], [75, 3, 1, "", "get_js_win_pids_path"], [75, 3, 1, "", "get_path"], [75, 3, 1, "", "get_process_IDs"], [75, 3, 1, "", "get_scheduler_job_IDs"], [75, 3, 1, "", "get_scripts_path"], [75, 3, 1, "", "get_start_time"], [75, 3, 1, "", "get_tmp_path"], [75, 3, 1, "", "get_unique_schedulers"], [75, 3, 1, "", "get_unique_schedulers_of_jobscripts"], [75, 3, 1, "", "get_unique_shells"], [75, 4, 1, "", "index"], [75, 4, 1, "", "is_scheduled"], [75, 4, 1, "", "jobscript_indices"], [75, 4, 1, "", "jobscripts"], [75, 4, 1, "", "js_funcs_path"], [75, 4, 1, "", "js_path"], [75, 4, 1, "", "js_run_ids_path"], [75, 4, 1, "", "js_script_indices_path"], [75, 4, 1, "", "js_std_path"], [75, 4, 1, "", "js_win_pids_path"], [75, 3, 1, "", "list_jobscripts"], [75, 3, 1, "", "list_task_jobscripts"], [75, 4, 1, "", "needs_app_log_dir"], [75, 4, 1, "", "needs_script_indices_dir"], [75, 4, 1, "", "needs_submit"], [75, 4, 1, "", "needs_win_pids_dir"], [75, 4, 1, "", "outstanding_jobscripts"], [75, 4, 1, "", "path"], [75, 4, 1, "", "scripts_path"], [75, 4, 1, "", "start_time"], [75, 4, 1, "", "status"], [75, 4, 1, "", "submission_parts"], [75, 3, 1, "", "submit"], [75, 4, 1, "", "submitted_jobscripts"], [75, 4, 1, "", "tmp_path"], [75, 3, 1, "", "to_dict"], [75, 3, 1, "", "to_json_like"], [75, 4, 1, "", "workflow"]], "matflow.Task": [[76, 3, 1, "", "add_group"], [76, 3, 1, "", "all_schema_actions"], [76, 4, 1, "", "all_schema_input_normalised_paths"], [76, 4, 1, "", "all_schema_input_types"], [76, 4, 1, "", "all_schema_inputs"], [76, 4, 1, "", "all_schema_output_types"], [76, 4, 1, "", "all_schema_outputs"], [76, 4, 1, "", "all_sourced_normalised_paths"], [76, 4, 1, "", "defined_input_types"], [76, 4, 1, "", "dir_name"], [76, 4, 1, "", "element_sets"], [76, 3, 1, "", "from_json_like"], [76, 3, 1, "", "get_available_task_input_sources"], [76, 3, 1, "", "get_input_statuses"], [76, 3, 1, "", "get_param_provided_element_sets"], [76, 3, 1, "", "get_schema_action"], [76, 3, 1, "", "get_task_unique_names"], [76, 4, 1, "", "index"], [76, 4, 1, "", "insert_ID"], [76, 3, 1, "", "is_input_type_required"], [76, 2, 1, "", "merge_envs"], [76, 4, 1, "", "name"], [76, 4, 1, "", "non_universal_input_types"], [76, 4, 1, "", "num_all_schema_actions"], [76, 4, 1, "", "num_element_sets"], [76, 4, 1, "", "objective"], [76, 4, 1, "", "output_labels"], [76, 3, 1, "", "prepare_element_resolution"], [76, 3, 1, "", "provides_parameters"], [76, 4, 1, "", "schema"], [76, 4, 1, "", "schemas"], [76, 3, 1, "", "set_sequence_parameters"], [76, 3, 1, "", "to_dict"], [76, 3, 1, "", "to_json_like"], [76, 3, 1, "", "to_persistent"], [76, 4, 1, "", "undefined_input_types"], [76, 4, 1, "", "undefined_inputs"], [76, 4, 1, "", "universal_input_types"], [76, 2, 1, "", "workflow_template"]], "matflow.TaskInputParameters": [[77, 2, 1, "", "task"]], "matflow.TaskList": [[78, 3, 1, "", "add_object"], [78, 3, 1, "", "add_objects"], [78, 3, 1, "", "from_json_like"], [78, 3, 1, "", "get"], [78, 3, 1, "", "get_all"], [78, 3, 1, "", "list_attrs"], [78, 3, 1, "", "to_dict"], [78, 3, 1, "", "to_json_like"]], "matflow.TaskObjective": [[79, 3, 1, "", "from_json_like"], [79, 2, 1, "", "name"], [79, 3, 1, "", "to_dict"], [79, 3, 1, "", "to_json_like"]], "matflow.TaskOutputParameters": [[80, 2, 1, "", "task"]], "matflow.TaskSchema": [[81, 2, 1, "", "actions"], [81, 3, 1, "", "basic_info"], [81, 2, 1, "", "doc"], [81, 2, 1, "", "environment_presets"], [81, 3, 1, "", "from_json_like"], [81, 3, 1, "", "get_by_key"], [81, 3, 1, "", "get_info_html"], [81, 3, 1, "", "get_key"], [81, 3, 1, "", "get_parameter_dependence"], [81, 3, 1, "", "ignore_invalid_actions"], [81, 2, 1, "", "implementation"], [81, 3, 1, "", "info"], [81, 4, 1, "", "input_types"], [81, 2, 1, "", "inputs"], [81, 3, 1, "", "make_persistent"], [81, 2, 1, "", "method"], [81, 4, 1, "", "multi_input_types"], [81, 4, 1, "", "name"], [81, 2, 1, "", "objective"], [81, 4, 1, "", "output_types"], [81, 2, 1, "", "outputs"], [81, 2, 1, "", "parameter_class_modules"], [81, 4, 1, "", "provides_parameters"], [81, 4, 1, "", "task_template"], [81, 3, 1, "", "to_dict"], [81, 3, 1, "", "to_json_like"], [81, 2, 1, "", "version"], [81, 2, 1, "", "web_doc"]], "matflow.TaskSchemasList": [[82, 3, 1, "", "add_object"], [82, 3, 1, "", "add_objects"], [82, 3, 1, "", "from_json_like"], [82, 3, 1, "", "get"], [82, 3, 1, "", "get_all"], [82, 3, 1, "", "list_attrs"], [82, 3, 1, "", "to_dict"], [82, 3, 1, "", "to_json_like"]], "matflow.TaskSourceType": [[83, 2, 1, "", "ANY"], [83, 2, 1, "", "INPUT"], [83, 2, 1, "", "OUTPUT"], [83, 3, 1, "", "names"]], "matflow.TaskTemplateList": [[84, 3, 1, "", "add_object"], [84, 3, 1, "", "add_objects"], [84, 3, 1, "", "from_json_like"], [84, 3, 1, "", "get"], [84, 3, 1, "", "get_all"], [84, 3, 1, "", "list_attrs"], [84, 3, 1, "", "to_dict"], [84, 3, 1, "", "to_json_like"]], "matflow.ValuePerturbation": [[85, 2, 1, "", "additive_factor"], [85, 3, 1, "", "from_json_like"], [85, 3, 1, "", "from_spec"], [85, 3, 1, "", "make_persistent"], [85, 2, 1, "", "multiplicative_factor"], [85, 2, 1, "", "name"], [85, 4, 1, "", "normalised_path"], [85, 2, 1, "", "path"], [85, 3, 1, "", "to_dict"], [85, 3, 1, "", "to_json_like"], [85, 4, 1, "", "value"], [85, 4, 1, "", "workflow"]], "matflow.ValueSequence": [[86, 3, 1, "", "from_file"], [86, 3, 1, "", "from_geometric_space"], [86, 3, 1, "", "from_json_like"], [86, 3, 1, "", "from_linear_space"], [86, 3, 1, "", "from_log_space"], [86, 3, 1, "", "from_random_uniform"], [86, 3, 1, "", "from_range"], [86, 3, 1, "", "from_rectangle"], [86, 4, 1, "", "input_path"], [86, 4, 1, "", "input_type"], [86, 4, 1, "", "is_sub_value"], [86, 2, 1, "", "label"], [86, 4, 1, "", "labelled_type"], [86, 3, 1, "", "make_persistent"], [86, 2, 1, "", "nesting_order"], [86, 4, 1, "", "normalised_inputs_path"], [86, 4, 1, "", "normalised_path"], [86, 4, 1, "", "parameter"], [86, 2, 1, "", "path"], [86, 4, 1, "", "path_split"], [86, 4, 1, "", "path_type"], [86, 4, 1, "", "resource_scope"], [86, 3, 1, "", "to_dict"], [86, 3, 1, "", "to_json_like"], [86, 2, 1, "", "value_class_method"], [86, 4, 1, "", "values"], [86, 4, 1, "", "workflow"]], "matflow.Workflow": [[87, 3, 1, "", "abort_run"], [87, 3, 1, "", "add_loop"], [87, 3, 1, "", "add_submission"], [87, 3, 1, "", "add_task"], [87, 3, 1, "", "add_task_after"], [87, 3, 1, "", "add_task_before"], [87, 4, 1, "", "artifacts_path"], [87, 3, 1, "", "batch_update"], [87, 3, 1, "", "cached_merged_parameters"], [87, 3, 1, "", "cancel"], [87, 3, 1, "", "check_parameters_exist"], [87, 3, 1, "", "copy"], [87, 4, 1, "", "creation_info"], [87, 3, 1, "", "delete"], [87, 3, 1, "", "elements"], [87, 3, 1, "", "ensure_commands_file"], [87, 3, 1, "", "execute_combined_runs"], [87, 3, 1, "", "execute_run"], [87, 4, 1, "", "execution_path"], [87, 3, 1, "", "from_JSON_file"], [87, 3, 1, "", "from_JSON_string"], [87, 3, 1, "", "from_YAML_file"], [87, 3, 1, "", "from_YAML_string"], [87, 3, 1, "", "from_file"], [87, 3, 1, "", "from_template"], [87, 3, 1, "", "from_template_data"], [87, 3, 1, "", "get_EAR_IDs_of_tasks"], [87, 3, 1, "", "get_EAR_skipped"], [87, 3, 1, "", "get_EARs_from_IDs"], [87, 3, 1, "", "get_EARs_of_tasks"], [87, 3, 1, "", "get_all_EARs"], [87, 3, 1, "", "get_all_element_iterations"], [87, 3, 1, "", "get_all_elements"], [87, 3, 1, "", "get_all_parameter_data"], [87, 3, 1, "", "get_all_parameter_sources"], [87, 3, 1, "", "get_all_parameters"], [87, 3, 1, "", "get_all_submission_run_IDs"], [87, 3, 1, "", "get_element_IDs_from_EAR_IDs"], [87, 3, 1, "", "get_element_iteration_IDs_from_EAR_IDs"], [87, 3, 1, "", "get_element_iterations_from_IDs"], [87, 3, 1, "", "get_element_iterations_of_tasks"], [87, 3, 1, "", "get_elements_from_IDs"], [87, 3, 1, "", "get_iteration_task_pathway"], [87, 3, 1, "", "get_parameter"], [87, 3, 1, "", "get_parameter_data"], [87, 3, 1, "", "get_parameter_set_statuses"], [87, 3, 1, "", "get_parameter_source"], [87, 3, 1, "", "get_parameter_sources"], [87, 3, 1, "", "get_parameters"], [87, 3, 1, "", "get_process_IDs"], [87, 3, 1, "", "get_run_directories"], [87, 3, 1, "", "get_running_elements"], [87, 3, 1, "", "get_running_runs"], [87, 3, 1, "", "get_scheduler_job_IDs"], [87, 3, 1, "", "get_store_EARs"], [87, 3, 1, "", "get_store_element_iterations"], [87, 3, 1, "", "get_store_elements"], [87, 3, 1, "", "get_store_tasks"], [87, 3, 1, "", "get_task_IDs_from_element_IDs"], [87, 3, 1, "", "get_task_elements"], [87, 3, 1, "", "get_task_unique_names"], [87, 3, 1, "", "get_text_file"], [87, 4, 1, "", "id_"], [87, 4, 1, "", "input_files_path"], [87, 3, 1, "", "is_parameter_set"], [87, 3, 1, "", "list_jobscripts"], [87, 3, 1, "", "list_task_jobscripts"], [87, 4, 1, "", "loops"], [87, 4, 1, "", "name"], [87, 4, 1, "", "num_EARs"], [87, 4, 1, "", "num_added_tasks"], [87, 4, 1, "", "num_element_iterations"], [87, 4, 1, "", "num_elements"], [87, 4, 1, "", "num_loops"], [87, 4, 1, "", "num_submissions"], [87, 4, 1, "", "num_tasks"], [87, 3, 1, "", "process_shell_parameter_output"], [87, 3, 1, "", "rechunk"], [87, 3, 1, "", "rechunk_parameter_base"], [87, 3, 1, "", "rechunk_runs"], [87, 3, 1, "", "reload"], [87, 3, 1, "", "resolve_jobscripts"], [87, 3, 1, "", "save_parameter"], [87, 3, 1, "", "set_EAR_end"], [87, 3, 1, "", "set_EAR_skip"], [87, 3, 1, "", "set_EAR_start"], [87, 3, 1, "", "set_EARs_initialised"], [87, 3, 1, "", "set_multi_run_ends"], [87, 3, 1, "", "set_multi_run_starts"], [87, 3, 1, "", "set_parameter_value"], [87, 3, 1, "", "set_parameter_values"], [87, 3, 1, "", "show_all_EAR_statuses"], [87, 4, 1, "", "store_format"], [87, 4, 1, "", "submissions"], [87, 4, 1, "", "submissions_path"], [87, 3, 1, "", "submit"], [87, 4, 1, "", "task_artifacts_path"], [87, 4, 1, "", "tasks"], [87, 4, 1, "", "template"], [87, 4, 1, "", "template_components"], [87, 3, 1, "", "temporary_rename"], [87, 4, 1, "", "ts_fmt"], [87, 4, 1, "", "ts_name_fmt"], [87, 3, 1, "", "unzip"], [87, 4, 1, "", "url"], [87, 3, 1, "", "wait"], [87, 3, 1, "", "zip"]], "matflow.WorkflowBlueprint": [[88, 2, 1, "", "workflow_template"]], "matflow.WorkflowLoop": [[89, 3, 1, "", "add_iteration"], [89, 4, 1, "", "downstream_tasks"], [89, 3, 1, "", "get_child_loops"], [89, 3, 1, "", "get_element_IDs"], [89, 3, 1, "", "get_elements"], [89, 3, 1, "", "get_parent_loops"], [89, 4, 1, "", "index"], [89, 4, 1, "", "iterable_parameters"], [89, 4, 1, "", "name"], [89, 3, 1, "", "new_empty_loop"], [89, 4, 1, "", "num_added_iterations"], [89, 4, 1, "", "num_iterations"], [89, 4, 1, "", "output_parameters"], [89, 4, 1, "", "parents"], [89, 3, 1, "", "skip_downstream_iterations"], [89, 4, 1, "", "task_indices"], [89, 4, 1, "", "task_insert_IDs"], [89, 4, 1, "", "task_objects"], [89, 4, 1, "", "template"], [89, 3, 1, "", "test_termination"], [89, 4, 1, "", "upstream_tasks"], [89, 4, 1, "", "workflow"]], "matflow.WorkflowLoopList": [[90, 3, 1, "", "add_object"], [90, 3, 1, "", "add_objects"], [90, 3, 1, "", "from_json_like"], [90, 3, 1, "", "get"], [90, 3, 1, "", "get_all"], [90, 3, 1, "", "list_attrs"], [90, 3, 1, "", "to_dict"], [90, 3, 1, "", "to_json_like"]], "matflow.WorkflowTask": [[91, 3, 1, "", "add_elements"], [91, 4, 1, "", "dir_name"], [91, 4, 1, "", "downstream_tasks"], [91, 4, 1, "", "element_IDs"], [91, 4, 1, "", "elements"], [91, 3, 1, "", "ensure_input_sources"], [91, 3, 1, "", "generate_new_elements"], [91, 3, 1, "", "get"], [91, 3, 1, "", "get_all_element_iterations"], [91, 3, 1, "", "get_dependent_elements"], [91, 3, 1, "", "get_dependent_tasks"], [91, 3, 1, "", "get_dir_name"], [91, 3, 1, "", "get_element_dependencies"], [91, 3, 1, "", "get_task_dependencies"], [91, 4, 1, "", "index"], [91, 3, 1, "", "initialise_EARs"], [91, 4, 1, "", "inputs"], [91, 4, 1, "", "insert_ID"], [91, 4, 1, "", "name"], [91, 3, 1, "", "new_empty_task"], [91, 4, 1, "", "num_actions"], [91, 4, 1, "", "num_element_sets"], [91, 4, 1, "", "num_elements"], [91, 4, 1, "", "outputs"], [91, 3, 1, "", "resolve_element_data_indices"], [91, 4, 1, "", "template"], [91, 4, 1, "", "unique_name"], [91, 4, 1, "", "upstream_tasks"], [91, 4, 1, "", "workflow"]], "matflow.WorkflowTaskList": [[92, 3, 1, "", "add_object"], [92, 3, 1, "", "add_objects"], [92, 3, 1, "", "from_json_like"], [92, 3, 1, "", "get"], [92, 3, 1, "", "get_all"], [92, 3, 1, "", "list_attrs"], [92, 3, 1, "", "to_dict"], [92, 3, 1, "", "to_json_like"]], "matflow.WorkflowTemplate": [[93, 2, 1, "", "config"], [93, 2, 1, "", "doc"], [93, 2, 1, "", "env_presets"], [93, 2, 1, "", "environments"], [93, 3, 1, "", "from_JSON_file"], [93, 3, 1, "", "from_JSON_string"], [93, 3, 1, "", "from_YAML_file"], [93, 3, 1, "", "from_YAML_string"], [93, 3, 1, "", "from_file"], [93, 3, 1, "", "from_json_like"], [93, 2, 1, "", "loops"], [93, 2, 1, "", "merge_envs"], [93, 2, 1, "", "merge_resources"], [93, 2, 1, "", "name"], [93, 2, 1, "", "resources"], [93, 2, 1, "", "source_file"], [93, 2, 1, "", "store_kwargs"], [93, 2, 1, "", "tasks"], [93, 3, 1, "", "to_dict"], [93, 3, 1, "", "to_json_like"], [93, 2, 1, "", "workflow"]], "matflow.param_classes": [[105, 0, 0, "-", "load"], [109, 0, 0, "-", "orientations"], [117, 0, 0, "-", "seeds"], [119, 0, 0, "-", "single_crystal_parameters"], [122, 0, 0, "-", "utils"]], "matflow.param_classes.load": [[106, 1, 1, "", "LoadCase"], [107, 1, 1, "", "LoadStep"], [108, 1, 1, "", "StrainRateMode"]], "matflow.param_classes.load.LoadCase": [[106, 3, 1, "", "biaxial"], [106, 3, 1, "", "create_damask_loading_plan"], [106, 3, 1, "", "dump_element_group_to_HDF5_group"], [106, 3, 1, "", "dump_to_HDF5_group"], [106, 3, 1, "", "example_uniaxial"], [106, 3, 1, "", "multistep"], [106, 4, 1, "", "num_steps"], [106, 3, 1, "", "planar_2D"], [106, 3, 1, "", "plane_strain"], [106, 3, 1, "", "prepare_JSON_dump"], [106, 3, 1, "", "random_2D"], [106, 3, 1, "", "random_3D"], [106, 3, 1, "", "save_from_HDF5_group"], [106, 3, 1, "", "save_from_JSON"], [106, 2, 1, "", "steps"], [106, 3, 1, "", "to_dict"], [106, 4, 1, "", "type"], [106, 4, 1, "", "types"], [106, 3, 1, "", "uniaxial"], [106, 3, 1, "", "uniaxial_cyclic"]], "matflow.param_classes.load.LoadStep": [[107, 3, 1, "", "biaxial"], [107, 2, 1, "", "direction"], [107, 3, 1, "", "dump_element_group_to_HDF5_group"], [107, 2, 1, "", "dump_frequency"], [107, 3, 1, "", "dump_to_HDF5_group"], [107, 3, 1, "", "example_uniaxial"], [107, 4, 1, "", "method_args"], [107, 4, 1, "", "method_name"], [107, 2, 1, "", "normal_direction"], [107, 2, 1, "", "num_increments"], [107, 3, 1, "", "planar_2D"], [107, 3, 1, "", "plane_strain"], [107, 3, 1, "", "prepare_JSON_dump"], [107, 3, 1, "", "random_2D"], [107, 3, 1, "", "random_3D"], [107, 3, 1, "", "save_from_HDF5_group"], [107, 3, 1, "", "save_from_JSON"], [107, 4, 1, "", "strain_like_tensor"], [107, 2, 1, "", "stress"], [107, 2, 1, "", "target_def_grad"], [107, 2, 1, "", "target_def_grad_rate"], [107, 2, 1, "", "target_vel_grad"], [107, 3, 1, "", "to_dict"], [107, 2, 1, "", "total_time"], [107, 4, 1, "", "type"], [107, 3, 1, "", "uniaxial"], [107, 3, 1, "", "uniaxial_cyclic"]], "matflow.param_classes.load.StrainRateMode": [[108, 2, 1, "", "DEF_GRAD_RATE"], [108, 2, 1, "", "VEL_GRAD"], [108, 2, 1, "", "VEL_GRAD_APPROX"], [108, 2, 1, "", "symbol"], [108, 4, 1, "", "value"]], "matflow.param_classes.orientations": [[110, 1, 1, "", "EulerDefinition"], [111, 1, 1, "", "LatticeDirection"], [112, 1, 1, "", "OrientationRepresentation"], [113, 1, 1, "", "OrientationRepresentationType"], [114, 1, 1, "", "Orientations"], [115, 1, 1, "", "QuatOrder"], [116, 1, 1, "", "UnitCellAlignment"]], "matflow.param_classes.orientations.EulerDefinition": [[110, 2, 1, "", "BUNGE"], [110, 2, 1, "", "rotation_order"], [110, 4, 1, "", "value"]], "matflow.param_classes.orientations.LatticeDirection": [[111, 2, 1, "", "A"], [111, 2, 1, "", "A_STAR"], [111, 2, 1, "", "B"], [111, 2, 1, "", "B_STAR"], [111, 2, 1, "", "C"], [111, 2, 1, "", "C_STAR"]], "matflow.param_classes.orientations.OrientationRepresentation": [[112, 3, 1, "", "dump_element_group_to_HDF5_group"], [112, 3, 1, "", "dump_to_HDF5_group"], [112, 3, 1, "", "euler"], [112, 2, 1, "", "euler_definition"], [112, 2, 1, "", "euler_is_degrees"], [112, 3, 1, "", "prepare_JSON_dump"], [112, 2, 1, "", "quat_order"], [112, 3, 1, "", "quaternion"], [112, 3, 1, "", "save_from_HDF5_group"], [112, 3, 1, "", "save_from_JSON"], [112, 3, 1, "", "to_dict"], [112, 2, 1, "", "type"]], "matflow.param_classes.orientations.OrientationRepresentationType": [[113, 2, 1, "", "EULER"], [113, 2, 1, "", "QUATERNION"]], "matflow.param_classes.orientations.Orientations": [[114, 2, 1, "", "data"], [114, 3, 1, "", "dump_element_group_to_HDF5_group"], [114, 3, 1, "", "dump_to_HDF5_group"], [114, 3, 1, "", "from_JSON_like"], [114, 3, 1, "", "from_file"], [114, 3, 1, "", "from_random"], [114, 3, 1, "", "prepare_JSON_dump"], [114, 3, 1, "", "quat_sample_random"], [114, 2, 1, "", "representation"], [114, 3, 1, "", "save_from_HDF5_group"], [114, 3, 1, "", "save_from_JSON"], [114, 3, 1, "", "to_dict"], [114, 2, 1, "", "unit_cell_alignment"]], "matflow.param_classes.orientations.QuatOrder": [[115, 2, 1, "", "SCALAR_VECTOR"], [115, 2, 1, "", "VECTOR_SCALAR"]], "matflow.param_classes.orientations.UnitCellAlignment": [[116, 3, 1, "", "dump_element_group_to_HDF5_group"], [116, 3, 1, "", "dump_to_HDF5_group"], [116, 3, 1, "", "from_hex_convention_DAMASK"], [116, 3, 1, "", "from_hex_convention_MTEX"], [116, 3, 1, "", "prepare_JSON_dump"], [116, 3, 1, "", "save_from_HDF5_group"], [116, 3, 1, "", "save_from_JSON"], [116, 3, 1, "", "to_dict"], [116, 2, 1, "", "x"], [116, 2, 1, "", "y"], [116, 2, 1, "", "z"]], "matflow.param_classes.seeds": [[118, 1, 1, "", "MicrostructureSeeds"]], "matflow.param_classes.seeds.MicrostructureSeeds": [[118, 2, 1, "", "box_size"], [118, 3, 1, "", "dump_element_group_to_HDF5_group"], [118, 3, 1, "", "dump_to_HDF5_group"], [118, 3, 1, "", "from_JSON_like"], [118, 3, 1, "", "from_file"], [118, 3, 1, "", "from_random"], [118, 4, 1, "", "num_seeds"], [118, 2, 1, "", "orientations"], [118, 2, 1, "", "phase_label"], [118, 2, 1, "", "position"], [118, 3, 1, "", "prepare_JSON_dump"], [118, 2, 1, "", "random_seed"], [118, 3, 1, "", "save_from_HDF5_group"], [118, 3, 1, "", "save_from_JSON"], [118, 3, 1, "", "show"], [118, 3, 1, "", "to_dict"]], "matflow.param_classes.single_crystal_parameters": [[120, 1, 1, "", "Perturbation"], [121, 1, 1, "", "SingleCrystalParameters"]], "matflow.param_classes.single_crystal_parameters.Perturbation": [[120, 3, 1, "", "clear"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "fromkeys"], [120, 3, 1, "", "get"], [120, 3, 1, "", "items"], [120, 3, 1, "", "keys"], [120, 2, 1, "", "multiplicative"], [120, 2, 1, "", "path"], [120, 3, 1, "", "pop"], [120, 3, 1, "", "popitem"], [120, 3, 1, "", "setdefault"], [120, 3, 1, "", "update"], [120, 3, 1, "", "values"]], "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters": [[121, 3, 1, "", "as_base"], [121, 4, 1, "", "base"], [121, 3, 1, "", "dump_element_group_to_HDF5_group"], [121, 3, 1, "", "dump_to_HDF5_group"], [121, 4, 1, "", "perturbations"], [121, 4, 1, "", "phases"], [121, 3, 1, "", "prepare_JSON_dump"], [121, 3, 1, "", "save_from_HDF5_group"], [121, 3, 1, "", "save_from_JSON"], [121, 3, 1, "", "to_dict"]], "matflow.param_classes.utils": [[123, 6, 1, "", "masked_array_from_list"]], "matflow.tests": [[130, 0, 0, "-", "conftest"], [140, 0, 0, "-", "data"], [141, 0, 0, "-", "test_cli"], [144, 0, 0, "-", "test_utils"], [149, 0, 0, "-", "utils"]], "matflow.tests.conftest": [[131, 6, 1, "", "load_case_1"], [132, 6, 1, "", "new_null_config"], [133, 6, 1, "", "null_config"], [134, 6, 1, "", "orientations_1"], [135, 6, 1, "", "pytest_addoption"], [136, 6, 1, "", "pytest_collection_modifyitems"], [137, 6, 1, "", "pytest_configure"], [138, 6, 1, "", "pytest_unconfigure"], [139, 6, 1, "", "seeds_1"]], "matflow.tests.test_cli": [[142, 6, 1, "", "test_hpcflow_version"], [143, 6, 1, "", "test_version"]], "matflow.tests.test_utils": [[145, 6, 1, "", "test_masked_array_from_list_1D"], [146, 6, 1, "", "test_masked_array_from_list_1D_masked"], [147, 6, 1, "", "test_masked_array_from_list_2D"], [148, 6, 1, "", "test_masked_array_from_list_2D_masked"]], "matflow-cancel": [[151, 7, 1, "cmdoption-matflow-cancel-status", "--no-status"], [151, 7, 1, "cmdoption-matflow-cancel-r", "--ref-type"], [151, 7, 1, "cmdoption-matflow-cancel-status", "--status"], [151, 7, 1, "cmdoption-matflow-cancel-r", "-r"], [151, 7, 1, "cmdoption-matflow-cancel-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-config-add-scheduler": [[151, 7, 1, "cmdoption-matflow-config-add-scheduler-defaults", "--defaults"], [151, 7, 1, "cmdoption-matflow-config-add-scheduler-arg-NAME", "NAME"]], "matflow-config-add-shell-wsl": [[151, 7, 1, "cmdoption-matflow-config-add-shell-wsl-defaults", "--defaults"]], "matflow-config-add-shell": [[151, 7, 1, "cmdoption-matflow-config-add-shell-defaults", "--defaults"], [151, 7, 1, "cmdoption-matflow-config-add-shell-arg-NAME", "NAME"]], "matflow-config-append": [[151, 7, 1, "cmdoption-matflow-config-append-json", "--json"], [151, 7, 1, "cmdoption-matflow-config-append-arg-NAME", "NAME"], [151, 7, 1, "cmdoption-matflow-config-append-arg-VALUE", "VALUE"]], "matflow-config-get": [[151, 7, 1, "cmdoption-matflow-config-get-all", "--all"], [151, 7, 1, "cmdoption-matflow-config-get-file", "--file"], [151, 7, 1, "cmdoption-matflow-config-get-metadata", "--metadata"], [151, 7, 1, "cmdoption-matflow-config-get-arg-NAME", "NAME"]], "matflow-config-import": [[151, 7, 1, "cmdoption-matflow-config-import-new", "--new"], [151, 7, 1, "cmdoption-matflow-config-import-rename", "--no-rename"], [151, 7, 1, "cmdoption-matflow-config-import-rename", "--rename"], [151, 7, 1, "cmdoption-matflow-config-import-arg-FILE_PATH", "FILE_PATH"]], "matflow-config-init": [[151, 7, 1, "cmdoption-matflow-config-init-path", "--path"], [151, 7, 1, "cmdoption-matflow-config-init-arg-KNOWN_NAME", "KNOWN_NAME"]], "matflow-config-open": [[151, 7, 1, "cmdoption-matflow-config-open-path", "--path"]], "matflow-config-pop": [[151, 7, 1, "cmdoption-matflow-config-pop-arg-INDEX", "INDEX"], [151, 7, 1, "cmdoption-matflow-config-pop-arg-NAME", "NAME"]], "matflow-config-prepend": [[151, 7, 1, "cmdoption-matflow-config-prepend-json", "--json"], [151, 7, 1, "cmdoption-matflow-config-prepend-arg-NAME", "NAME"], [151, 7, 1, "cmdoption-matflow-config-prepend-arg-VALUE", "VALUE"]], "matflow-config-set-github-demo-data-dir": [[151, 7, 1, "cmdoption-matflow-config-set-github-demo-data-dir-arg-SHA", "SHA"]], "matflow-config-set": [[151, 7, 1, "cmdoption-matflow-config-set-json", "--json"], [151, 7, 1, "cmdoption-matflow-config-set-arg-NAME", "NAME"], [151, 7, 1, "cmdoption-matflow-config-set-arg-VALUE", "VALUE"]], "matflow-config-unset": [[151, 7, 1, "cmdoption-matflow-config-unset-arg-NAME", "NAME"]], "matflow-config-update": [[151, 7, 1, "cmdoption-matflow-config-update-json", "--json"], [151, 7, 1, "cmdoption-matflow-config-update-arg-NAME", "NAME"], [151, 7, 1, "cmdoption-matflow-config-update-arg-VALUE", "VALUE"]], "matflow-config": [[151, 7, 1, "cmdoption-matflow-config-no-callback", "--no-callback"]], "matflow-configure-env": [[151, 7, 1, "cmdoption-matflow-configure-env-env-source-file", "--env-source-file"], [151, 7, 1, "cmdoption-matflow-configure-env-setup", "--setup"], [151, 7, 1, "cmdoption-matflow-configure-env-use-current-env", "--use-current-env"], [151, 7, 1, "cmdoption-matflow-configure-env-arg-NAME", "NAME"]], "matflow-demo-data-cache": [[151, 7, 1, "cmdoption-matflow-demo-data-cache-all", "--all"], [151, 7, 1, "cmdoption-matflow-demo-data-cache-arg-FILE_NAME", "FILE_NAME"]], "matflow-demo-data-copy": [[151, 7, 1, "cmdoption-matflow-demo-data-copy-arg-DESTINATION", "DESTINATION"], [151, 7, 1, "cmdoption-matflow-demo-data-copy-arg-FILE_NAME", "FILE_NAME"]], "matflow-demo-data": [[151, 7, 1, "cmdoption-matflow-demo-data-l", "--list"], [151, 7, 1, "cmdoption-matflow-demo-data-l", "-l"]], "matflow-demo-software-doSomething": [[151, 7, 1, "cmdoption-matflow-demo-software-doSomething-i1", "--infile1"], [151, 7, 1, "cmdoption-matflow-demo-software-doSomething-i2", "--infile2"], [151, 7, 1, "cmdoption-matflow-demo-software-doSomething-o", "--out"], [151, 7, 1, "cmdoption-matflow-demo-software-doSomething-v", "--value"], [151, 7, 1, "cmdoption-matflow-demo-software-doSomething-i1", "-i1"], [151, 7, 1, "cmdoption-matflow-demo-software-doSomething-i2", "-i2"], [151, 7, 1, "cmdoption-matflow-demo-software-doSomething-o", "-o"], [151, 7, 1, "cmdoption-matflow-demo-software-doSomething-v", "-v"]], "matflow-demo-workflow-copy": [[151, 7, 1, "cmdoption-matflow-demo-workflow-copy-doc", "--doc"], [151, 7, 1, "cmdoption-matflow-demo-workflow-copy-doc", "--no-doc"], [151, 7, 1, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION", "DESTINATION"], [151, 7, 1, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-go": [[151, 7, 1, "cmdoption-matflow-demo-workflow-go-add-to-known", "--add-to-known"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-cancel", "--cancel"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-format", "--format"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-js-parallelism", "--js-parallelism"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-name", "--name"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-add-to-known", "--no-add-to-known"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-status", "--no-status"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-overwrite", "--overwrite"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-path", "--path"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-print-idx", "--print-idx"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-status", "--status"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-store", "--store"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-tasks", "--tasks"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-ts-fmt", "--ts-fmt"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-ts-name-fmt", "--ts-name-fmt"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-v", "--var"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-wait", "--wait"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-v", "-v"], [151, 7, 1, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-make": [[151, 7, 1, "cmdoption-matflow-demo-workflow-make-add-submission", "--add-submission"], [151, 7, 1, "cmdoption-matflow-demo-workflow-make-format", "--format"], [151, 7, 1, "cmdoption-matflow-demo-workflow-make-name", "--name"], [151, 7, 1, "cmdoption-matflow-demo-workflow-make-status", "--no-status"], [151, 7, 1, "cmdoption-matflow-demo-workflow-make-overwrite", "--overwrite"], [151, 7, 1, "cmdoption-matflow-demo-workflow-make-path", "--path"], [151, 7, 1, "cmdoption-matflow-demo-workflow-make-status", "--status"], [151, 7, 1, "cmdoption-matflow-demo-workflow-make-store", "--store"], [151, 7, 1, "cmdoption-matflow-demo-workflow-make-ts-fmt", "--ts-fmt"], [151, 7, 1, "cmdoption-matflow-demo-workflow-make-ts-name-fmt", "--ts-name-fmt"], [151, 7, 1, "cmdoption-matflow-demo-workflow-make-v", "--var"], [151, 7, 1, "cmdoption-matflow-demo-workflow-make-v", "-v"], [151, 7, 1, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow-show": [[151, 7, 1, "cmdoption-matflow-demo-workflow-show-doc", "--doc"], [151, 7, 1, "cmdoption-matflow-demo-workflow-show-doc", "--no-doc"], [151, 7, 1, "cmdoption-matflow-demo-workflow-show-syntax", "--no-syntax"], [151, 7, 1, "cmdoption-matflow-demo-workflow-show-syntax", "--syntax"], [151, 7, 1, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME", "WORKFLOW_NAME"]], "matflow-demo-workflow": [[151, 7, 1, "cmdoption-matflow-demo-workflow-l", "--list"], [151, 7, 1, "cmdoption-matflow-demo-workflow-l", "-l"]], "matflow-go": [[151, 7, 1, "cmdoption-matflow-go-add-to-known", "--add-to-known"], [151, 7, 1, "cmdoption-matflow-go-cancel", "--cancel"], [151, 7, 1, "cmdoption-matflow-go-format", "--format"], [151, 7, 1, "cmdoption-matflow-go-js-parallelism", "--js-parallelism"], [151, 7, 1, "cmdoption-matflow-go-name", "--name"], [151, 7, 1, "cmdoption-matflow-go-add-to-known", "--no-add-to-known"], [151, 7, 1, "cmdoption-matflow-go-status", "--no-status"], [151, 7, 1, "cmdoption-matflow-go-overwrite", "--overwrite"], [151, 7, 1, "cmdoption-matflow-go-path", "--path"], [151, 7, 1, "cmdoption-matflow-go-print-idx", "--print-idx"], [151, 7, 1, "cmdoption-matflow-go-status", "--status"], [151, 7, 1, "cmdoption-matflow-go-store", "--store"], [151, 7, 1, "cmdoption-matflow-go-string", "--string"], [151, 7, 1, "cmdoption-matflow-go-tasks", "--tasks"], [151, 7, 1, "cmdoption-matflow-go-ts-fmt", "--ts-fmt"], [151, 7, 1, "cmdoption-matflow-go-ts-name-fmt", "--ts-name-fmt"], [151, 7, 1, "cmdoption-matflow-go-v", "--var"], [151, 7, 1, "cmdoption-matflow-go-wait", "--wait"], [151, 7, 1, "cmdoption-matflow-go-v", "-v"], [151, 7, 1, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR", "TEMPLATE_FILE_OR_STR"]], "matflow-helper-pid": [[151, 7, 1, "cmdoption-matflow-helper-pid-f", "--file"], [151, 7, 1, "cmdoption-matflow-helper-pid-f", "-f"]], "matflow-helper-restart": [[151, 7, 1, "cmdoption-matflow-helper-restart-timeout", "--timeout"], [151, 7, 1, "cmdoption-matflow-helper-restart-timeout-check-interval", "--timeout-check-interval"], [151, 7, 1, "cmdoption-matflow-helper-restart-watch-interval", "--watch-interval"]], "matflow-helper-run": [[151, 7, 1, "cmdoption-matflow-helper-run-timeout", "--timeout"], [151, 7, 1, "cmdoption-matflow-helper-run-timeout-check-interval", "--timeout-check-interval"], [151, 7, 1, "cmdoption-matflow-helper-run-watch-interval", "--watch-interval"]], "matflow-helper-start": [[151, 7, 1, "cmdoption-matflow-helper-start-timeout", "--timeout"], [151, 7, 1, "cmdoption-matflow-helper-start-timeout-check-interval", "--timeout-check-interval"], [151, 7, 1, "cmdoption-matflow-helper-start-watch-interval", "--watch-interval"]], "matflow-internal-noop": [[151, 7, 1, "cmdoption-matflow-internal-noop-click-exit-code", "--click-exit-code"], [151, 7, 1, "cmdoption-matflow-internal-noop-raise", "--raise"], [151, 7, 1, "cmdoption-matflow-internal-noop-sleep", "--sleep"]], "matflow-internal-workflow-PATH-execute-combined-runs": [[151, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-combined-runs-arg-JOBSCRIPT_IDX", "JOBSCRIPT_IDX"], [151, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-combined-runs-arg-SUBMISSION_IDX", "SUBMISSION_IDX"]], "matflow-internal-workflow-PATH-execute-run": [[151, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-BLOCK_ACTION_IDX", "BLOCK_ACTION_IDX"], [151, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-BLOCK_IDX", "BLOCK_IDX"], [151, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-JOBSCRIPT_IDX", "JOBSCRIPT_IDX"], [151, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-RUN_ID", "RUN_ID"], [151, 7, 1, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-SUBMISSION_IDX", "SUBMISSION_IDX"]], "matflow-internal-workflow-PATH-save-parameter": [[151, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-stderr", "--stderr"], [151, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-CMD_IDX", "CMD_IDX"], [151, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID", "EAR_ID"], [151, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME", "NAME"], [151, 7, 1, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE", "VALUE"]], "matflow-internal-workflow": [[151, 7, 1, "cmdoption-matflow-internal-workflow-arg-PATH", "PATH"]], "matflow-make": [[151, 7, 1, "cmdoption-matflow-make-add-submission", "--add-submission"], [151, 7, 1, "cmdoption-matflow-make-format", "--format"], [151, 7, 1, "cmdoption-matflow-make-name", "--name"], [151, 7, 1, "cmdoption-matflow-make-status", "--no-status"], [151, 7, 1, "cmdoption-matflow-make-overwrite", "--overwrite"], [151, 7, 1, "cmdoption-matflow-make-path", "--path"], [151, 7, 1, "cmdoption-matflow-make-status", "--status"], [151, 7, 1, "cmdoption-matflow-make-store", "--store"], [151, 7, 1, "cmdoption-matflow-make-string", "--string"], [151, 7, 1, "cmdoption-matflow-make-ts-fmt", "--ts-fmt"], [151, 7, 1, "cmdoption-matflow-make-ts-name-fmt", "--ts-name-fmt"], [151, 7, 1, "cmdoption-matflow-make-v", "--var"], [151, 7, 1, "cmdoption-matflow-make-v", "-v"], [151, 7, 1, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR", "TEMPLATE_FILE_OR_STR"]], "matflow-manage-clear-cache": [[151, 7, 1, "cmdoption-matflow-manage-clear-cache-hostname", "--hostname"]], "matflow-manage-get-config-path": [[151, 7, 1, "cmdoption-matflow-manage-get-config-path-config-dir", "--config-dir"]], "matflow-manage-reset-config": [[151, 7, 1, "cmdoption-matflow-manage-reset-config-config-dir", "--config-dir"]], "matflow-open-config": [[151, 7, 1, "cmdoption-matflow-open-config-path", "--path"]], "matflow-open-demo-data-cache-dir": [[151, 7, 1, "cmdoption-matflow-open-demo-data-cache-dir-path", "--path"]], "matflow-open-env-source": [[151, 7, 1, "cmdoption-matflow-open-env-source-name", "--name"], [151, 7, 1, "cmdoption-matflow-open-env-source-path", "--path"]], "matflow-open-known-subs": [[151, 7, 1, "cmdoption-matflow-open-known-subs-path", "--path"]], "matflow-open-log": [[151, 7, 1, "cmdoption-matflow-open-log-path", "--path"]], "matflow-open-user-cache-dir": [[151, 7, 1, "cmdoption-matflow-open-user-cache-dir-path", "--path"]], "matflow-open-user-cache-hostname-dir": [[151, 7, 1, "cmdoption-matflow-open-user-cache-hostname-dir-path", "--path"]], "matflow-open-user-data-dir": [[151, 7, 1, "cmdoption-matflow-open-user-data-dir-path", "--path"]], "matflow-open-user-data-hostname-dir": [[151, 7, 1, "cmdoption-matflow-open-user-data-hostname-dir-path", "--path"]], "matflow-open-user-runtime-dir": [[151, 7, 1, "cmdoption-matflow-open-user-runtime-dir-path", "--path"]], "matflow-open-workflow": [[151, 7, 1, "cmdoption-matflow-open-workflow-path", "--path"], [151, 7, 1, "cmdoption-matflow-open-workflow-r", "--ref-type"], [151, 7, 1, "cmdoption-matflow-open-workflow-r", "-r"], [151, 7, 1, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-rechunk": [[151, 7, 1, "cmdoption-matflow-rechunk-backup", "--backup"], [151, 7, 1, "cmdoption-matflow-rechunk-chunk-size", "--chunk-size"], [151, 7, 1, "cmdoption-matflow-rechunk-backup", "--no-backup"], [151, 7, 1, "cmdoption-matflow-rechunk-status", "--no-status"], [151, 7, 1, "cmdoption-matflow-rechunk-r", "--ref-type"], [151, 7, 1, "cmdoption-matflow-rechunk-status", "--status"], [151, 7, 1, "cmdoption-matflow-rechunk-r", "-r"], [151, 7, 1, "cmdoption-matflow-rechunk-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-show": [[151, 7, 1, "cmdoption-matflow-show-f", "--full"], [151, 7, 1, "cmdoption-matflow-show-legend", "--legend"], [151, 7, 1, "cmdoption-matflow-show-r", "--max-recent"], [151, 7, 1, "cmdoption-matflow-show-no-update", "--no-update"], [151, 7, 1, "cmdoption-matflow-show-f", "-f"], [151, 7, 1, "cmdoption-matflow-show-r", "-r"]], "matflow-submission-get-known": [[151, 7, 1, "cmdoption-matflow-submission-get-known-json", "--json"]], "matflow-submission-scheduler": [[151, 7, 1, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME", "SCHEDULER_NAME"]], "matflow-submission-shell-info": [[151, 7, 1, "cmdoption-matflow-submission-shell-info-exclude-os", "--exclude-os"], [151, 7, 1, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME", "SHELL_NAME"]], "matflow-submission": [[151, 7, 1, "cmdoption-matflow-submission-os-info", "--os-info"]], "matflow-test-hpcflow": [[151, 7, 1, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS", "PY_TEST_ARGS"]], "matflow-test": [[151, 7, 1, "cmdoption-matflow-test-arg-PY_TEST_ARGS", "PY_TEST_ARGS"]], "matflow-unzip": [[151, 7, 1, "cmdoption-matflow-unzip-log", "--log"], [151, 7, 1, "cmdoption-matflow-unzip-path", "--path"], [151, 7, 1, "cmdoption-matflow-unzip-arg-WORKFLOW_PATH", "WORKFLOW_PATH"]], "matflow-workflow-WORKFLOW_REF-abort-run": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element", "--element"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission", "--submission"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task", "--task"]], "matflow-workflow-WORKFLOW_REF-add-submission": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-force-array", "--force-array"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-js-parallelism", "--js-parallelism"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-status", "--no-status"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-status", "--status"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-tasks", "--tasks"]], "matflow-workflow-WORKFLOW_REF-get-param-source": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-get-param": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-is-param-set": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX", "INDEX"]], "matflow-workflow-WORKFLOW_REF-list-jobscripts": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-jobscripts", "--jobscripts"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-max-js", "--max-js"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-sub-idx", "--sub-idx"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-width", "--width"]], "matflow-workflow-WORKFLOW_REF-list-task-jobscripts": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-max-js", "--max-js"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-sub-idx", "--sub-idx"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-task-names", "--task-names"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-width", "--width"]], "matflow-workflow-WORKFLOW_REF-rechunk-parameter-base": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup", "--backup"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-chunk-size", "--chunk-size"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup", "--no-backup"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status", "--no-status"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status", "--status"]], "matflow-workflow-WORKFLOW_REF-rechunk-runs": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup", "--backup"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-chunk-size", "--chunk-size"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup", "--no-backup"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status", "--no-status"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status", "--status"]], "matflow-workflow-WORKFLOW_REF-rechunk": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup", "--backup"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-chunk-size", "--chunk-size"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup", "--no-backup"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status", "--no-status"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status", "--status"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stderr": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stderr-array-idx", "--array-idx"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stdout": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stdout-array-idx", "--array-idx"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX", "JS_IDX"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-jobscripts", "--jobscripts"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-max-js", "--max-js"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-width", "--width"]], "matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-max-js", "--max-js"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-task-names", "--task-names"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-width", "--width"]], "matflow-workflow-WORKFLOW_REF-sub": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX", "SUB_IDX"]], "matflow-workflow-WORKFLOW_REF-submit": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known", "--add-to-known"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-cancel", "--cancel"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism", "--js-parallelism"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known", "--no-add-to-known"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status", "--no-status"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-print-idx", "--print-idx"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status", "--status"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-tasks", "--tasks"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait", "--wait"]], "matflow-workflow-WORKFLOW_REF-unzip": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-log", "--log"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-path", "--path"]], "matflow-workflow-WORKFLOW_REF-wait": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j", "--jobscripts"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j", "-j"]], "matflow-workflow-WORKFLOW_REF-zip": [[151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-execute", "--include-execute"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-rechunk-backups", "--include-rechunk-backups"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log", "--log"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-overwrite", "--overwrite"], [151, 7, 1, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-path", "--path"]], "matflow-workflow": [[151, 7, 1, "cmdoption-matflow-workflow-r", "--ref-type"], [151, 7, 1, "cmdoption-matflow-workflow-r", "-r"], [151, 7, 1, "cmdoption-matflow-workflow-arg-WORKFLOW_REF", "WORKFLOW_REF"]], "matflow-zip": [[151, 7, 1, "cmdoption-matflow-zip-include-execute", "--include-execute"], [151, 7, 1, "cmdoption-matflow-zip-include-rechunk-backups", "--include-rechunk-backups"], [151, 7, 1, "cmdoption-matflow-zip-log", "--log"], [151, 7, 1, "cmdoption-matflow-zip-overwrite", "--overwrite"], [151, 7, 1, "cmdoption-matflow-zip-path", "--path"], [151, 7, 1, "cmdoption-matflow-zip-r", "--ref-type"], [151, 7, 1, "cmdoption-matflow-zip-r", "-r"], [151, 7, 1, "cmdoption-matflow-zip-arg-WORKFLOW_REF", "WORKFLOW_REF"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:data", "6": "py:function", "7": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"], "7": ["std", "cmdoption", "program option"]}, "titleterms": {"contribut": 0, "recommend": 0, "read": 0, "instal": [0, 4], "develop": [0, 2], "clone": 0, "repo": 0, "check": 0, "out": 0, "hpcflow": [0, 151, 153], "matflow": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 162], "python": [0, 4, 150, 165], "depend": 0, "poetri": 0, "troubleshoot": 0, "work": 0, "from": [0, 169], "sourc": [0, 151], "link": 0, "local": 0, "cli": [0, 4, 96, 153], "environ": [1, 31, 153, 157, 162], "matlab_env": [1, 157], "exampl": [1, 165], "definit": 1, "window": 1, "linux": 1, "maco": 1, "dream_3d_env": [1, 157], "defdap_env": [1, 157], "damask_pars": 1, "damask": [1, 153, 173], "welcom": 3, "": 3, "document": 3, "content": 3, "indic": 3, "tabl": 3, "what": 4, "doe": 4, "thi": 4, "script": [4, 162], "do": 4, "packag": 4, "us": [4, 162, 165], "pip": 4, "conda": 4, "download": 4, "binari": 4, "advanc": 4, "releas": 4, "note": 4, "action": [6, 162], "actionenviron": 7, "actionrul": 8, "paramet": [8, 45, 58, 62, 79, 87, 151, 158, 167], "actionscop": 9, "actionscopetyp": 10, "command": [11, 151, 156], "commandfileslist": 12, "directposix": 13, "directwindow": 14, "element": [15, 30], "elementact": 16, "elementactionrun": 17, "elementfilt": 18, "elementgroup": 19, "elementinputfil": 20, "elementinput": 21, "elementiter": 22, "elementoutputfil": 23, "elementoutput": 24, "elementparamet": 25, "elementpropag": 26, "elementrepeat": 27, "elementresourc": 28, "elementset": 29, "environmentslist": 32, "execut": [33, 151], "executableinst": 34, "executableslist": 35, "executor": 36, "filenameext": 37, "filenamespec": 38, "filenamestem": 39, "filespec": 40, "grouplist": 41, "inputfil": 42, "inputfilegener": 43, "inputfilegeneratorsourc": 44, "inputsourc": 45, "inputsourcetyp": 46, "inputvalu": 47, "jobscript": [48, 151], "jobscriptblock": 49, "loop": [50, 164], "metatask": 51, "metataskschema": 52, "multipathsequ": 53, "numcor": 54, "outputfilepars": 55, "outputfileparsersourc": 56, "outputlabel": 57, "parameterpath": 59, "parameterpropagationmod": 60, "parametervalu": 61, "parameterslist": 63, "queuedschedul": 64, "resourcelist": 65, "resourcespec": 66, "todo": [66, 73], "rule": 67, "rundirappfil": 68, "sgeposix": 69, "schemainput": 70, "schemaoutput": 71, "schemaparamet": 72, "slurmposix": 73, "subparamet": 74, "submiss": [75, 151, 161], "task": [76, 151, 159, 162, 165, 166, 167], "taskinputparamet": 77, "tasklist": 78, "taskobject": 79, "taskoutputparamet": 80, "taskschema": 81, "taskschemaslist": 82, "tasksourcetyp": 83, "tasktemplatelist": 84, "valueperturb": 85, "valuesequ": 86, "workflow": [87, 151, 153, 160, 162, 164, 168, 169], "workflowblueprint": 88, "workflowloop": 89, "workflowlooplist": 90, "workflowtask": 91, "workflowtasklist": 92, "workflowtempl": 93, "app": 94, "cancel": [95, 151], "get_os_info": 97, "get_known_submiss": 98, "get_shell_info": 99, "make_and_submit_demo_workflow": 100, "make_and_submit_workflow": 101, "make_demo_workflow": 102, "make_workflow": 103, "param_class": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "load": [105, 106, 107, 108, 151, 168, 169, 173], "loadcas": [106, 153], "loadstep": 107, "strainratemod": 108, "orient": [109, 110, 111, 112, 113, 114, 115, 116, 158], "eulerdefinit": 110, "latticedirect": 111, "orientationrepresent": 112, "orientationrepresentationtyp": 113, "quatord": 115, "unitcellalign": 116, "seed": [117, 118], "microstructurese": 118, "single_crystal_paramet": [119, 120, 121, 158], "perturb": 120, "singlecrystalparamet": 121, "util": [122, 123, 149, 173], "masked_array_from_list": 123, "run_hpcflow_test": 124, "run_test": 125, "show": [126, 151, 166], "show_legend": 127, "submit_workflow": 128, "test": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151], "conftest": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "load_case_1": 131, "new_null_config": 132, "null_config": 133, "orientations_1": 134, "pytest_addopt": 135, "pytest_collection_modifyitem": 136, "pytest_configur": 137, "pytest_unconfigur": 138, "seeds_1": 139, "data": [140, 151], "test_cli": [141, 142, 143], "test_hpcflow_vers": 142, "test_vers": 143, "test_util": [144, 145, 146, 147, 148], "test_masked_array_from_list_1d": 145, "test_masked_array_from_list_1d_mask": 146, "test_masked_array_from_list_2d": 147, "test_masked_array_from_list_2d_mask": 148, "api": [150, 153, 165], "line": 151, "interfac": 151, "config": [151, 152, 161], "add": 151, "schedul": 151, "shell": 151, "wsl": 151, "append": 151, "get": [151, 161], "import": 151, "init": 151, "list": 151, "file": [151, 152, 156, 161], "open": 151, "pop": 151, "prepend": 151, "set": [151, 161], "github": 151, "demo": [151, 160], "dir": 151, "unset": 151, "updat": 151, "configur": [151, 152, 161], "env": 151, "cach": 151, "copi": 151, "softwar": [151, 162], "dosometh": 151, "go": 151, "make": 151, "helper": 151, "clear": [151, 161], "log": 151, "path": [151, 158, 162], "pid": 151, "restart": 151, "run": 151, "start": 151, "stop": 151, "uptim": 151, "watch": 151, "intern": 151, "invoc": 151, "cmd": 151, "noop": 151, "combin": 151, "save": 151, "manag": 151, "known": [151, 161], "sub": 151, "temp": 151, "reset": [151, 161], "user": [151, 170], "hostnam": 151, "runtim": 151, "rechunk": 151, "login": 151, "node": 151, "info": 151, "tc": 151, "unzip": 151, "abort": 151, "all": 151, "param": 151, "process": [151, 173], "id": 151, "job": 151, "i": 151, "base": 151, "statu": 151, "activ": 151, "j": 151, "dep": 151, "re": 151, "stderr": 151, "stdout": 151, "need": 151, "submit": 151, "outstand": 151, "wait": 151, "zip": 151, "default": [152, 161], "valid": 152, "schema": [152, 159, 162, 166, 167], "glossari": 153, "cluster": 153, "pars": 153, "defdap": 153, "virtual": 153, "formabl": 153, "hpc": 153, "refer": 154, "templat": [155, 162, 167, 168, 169], "compon": [155, 167], "damask_geom_fil": 156, "damask_load_fil": 156, "damask_material_fil": 156, "damask_numerics_fil": 156, "damask_stdout_fil": 156, "damask_stderr_fil": 156, "damask_hdf5_fil": 156, "damask_viz_fil": 156, "mtex_pole_figur": 156, "mtex_ipf_figur": 156, "dream_3d_pipelin": 156, "dream_3d_hdf5_fil": 156, "dream_3d_xdmf_fil": 156, "null_env": 157, "python_env": 157, "damask_env": 157, "damask_parse_env": 157, "formable_env": 157, "crc_file_path": 158, "csv_argument": 158, "csv_file_path": 158, "ctf_file_path": 158, "dic": 158, "ebsd": 158, "ebsd_phas": 158, "ebsd_reference_frame_transform": 158, "ebsd_rot": 158, "ipf_reference_direct": 158, "odf_compon": 158, "odf_mat_file_path": 158, "ve_grid_s": 158, "ve_respons": 158, "ve_response_data": 158, "ve_siz": 158, "buffer_s": 158, "colourbar_limit": 158, "compil": 158, "crystal_symmetri": 158, "damask_log": 158, "damask_numer": [158, 160], "damask_phas": 158, "damask_post_process": 158, "damask_post_processing_result": 158, "damask_solv": 158, "damask_viz": 158, "damask_viz_result": 158, "depth": 158, "dump_path": 158, "eng_strain_col_index": 158, "eng_stress_col_index": 158, "find_grains_algorithm": 158, "fit_yield_fixed_paramet": 158, "fit_yield_initial_paramet": 158, "fit_yield_opt_paramet": 158, "fitted_yield_funct": 158, "grid_siz": 158, "homog_label": 158, "homogen": 158, "image_ax": 158, "initial_damp": 158, "levenberg_marquardt_fitt": 158, "load_cas": 158, "microstructure_imag": 158, "microstructure_se": 158, "new_grid_s": 158, "num_grain": 158, "num_orient": 158, "order": 158, "origin": 158, "period": 158, "phase_id": 158, "phase_label": 158, "phase_label_map": 158, "phase_statist": 158, "plastic_rang": 158, "pole_figure_direct": 158, "precipit": 158, "resolut": 158, "root_path": 158, "scale_morphologi": 158, "scale_update_s": 158, "scaling_factor": 158, "size": 158, "specimen_symmetri": 158, "stress_unit": 158, "tensile_test": 158, "transform_typ": 158, "true_strain_col_index": 158, "true_stress_col_index": 158, "use_contour": 158, "use_one_colourbar": 158, "volume_el": 158, "yield_function_nam": 158, "yield_point": 158, "yield_point_criteria": 158, "define_load_cas": 159, "define_microstructure_se": 159, "define_orient": 159, "dump_all_yield_stress": 159, "fit_single_crystal_paramet": [159, 160], "fit_yield_funct": 159, "generate_microstructure_se": 159, "generate_microstructure_seeds_from_random": 159, "generate_orient": 159, "generate_rv": 159, "generate_rve_from_damask_input_fil": 159, "generate_volume_el": 159, "generate_volume_element_from_voronoi": 159, "generate_volume_element_from_statist": [159, 160], "generate_volume_element_extrus": 159, "load_microstructur": 159, "load_microstructure_ebsd_d": 159, "load_microstructure_ebsd": 159, "modify_v": 159, "modify_ve_add_buffer_zon": 159, "modify_ve_grid_s": 159, "read_tensile_test": 159, "read_tensile_test_from_csv": 159, "sample_orient": 159, "sample_orientations_from_ctf_file_mtex": 159, "sample_orientations_from_crc_file_mtex": 159, "sample_textur": 159, "sample_texture_from_ctf_file_mtex": 159, "sample_texture_from_crc_file_mtex": 159, "sample_texture_from_odf_mat_file_mtex": 159, "sample_texture_from_model_odf_mtex": 159, "sample_texture_random_mtex": 159, "simulate_ve_load": 159, "simulate_ve_loading_damask": 159, "simulate_ve_loading_damask_hc": 159, "visualise_v": 159, "visualise_ve_vtk": 159, "visualise_orient": 159, "visualise_orientations_pole_figure_mtex": 159, "rve_extrusion_ebsd": 160, "yaml": 160, "rve_extrusion_ebsd_d": 160, "cubic_textur": 160, "damask_input_fil": 160, "fit_yield_func": 160, "modify_volume_element_grid_s": 160, "read_tensile_test_csv": 160, "sample_orientations_crc_fil": 160, "sample_orientations_ctf_fil": 160, "sample_texture_crc_fil": 160, "sample_texture_ctf_fil": 160, "sample_texture_odf_mat": 160, "sample_texture_model_odf": 160, "sample_texture_random": 160, "simulate_yield_surface_2d": 160, "simulate_yield_surface_2d_brass": 160, "tension_damask_": 160, "tension_damask_al_n_repeat": 160, "tension_damask_mg": 160, "tension_damask_ti": 160, "how": [161, 162, 163, 166, 167, 168, 169], "tos": [161, 162, 166, 168, 169], "item": 161, "valu": 161, "multipl": 162, "version": 162, "same": 162, "disambigu": 162, "between": 162, "name": [162, 167], "specifi": 162, "within": 162, "pass": 162, "defin": 162, "preset": 162, "select": 162, "sequenc": [162, 164], "To": 163, "guid": [163, 170], "versu": 164, "A": 164, "basic": 164, "meta": 165, "simpl": 165, "customis": 165, "parametris": 165, "inform": 166, "about": 166, "gener": 169, "persist": 169, "tutori": 171, "jupyt": 172, "notebook": 172, "simul": 173, "yield": 173, "surfac": 173, "function": 173, "plot": 173}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Contribute": [[0, "contribute"]], "Recommended reads": [[0, "recommended-reads"]], "Installation for development": [[0, "installation-for-development"]], "Clone repo": [[0, "clone-repo"]], "Checking out hpcflow": [[0, "checking-out-hpcflow"]], "Checking out matflow": [[0, "checking-out-matflow"]], "Install python dependencies with poetry": [[0, "install-python-dependencies-with-poetry"]], "Troubleshooting": [[0, "troubleshooting"]], "Working from the source": [[0, "working-from-the-source"]], "Working with hpcflow": [[0, "working-with-hpcflow"]], "Working with matflow": [[0, "working-with-matflow"]], "link to local hpcflow": [[0, "link-to-local-hpcflow"]], "CLI": [[0, "cli"], [153, "cli"]], "Environments": [[1, "environments"], [157, "environments"]], "matlab_env": [[1, "matlab-env"], [157, "matlab-env"]], "Example environment definition - Windows": [[1, "example-environment-definition-windows"], [1, "id2"]], "Example environment definition - Linux/MacOS": [[1, "example-environment-definition-linux-macos"], [1, "id1"]], "dream_3D_env": [[1, "dream-3d-env"], [157, "dream-3d-env"]], "defdap_env": [[1, "defdap-env"], [157, "defdap-env"]], "damask_parse": [[1, "damask-parse"]], "Example environment definition": [[1, "example-environment-definition"], [1, "id3"]], "damask": [[1, "damask"]], "Development": [[2, "development"]], "Welcome to MatFlow\u2019s documentation!": [[3, "welcome-to-matflow-s-documentation"]], "Contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "Installation": [[4, "installation"]], "MatFlow CLI": [[4, "matflow-cli"]], "What does this script do?": [[4, null]], "MatFlow Python package": [[4, "matflow-python-package"]], "Using pip": [[4, "using-pip"]], "Using conda": [[4, "using-conda"]], "Download CLI binaries (advanced)": [[4, "download-cli-binaries-advanced"]], "Release notes": [[4, "release-notes"]], "matflow": [[5, "matflow"], [151, "matflow"]], "matflow.Action": [[6, "matflow-action"]], "matflow.ActionEnvironment": [[7, "matflow-actionenvironment"]], "matflow.ActionRule": [[8, "matflow-actionrule"]], "Parameter": [[8, "parameter"], [8, "id1"], [8, "id2"], [45, "parameter"], [79, "parameter"], [87, "parameter"], [87, "id1"]], "matflow.ActionScope": [[9, "matflow-actionscope"]], "matflow.ActionScopeType": [[10, "matflow-actionscopetype"]], "matflow.Command": [[11, "matflow-command"]], "matflow.CommandFilesList": [[12, "matflow-commandfileslist"]], "matflow.DirectPosix": [[13, "matflow-directposix"]], "matflow.DirectWindows": [[14, "matflow-directwindows"]], "matflow.Element": [[15, "matflow-element"]], "matflow.ElementAction": [[16, "matflow-elementaction"]], "matflow.ElementActionRun": [[17, "matflow-elementactionrun"]], "matflow.ElementFilter": [[18, "matflow-elementfilter"]], "matflow.ElementGroup": [[19, "matflow-elementgroup"]], "matflow.ElementInputFiles": [[20, "matflow-elementinputfiles"]], "matflow.ElementInputs": [[21, "matflow-elementinputs"]], "matflow.ElementIteration": [[22, "matflow-elementiteration"]], "matflow.ElementOutputFiles": [[23, "matflow-elementoutputfiles"]], "matflow.ElementOutputs": [[24, "matflow-elementoutputs"]], "matflow.ElementParameter": [[25, "matflow-elementparameter"]], "matflow.ElementPropagation": [[26, "matflow-elementpropagation"]], "matflow.ElementRepeats": [[27, "matflow-elementrepeats"]], "matflow.ElementResources": [[28, "matflow-elementresources"]], "matflow.ElementSet": [[29, "matflow-elementset"]], "matflow.Elements": [[30, "matflow-elements"]], "matflow.Environment": [[31, "matflow-environment"]], "matflow.EnvironmentsList": [[32, "matflow-environmentslist"]], "matflow.Executable": [[33, "matflow-executable"]], "matflow.ExecutableInstance": [[34, "matflow-executableinstance"]], "matflow.ExecutablesList": [[35, "matflow-executableslist"]], "matflow.Executor": [[36, "matflow-executor"]], "matflow.FileNameExt": [[37, "matflow-filenameext"]], "matflow.FileNameSpec": [[38, "matflow-filenamespec"]], "matflow.FileNameStem": [[39, "matflow-filenamestem"]], "matflow.FileSpec": [[40, "matflow-filespec"]], "matflow.GroupList": [[41, "matflow-grouplist"]], "matflow.InputFile": [[42, "matflow-inputfile"]], "matflow.InputFileGenerator": [[43, "matflow-inputfilegenerator"]], "matflow.InputFileGeneratorSource": [[44, "matflow-inputfilegeneratorsource"]], "matflow.InputSource": [[45, "matflow-inputsource"]], "matflow.InputSourceType": [[46, "matflow-inputsourcetype"]], "matflow.InputValue": [[47, "matflow-inputvalue"]], "matflow.Jobscript": [[48, "matflow-jobscript"]], "matflow.JobscriptBlock": [[49, "matflow-jobscriptblock"]], "matflow.Loop": [[50, "matflow-loop"]], "matflow.MetaTask": [[51, "matflow-metatask"]], "matflow.MetaTaskSchema": [[52, "matflow-metataskschema"]], "matflow.MultiPathSequence": [[53, "matflow-multipathsequence"]], "matflow.NumCores": [[54, "matflow-numcores"]], "matflow.OutputFileParser": [[55, "matflow-outputfileparser"]], "matflow.OutputFileParserSource": [[56, "matflow-outputfileparsersource"]], "matflow.OutputLabel": [[57, "matflow-outputlabel"]], "matflow.Parameter": [[58, "matflow-parameter"]], "matflow.ParameterPath": [[59, "matflow-parameterpath"]], "matflow.ParameterPropagationMode": [[60, "matflow-parameterpropagationmode"]], "matflow.ParameterValue": [[61, "matflow-parametervalue"]], "matflow.Parameters": [[62, "matflow-parameters"]], "matflow.ParametersList": [[63, "matflow-parameterslist"]], "matflow.QueuedScheduler": [[64, "matflow-queuedscheduler"]], "matflow.ResourceList": [[65, "matflow-resourcelist"]], "matflow.ResourceSpec": [[66, "matflow-resourcespec"]], "Todo": [[66, "id1"], [73, "id1"]], "matflow.Rule": [[67, "matflow-rule"]], "matflow.RunDirAppFiles": [[68, "matflow-rundirappfiles"]], "matflow.SGEPosix": [[69, "matflow-sgeposix"]], "matflow.SchemaInput": [[70, "matflow-schemainput"]], "matflow.SchemaOutput": [[71, "matflow-schemaoutput"]], "matflow.SchemaParameter": [[72, "matflow-schemaparameter"]], "matflow.SlurmPosix": [[73, "matflow-slurmposix"]], "matflow.SubParameter": [[74, "matflow-subparameter"]], "matflow.Submission": [[75, "matflow-submission"]], "matflow.Task": [[76, "matflow-task"]], "matflow.TaskInputParameters": [[77, "matflow-taskinputparameters"]], "matflow.TaskList": [[78, "matflow-tasklist"]], "matflow.TaskObjective": [[79, "matflow-taskobjective"]], "matflow.TaskOutputParameters": [[80, "matflow-taskoutputparameters"]], "matflow.TaskSchema": [[81, "matflow-taskschema"]], "matflow.TaskSchemasList": [[82, "matflow-taskschemaslist"]], "matflow.TaskSourceType": [[83, "matflow-tasksourcetype"]], "matflow.TaskTemplateList": [[84, "matflow-tasktemplatelist"]], "matflow.ValuePerturbation": [[85, "matflow-valueperturbation"]], "matflow.ValueSequence": [[86, "matflow-valuesequence"]], "matflow.Workflow": [[87, "matflow-workflow"]], "matflow.WorkflowBlueprint": [[88, "matflow-workflowblueprint"]], "matflow.WorkflowLoop": [[89, "matflow-workflowloop"]], "matflow.WorkflowLoopList": [[90, "matflow-workflowlooplist"]], "matflow.WorkflowTask": [[91, "matflow-workflowtask"]], "matflow.WorkflowTaskList": [[92, "matflow-workflowtasklist"]], "matflow.WorkflowTemplate": [[93, "matflow-workflowtemplate"]], "matflow.app": [[94, "matflow-app"]], "matflow.cancel": [[95, "matflow-cancel"]], "matflow.cli": [[96, "matflow-cli"]], "matflow.get_OS_info": [[97, "matflow-get-os-info"]], "matflow.get_known_submissions": [[98, "matflow-get-known-submissions"]], "matflow.get_shell_info": [[99, "matflow-get-shell-info"]], "matflow.make_and_submit_demo_workflow": [[100, "matflow-make-and-submit-demo-workflow"]], "matflow.make_and_submit_workflow": [[101, "matflow-make-and-submit-workflow"]], "matflow.make_demo_workflow": [[102, "matflow-make-demo-workflow"]], "matflow.make_workflow": [[103, "matflow-make-workflow"]], "matflow.param_classes": [[104, "matflow-param-classes"]], "matflow.param_classes.load": [[105, "matflow-param-classes-load"]], "matflow.param_classes.load.LoadCase": [[106, "matflow-param-classes-load-loadcase"]], "matflow.param_classes.load.LoadStep": [[107, "matflow-param-classes-load-loadstep"]], "matflow.param_classes.load.StrainRateMode": [[108, "matflow-param-classes-load-strainratemode"]], "matflow.param_classes.orientations": [[109, "matflow-param-classes-orientations"]], "matflow.param_classes.orientations.EulerDefinition": [[110, "matflow-param-classes-orientations-eulerdefinition"]], "matflow.param_classes.orientations.LatticeDirection": [[111, "matflow-param-classes-orientations-latticedirection"]], "matflow.param_classes.orientations.OrientationRepresentation": [[112, "matflow-param-classes-orientations-orientationrepresentation"]], "matflow.param_classes.orientations.OrientationRepresentationType": [[113, "matflow-param-classes-orientations-orientationrepresentationtype"]], "matflow.param_classes.orientations.Orientations": [[114, "matflow-param-classes-orientations-orientations"]], "matflow.param_classes.orientations.QuatOrder": [[115, "matflow-param-classes-orientations-quatorder"]], "matflow.param_classes.orientations.UnitCellAlignment": [[116, "matflow-param-classes-orientations-unitcellalignment"]], "matflow.param_classes.seeds": [[117, "matflow-param-classes-seeds"]], "matflow.param_classes.seeds.MicrostructureSeeds": [[118, "matflow-param-classes-seeds-microstructureseeds"]], "matflow.param_classes.single_crystal_parameters": [[119, "matflow-param-classes-single-crystal-parameters"]], "matflow.param_classes.single_crystal_parameters.Perturbation": [[120, "matflow-param-classes-single-crystal-parameters-perturbation"]], "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters": [[121, "matflow-param-classes-single-crystal-parameters-singlecrystalparameters"]], "matflow.param_classes.utils": [[122, "matflow-param-classes-utils"]], "matflow.param_classes.utils.masked_array_from_list": [[123, "matflow-param-classes-utils-masked-array-from-list"]], "matflow.run_hpcflow_tests": [[124, "matflow-run-hpcflow-tests"]], "matflow.run_tests": [[125, "matflow-run-tests"]], "matflow.show": [[126, "matflow-show"]], "matflow.show_legend": [[127, "matflow-show-legend"]], "matflow.submit_workflow": [[128, "matflow-submit-workflow"]], "matflow.tests": [[129, "matflow-tests"]], "matflow.tests.conftest": [[130, "matflow-tests-conftest"]], "matflow.tests.conftest.load_case_1": [[131, "matflow-tests-conftest-load-case-1"]], "matflow.tests.conftest.new_null_config": [[132, "matflow-tests-conftest-new-null-config"]], "matflow.tests.conftest.null_config": [[133, "matflow-tests-conftest-null-config"]], "matflow.tests.conftest.orientations_1": [[134, "matflow-tests-conftest-orientations-1"]], "matflow.tests.conftest.pytest_addoption": [[135, "matflow-tests-conftest-pytest-addoption"]], "matflow.tests.conftest.pytest_collection_modifyitems": [[136, "matflow-tests-conftest-pytest-collection-modifyitems"]], "matflow.tests.conftest.pytest_configure": [[137, "matflow-tests-conftest-pytest-configure"]], "matflow.tests.conftest.pytest_unconfigure": [[138, "matflow-tests-conftest-pytest-unconfigure"]], "matflow.tests.conftest.seeds_1": [[139, "matflow-tests-conftest-seeds-1"]], "matflow.tests.data": [[140, "matflow-tests-data"]], "matflow.tests.test_cli": [[141, "matflow-tests-test-cli"]], "matflow.tests.test_cli.test_hpcflow_version": [[142, "matflow-tests-test-cli-test-hpcflow-version"]], "matflow.tests.test_cli.test_version": [[143, "matflow-tests-test-cli-test-version"]], "matflow.tests.test_utils": [[144, "matflow-tests-test-utils"]], "matflow.tests.test_utils.test_masked_array_from_list_1D": [[145, "matflow-tests-test-utils-test-masked-array-from-list-1d"]], "matflow.tests.test_utils.test_masked_array_from_list_1D_masked": [[146, "matflow-tests-test-utils-test-masked-array-from-list-1d-masked"]], "matflow.tests.test_utils.test_masked_array_from_list_2D": [[147, "matflow-tests-test-utils-test-masked-array-from-list-2d"]], "matflow.tests.test_utils.test_masked_array_from_list_2D_masked": [[148, "matflow-tests-test-utils-test-masked-array-from-list-2d-masked"]], "matflow.tests.utils": [[149, "matflow-tests-utils"]], "Python API": [[150, "python-api"]], "Command-line interface": [[151, "command-line-interface"]], "cancel": [[151, "matflow-cancel"]], "config": [[151, "matflow-config"], [151, "matflow-open-config"]], "add-scheduler": [[151, "matflow-config-add-scheduler"]], "add-shell": [[151, "matflow-config-add-shell"]], "add-shell-wsl": [[151, "matflow-config-add-shell-wsl"]], "append": [[151, "matflow-config-append"]], "get": [[151, "matflow-config-get"]], "import": [[151, "matflow-config-import"]], "init": [[151, "matflow-config-init"]], "list": [[151, "matflow-config-list"]], "load-data-files": [[151, "matflow-config-load-data-files"]], "open": [[151, "matflow-config-open"], [151, "matflow-open"]], "pop": [[151, "matflow-config-pop"]], "prepend": [[151, "matflow-config-prepend"]], "set": [[151, "matflow-config-set"]], "set-github-demo-data-dir": [[151, "matflow-config-set-github-demo-data-dir"]], "unset": [[151, "matflow-config-unset"]], "update": [[151, "matflow-config-update"]], "configure-env": [[151, "matflow-configure-env"]], "demo-data": [[151, "matflow-demo-data"]], "cache": [[151, "matflow-demo-data-cache"]], "copy": [[151, "matflow-demo-data-copy"], [151, "matflow-demo-workflow-copy"]], "demo-software": [[151, "matflow-demo-software"]], "doSomething": [[151, "matflow-demo-software-dosomething"]], "demo-workflow": [[151, "matflow-demo-workflow"]], "go": [[151, "matflow-demo-workflow-go"], [151, "matflow-go"]], "make": [[151, "matflow-demo-workflow-make"], [151, "matflow-make"]], "show": [[151, "matflow-demo-workflow-show"], [151, "matflow-show"], [151, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-show"]], "helper": [[151, "matflow-helper"]], "clear": [[151, "matflow-helper-clear"]], "log-path": [[151, "matflow-helper-log-path"]], "pid": [[151, "matflow-helper-pid"]], "restart": [[151, "matflow-helper-restart"]], "run": [[151, "matflow-helper-run"]], "start": [[151, "matflow-helper-start"]], "stop": [[151, "matflow-helper-stop"]], "uptime": [[151, "matflow-helper-uptime"]], "watch-list": [[151, "matflow-helper-watch-list"]], "watch-list-path": [[151, "matflow-helper-watch-list-path"]], "internal": [[151, "matflow-internal"]], "get-invoc-cmd": [[151, "matflow-internal-get-invoc-cmd"]], "noop": [[151, "matflow-internal-noop"]], "workflow": [[151, "matflow-internal-workflow"], [151, "matflow-open-workflow"], [151, "matflow-workflow"], [153, "workflow"]], "execute-combined-runs": [[151, "matflow-internal-workflow-path-execute-combined-runs"]], "execute-run": [[151, "matflow-internal-workflow-path-execute-run"]], "save-parameter": [[151, "matflow-internal-workflow-path-save-parameter"]], "manage": [[151, "matflow-manage"]], "clear-cache": [[151, "matflow-manage-clear-cache"]], "clear-demo-data-cache": [[151, "matflow-manage-clear-demo-data-cache"]], "clear-known-subs": [[151, "matflow-manage-clear-known-subs"]], "clear-temp-dir": [[151, "matflow-manage-clear-temp-dir"]], "get-config-path": [[151, "matflow-manage-get-config-path"]], "reset-config": [[151, "matflow-manage-reset-config"]], "demo-data-cache-dir": [[151, "matflow-open-demo-data-cache-dir"]], "env-source": [[151, "matflow-open-env-source"]], "known-subs": [[151, "matflow-open-known-subs"]], "log": [[151, "matflow-open-log"]], "user-cache-dir": [[151, "matflow-open-user-cache-dir"]], "user-cache-hostname-dir": [[151, "matflow-open-user-cache-hostname-dir"]], "user-data-dir": [[151, "matflow-open-user-data-dir"]], "user-data-hostname-dir": [[151, "matflow-open-user-data-hostname-dir"]], "user-runtime-dir": [[151, "matflow-open-user-runtime-dir"]], "rechunk": [[151, "matflow-rechunk"], [151, "matflow-workflow-workflow-ref-rechunk"]], "submission": [[151, "matflow-submission"]], "get-known": [[151, "matflow-submission-get-known"]], "scheduler": [[151, "matflow-submission-scheduler"]], "get-login-nodes": [[151, "matflow-submission-scheduler-scheduler-name-get-login-nodes"]], "shell-info": [[151, "matflow-submission-shell-info"]], "tc": [[151, "matflow-tc"]], "test": [[151, "matflow-test"]], "test-hpcflow": [[151, "matflow-test-hpcflow"]], "unzip": [[151, "matflow-unzip"], [151, "matflow-workflow-workflow-ref-unzip"]], "abort-run": [[151, "matflow-workflow-workflow-ref-abort-run"]], "add-submission": [[151, "matflow-workflow-workflow-ref-add-submission"]], "get-all-params": [[151, "matflow-workflow-workflow-ref-get-all-params"]], "get-param": [[151, "matflow-workflow-workflow-ref-get-param"]], "get-param-source": [[151, "matflow-workflow-workflow-ref-get-param-source"]], "get-process-ids": [[151, "matflow-workflow-workflow-ref-get-process-ids"], [151, "matflow-workflow-workflow-ref-sub-sub-idx-get-process-ids"]], "get-scheduler-job-ids": [[151, "matflow-workflow-workflow-ref-get-scheduler-job-ids"], [151, "matflow-workflow-workflow-ref-sub-sub-idx-get-scheduler-job-ids"]], "is-param-set": [[151, "matflow-workflow-workflow-ref-is-param-set"]], "list-jobscripts": [[151, "matflow-workflow-workflow-ref-list-jobscripts"], [151, "matflow-workflow-workflow-ref-sub-sub-idx-list-jobscripts"]], "list-task-jobscripts": [[151, "matflow-workflow-workflow-ref-list-task-jobscripts"], [151, "matflow-workflow-workflow-ref-sub-sub-idx-list-task-jobscripts"]], "rechunk-parameter-base": [[151, "matflow-workflow-workflow-ref-rechunk-parameter-base"]], "rechunk-runs": [[151, "matflow-workflow-workflow-ref-rechunk-runs"]], "show-all-status": [[151, "matflow-workflow-workflow-ref-show-all-status"]], "sub": [[151, "matflow-workflow-workflow-ref-sub"]], "get-active-jobscripts": [[151, "matflow-workflow-workflow-ref-sub-sub-idx-get-active-jobscripts"]], "js": [[151, "matflow-workflow-workflow-ref-sub-sub-idx-js"]], "deps": [[151, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-deps"]], "path": [[151, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-path"], [158, "path"]], "res": [[151, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-res"]], "stderr": [[151, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-stderr"]], "stdout": [[151, "matflow-workflow-workflow-ref-sub-sub-idx-js-js-idx-stdout"]], "needs-submit": [[151, "matflow-workflow-workflow-ref-sub-sub-idx-needs-submit"]], "outstanding-js": [[151, "matflow-workflow-workflow-ref-sub-sub-idx-outstanding-js"]], "status": [[151, "matflow-workflow-workflow-ref-sub-sub-idx-status"]], "submitted-js": [[151, "matflow-workflow-workflow-ref-sub-sub-idx-submitted-js"]], "submit": [[151, "matflow-workflow-workflow-ref-submit"]], "wait": [[151, "matflow-workflow-workflow-ref-wait"]], "zip": [[151, "matflow-workflow-workflow-ref-zip"], [151, "matflow-zip"]], "Configuration file": [[152, "configuration-file"]], "Default config file": [[152, "default-config-file"]], "Validation schema": [[152, "validation-schema"]], "Glossary": [[153, "glossary"]], "API": [[153, "api"]], "cluster": [[153, "cluster"]], "DAMASK": [[153, "damask"]], "DAMASK-parse": [[153, "damask-parse"]], "defdap": [[153, "defdap"]], "Environment/virtual environment": [[153, "environment-virtual-environment"]], "formable": [[153, "formable"]], "HPC": [[153, "hpc"]], "HPCFlow": [[153, "hpcflow"]], "loadcase": [[153, "loadcase"]], "MatFlow": [[153, "matflow"]], "Reference": [[154, "reference"]], "Template components": [[155, "template-components"], [167, "template-components"]], "Command files": [[156, "command-files"]], "damask_geom_file": [[156, "damask-geom-file"]], "damask_load_file": [[156, "damask-load-file"]], "damask_material_file": [[156, "damask-material-file"]], "damask_numerics_file": [[156, "damask-numerics-file"]], "damask_stdout_file": [[156, "damask-stdout-file"]], "damask_stderr_file": [[156, "damask-stderr-file"]], "damask_hdf5_file": [[156, "damask-hdf5-file"]], "damask_viz_files": [[156, "damask-viz-files"]], "mtex_pole_figures": [[156, "mtex-pole-figures"]], "mtex_IPF_figure": [[156, "mtex-ipf-figure"]], "dream_3D_pipeline": [[156, "dream-3d-pipeline"]], "dream_3D_hdf5_file": [[156, "dream-3d-hdf5-file"]], "dream_3D_XDMF_file": [[156, "dream-3d-xdmf-file"]], "null_env": [[157, "null-env"]], "python_env": [[157, "python-env"]], "damask_env": [[157, "damask-env"]], "damask_parse_env": [[157, "damask-parse-env"]], "formable_env": [[157, "formable-env"]], "Parameters": [[158, "parameters"]], "CRC_file_path": [[158, "crc-file-path"]], "CSV_arguments": [[158, "csv-arguments"]], "CSV_file_path": [[158, "csv-file-path"]], "CTF_file_path": [[158, "ctf-file-path"]], "DIC": [[158, "dic"]], "EBSD": [[158, "ebsd"]], "EBSD_phase": [[158, "ebsd-phase"]], "EBSD_reference_frame_transformation": [[158, "ebsd-reference-frame-transformation"]], "EBSD_rotation": [[158, "ebsd-rotation"]], "IPF_reference_direction": [[158, "ipf-reference-direction"]], "ODF_components": [[158, "odf-components"]], "ODF_mat_file_path": [[158, "odf-mat-file-path"]], "VE_grid_size": [[158, "ve-grid-size"]], "VE_response": [[158, "ve-response"]], "VE_response_data": [[158, "ve-response-data"]], "VE_size": [[158, "ve-size"]], "buffer_sizes": [[158, "buffer-sizes"]], "colourbar_limits": [[158, "colourbar-limits"]], "compile": [[158, "compile"]], "crystal_symmetry": [[158, "crystal-symmetry"]], "damask_log": [[158, "damask-log"]], "damask_numerics": [[158, "damask-numerics"], [160, "damask-numerics"]], "damask_phases": [[158, "damask-phases"]], "damask_post_processing": [[158, "damask-post-processing"]], "damask_post_processing_result": [[158, "damask-post-processing-result"]], "damask_solver": [[158, "damask-solver"]], "damask_viz": [[158, "damask-viz"]], "damask_viz_result": [[158, "damask-viz-result"]], "depth": [[158, "depth"]], "dump_path": [[158, "dump-path"]], "eng_strain_col_index": [[158, "eng-strain-col-index"]], "eng_stress_col_index": [[158, "eng-stress-col-index"]], "find_grains_algorithm": [[158, "find-grains-algorithm"]], "fit_yield_fixed_parameters": [[158, "fit-yield-fixed-parameters"]], "fit_yield_initial_parameters": [[158, "fit-yield-initial-parameters"]], "fit_yield_opt_parameters": [[158, "fit-yield-opt-parameters"]], "fitted_yield_functions": [[158, "fitted-yield-functions"]], "grid_size": [[158, "grid-size"]], "homog_label": [[158, "homog-label"]], "homogenization": [[158, "homogenization"]], "image_axes": [[158, "image-axes"]], "initial_damping": [[158, "initial-damping"]], "levenberg_marquardt_fitter": [[158, "levenberg-marquardt-fitter"]], "load_case": [[158, "load-case"]], "microstructure_image": [[158, "microstructure-image"]], "microstructure_seeds": [[158, "microstructure-seeds"]], "new_grid_size": [[158, "new-grid-size"]], "num_grains": [[158, "num-grains"]], "num_orientations": [[158, "num-orientations"]], "order": [[158, "order"]], "orientations": [[158, "orientations"]], "origin": [[158, "origin"]], "periodic": [[158, "periodic"]], "phase_ids": [[158, "phase-ids"]], "phase_label": [[158, "phase-label"]], "phase_label_mapping": [[158, "phase-label-mapping"]], "phase_labels": [[158, "phase-labels"]], "phase_statistics": [[158, "phase-statistics"]], "plastic_range": [[158, "plastic-range"]], "pole_figure_directions": [[158, "pole-figure-directions"]], "precipitates": [[158, "precipitates"]], "resolution": [[158, "resolution"]], "root_path": [[158, "root-path"]], "scale_morphology": [[158, "scale-morphology"]], "scale_update_size": [[158, "scale-update-size"]], "scaling_factor": [[158, "scaling-factor"]], "single_crystal_parameters": [[158, "single-crystal-parameters"]], "size": [[158, "size"]], "specimen_symmetry": [[158, "specimen-symmetry"]], "stress_units": [[158, "stress-units"]], "tensile_test": [[158, "tensile-test"]], "transform_type": [[158, "transform-type"]], "true_strain_col_index": [[158, "true-strain-col-index"]], "true_stress_col_index": [[158, "true-stress-col-index"]], "use_contours": [[158, "use-contours"]], "use_one_colourbar": [[158, "use-one-colourbar"]], "volume_element": [[158, "volume-element"]], "yield_function_name": [[158, "yield-function-name"]], "yield_point": [[158, "yield-point"]], "yield_point_criteria": [[158, "yield-point-criteria"]], "Task schemas": [[159, "task-schemas"]], "define_load_case": [[159, "define-load-case"]], "define_microstructure_seeds": [[159, "define-microstructure-seeds"]], "define_orientations": [[159, "define-orientations"]], "dump_all_yield_stresses": [[159, "dump-all-yield-stresses"]], "fit_single_crystal_parameters": [[159, "fit-single-crystal-parameters"], [160, "fit-single-crystal-parameters"]], "fit_yield_function": [[159, "fit-yield-function"]], "generate_microstructure_seeds": [[159, "generate-microstructure-seeds"]], "generate_microstructure_seeds_from_random": [[159, "generate-microstructure-seeds-from-random"]], "generate_orientations": [[159, "generate-orientations"]], "generate_rve": [[159, "generate-rve"]], "generate_rve_from_damask_input_files": [[159, "generate-rve-from-damask-input-files"]], "generate_volume_element": [[159, "generate-volume-element"]], "generate_volume_element_from_voronoi": [[159, "generate-volume-element-from-voronoi"]], "generate_volume_element_from_statistics": [[159, "generate-volume-element-from-statistics"], [160, "generate-volume-element-from-statistics"]], "generate_volume_element_extrusion": [[159, "generate-volume-element-extrusion"]], "load_microstructure": [[159, "load-microstructure"]], "load_microstructure_EBSD_DIC": [[159, "load-microstructure-ebsd-dic"]], "load_microstructure_EBSD": [[159, "load-microstructure-ebsd"]], "modify_VE": [[159, "modify-ve"]], "modify_VE_add_buffer_zones": [[159, "modify-ve-add-buffer-zones"]], "modify_VE_grid_size": [[159, "modify-ve-grid-size"]], "read_tensile_test": [[159, "read-tensile-test"]], "read_tensile_test_from_CSV": [[159, "read-tensile-test-from-csv"]], "sample_orientations": [[159, "sample-orientations"]], "sample_orientations_from_CTF_file_mtex": [[159, "sample-orientations-from-ctf-file-mtex"]], "sample_orientations_from_CRC_file_mtex": [[159, "sample-orientations-from-crc-file-mtex"]], "sample_texture": [[159, "sample-texture"]], "sample_texture_from_CTF_file_mtex": [[159, "sample-texture-from-ctf-file-mtex"]], "sample_texture_from_CRC_file_mtex": [[159, "sample-texture-from-crc-file-mtex"]], "sample_texture_from_ODF_mat_file_mtex": [[159, "sample-texture-from-odf-mat-file-mtex"]], "sample_texture_from_model_ODF_mtex": [[159, "sample-texture-from-model-odf-mtex"]], "sample_texture_random_mtex": [[159, "sample-texture-random-mtex"]], "simulate_VE_loading": [[159, "simulate-ve-loading"]], "simulate_VE_loading_damask": [[159, "simulate-ve-loading-damask"]], "simulate_VE_loading_damask_HC": [[159, "simulate-ve-loading-damask-hc"]], "visualise_VE": [[159, "visualise-ve"]], "visualise_VE_VTK": [[159, "visualise-ve-vtk"]], "visualise_orientations": [[159, "visualise-orientations"]], "visualise_orientations_pole_figure_mtex": [[159, "visualise-orientations-pole-figure-mtex"]], "Demo workflows": [[160, "demo-workflows"]], "RVE_extrusion_EBSD": [[160, "rve-extrusion-ebsd"]], "RVE_extrusion_EBSD.yaml": [[160, null]], "RVE_extrusion_EBSD_DIC": [[160, "rve-extrusion-ebsd-dic"]], "RVE_extrusion_EBSD_DIC.yaml": [[160, null]], "cubic_textures": [[160, "cubic-textures"]], "cubic_textures.yaml": [[160, null]], "damask_input_files": [[160, "damask-input-files"]], "damask_input_files.yaml": [[160, null]], "damask_numerics.yaml": [[160, null]], "fit_single_crystal_parameters.yaml": [[160, null]], "fit_yield_funcs": [[160, "fit-yield-funcs"]], "fit_yield_funcs.yaml": [[160, null]], "generate_volume_element_from_statistics.yaml": [[160, null]], "modify_volume_element_grid_size": [[160, "modify-volume-element-grid-size"]], "modify_volume_element_grid_size.yaml": [[160, null]], "read_tensile_test_CSV": [[160, "read-tensile-test-csv"]], "read_tensile_test_CSV.yaml": [[160, null]], "sample_orientations_CRC_file": [[160, "sample-orientations-crc-file"]], "sample_orientations_CRC_file.yaml": [[160, null]], "sample_orientations_CTF_file": [[160, "sample-orientations-ctf-file"]], "sample_orientations_CTF_file.yaml": [[160, null]], "sample_texture_CRC_file": [[160, "sample-texture-crc-file"]], "sample_texture_CRC_file.yaml": [[160, null]], "sample_texture_CTF_file": [[160, "sample-texture-ctf-file"]], "sample_texture_CTF_file.yaml": [[160, null]], "sample_texture_ODF_mat": [[160, "sample-texture-odf-mat"]], "sample_texture_ODF_mat.yaml": [[160, null]], "sample_texture_model_ODF": [[160, "sample-texture-model-odf"]], "sample_texture_model_ODF.yaml": [[160, null]], "sample_texture_random": [[160, "sample-texture-random"]], "sample_texture_random.yaml": [[160, null]], "simulate_yield_surface_2D": [[160, "simulate-yield-surface-2d"]], "simulate_yield_surface_2D.yaml": [[160, null]], "simulate_yield_surface_2D_brass": [[160, "simulate-yield-surface-2d-brass"]], "simulate_yield_surface_2D_brass.yaml": [[160, null]], "tension_DAMASK_Al": [[160, "tension-damask-al"]], "tension_DAMASK_Al.yaml": [[160, null]], "tension_DAMASK_Al_N_repeats": [[160, "tension-damask-al-n-repeats"]], "tension_DAMASK_Al_N_repeats.yaml": [[160, null]], "tension_DAMASK_Mg": [[160, "tension-damask-mg"]], "tension_DAMASK_Mg.yaml": [[160, null]], "tension_DAMASK_Ti": [[160, "tension-damask-ti"]], "tension_DAMASK_Ti.yaml": [[160, null]], "Configuration how-tos": [[161, "configuration-how-tos"]], "Get and set config items": [[161, "get-and-set-config-items"]], "Reset the config to default values": [[161, "reset-the-config-to-default-values"]], "Clear the known-submissions file": [[161, "clear-the-known-submissions-file"]], "Environment how-tos": [[162, "environment-how-tos"]], "Use multiple versions of the same software": [[162, "use-multiple-versions-of-the-same-software"]], "Disambiguating between matflow environments with the same name": [[162, "disambiguating-between-matflow-environments-with-the-same-name"]], "Using environment specifiers within task schemas": [[162, "using-environment-specifiers-within-task-schemas"]], "Environment specifiers within action environments": [[162, "environment-specifiers-within-action-environments"]], "Passing environment specifiers to action scripts": [[162, "passing-environment-specifiers-to-action-scripts"]], "Environment specifiers within script paths": [[162, "environment-specifiers-within-script-paths"]], "Defining environment presets": [[162, "defining-environment-presets"]], "Selecting environment specifiers within workflow templates": [[162, "selecting-environment-specifiers-within-workflow-templates"]], "Environment specifiers within sequences": [[162, "environment-specifiers-within-sequences"]], "How-To Guides": [[163, "how-to-guides"]], "Loops": [[164, "loops"]], "Loops versus sequences": [[164, null]], "A basic loop workflow": [[164, "a-basic-loop-workflow"]], "Meta-tasks": [[165, "meta-tasks"]], "Simple example": [[165, "simple-example"]], "Meta-tasks using the Python API": [[165, "meta-tasks-using-the-python-api"]], "Customising task parametrisation": [[165, "customising-task-parametrisation"]], "Task schema how-tos": [[166, "task-schema-how-tos"]], "Show information about a task schema": [[166, "show-information-about-a-task-schema"]], "How to name parameters and task schemas": [[167, "how-to-name-parameters-and-task-schemas"]], "Workflow templates how-tos": [[168, "workflow-templates-how-tos"]], "Loading workflow templates": [[168, "loading-workflow-templates"]], "Workflow how-tos": [[169, "workflow-how-tos"]], "Generating a persistent workflow from a workflow template": [[169, "generating-a-persistent-workflow-from-a-workflow-template"]], "Loading workflows": [[169, "loading-workflows"]], "User Guide": [[170, "user-guide"]], "Tutorials": [[171, "tutorials"]], "Jupyter notebooks": [[172, "jupyter-notebooks"]], "Simulating yield surfaces with DAMASK simulations": [[173, "simulating-yield-surfaces-with-damask-simulations"]], "Utility functions": [[173, "utility-functions"]], "Processing functions": [[173, "processing-functions"]], "Load and process simulations": [[173, "load-and-process-simulations"]], "Plot yield surfaces": [[173, "plot-yield-surfaces"]]}, "indexentries": {"matflow": [[5, "module-matflow"]], "module": [[5, "module-matflow"], [96, "module-matflow.cli"], [104, "module-matflow.param_classes"], [105, "module-matflow.param_classes.load"], [109, "module-matflow.param_classes.orientations"], [117, "module-matflow.param_classes.seeds"], [119, "module-matflow.param_classes.single_crystal_parameters"], [122, "module-matflow.param_classes.utils"], [129, "module-matflow.tests"], [130, "module-matflow.tests.conftest"], [140, "module-matflow.tests.data"], [141, "module-matflow.tests.test_cli"], [144, "module-matflow.tests.test_utils"], [149, "module-matflow.tests.utils"]], "action (class in matflow)": [[6, "matflow.Action"]], "abortable (matflow.action attribute)": [[6, "matflow.Action.abortable"]], "clean_up (matflow.action attribute)": [[6, "matflow.Action.clean_up"]], "commands (matflow.action attribute)": [[6, "matflow.Action.commands"]], "compose_source() (matflow.action method)": [[6, "matflow.Action.compose_source"]], "env_spec_from_hashable() (matflow.action static method)": [[6, "matflow.Action.env_spec_from_hashable"]], "env_spec_to_hashable() (matflow.action static method)": [[6, "matflow.Action.env_spec_to_hashable"]], "environments (matflow.action attribute)": [[6, "matflow.Action.environments"]], "expand() (matflow.action method)": [[6, "matflow.Action.expand"]], "from_json_like() (matflow.action class method)": [[6, "matflow.Action.from_json_like"]], "generate_data_index() (matflow.action method)": [[6, "matflow.Action.generate_data_index"]], "get_block_act_idx_shell_vars() (matflow.action class method)": [[6, "matflow.Action.get_block_act_idx_shell_vars"]], "get_command_file_labels() (matflow.action method)": [[6, "matflow.Action.get_command_file_labels"]], "get_command_input_types() (matflow.action method)": [[6, "matflow.Action.get_command_input_types"]], "get_command_output_types() (matflow.action method)": [[6, "matflow.Action.get_command_output_types"]], "get_command_parameter_types() (matflow.action method)": [[6, "matflow.Action.get_command_parameter_types"]], "get_commands_action_env() (matflow.action method)": [[6, "matflow.Action.get_commands_action_env"]], "get_commands_file_hash() (matflow.action method)": [[6, "matflow.Action.get_commands_file_hash"]], "get_environment() (matflow.action method)": [[6, "matflow.Action.get_environment"]], "get_environment_name() (matflow.action method)": [[6, "matflow.Action.get_environment_name"]], "get_environment_spec() (matflow.action method)": [[6, "matflow.Action.get_environment_spec"]], "get_input_file_generator_action_env() (matflow.action method)": [[6, "matflow.Action.get_input_file_generator_action_env"]], "get_input_file_labels() (matflow.action method)": [[6, "matflow.Action.get_input_file_labels"]], "get_input_types() (matflow.action method)": [[6, "matflow.Action.get_input_types"]], "get_output_file_labels() (matflow.action method)": [[6, "matflow.Action.get_output_file_labels"]], "get_output_file_parser_action_env() (matflow.action method)": [[6, "matflow.Action.get_output_file_parser_action_env"]], "get_output_types() (matflow.action method)": [[6, "matflow.Action.get_output_types"]], "get_param_dump_file_path_hdf5() (matflow.action method)": [[6, "matflow.Action.get_param_dump_file_path_HDF5"]], "get_param_dump_file_path_json() (matflow.action method)": [[6, "matflow.Action.get_param_dump_file_path_JSON"]], "get_param_load_file_path_hdf5() (matflow.action method)": [[6, "matflow.Action.get_param_load_file_path_HDF5"]], "get_param_load_file_path_json() (matflow.action method)": [[6, "matflow.Action.get_param_load_file_path_JSON"]], "get_parameter_dependence() (matflow.action method)": [[6, "matflow.Action.get_parameter_dependence"]], "get_parameter_names() (matflow.action method)": [[6, "matflow.Action.get_parameter_names"]], "get_possible_scopes() (matflow.action method)": [[6, "matflow.Action.get_possible_scopes"]], "get_precise_scope() (matflow.action method)": [[6, "matflow.Action.get_precise_scope"]], "get_required_executables() (matflow.action method)": [[6, "matflow.Action.get_required_executables"]], "get_script_artifact_name() (matflow.action method)": [[6, "matflow.Action.get_script_artifact_name"]], "get_script_determinant_hash() (matflow.action method)": [[6, "matflow.Action.get_script_determinant_hash"]], "get_script_determinants() (matflow.action method)": [[6, "matflow.Action.get_script_determinants"]], "get_script_input_output_file_command_args() (matflow.action method)": [[6, "matflow.Action.get_script_input_output_file_command_args"]], "get_script_input_output_file_paths() (matflow.action method)": [[6, "matflow.Action.get_script_input_output_file_paths"]], "get_script_name() (matflow.action class method)": [[6, "matflow.Action.get_script_name"]], "get_snippet_script_path() (matflow.action class method)": [[6, "matflow.Action.get_snippet_script_path"]], "get_snippet_script_str() (matflow.action class method)": [[6, "matflow.Action.get_snippet_script_str"]], "input_file_generators (matflow.action attribute)": [[6, "matflow.Action.input_file_generators"]], "input_files (matflow.action attribute)": [[6, "matflow.Action.input_files"]], "is_ifg (matflow.action property)": [[6, "matflow.Action.is_IFG"]], "is_ofp (matflow.action property)": [[6, "matflow.Action.is_OFP"]], "is_input_type_required() (matflow.action method)": [[6, "matflow.Action.is_input_type_required"]], "is_snippet_script() (matflow.action static method)": [[6, "matflow.Action.is_snippet_script"]], "output_file_parsers (matflow.action attribute)": [[6, "matflow.Action.output_file_parsers"]], "output_files (matflow.action attribute)": [[6, "matflow.Action.output_files"]], "process_script_data_formats() (matflow.action method)": [[6, "matflow.Action.process_script_data_formats"]], "rules (matflow.action attribute)": [[6, "matflow.Action.rules"]], "save_files (matflow.action attribute)": [[6, "matflow.Action.save_files"]], "script (matflow.action attribute)": [[6, "matflow.Action.script"]], "script_data_files_use_opt (matflow.action attribute)": [[6, "matflow.Action.script_data_files_use_opt"]], "script_data_in (matflow.action attribute)": [[6, "matflow.Action.script_data_in"]], "script_data_in_grouped (matflow.action property)": [[6, "matflow.Action.script_data_in_grouped"]], "script_data_in_has_direct (matflow.action property)": [[6, "matflow.Action.script_data_in_has_direct"]], "script_data_in_has_files (matflow.action property)": [[6, "matflow.Action.script_data_in_has_files"]], "script_data_out (matflow.action attribute)": [[6, "matflow.Action.script_data_out"]], "script_data_out_grouped (matflow.action property)": [[6, "matflow.Action.script_data_out_grouped"]], "script_data_out_has_direct (matflow.action property)": [[6, "matflow.Action.script_data_out_has_direct"]], "script_data_out_has_files (matflow.action property)": [[6, "matflow.Action.script_data_out_has_files"]], "script_exe (matflow.action attribute)": [[6, "matflow.Action.script_exe"]], "script_is_python_snippet (matflow.action property)": [[6, "matflow.Action.script_is_python_snippet"]], "script_pass_env_spec (matflow.action attribute)": [[6, "matflow.Action.script_pass_env_spec"]], "task_schema (matflow.action property)": [[6, "matflow.Action.task_schema"]], "test_rules() (matflow.action method)": [[6, "matflow.Action.test_rules"]], "to_dict() (matflow.action method)": [[6, "matflow.Action.to_dict"]], "to_json_like() (matflow.action method)": [[6, "matflow.Action.to_json_like"]], "actionenvironment (class in matflow)": [[7, "matflow.ActionEnvironment"]], "environment (matflow.actionenvironment attribute)": [[7, "matflow.ActionEnvironment.environment"]], "from_json_like() (matflow.actionenvironment class method)": [[7, "matflow.ActionEnvironment.from_json_like"]], "scope (matflow.actionenvironment attribute)": [[7, "matflow.ActionEnvironment.scope"]], "to_dict() (matflow.actionenvironment method)": [[7, "matflow.ActionEnvironment.to_dict"]], "to_json_like() (matflow.actionenvironment method)": [[7, "matflow.ActionEnvironment.to_json_like"]], "actionrule (class in matflow)": [[8, "matflow.ActionRule"]], "action (matflow.actionrule attribute)": [[8, "matflow.ActionRule.action"]], "check_exists() (matflow.actionrule class method)": [[8, "matflow.ActionRule.check_exists"]], "check_missing() (matflow.actionrule class method)": [[8, "matflow.ActionRule.check_missing"]], "command (matflow.actionrule attribute)": [[8, "matflow.ActionRule.command"]], "from_json_like() (matflow.actionrule class method)": [[8, "matflow.ActionRule.from_json_like"]], "rule (matflow.actionrule attribute)": [[8, "matflow.ActionRule.rule"]], "test() (matflow.actionrule method)": [[8, "matflow.ActionRule.test"]], "to_dict() (matflow.actionrule method)": [[8, "matflow.ActionRule.to_dict"]], "to_json_like() (matflow.actionrule method)": [[8, "matflow.ActionRule.to_json_like"]], "actionscope (class in matflow)": [[9, "matflow.ActionScope"]], "any() (matflow.actionscope class method)": [[9, "matflow.ActionScope.any"]], "from_json_like() (matflow.actionscope class method)": [[9, "matflow.ActionScope.from_json_like"]], "input_file_generator() (matflow.actionscope class method)": [[9, "matflow.ActionScope.input_file_generator"]], "kwargs (matflow.actionscope attribute)": [[9, "matflow.ActionScope.kwargs"]], "main() (matflow.actionscope class method)": [[9, "matflow.ActionScope.main"]], "output_file_parser() (matflow.actionscope class method)": [[9, "matflow.ActionScope.output_file_parser"]], "processing() (matflow.actionscope class method)": [[9, "matflow.ActionScope.processing"]], "to_dict() (matflow.actionscope method)": [[9, "matflow.ActionScope.to_dict"]], "to_json_like() (matflow.actionscope method)": [[9, "matflow.ActionScope.to_json_like"]], "to_string() (matflow.actionscope method)": [[9, "matflow.ActionScope.to_string"]], "typ (matflow.actionscope attribute)": [[9, "matflow.ActionScope.typ"]], "any (matflow.actionscopetype attribute)": [[10, "matflow.ActionScopeType.ANY"]], "actionscopetype (class in matflow)": [[10, "matflow.ActionScopeType"]], "input_file_generator (matflow.actionscopetype attribute)": [[10, "matflow.ActionScopeType.INPUT_FILE_GENERATOR"]], "main (matflow.actionscopetype attribute)": [[10, "matflow.ActionScopeType.MAIN"]], "output_file_parser (matflow.actionscopetype attribute)": [[10, "matflow.ActionScopeType.OUTPUT_FILE_PARSER"]], "processing (matflow.actionscopetype attribute)": [[10, "matflow.ActionScopeType.PROCESSING"]], "command (class in matflow)": [[11, "matflow.Command"]], "action (matflow.command attribute)": [[11, "matflow.Command.action"]], "arguments (matflow.command attribute)": [[11, "matflow.Command.arguments"]], "command (matflow.command attribute)": [[11, "matflow.Command.command"]], "executable (matflow.command attribute)": [[11, "matflow.Command.executable"]], "from_json_like() (matflow.command class method)": [[11, "matflow.Command.from_json_like"]], "get_command_line() (matflow.command method)": [[11, "matflow.Command.get_command_line"]], "get_output_types() (matflow.command method)": [[11, "matflow.Command.get_output_types"]], "get_required_executables() (matflow.command method)": [[11, "matflow.Command.get_required_executables"]], "process_std_stream() (matflow.command method)": [[11, "matflow.Command.process_std_stream"]], "rules (matflow.command attribute)": [[11, "matflow.Command.rules"]], "stderr (matflow.command attribute)": [[11, "matflow.Command.stderr"]], "stdin (matflow.command attribute)": [[11, "matflow.Command.stdin"]], "stdout (matflow.command attribute)": [[11, "matflow.Command.stdout"]], "to_dict() (matflow.command method)": [[11, "matflow.Command.to_dict"]], "to_json_like() (matflow.command method)": [[11, "matflow.Command.to_json_like"]], "variables (matflow.command attribute)": [[11, "matflow.Command.variables"]], "commandfileslist (class in matflow)": [[12, "matflow.CommandFilesList"]], "add_object() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.add_object"]], "add_objects() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.add_objects"]], "from_json_like() (matflow.commandfileslist class method)": [[12, "matflow.CommandFilesList.from_json_like"]], "get() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.get"]], "get_all() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.get_all"]], "list_attrs() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.list_attrs"]], "to_dict() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.to_dict"]], "to_json_like() (matflow.commandfileslist method)": [[12, "matflow.CommandFilesList.to_json_like"]], "default_shebang_args (matflow.directposix attribute)": [[13, "matflow.DirectPosix.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.directposix attribute)": [[13, "matflow.DirectPosix.DEFAULT_SHELL_ARGS"]], "default_shell_executable (matflow.directposix attribute)": [[13, "matflow.DirectPosix.DEFAULT_SHELL_EXECUTABLE"]], "directposix (class in matflow)": [[13, "matflow.DirectPosix"]], "cancel_jobs() (matflow.directposix method)": [[13, "matflow.DirectPosix.cancel_jobs"]], "get_job_state_info() (matflow.directposix method)": [[13, "matflow.DirectPosix.get_job_state_info"]], "get_std_out_err_filename() (matflow.directposix method)": [[13, "matflow.DirectPosix.get_std_out_err_filename"]], "get_stderr_filename() (matflow.directposix method)": [[13, "matflow.DirectPosix.get_stderr_filename"]], "get_stdout_filename() (matflow.directposix method)": [[13, "matflow.DirectPosix.get_stdout_filename"]], "get_submit_command() (matflow.directposix method)": [[13, "matflow.DirectPosix.get_submit_command"]], "get_version_info() (matflow.directposix method)": [[13, "matflow.DirectPosix.get_version_info"]], "is_jobscript_active() (matflow.directposix method)": [[13, "matflow.DirectPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.directposix static method)": [[13, "matflow.DirectPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.directposix method)": [[13, "matflow.DirectPosix.parse_submission_output"]], "process_resources() (matflow.directposix class method)": [[13, "matflow.DirectPosix.process_resources"]], "unique_properties (matflow.directposix property)": [[13, "matflow.DirectPosix.unique_properties"]], "wait_for_jobscripts() (matflow.directposix class method)": [[13, "matflow.DirectPosix.wait_for_jobscripts"]], "default_shebang_args (matflow.directwindows attribute)": [[14, "matflow.DirectWindows.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.directwindows attribute)": [[14, "matflow.DirectWindows.DEFAULT_SHELL_ARGS"]], "default_shell_executable (matflow.directwindows attribute)": [[14, "matflow.DirectWindows.DEFAULT_SHELL_EXECUTABLE"]], "directwindows (class in matflow)": [[14, "matflow.DirectWindows"]], "cancel_jobs() (matflow.directwindows method)": [[14, "matflow.DirectWindows.cancel_jobs"]], "get_job_state_info() (matflow.directwindows method)": [[14, "matflow.DirectWindows.get_job_state_info"]], "get_std_out_err_filename() (matflow.directwindows method)": [[14, "matflow.DirectWindows.get_std_out_err_filename"]], "get_stderr_filename() (matflow.directwindows method)": [[14, "matflow.DirectWindows.get_stderr_filename"]], "get_stdout_filename() (matflow.directwindows method)": [[14, "matflow.DirectWindows.get_stdout_filename"]], "get_submit_command() (matflow.directwindows method)": [[14, "matflow.DirectWindows.get_submit_command"]], "get_version_info() (matflow.directwindows method)": [[14, "matflow.DirectWindows.get_version_info"]], "is_jobscript_active() (matflow.directwindows method)": [[14, "matflow.DirectWindows.is_jobscript_active"]], "is_num_cores_supported() (matflow.directwindows static method)": [[14, "matflow.DirectWindows.is_num_cores_supported"]], "parse_submission_output() (matflow.directwindows method)": [[14, "matflow.DirectWindows.parse_submission_output"]], "process_resources() (matflow.directwindows class method)": [[14, "matflow.DirectWindows.process_resources"]], "unique_properties (matflow.directwindows property)": [[14, "matflow.DirectWindows.unique_properties"]], "wait_for_jobscripts() (matflow.directwindows class method)": [[14, "matflow.DirectWindows.wait_for_jobscripts"]], "element (class in matflow)": [[15, "matflow.Element"]], "action_runs (matflow.element property)": [[15, "matflow.Element.action_runs"]], "actions (matflow.element property)": [[15, "matflow.Element.actions"]], "dir_name (matflow.element property)": [[15, "matflow.Element.dir_name"]], "element_set (matflow.element property)": [[15, "matflow.Element.element_set"]], "element_set_idx (matflow.element property)": [[15, "matflow.Element.element_set_idx"]], "get() (matflow.element method)": [[15, "matflow.Element.get"]], "get_ear_dependencies() (matflow.element method)": [[15, "matflow.Element.get_EAR_dependencies"]], "get_data_idx() (matflow.element method)": [[15, "matflow.Element.get_data_idx"]], "get_dependent_ears() (matflow.element method)": [[15, "matflow.Element.get_dependent_EARs"]], "get_dependent_element_iterations() (matflow.element method)": [[15, "matflow.Element.get_dependent_element_iterations"]], "get_dependent_elements() (matflow.element method)": [[15, "matflow.Element.get_dependent_elements"]], "get_dependent_elements_recursively() (matflow.element method)": [[15, "matflow.Element.get_dependent_elements_recursively"]], "get_dependent_tasks() (matflow.element method)": [[15, "matflow.Element.get_dependent_tasks"]], "get_element_dependencies() (matflow.element method)": [[15, "matflow.Element.get_element_dependencies"]], "get_element_iteration_dependencies() (matflow.element method)": [[15, "matflow.Element.get_element_iteration_dependencies"]], "get_input_dependencies() (matflow.element method)": [[15, "matflow.Element.get_input_dependencies"]], "get_parameter_sources() (matflow.element method)": [[15, "matflow.Element.get_parameter_sources"]], "get_sequence_value() (matflow.element method)": [[15, "matflow.Element.get_sequence_value"]], "get_task_dependencies() (matflow.element method)": [[15, "matflow.Element.get_task_dependencies"]], "id_ (matflow.element property)": [[15, "matflow.Element.id_"]], "index (matflow.element property)": [[15, "matflow.Element.index"]], "input_files (matflow.element property)": [[15, "matflow.Element.input_files"]], "input_source_idx (matflow.element property)": [[15, "matflow.Element.input_source_idx"]], "input_sources (matflow.element property)": [[15, "matflow.Element.input_sources"]], "inputs (matflow.element property)": [[15, "matflow.Element.inputs"]], "is_pending (matflow.element property)": [[15, "matflow.Element.is_pending"]], "iteration_ids (matflow.element property)": [[15, "matflow.Element.iteration_IDs"]], "iterations (matflow.element property)": [[15, "matflow.Element.iterations"]], "latest_iteration (matflow.element property)": [[15, "matflow.Element.latest_iteration"]], "latest_iteration_non_skipped (matflow.element property)": [[15, "matflow.Element.latest_iteration_non_skipped"]], "output_files (matflow.element property)": [[15, "matflow.Element.output_files"]], "outputs (matflow.element property)": [[15, "matflow.Element.outputs"]], "schema_parameters (matflow.element property)": [[15, "matflow.Element.schema_parameters"]], "sequence_idx (matflow.element property)": [[15, "matflow.Element.sequence_idx"]], "task (matflow.element property)": [[15, "matflow.Element.task"]], "to_element_set_data() (matflow.element method)": [[15, "matflow.Element.to_element_set_data"]], "workflow (matflow.element property)": [[15, "matflow.Element.workflow"]], "elementaction (class in matflow)": [[16, "matflow.ElementAction"]], "action (matflow.elementaction property)": [[16, "matflow.ElementAction.action"]], "action_idx (matflow.elementaction property)": [[16, "matflow.ElementAction.action_idx"]], "element (matflow.elementaction property)": [[16, "matflow.ElementAction.element"]], "element_iteration (matflow.elementaction property)": [[16, "matflow.ElementAction.element_iteration"]], "get() (matflow.elementaction method)": [[16, "matflow.ElementAction.get"]], "get_data_idx() (matflow.elementaction method)": [[16, "matflow.ElementAction.get_data_idx"]], "get_parameter_names() (matflow.elementaction method)": [[16, "matflow.ElementAction.get_parameter_names"]], "get_parameter_sources() (matflow.elementaction method)": [[16, "matflow.ElementAction.get_parameter_sources"]], "input_files (matflow.elementaction property)": [[16, "matflow.ElementAction.input_files"]], "inputs (matflow.elementaction property)": [[16, "matflow.ElementAction.inputs"]], "num_runs (matflow.elementaction property)": [[16, "matflow.ElementAction.num_runs"]], "output_files (matflow.elementaction property)": [[16, "matflow.ElementAction.output_files"]], "outputs (matflow.elementaction property)": [[16, "matflow.ElementAction.outputs"]], "runs (matflow.elementaction property)": [[16, "matflow.ElementAction.runs"]], "task (matflow.elementaction property)": [[16, "matflow.ElementAction.task"]], "elementactionrun (class in matflow)": [[17, "matflow.ElementActionRun"]], "action (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.action"]], "commands_file_id (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.commands_file_ID"]], "commands_idx (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.commands_idx"]], "compose_commands() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.compose_commands"]], "data_idx (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.data_idx"]], "dir_diff (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.dir_diff"]], "element (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.element"]], "element_action (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.element_action"]], "element_iteration (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.element_iteration"]], "end_time (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.end_time"]], "env_spec (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.env_spec"]], "env_spec_hashable (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.env_spec_hashable"]], "exit_code (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.exit_code"]], "get() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get"]], "get_ear_dependencies() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_EAR_dependencies"]], "get_ifg_input_values() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_IFG_input_values"]], "get_ofp_inputs() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_OFP_inputs"]], "get_ofp_output_files() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_OFP_output_files"]], "get_ofp_outputs() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_OFP_outputs"]], "get_all_previous_iteration_runs() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_all_previous_iteration_runs"]], "get_app_log_path() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_app_log_path"]], "get_app_std_path() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_app_std_path"]], "get_commands_file_hash() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_commands_file_hash"]], "get_data_idx() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_data_idx"]], "get_dependent_ears() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_dependent_EARs"]], "get_directory() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_directory"]], "get_environment() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_environment"]], "get_environment_spec() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_environment_spec"]], "get_input_dependencies() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_input_dependencies"]], "get_input_values() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_input_values"]], "get_input_values_direct() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_input_values_direct"]], "get_parameter_names() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_parameter_names"]], "get_parameter_sources() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_parameter_sources"]], "get_py_script_func_kwargs() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_py_script_func_kwargs"]], "get_resources() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_resources"]], "get_script_artifact_name() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.get_script_artifact_name"]], "id_ (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.id_"]], "index (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.index"]], "input_files (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.input_files"]], "inputs (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.inputs"]], "is_pending (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.is_pending"]], "is_snippet_script (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.is_snippet_script"]], "metadata (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.metadata"]], "output_files (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.output_files"]], "outputs (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.outputs"]], "port_number (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.port_number"]], "raise_on_failure_threshold() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.raise_on_failure_threshold"]], "resources (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.resources"]], "run_hostname (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.run_hostname"]], "skip (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.skip"]], "skip_reason (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.skip_reason"]], "snapshot_end (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.snapshot_end"]], "snapshot_start (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.snapshot_start"]], "start_time (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.start_time"]], "status (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.status"]], "submission_idx (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.submission_idx"]], "success (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.success"]], "task (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.task"]], "try_write_commands() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.try_write_commands"]], "workflow (matflow.elementactionrun property)": [[17, "matflow.ElementActionRun.workflow"]], "write_script_input_files() (matflow.elementactionrun method)": [[17, "matflow.ElementActionRun.write_script_input_files"]], "elementfilter (class in matflow)": [[18, "matflow.ElementFilter"]], "filter() (matflow.elementfilter method)": [[18, "matflow.ElementFilter.filter"]], "from_json_like() (matflow.elementfilter class method)": [[18, "matflow.ElementFilter.from_json_like"]], "rules (matflow.elementfilter attribute)": [[18, "matflow.ElementFilter.rules"]], "to_dict() (matflow.elementfilter method)": [[18, "matflow.ElementFilter.to_dict"]], "to_json_like() (matflow.elementfilter method)": [[18, "matflow.ElementFilter.to_json_like"]], "elementgroup (class in matflow)": [[19, "matflow.ElementGroup"]], "from_json_like() (matflow.elementgroup class method)": [[19, "matflow.ElementGroup.from_json_like"]], "group_by_distinct (matflow.elementgroup attribute)": [[19, "matflow.ElementGroup.group_by_distinct"]], "name (matflow.elementgroup attribute)": [[19, "matflow.ElementGroup.name"]], "to_dict() (matflow.elementgroup method)": [[19, "matflow.ElementGroup.to_dict"]], "to_json_like() (matflow.elementgroup method)": [[19, "matflow.ElementGroup.to_json_like"]], "where (matflow.elementgroup attribute)": [[19, "matflow.ElementGroup.where"]], "elementinputfiles (class in matflow)": [[20, "matflow.ElementInputFiles"]], "prefixed_names_unlabelled (matflow.elementinputfiles property)": [[20, "matflow.ElementInputFiles.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementinputfiles property)": [[20, "matflow.ElementInputFiles.prefixed_names_unlabelled_str"]], "elementinputs (class in matflow)": [[21, "matflow.ElementInputs"]], "prefixed_names_unlabelled (matflow.elementinputs property)": [[21, "matflow.ElementInputs.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementinputs property)": [[21, "matflow.ElementInputs.prefixed_names_unlabelled_str"]], "ear_ids (matflow.elementiteration property)": [[22, "matflow.ElementIteration.EAR_IDs"]], "ear_ids_flat (matflow.elementiteration property)": [[22, "matflow.ElementIteration.EAR_IDs_flat"]], "ears_initialised (matflow.elementiteration property)": [[22, "matflow.ElementIteration.EARs_initialised"]], "elementiteration (class in matflow)": [[22, "matflow.ElementIteration"]], "action_runs (matflow.elementiteration property)": [[22, "matflow.ElementIteration.action_runs"]], "actions (matflow.elementiteration property)": [[22, "matflow.ElementIteration.actions"]], "data_idx (matflow.elementiteration property)": [[22, "matflow.ElementIteration.data_idx"]], "element (matflow.elementiteration property)": [[22, "matflow.ElementIteration.element"]], "get() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get"]], "get_ear_dependencies() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_EAR_dependencies"]], "get_data_idx() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_data_idx"]], "get_dependent_ears() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_dependent_EARs"]], "get_dependent_element_iterations() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_dependent_element_iterations"]], "get_dependent_elements() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_dependent_elements"]], "get_dependent_tasks() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_dependent_tasks"]], "get_element_dependencies() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_element_dependencies"]], "get_element_iteration_dependencies() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_element_iteration_dependencies"]], "get_input_dependencies() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_input_dependencies"]], "get_parameter_names() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_parameter_names"]], "get_parameter_sources() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_parameter_sources"]], "get_resources() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_resources"]], "get_resources_obj() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_resources_obj"]], "get_task_dependencies() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_task_dependencies"]], "get_template_resources() (matflow.elementiteration method)": [[22, "matflow.ElementIteration.get_template_resources"]], "id_ (matflow.elementiteration property)": [[22, "matflow.ElementIteration.id_"]], "index (matflow.elementiteration property)": [[22, "matflow.ElementIteration.index"]], "input_files (matflow.elementiteration property)": [[22, "matflow.ElementIteration.input_files"]], "inputs (matflow.elementiteration property)": [[22, "matflow.ElementIteration.inputs"]], "is_pending (matflow.elementiteration property)": [[22, "matflow.ElementIteration.is_pending"]], "loop_idx (matflow.elementiteration property)": [[22, "matflow.ElementIteration.loop_idx"]], "loop_skipped (matflow.elementiteration property)": [[22, "matflow.ElementIteration.loop_skipped"]], "output_files (matflow.elementiteration property)": [[22, "matflow.ElementIteration.output_files"]], "outputs (matflow.elementiteration property)": [[22, "matflow.ElementIteration.outputs"]], "schema_parameters (matflow.elementiteration property)": [[22, "matflow.ElementIteration.schema_parameters"]], "task (matflow.elementiteration property)": [[22, "matflow.ElementIteration.task"]], "workflow (matflow.elementiteration property)": [[22, "matflow.ElementIteration.workflow"]], "elementoutputfiles (class in matflow)": [[23, "matflow.ElementOutputFiles"]], "prefixed_names_unlabelled (matflow.elementoutputfiles property)": [[23, "matflow.ElementOutputFiles.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementoutputfiles property)": [[23, "matflow.ElementOutputFiles.prefixed_names_unlabelled_str"]], "elementoutputs (class in matflow)": [[24, "matflow.ElementOutputs"]], "prefixed_names_unlabelled (matflow.elementoutputs property)": [[24, "matflow.ElementOutputs.prefixed_names_unlabelled"]], "prefixed_names_unlabelled_str (matflow.elementoutputs property)": [[24, "matflow.ElementOutputs.prefixed_names_unlabelled_str"]], "elementparameter (class in matflow)": [[25, "matflow.ElementParameter"]], "app (matflow.elementparameter attribute)": [[25, "matflow.ElementParameter.app"]], "data_idx (matflow.elementparameter property)": [[25, "matflow.ElementParameter.data_idx"]], "data_idx_is_set (matflow.elementparameter property)": [[25, "matflow.ElementParameter.data_idx_is_set"]], "element (matflow.elementparameter attribute)": [[25, "matflow.ElementParameter.element"]], "get_size() (matflow.elementparameter method)": [[25, "matflow.ElementParameter.get_size"]], "is_set (matflow.elementparameter property)": [[25, "matflow.ElementParameter.is_set"]], "parent (matflow.elementparameter attribute)": [[25, "matflow.ElementParameter.parent"]], "path (matflow.elementparameter attribute)": [[25, "matflow.ElementParameter.path"]], "task (matflow.elementparameter attribute)": [[25, "matflow.ElementParameter.task"]], "value (matflow.elementparameter property)": [[25, "matflow.ElementParameter.value"]], "elementpropagation (class in matflow)": [[26, "matflow.ElementPropagation"]], "element_set (matflow.elementpropagation property)": [[26, "matflow.ElementPropagation.element_set"]], "input_sources (matflow.elementpropagation attribute)": [[26, "matflow.ElementPropagation.input_sources"]], "nesting_order (matflow.elementpropagation attribute)": [[26, "matflow.ElementPropagation.nesting_order"]], "task (matflow.elementpropagation attribute)": [[26, "matflow.ElementPropagation.task"]], "elementrepeats (class in matflow)": [[27, "matflow.ElementRepeats"]], "number (matflow.elementrepeats attribute)": [[27, "matflow.ElementRepeats.number"]], "where (matflow.elementrepeats attribute)": [[27, "matflow.ElementRepeats.where"]], "elementresources (class in matflow)": [[28, "matflow.ElementResources"]], "sge_parallel_env (matflow.elementresources attribute)": [[28, "matflow.ElementResources.SGE_parallel_env"]], "slurm_is_parallel (matflow.elementresources property)": [[28, "matflow.ElementResources.SLURM_is_parallel"]], "slurm_num_cpus_per_task (matflow.elementresources attribute)": [[28, "matflow.ElementResources.SLURM_num_cpus_per_task"]], "slurm_num_nodes (matflow.elementresources attribute)": [[28, "matflow.ElementResources.SLURM_num_nodes"]], "slurm_num_tasks (matflow.elementresources attribute)": [[28, "matflow.ElementResources.SLURM_num_tasks"]], "slurm_num_tasks_per_node (matflow.elementresources attribute)": [[28, "matflow.ElementResources.SLURM_num_tasks_per_node"]], "slurm_partition (matflow.elementresources attribute)": [[28, "matflow.ElementResources.SLURM_partition"]], "allow_failed_dependencies (matflow.elementresources attribute)": [[28, "matflow.ElementResources.allow_failed_dependencies"]], "combine_jobscript_std (matflow.elementresources attribute)": [[28, "matflow.ElementResources.combine_jobscript_std"]], "combine_scripts (matflow.elementresources attribute)": [[28, "matflow.ElementResources.combine_scripts"]], "environments (matflow.elementresources attribute)": [[28, "matflow.ElementResources.environments"]], "from_json_like() (matflow.elementresources class method)": [[28, "matflow.ElementResources.from_json_like"]], "get_default_os_name() (matflow.elementresources static method)": [[28, "matflow.ElementResources.get_default_os_name"]], "get_default_scheduler() (matflow.elementresources class method)": [[28, "matflow.ElementResources.get_default_scheduler"]], "get_default_shell() (matflow.elementresources class method)": [[28, "matflow.ElementResources.get_default_shell"]], "get_env_instance_filterable_attributes() (matflow.elementresources static method)": [[28, "matflow.ElementResources.get_env_instance_filterable_attributes"]], "get_jobscript_hash() (matflow.elementresources method)": [[28, "matflow.ElementResources.get_jobscript_hash"]], "is_parallel (matflow.elementresources property)": [[28, "matflow.ElementResources.is_parallel"]], "max_array_items (matflow.elementresources attribute)": [[28, "matflow.ElementResources.max_array_items"]], "num_cores (matflow.elementresources attribute)": [[28, "matflow.ElementResources.num_cores"]], "num_cores_per_node (matflow.elementresources attribute)": [[28, "matflow.ElementResources.num_cores_per_node"]], "num_nodes (matflow.elementresources attribute)": [[28, "matflow.ElementResources.num_nodes"]], "num_threads (matflow.elementresources attribute)": [[28, "matflow.ElementResources.num_threads"]], "os_name (matflow.elementresources attribute)": [[28, "matflow.ElementResources.os_name"]], "parallel_mode (matflow.elementresources attribute)": [[28, "matflow.ElementResources.parallel_mode"]], "resources_id (matflow.elementresources attribute)": [[28, "matflow.ElementResources.resources_id"]], "scheduler (matflow.elementresources attribute)": [[28, "matflow.ElementResources.scheduler"]], "scheduler_args (matflow.elementresources attribute)": [[28, "matflow.ElementResources.scheduler_args"]], "scratch (matflow.elementresources attribute)": [[28, "matflow.ElementResources.scratch"]], "set_defaults() (matflow.elementresources method)": [[28, "matflow.ElementResources.set_defaults"]], "shell (matflow.elementresources attribute)": [[28, "matflow.ElementResources.shell"]], "shell_args (matflow.elementresources attribute)": [[28, "matflow.ElementResources.shell_args"]], "skip_downstream_on_failure (matflow.elementresources attribute)": [[28, "matflow.ElementResources.skip_downstream_on_failure"]], "time_limit (matflow.elementresources attribute)": [[28, "matflow.ElementResources.time_limit"]], "to_dict() (matflow.elementresources method)": [[28, "matflow.ElementResources.to_dict"]], "to_json_like() (matflow.elementresources method)": [[28, "matflow.ElementResources.to_json_like"]], "use_job_array (matflow.elementresources attribute)": [[28, "matflow.ElementResources.use_job_array"]], "validate_against_machine() (matflow.elementresources method)": [[28, "matflow.ElementResources.validate_against_machine"]], "write_app_logs (matflow.elementresources attribute)": [[28, "matflow.ElementResources.write_app_logs"]], "elementset (class in matflow)": [[29, "matflow.ElementSet"]], "allow_non_coincident_task_sources (matflow.elementset attribute)": [[29, "matflow.ElementSet.allow_non_coincident_task_sources"]], "defined_input_types (matflow.elementset property)": [[29, "matflow.ElementSet.defined_input_types"]], "elem_iter_ids (matflow.elementset property)": [[29, "matflow.ElementSet.elem_iter_IDs"]], "element_iterations (matflow.elementset property)": [[29, "matflow.ElementSet.element_iterations"]], "element_local_idx_range (matflow.elementset property)": [[29, "matflow.ElementSet.element_local_idx_range"]], "elements (matflow.elementset property)": [[29, "matflow.ElementSet.elements"]], "ensure_element_sets() (matflow.elementset class method)": [[29, "matflow.ElementSet.ensure_element_sets"]], "env_preset (matflow.elementset attribute)": [[29, "matflow.ElementSet.env_preset"]], "environments (matflow.elementset attribute)": [[29, "matflow.ElementSet.environments"]], "from_json_like() (matflow.elementset class method)": [[29, "matflow.ElementSet.from_json_like"]], "get_defined_parameter_types() (matflow.elementset method)": [[29, "matflow.ElementSet.get_defined_parameter_types"]], "get_defined_sub_parameter_types() (matflow.elementset method)": [[29, "matflow.ElementSet.get_defined_sub_parameter_types"]], "get_locally_defined_inputs() (matflow.elementset method)": [[29, "matflow.ElementSet.get_locally_defined_inputs"]], "get_sequence_from_path() (matflow.elementset method)": [[29, "matflow.ElementSet.get_sequence_from_path"]], "get_task_dependencies() (matflow.elementset method)": [[29, "matflow.ElementSet.get_task_dependencies"]], "groups (matflow.elementset attribute)": [[29, "matflow.ElementSet.groups"]], "index (matflow.elementset property)": [[29, "matflow.ElementSet.index"]], "input_files (matflow.elementset attribute)": [[29, "matflow.ElementSet.input_files"]], "input_sources (matflow.elementset attribute)": [[29, "matflow.ElementSet.input_sources"]], "input_types (matflow.elementset property)": [[29, "matflow.ElementSet.input_types"]], "inputs (matflow.elementset attribute)": [[29, "matflow.ElementSet.inputs"]], "is_creation (matflow.elementset attribute)": [[29, "matflow.ElementSet.is_creation"]], "is_input_type_provided() (matflow.elementset method)": [[29, "matflow.ElementSet.is_input_type_provided"]], "multi_path_sequences (matflow.elementset attribute)": [[29, "matflow.ElementSet.multi_path_sequences"]], "nesting_order (matflow.elementset attribute)": [[29, "matflow.ElementSet.nesting_order"]], "prepare_persistent_copy() (matflow.elementset method)": [[29, "matflow.ElementSet.prepare_persistent_copy"]], "repeats (matflow.elementset attribute)": [[29, "matflow.ElementSet.repeats"]], "resources (matflow.elementset attribute)": [[29, "matflow.ElementSet.resources"]], "sequences (matflow.elementset attribute)": [[29, "matflow.ElementSet.sequences"]], "sourceable_elem_iters (matflow.elementset attribute)": [[29, "matflow.ElementSet.sourceable_elem_iters"]], "task (matflow.elementset property)": [[29, "matflow.ElementSet.task"]], "task_template (matflow.elementset property)": [[29, "matflow.ElementSet.task_template"]], "to_dict() (matflow.elementset method)": [[29, "matflow.ElementSet.to_dict"]], "to_json_like() (matflow.elementset method)": [[29, "matflow.ElementSet.to_json_like"]], "undefined_input_types (matflow.elementset property)": [[29, "matflow.ElementSet.undefined_input_types"]], "elements (class in matflow)": [[30, "matflow.Elements"]], "task (matflow.elements property)": [[30, "matflow.Elements.task"]], "environment (class in matflow)": [[31, "matflow.Environment"]], "doc (matflow.environment attribute)": [[31, "matflow.Environment.doc"]], "documentation (matflow.environment property)": [[31, "matflow.Environment.documentation"]], "executables (matflow.environment attribute)": [[31, "matflow.Environment.executables"]], "from_json_like() (matflow.environment class method)": [[31, "matflow.Environment.from_json_like"]], "name (matflow.environment attribute)": [[31, "matflow.Environment.name"]], "setup (matflow.environment attribute)": [[31, "matflow.Environment.setup"]], "specifiers (matflow.environment attribute)": [[31, "matflow.Environment.specifiers"]], "to_dict() (matflow.environment method)": [[31, "matflow.Environment.to_dict"]], "to_json_like() (matflow.environment method)": [[31, "matflow.Environment.to_json_like"]], "environmentslist (class in matflow)": [[32, "matflow.EnvironmentsList"]], "add_object() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.add_object"]], "add_objects() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.add_objects"]], "from_json_like() (matflow.environmentslist class method)": [[32, "matflow.EnvironmentsList.from_json_like"]], "get() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.get"]], "get_all() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.get_all"]], "list_attrs() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.list_attrs"]], "to_dict() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.to_dict"]], "to_json_like() (matflow.environmentslist method)": [[32, "matflow.EnvironmentsList.to_json_like"]], "executable (class in matflow)": [[33, "matflow.Executable"]], "environment (matflow.executable property)": [[33, "matflow.Executable.environment"]], "filter_instances() (matflow.executable method)": [[33, "matflow.Executable.filter_instances"]], "from_json_like() (matflow.executable class method)": [[33, "matflow.Executable.from_json_like"]], "instances (matflow.executable attribute)": [[33, "matflow.Executable.instances"]], "label (matflow.executable attribute)": [[33, "matflow.Executable.label"]], "to_dict() (matflow.executable method)": [[33, "matflow.Executable.to_dict"]], "to_json_like() (matflow.executable method)": [[33, "matflow.Executable.to_json_like"]], "executableinstance (class in matflow)": [[34, "matflow.ExecutableInstance"]], "command (matflow.executableinstance attribute)": [[34, "matflow.ExecutableInstance.command"]], "from_json_like() (matflow.executableinstance class method)": [[34, "matflow.ExecutableInstance.from_json_like"]], "from_spec() (matflow.executableinstance class method)": [[34, "matflow.ExecutableInstance.from_spec"]], "num_cores (matflow.executableinstance attribute)": [[34, "matflow.ExecutableInstance.num_cores"]], "parallel_mode (matflow.executableinstance attribute)": [[34, "matflow.ExecutableInstance.parallel_mode"]], "to_dict() (matflow.executableinstance method)": [[34, "matflow.ExecutableInstance.to_dict"]], "to_json_like() (matflow.executableinstance method)": [[34, "matflow.ExecutableInstance.to_json_like"]], "executableslist (class in matflow)": [[35, "matflow.ExecutablesList"]], "add_object() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.add_object"]], "add_objects() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.add_objects"]], "environment (matflow.executableslist attribute)": [[35, "matflow.ExecutablesList.environment"]], "from_json_like() (matflow.executableslist class method)": [[35, "matflow.ExecutablesList.from_json_like"]], "get() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.get"]], "get_all() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.get_all"]], "list_attrs() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.list_attrs"]], "to_dict() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.to_dict"]], "to_json_like() (matflow.executableslist method)": [[35, "matflow.ExecutablesList.to_json_like"]], "executor (class in matflow)": [[36, "matflow.Executor"]], "q (matflow.executor property)": [[36, "matflow.Executor.q"]], "run() (matflow.executor method)": [[36, "matflow.Executor.run"]], "send_abort() (matflow.executor class method)": [[36, "matflow.Executor.send_abort"]], "start_zmq_server() (matflow.executor method)": [[36, "matflow.Executor.start_zmq_server"]], "stop_zmq_server() (matflow.executor method)": [[36, "matflow.Executor.stop_zmq_server"]], "zmq_context (matflow.executor property)": [[36, "matflow.Executor.zmq_context"]], "filenameext (class in matflow)": [[37, "matflow.FileNameExt"]], "file_name (matflow.filenameext attribute)": [[37, "matflow.FileNameExt.file_name"]], "from_json_like() (matflow.filenameext class method)": [[37, "matflow.FileNameExt.from_json_like"]], "to_dict() (matflow.filenameext method)": [[37, "matflow.FileNameExt.to_dict"]], "to_json_like() (matflow.filenameext method)": [[37, "matflow.FileNameExt.to_json_like"]], "value() (matflow.filenameext method)": [[37, "matflow.FileNameExt.value"]], "filenamespec (class in matflow)": [[38, "matflow.FileNameSpec"]], "args (matflow.filenamespec attribute)": [[38, "matflow.FileNameSpec.args"]], "ext (matflow.filenamespec property)": [[38, "matflow.FileNameSpec.ext"]], "from_json_like() (matflow.filenamespec class method)": [[38, "matflow.FileNameSpec.from_json_like"]], "is_regex (matflow.filenamespec attribute)": [[38, "matflow.FileNameSpec.is_regex"]], "name (matflow.filenamespec attribute)": [[38, "matflow.FileNameSpec.name"]], "stem (matflow.filenamespec property)": [[38, "matflow.FileNameSpec.stem"]], "to_dict() (matflow.filenamespec method)": [[38, "matflow.FileNameSpec.to_dict"]], "to_json_like() (matflow.filenamespec method)": [[38, "matflow.FileNameSpec.to_json_like"]], "value() (matflow.filenamespec method)": [[38, "matflow.FileNameSpec.value"]], "filenamestem (class in matflow)": [[39, "matflow.FileNameStem"]], "file_name (matflow.filenamestem attribute)": [[39, "matflow.FileNameStem.file_name"]], "from_json_like() (matflow.filenamestem class method)": [[39, "matflow.FileNameStem.from_json_like"]], "to_dict() (matflow.filenamestem method)": [[39, "matflow.FileNameStem.to_dict"]], "to_json_like() (matflow.filenamestem method)": [[39, "matflow.FileNameStem.to_json_like"]], "value() (matflow.filenamestem method)": [[39, "matflow.FileNameStem.value"]], "filespec (class in matflow)": [[40, "matflow.FileSpec"]], "doc (matflow.filespec attribute)": [[40, "matflow.FileSpec.doc"]], "documentation (matflow.filespec property)": [[40, "matflow.FileSpec.documentation"]], "ext (matflow.filespec property)": [[40, "matflow.FileSpec.ext"]], "from_json_like() (matflow.filespec class method)": [[40, "matflow.FileSpec.from_json_like"]], "label (matflow.filespec attribute)": [[40, "matflow.FileSpec.label"]], "name (matflow.filespec attribute)": [[40, "matflow.FileSpec.name"]], "stem (matflow.filespec property)": [[40, "matflow.FileSpec.stem"]], "to_dict() (matflow.filespec method)": [[40, "matflow.FileSpec.to_dict"]], "to_json_like() (matflow.filespec method)": [[40, "matflow.FileSpec.to_json_like"]], "value() (matflow.filespec method)": [[40, "matflow.FileSpec.value"]], "grouplist (class in matflow)": [[41, "matflow.GroupList"]], "add_object() (matflow.grouplist method)": [[41, "matflow.GroupList.add_object"]], "add_objects() (matflow.grouplist method)": [[41, "matflow.GroupList.add_objects"]], "from_json_like() (matflow.grouplist class method)": [[41, "matflow.GroupList.from_json_like"]], "get() (matflow.grouplist method)": [[41, "matflow.GroupList.get"]], "get_all() (matflow.grouplist method)": [[41, "matflow.GroupList.get_all"]], "list_attrs() (matflow.grouplist method)": [[41, "matflow.GroupList.list_attrs"]], "to_dict() (matflow.grouplist method)": [[41, "matflow.GroupList.to_dict"]], "to_json_like() (matflow.grouplist method)": [[41, "matflow.GroupList.to_json_like"]], "inputfile (class in matflow)": [[42, "matflow.InputFile"]], "contents (matflow.inputfile property)": [[42, "matflow.InputFile.contents"]], "extension (matflow.inputfile property)": [[42, "matflow.InputFile.extension"]], "file (matflow.inputfile attribute)": [[42, "matflow.InputFile.file"]], "from_json_like() (matflow.inputfile class method)": [[42, "matflow.InputFile.from_json_like"]], "make_persistent() (matflow.inputfile method)": [[42, "matflow.InputFile.make_persistent"]], "normalised_files_path (matflow.inputfile property)": [[42, "matflow.InputFile.normalised_files_path"]], "normalised_path (matflow.inputfile property)": [[42, "matflow.InputFile.normalised_path"]], "path (matflow.inputfile property)": [[42, "matflow.InputFile.path"]], "read_contents() (matflow.inputfile method)": [[42, "matflow.InputFile.read_contents"]], "store_contents (matflow.inputfile property)": [[42, "matflow.InputFile.store_contents"]], "to_dict() (matflow.inputfile method)": [[42, "matflow.InputFile.to_dict"]], "to_json_like() (matflow.inputfile method)": [[42, "matflow.InputFile.to_json_like"]], "workflow (matflow.inputfile property)": [[42, "matflow.InputFile.workflow"]], "inputfilegenerator (class in matflow)": [[43, "matflow.InputFileGenerator"]], "abortable (matflow.inputfilegenerator attribute)": [[43, "matflow.InputFileGenerator.abortable"]], "environment (matflow.inputfilegenerator attribute)": [[43, "matflow.InputFileGenerator.environment"]], "from_json_like() (matflow.inputfilegenerator class method)": [[43, "matflow.InputFileGenerator.from_json_like"]], "get_action_rules() (matflow.inputfilegenerator method)": [[43, "matflow.InputFileGenerator.get_action_rules"]], "input_file (matflow.inputfilegenerator attribute)": [[43, "matflow.InputFileGenerator.input_file"]], "inputs (matflow.inputfilegenerator attribute)": [[43, "matflow.InputFileGenerator.inputs"]], "requires_dir (matflow.inputfilegenerator attribute)": [[43, "matflow.InputFileGenerator.requires_dir"]], "rules (matflow.inputfilegenerator attribute)": [[43, "matflow.InputFileGenerator.rules"]], "script (matflow.inputfilegenerator attribute)": [[43, "matflow.InputFileGenerator.script"]], "script_pass_env_spec (matflow.inputfilegenerator attribute)": [[43, "matflow.InputFileGenerator.script_pass_env_spec"]], "to_dict() (matflow.inputfilegenerator method)": [[43, "matflow.InputFileGenerator.to_dict"]], "to_json_like() (matflow.inputfilegenerator method)": [[43, "matflow.InputFileGenerator.to_json_like"]], "inputfilegeneratorsource (class in matflow)": [[44, "matflow.InputFileGeneratorSource"]], "contents (matflow.inputfilegeneratorsource property)": [[44, "matflow.InputFileGeneratorSource.contents"]], "extension (matflow.inputfilegeneratorsource property)": [[44, "matflow.InputFileGeneratorSource.extension"]], "file (matflow.inputfilegeneratorsource attribute)": [[44, "matflow.InputFileGeneratorSource.file"]], "from_json_like() (matflow.inputfilegeneratorsource class method)": [[44, "matflow.InputFileGeneratorSource.from_json_like"]], "generator (matflow.inputfilegeneratorsource attribute)": [[44, "matflow.InputFileGeneratorSource.generator"]], "make_persistent() (matflow.inputfilegeneratorsource method)": [[44, "matflow.InputFileGeneratorSource.make_persistent"]], "normalised_path (matflow.inputfilegeneratorsource property)": [[44, "matflow.InputFileGeneratorSource.normalised_path"]], "path (matflow.inputfilegeneratorsource property)": [[44, "matflow.InputFileGeneratorSource.path"]], "read_contents() (matflow.inputfilegeneratorsource method)": [[44, "matflow.InputFileGeneratorSource.read_contents"]], "store_contents (matflow.inputfilegeneratorsource property)": [[44, "matflow.InputFileGeneratorSource.store_contents"]], "to_dict() (matflow.inputfilegeneratorsource method)": [[44, "matflow.InputFileGeneratorSource.to_dict"]], "to_json_like() (matflow.inputfilegeneratorsource method)": [[44, "matflow.InputFileGeneratorSource.to_json_like"]], "workflow (matflow.inputfilegeneratorsource property)": [[44, "matflow.InputFileGeneratorSource.workflow"]], "inputsource (class in matflow)": [[45, "matflow.InputSource"]], "default() (matflow.inputsource class method)": [[45, "matflow.InputSource.default"]], "element_iters (matflow.inputsource attribute)": [[45, "matflow.InputSource.element_iters"]], "from_json_like() (matflow.inputsource class method)": [[45, "matflow.InputSource.from_json_like"]], "from_string() (matflow.inputsource class method)": [[45, "matflow.InputSource.from_string"]], "get_task() (matflow.inputsource method)": [[45, "matflow.InputSource.get_task"]], "import_() (matflow.inputsource class method)": [[45, "matflow.InputSource.import_"]], "import_ref (matflow.inputsource attribute)": [[45, "matflow.InputSource.import_ref"]], "is_in() (matflow.inputsource method)": [[45, "matflow.InputSource.is_in"]], "local() (matflow.inputsource class method)": [[45, "matflow.InputSource.local"]], "path (matflow.inputsource attribute)": [[45, "matflow.InputSource.path"]], "source_type (matflow.inputsource attribute)": [[45, "matflow.InputSource.source_type"]], "task() (matflow.inputsource class method)": [[45, "matflow.InputSource.task"]], "task_ref (matflow.inputsource attribute)": [[45, "matflow.InputSource.task_ref"]], "task_source_type (matflow.inputsource attribute)": [[45, "matflow.InputSource.task_source_type"]], "to_dict() (matflow.inputsource method)": [[45, "matflow.InputSource.to_dict"]], "to_json_like() (matflow.inputsource method)": [[45, "matflow.InputSource.to_json_like"]], "to_string() (matflow.inputsource method)": [[45, "matflow.InputSource.to_string"]], "where (matflow.inputsource attribute)": [[45, "matflow.InputSource.where"]], "default (matflow.inputsourcetype attribute)": [[46, "matflow.InputSourceType.DEFAULT"]], "import (matflow.inputsourcetype attribute)": [[46, "matflow.InputSourceType.IMPORT"]], "inputsourcetype (class in matflow)": [[46, "matflow.InputSourceType"]], "local (matflow.inputsourcetype attribute)": [[46, "matflow.InputSourceType.LOCAL"]], "task (matflow.inputsourcetype attribute)": [[46, "matflow.InputSourceType.TASK"]], "inputvalue (class in matflow)": [[47, "matflow.InputValue"]], "from_json_like() (matflow.inputvalue class method)": [[47, "matflow.InputValue.from_json_like"]], "is_sub_value (matflow.inputvalue property)": [[47, "matflow.InputValue.is_sub_value"]], "label (matflow.inputvalue attribute)": [[47, "matflow.InputValue.label"]], "labelled_type (matflow.inputvalue property)": [[47, "matflow.InputValue.labelled_type"]], "make_persistent() (matflow.inputvalue method)": [[47, "matflow.InputValue.make_persistent"]], "normalised_inputs_path (matflow.inputvalue property)": [[47, "matflow.InputValue.normalised_inputs_path"]], "normalised_path (matflow.inputvalue property)": [[47, "matflow.InputValue.normalised_path"]], "parameter (matflow.inputvalue attribute)": [[47, "matflow.InputValue.parameter"]], "path (matflow.inputvalue attribute)": [[47, "matflow.InputValue.path"]], "to_dict() (matflow.inputvalue method)": [[47, "matflow.InputValue.to_dict"]], "to_json_like() (matflow.inputvalue method)": [[47, "matflow.InputValue.to_json_like"]], "value (matflow.inputvalue property)": [[47, "matflow.InputValue.value"]], "value_class_method (matflow.inputvalue attribute)": [[47, "matflow.InputValue.value_class_method"]], "workflow (matflow.inputvalue property)": [[47, "matflow.InputValue.workflow"]], "ear_id_file_name (matflow.jobscript property)": [[48, "matflow.Jobscript.EAR_ID_file_name"]], "ear_id_file_path (matflow.jobscript property)": [[48, "matflow.Jobscript.EAR_ID_file_path"]], "jobscript (class in matflow)": [[48, "matflow.Jobscript"]], "all_ear_ids (matflow.jobscript property)": [[48, "matflow.Jobscript.all_EAR_IDs"]], "all_ears (matflow.jobscript property)": [[48, "matflow.Jobscript.all_EARs"]], "at_submit_metadata (matflow.jobscript property)": [[48, "matflow.Jobscript.at_submit_metadata"]], "blocks (matflow.jobscript property)": [[48, "matflow.Jobscript.blocks"]], "combined_script_indices_file_name (matflow.jobscript property)": [[48, "matflow.Jobscript.combined_script_indices_file_name"]], "combined_script_indices_file_path (matflow.jobscript property)": [[48, "matflow.Jobscript.combined_script_indices_file_path"]], "compose_combined_script() (matflow.jobscript method)": [[48, "matflow.Jobscript.compose_combined_script"]], "compose_jobscript() (matflow.jobscript method)": [[48, "matflow.Jobscript.compose_jobscript"]], "dependencies (matflow.jobscript property)": [[48, "matflow.Jobscript.dependencies"]], "direct_std_out_err_path (matflow.jobscript property)": [[48, "matflow.Jobscript.direct_std_out_err_path"]], "direct_stderr_path (matflow.jobscript property)": [[48, "matflow.Jobscript.direct_stderr_path"]], "direct_stdout_path (matflow.jobscript property)": [[48, "matflow.Jobscript.direct_stdout_path"]], "direct_win_pid_file_name (matflow.jobscript property)": [[48, "matflow.Jobscript.direct_win_pid_file_name"]], "direct_win_pid_file_path (matflow.jobscript property)": [[48, "matflow.Jobscript.direct_win_pid_file_path"]], "end_time (matflow.jobscript property)": [[48, "matflow.Jobscript.end_time"]], "from_json_like() (matflow.jobscript class method)": [[48, "matflow.Jobscript.from_json_like"]], "get_active_states() (matflow.jobscript method)": [[48, "matflow.Jobscript.get_active_states"]], "get_app_std_path() (matflow.jobscript method)": [[48, "matflow.Jobscript.get_app_std_path"]], "get_commands_file_name() (matflow.jobscript method)": [[48, "matflow.Jobscript.get_commands_file_name"]], "get_std_out_err_path() (matflow.jobscript method)": [[48, "matflow.Jobscript.get_std_out_err_path"]], "get_stderr() (matflow.jobscript method)": [[48, "matflow.Jobscript.get_stderr"]], "get_stderr_path() (matflow.jobscript method)": [[48, "matflow.Jobscript.get_stderr_path"]], "get_stdout() (matflow.jobscript method)": [[48, "matflow.Jobscript.get_stdout"]], "get_stdout_path() (matflow.jobscript method)": [[48, "matflow.Jobscript.get_stdout_path"]], "index (matflow.jobscript property)": [[48, "matflow.Jobscript.index"]], "is_array (matflow.jobscript property)": [[48, "matflow.Jobscript.is_array"]], "is_scheduled (matflow.jobscript property)": [[48, "matflow.Jobscript.is_scheduled"]], "is_submitted (matflow.jobscript property)": [[48, "matflow.Jobscript.is_submitted"]], "jobscript_functions_name (matflow.jobscript property)": [[48, "matflow.Jobscript.jobscript_functions_name"]], "jobscript_functions_path (matflow.jobscript property)": [[48, "matflow.Jobscript.jobscript_functions_path"]], "jobscript_name (matflow.jobscript property)": [[48, "matflow.Jobscript.jobscript_name"]], "jobscript_path (matflow.jobscript property)": [[48, "matflow.Jobscript.jobscript_path"]], "os_name (matflow.jobscript property)": [[48, "matflow.Jobscript.os_name"]], "print_stderr() (matflow.jobscript method)": [[48, "matflow.Jobscript.print_stderr"]], "print_stdout() (matflow.jobscript method)": [[48, "matflow.Jobscript.print_stdout"]], "process_id (matflow.jobscript property)": [[48, "matflow.Jobscript.process_ID"]], "resources (matflow.jobscript property)": [[48, "matflow.Jobscript.resources"]], "scheduler (matflow.jobscript property)": [[48, "matflow.Jobscript.scheduler"]], "scheduler_job_id (matflow.jobscript property)": [[48, "matflow.Jobscript.scheduler_job_ID"]], "scheduler_js_ref (matflow.jobscript property)": [[48, "matflow.Jobscript.scheduler_js_ref"]], "scheduler_name (matflow.jobscript property)": [[48, "matflow.Jobscript.scheduler_name"]], "shell (matflow.jobscript property)": [[48, "matflow.Jobscript.shell"]], "shell_idx (matflow.jobscript property)": [[48, "matflow.Jobscript.shell_idx"]], "shell_name (matflow.jobscript property)": [[48, "matflow.Jobscript.shell_name"]], "start_time (matflow.jobscript property)": [[48, "matflow.Jobscript.start_time"]], "std_path (matflow.jobscript property)": [[48, "matflow.Jobscript.std_path"]], "submission (matflow.jobscript property)": [[48, "matflow.Jobscript.submission"]], "submit() (matflow.jobscript method)": [[48, "matflow.Jobscript.submit"]], "submit_cmdline (matflow.jobscript property)": [[48, "matflow.Jobscript.submit_cmdline"]], "submit_hostname (matflow.jobscript property)": [[48, "matflow.Jobscript.submit_hostname"]], "submit_machine (matflow.jobscript property)": [[48, "matflow.Jobscript.submit_machine"]], "submit_time (matflow.jobscript property)": [[48, "matflow.Jobscript.submit_time"]], "to_dict() (matflow.jobscript method)": [[48, "matflow.Jobscript.to_dict"]], "to_json_like() (matflow.jobscript method)": [[48, "matflow.Jobscript.to_json_like"]], "version_info (matflow.jobscript property)": [[48, "matflow.Jobscript.version_info"]], "workflow (matflow.jobscript property)": [[48, "matflow.Jobscript.workflow"]], "workflow_app_alias (matflow.jobscript property)": [[48, "matflow.Jobscript.workflow_app_alias"]], "write_jobscript() (matflow.jobscript method)": [[48, "matflow.Jobscript.write_jobscript"]], "write_script_indices_file() (matflow.jobscript method)": [[48, "matflow.Jobscript.write_script_indices_file"]], "ear_id (matflow.jobscriptblock property)": [[49, "matflow.JobscriptBlock.EAR_ID"]], "jobscriptblock (class in matflow)": [[49, "matflow.JobscriptBlock"]], "all_ears (matflow.jobscriptblock property)": [[49, "matflow.JobscriptBlock.all_EARs"]], "dependencies (matflow.jobscriptblock property)": [[49, "matflow.JobscriptBlock.dependencies"]], "from_json_like() (matflow.jobscriptblock class method)": [[49, "matflow.JobscriptBlock.from_json_like"]], "get_task_loop_idx_array() (matflow.jobscriptblock method)": [[49, "matflow.JobscriptBlock.get_task_loop_idx_array"]], "index (matflow.jobscriptblock property)": [[49, "matflow.JobscriptBlock.index"]], "num_actions (matflow.jobscriptblock property)": [[49, "matflow.JobscriptBlock.num_actions"]], "num_elements (matflow.jobscriptblock property)": [[49, "matflow.JobscriptBlock.num_elements"]], "submission (matflow.jobscriptblock property)": [[49, "matflow.JobscriptBlock.submission"]], "task_actions (matflow.jobscriptblock property)": [[49, "matflow.JobscriptBlock.task_actions"]], "task_elements (matflow.jobscriptblock property)": [[49, "matflow.JobscriptBlock.task_elements"]], "task_insert_ids (matflow.jobscriptblock property)": [[49, "matflow.JobscriptBlock.task_insert_IDs"]], "task_loop_idx (matflow.jobscriptblock property)": [[49, "matflow.JobscriptBlock.task_loop_idx"]], "to_dict() (matflow.jobscriptblock method)": [[49, "matflow.JobscriptBlock.to_dict"]], "to_json_like() (matflow.jobscriptblock method)": [[49, "matflow.JobscriptBlock.to_json_like"]], "workflow (matflow.jobscriptblock property)": [[49, "matflow.JobscriptBlock.workflow"]], "write_ear_id_file() (matflow.jobscriptblock method)": [[49, "matflow.JobscriptBlock.write_EAR_ID_file"]], "loop (class in matflow)": [[50, "matflow.Loop"]], "from_json_like() (matflow.loop class method)": [[50, "matflow.Loop.from_json_like"]], "name (matflow.loop property)": [[50, "matflow.Loop.name"]], "non_iterable_parameters (matflow.loop property)": [[50, "matflow.Loop.non_iterable_parameters"]], "num_iterations (matflow.loop property)": [[50, "matflow.Loop.num_iterations"]], "task_insert_ids (matflow.loop property)": [[50, "matflow.Loop.task_insert_IDs"]], "task_objects (matflow.loop property)": [[50, "matflow.Loop.task_objects"]], "termination (matflow.loop property)": [[50, "matflow.Loop.termination"]], "termination_task (matflow.loop property)": [[50, "matflow.Loop.termination_task"]], "termination_task_insert_id (matflow.loop property)": [[50, "matflow.Loop.termination_task_insert_ID"]], "to_dict() (matflow.loop method)": [[50, "matflow.Loop.to_dict"]], "to_json_like() (matflow.loop method)": [[50, "matflow.Loop.to_json_like"]], "workflow_template (matflow.loop property)": [[50, "matflow.Loop.workflow_template"]], "metatask (class in matflow)": [[51, "matflow.MetaTask"]], "from_json_like() (matflow.metatask class method)": [[51, "matflow.MetaTask.from_json_like"]], "to_dict() (matflow.metatask method)": [[51, "matflow.MetaTask.to_dict"]], "to_json_like() (matflow.metatask method)": [[51, "matflow.MetaTask.to_json_like"]], "metataskschema (class in matflow)": [[52, "matflow.MetaTaskSchema"]], "actions (matflow.metataskschema attribute)": [[52, "matflow.MetaTaskSchema.actions"]], "basic_info() (matflow.metataskschema method)": [[52, "matflow.MetaTaskSchema.basic_info"]], "doc (matflow.metataskschema attribute)": [[52, "matflow.MetaTaskSchema.doc"]], "environment_presets (matflow.metataskschema attribute)": [[52, "matflow.MetaTaskSchema.environment_presets"]], "from_json_like() (matflow.metataskschema class method)": [[52, "matflow.MetaTaskSchema.from_json_like"]], "get_by_key() (matflow.metataskschema class method)": [[52, "matflow.MetaTaskSchema.get_by_key"]], "get_info_html() (matflow.metataskschema method)": [[52, "matflow.MetaTaskSchema.get_info_html"]], "get_key() (matflow.metataskschema method)": [[52, "matflow.MetaTaskSchema.get_key"]], "get_parameter_dependence() (matflow.metataskschema method)": [[52, "matflow.MetaTaskSchema.get_parameter_dependence"]], "ignore_invalid_actions() (matflow.metataskschema class method)": [[52, "matflow.MetaTaskSchema.ignore_invalid_actions"]], "implementation (matflow.metataskschema attribute)": [[52, "matflow.MetaTaskSchema.implementation"]], "info() (matflow.metataskschema method)": [[52, "matflow.MetaTaskSchema.info"]], "input_types (matflow.metataskschema property)": [[52, "matflow.MetaTaskSchema.input_types"]], "inputs (matflow.metataskschema attribute)": [[52, "matflow.MetaTaskSchema.inputs"]], "make_persistent() (matflow.metataskschema method)": [[52, "matflow.MetaTaskSchema.make_persistent"]], "method (matflow.metataskschema attribute)": [[52, "matflow.MetaTaskSchema.method"]], "multi_input_types (matflow.metataskschema property)": [[52, "matflow.MetaTaskSchema.multi_input_types"]], "name (matflow.metataskschema property)": [[52, "matflow.MetaTaskSchema.name"]], "objective (matflow.metataskschema attribute)": [[52, "matflow.MetaTaskSchema.objective"]], "output_types (matflow.metataskschema property)": [[52, "matflow.MetaTaskSchema.output_types"]], "outputs (matflow.metataskschema attribute)": [[52, "matflow.MetaTaskSchema.outputs"]], "parameter_class_modules (matflow.metataskschema attribute)": [[52, "matflow.MetaTaskSchema.parameter_class_modules"]], "provides_parameters (matflow.metataskschema property)": [[52, "matflow.MetaTaskSchema.provides_parameters"]], "task_template (matflow.metataskschema property)": [[52, "matflow.MetaTaskSchema.task_template"]], "to_dict() (matflow.metataskschema method)": [[52, "matflow.MetaTaskSchema.to_dict"]], "to_json_like() (matflow.metataskschema method)": [[52, "matflow.MetaTaskSchema.to_json_like"]], "version (matflow.metataskschema attribute)": [[52, "matflow.MetaTaskSchema.version"]], "web_doc (matflow.metataskschema attribute)": [[52, "matflow.MetaTaskSchema.web_doc"]], "multipathsequence (class in matflow)": [[53, "matflow.MultiPathSequence"]], "from_json_like() (matflow.multipathsequence class method)": [[53, "matflow.MultiPathSequence.from_json_like"]], "from_latin_hypercube() (matflow.multipathsequence class method)": [[53, "matflow.MultiPathSequence.from_latin_hypercube"]], "sequence_indices (matflow.multipathsequence property)": [[53, "matflow.MultiPathSequence.sequence_indices"]], "sequences (matflow.multipathsequence property)": [[53, "matflow.MultiPathSequence.sequences"]], "to_dict() (matflow.multipathsequence method)": [[53, "matflow.MultiPathSequence.to_dict"]], "to_json_like() (matflow.multipathsequence method)": [[53, "matflow.MultiPathSequence.to_json_like"]], "values (matflow.multipathsequence property)": [[53, "matflow.MultiPathSequence.values"]], "numcores (class in matflow)": [[54, "matflow.NumCores"]], "from_json_like() (matflow.numcores class method)": [[54, "matflow.NumCores.from_json_like"]], "start (matflow.numcores attribute)": [[54, "matflow.NumCores.start"]], "step (matflow.numcores attribute)": [[54, "matflow.NumCores.step"]], "stop (matflow.numcores attribute)": [[54, "matflow.NumCores.stop"]], "to_dict() (matflow.numcores method)": [[54, "matflow.NumCores.to_dict"]], "to_json_like() (matflow.numcores method)": [[54, "matflow.NumCores.to_json_like"]], "outputfileparser (class in matflow)": [[55, "matflow.OutputFileParser"]], "abortable (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.abortable"]], "clean_up (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.clean_up"]], "environment (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.environment"]], "from_json_like() (matflow.outputfileparser class method)": [[55, "matflow.OutputFileParser.from_json_like"]], "get_action_rules() (matflow.outputfileparser method)": [[55, "matflow.OutputFileParser.get_action_rules"]], "inputs (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.inputs"]], "options (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.options"]], "output (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.output"]], "output_files (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.output_files"]], "outputs (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.outputs"]], "requires_dir (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.requires_dir"]], "rules (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.rules"]], "save_files (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.save_files"]], "script (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.script"]], "script_pass_env_spec (matflow.outputfileparser attribute)": [[55, "matflow.OutputFileParser.script_pass_env_spec"]], "to_dict() (matflow.outputfileparser method)": [[55, "matflow.OutputFileParser.to_dict"]], "to_json_like() (matflow.outputfileparser method)": [[55, "matflow.OutputFileParser.to_json_like"]], "outputfileparsersource (class in matflow)": [[56, "matflow.OutputFileParserSource"]], "contents (matflow.outputfileparsersource property)": [[56, "matflow.OutputFileParserSource.contents"]], "extension (matflow.outputfileparsersource property)": [[56, "matflow.OutputFileParserSource.extension"]], "file (matflow.outputfileparsersource attribute)": [[56, "matflow.OutputFileParserSource.file"]], "from_json_like() (matflow.outputfileparsersource class method)": [[56, "matflow.OutputFileParserSource.from_json_like"]], "make_persistent() (matflow.outputfileparsersource method)": [[56, "matflow.OutputFileParserSource.make_persistent"]], "normalised_path (matflow.outputfileparsersource property)": [[56, "matflow.OutputFileParserSource.normalised_path"]], "parser (matflow.outputfileparsersource attribute)": [[56, "matflow.OutputFileParserSource.parser"]], "path (matflow.outputfileparsersource property)": [[56, "matflow.OutputFileParserSource.path"]], "read_contents() (matflow.outputfileparsersource method)": [[56, "matflow.OutputFileParserSource.read_contents"]], "store_contents (matflow.outputfileparsersource property)": [[56, "matflow.OutputFileParserSource.store_contents"]], "to_dict() (matflow.outputfileparsersource method)": [[56, "matflow.OutputFileParserSource.to_dict"]], "to_json_like() (matflow.outputfileparsersource method)": [[56, "matflow.OutputFileParserSource.to_json_like"]], "workflow (matflow.outputfileparsersource property)": [[56, "matflow.OutputFileParserSource.workflow"]], "outputlabel (class in matflow)": [[57, "matflow.OutputLabel"]], "from_json_like() (matflow.outputlabel class method)": [[57, "matflow.OutputLabel.from_json_like"]], "label (matflow.outputlabel attribute)": [[57, "matflow.OutputLabel.label"]], "parameter (matflow.outputlabel attribute)": [[57, "matflow.OutputLabel.parameter"]], "to_dict() (matflow.outputlabel method)": [[57, "matflow.OutputLabel.to_dict"]], "to_json_like() (matflow.outputlabel method)": [[57, "matflow.OutputLabel.to_json_like"]], "where (matflow.outputlabel attribute)": [[57, "matflow.OutputLabel.where"]], "parameter (class in matflow)": [[58, "matflow.Parameter"]], "from_json_like() (matflow.parameter class method)": [[58, "matflow.Parameter.from_json_like"]], "is_file (matflow.parameter attribute)": [[58, "matflow.Parameter.is_file"]], "sub_parameters (matflow.parameter attribute)": [[58, "matflow.Parameter.sub_parameters"]], "to_dict() (matflow.parameter method)": [[58, "matflow.Parameter.to_dict"]], "to_json_like() (matflow.parameter method)": [[58, "matflow.Parameter.to_json_like"]], "typ (matflow.parameter attribute)": [[58, "matflow.Parameter.typ"]], "url_slug (matflow.parameter property)": [[58, "matflow.Parameter.url_slug"]], "parameterpath (class in matflow)": [[59, "matflow.ParameterPath"]], "from_json_like() (matflow.parameterpath class method)": [[59, "matflow.ParameterPath.from_json_like"]], "path (matflow.parameterpath attribute)": [[59, "matflow.ParameterPath.path"]], "task (matflow.parameterpath attribute)": [[59, "matflow.ParameterPath.task"]], "to_dict() (matflow.parameterpath method)": [[59, "matflow.ParameterPath.to_dict"]], "to_json_like() (matflow.parameterpath method)": [[59, "matflow.ParameterPath.to_json_like"]], "explicit (matflow.parameterpropagationmode attribute)": [[60, "matflow.ParameterPropagationMode.EXPLICIT"]], "implicit (matflow.parameterpropagationmode attribute)": [[60, "matflow.ParameterPropagationMode.IMPLICIT"]], "never (matflow.parameterpropagationmode attribute)": [[60, "matflow.ParameterPropagationMode.NEVER"]], "parameterpropagationmode (class in matflow)": [[60, "matflow.ParameterPropagationMode"]], "parametervalue (class in matflow)": [[61, "matflow.ParameterValue"]], "dump_element_group_to_hdf5_group() (matflow.parametervalue class method)": [[61, "matflow.ParameterValue.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.parametervalue method)": [[61, "matflow.ParameterValue.dump_to_HDF5_group"]], "prepare_json_dump() (matflow.parametervalue method)": [[61, "matflow.ParameterValue.prepare_JSON_dump"]], "save_from_hdf5_group() (matflow.parametervalue class method)": [[61, "matflow.ParameterValue.save_from_HDF5_group"]], "save_from_json() (matflow.parametervalue class method)": [[61, "matflow.ParameterValue.save_from_JSON"]], "to_dict() (matflow.parametervalue method)": [[61, "matflow.ParameterValue.to_dict"]], "parameters (class in matflow)": [[62, "matflow.Parameters"]], "default (matflow.parameters attribute)": [[62, "matflow.Parameters.default"]], "path (matflow.parameters attribute)": [[62, "matflow.Parameters.path"]], "raise_on_missing (matflow.parameters attribute)": [[62, "matflow.Parameters.raise_on_missing"]], "raise_on_unset (matflow.parameters attribute)": [[62, "matflow.Parameters.raise_on_unset"]], "return_element_parameters (matflow.parameters attribute)": [[62, "matflow.Parameters.return_element_parameters"]], "task (matflow.parameters attribute)": [[62, "matflow.Parameters.task"]], "parameterslist (class in matflow)": [[63, "matflow.ParametersList"]], "add_object() (matflow.parameterslist method)": [[63, "matflow.ParametersList.add_object"]], "add_objects() (matflow.parameterslist method)": [[63, "matflow.ParametersList.add_objects"]], "from_json_like() (matflow.parameterslist class method)": [[63, "matflow.ParametersList.from_json_like"]], "get() (matflow.parameterslist method)": [[63, "matflow.ParametersList.get"]], "get_all() (matflow.parameterslist method)": [[63, "matflow.ParametersList.get_all"]], "list_attrs() (matflow.parameterslist method)": [[63, "matflow.ParametersList.list_attrs"]], "to_dict() (matflow.parameterslist method)": [[63, "matflow.ParametersList.to_dict"]], "to_json_like() (matflow.parameterslist method)": [[63, "matflow.ParametersList.to_json_like"]], "default_array_item_var (matflow.queuedscheduler attribute)": [[64, "matflow.QueuedScheduler.DEFAULT_ARRAY_ITEM_VAR"]], "default_array_switch (matflow.queuedscheduler attribute)": [[64, "matflow.QueuedScheduler.DEFAULT_ARRAY_SWITCH"]], "default_del_cmd (matflow.queuedscheduler attribute)": [[64, "matflow.QueuedScheduler.DEFAULT_DEL_CMD"]], "default_js_cmd (matflow.queuedscheduler attribute)": [[64, "matflow.QueuedScheduler.DEFAULT_JS_CMD"]], "default_login_nodes_cmd (matflow.queuedscheduler attribute)": [[64, "matflow.QueuedScheduler.DEFAULT_LOGIN_NODES_CMD"]], "default_login_node_match (matflow.queuedscheduler attribute)": [[64, "matflow.QueuedScheduler.DEFAULT_LOGIN_NODE_MATCH"]], "default_shebang_args (matflow.queuedscheduler attribute)": [[64, "matflow.QueuedScheduler.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.queuedscheduler attribute)": [[64, "matflow.QueuedScheduler.DEFAULT_SHELL_ARGS"]], "default_show_cmd (matflow.queuedscheduler attribute)": [[64, "matflow.QueuedScheduler.DEFAULT_SHOW_CMD"]], "default_submit_cmd (matflow.queuedscheduler attribute)": [[64, "matflow.QueuedScheduler.DEFAULT_SUBMIT_CMD"]], "queuedscheduler (class in matflow)": [[64, "matflow.QueuedScheduler"]], "cancel_jobs() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.cancel_jobs"]], "format_options() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.format_options"]], "format_switch() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.format_switch"]], "get_job_state_info() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.get_job_state_info"]], "get_std_out_err_filename() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.get_std_out_err_filename"]], "get_stderr_filename() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.get_stderr_filename"]], "get_stdout_filename() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.get_stdout_filename"]], "get_submit_command() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.get_submit_command"]], "get_version_info() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.get_version_info"]], "is_jobscript_active() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.is_jobscript_active"]], "is_num_cores_supported() (matflow.queuedscheduler static method)": [[64, "matflow.QueuedScheduler.is_num_cores_supported"]], "parse_submission_output() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.parse_submission_output"]], "process_resources() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.process_resources"]], "unique_properties (matflow.queuedscheduler property)": [[64, "matflow.QueuedScheduler.unique_properties"]], "wait_for_jobscripts() (matflow.queuedscheduler method)": [[64, "matflow.QueuedScheduler.wait_for_jobscripts"]], "resourcelist (class in matflow)": [[65, "matflow.ResourceList"]], "add_object() (matflow.resourcelist method)": [[65, "matflow.ResourceList.add_object"]], "element_set (matflow.resourcelist property)": [[65, "matflow.ResourceList.element_set"]], "from_json_like() (matflow.resourcelist class method)": [[65, "matflow.ResourceList.from_json_like"]], "get() (matflow.resourcelist method)": [[65, "matflow.ResourceList.get"]], "get_all() (matflow.resourcelist method)": [[65, "matflow.ResourceList.get_all"]], "get_scopes() (matflow.resourcelist method)": [[65, "matflow.ResourceList.get_scopes"]], "merge_one() (matflow.resourcelist method)": [[65, "matflow.ResourceList.merge_one"]], "merge_other() (matflow.resourcelist method)": [[65, "matflow.ResourceList.merge_other"]], "normalise() (matflow.resourcelist class method)": [[65, "matflow.ResourceList.normalise"]], "to_dict() (matflow.resourcelist method)": [[65, "matflow.ResourceList.to_dict"]], "to_json_like() (matflow.resourcelist method)": [[65, "matflow.ResourceList.to_json_like"]], "workflow_template (matflow.resourcelist property)": [[65, "matflow.ResourceList.workflow_template"]], "allowed_parameters (matflow.resourcespec attribute)": [[66, "matflow.ResourceSpec.ALLOWED_PARAMETERS"]], "resourcespec (class in matflow)": [[66, "matflow.ResourceSpec"]], "sge_parallel_env (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.SGE_parallel_env"]], "slurm_num_cpus_per_task (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.SLURM_num_cpus_per_task"]], "slurm_num_nodes (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.SLURM_num_nodes"]], "slurm_num_tasks (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.SLURM_num_tasks"]], "slurm_num_tasks_per_node (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.SLURM_num_tasks_per_node"]], "slurm_partition (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.SLURM_partition"]], "combine_jobscript_std (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.combine_jobscript_std"]], "combine_scripts (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.combine_scripts"]], "copy_non_persistent() (matflow.resourcespec method)": [[66, "matflow.ResourceSpec.copy_non_persistent"]], "element_set (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.element_set"]], "environments (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.environments"]], "from_json_like() (matflow.resourcespec class method)": [[66, "matflow.ResourceSpec.from_json_like"]], "make_persistent() (matflow.resourcespec method)": [[66, "matflow.ResourceSpec.make_persistent"]], "max_array_items (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.max_array_items"]], "normalised_path (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.normalised_path"]], "normalised_resources_path (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.normalised_resources_path"]], "num_cores (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.num_cores"]], "num_cores_per_node (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.num_cores_per_node"]], "num_nodes (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.num_nodes"]], "num_threads (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.num_threads"]], "os_name (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.os_name"]], "parallel_mode (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.parallel_mode"]], "resources_id (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.resources_id"]], "scheduler (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.scheduler"]], "scheduler_args (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.scheduler_args"]], "scope (matflow.resourcespec attribute)": [[66, "matflow.ResourceSpec.scope"]], "scratch (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.scratch"]], "shell (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.shell"]], "shell_args (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.shell_args"]], "skip_downstream_on_failure (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.skip_downstream_on_failure"]], "time_limit (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.time_limit"]], "to_dict() (matflow.resourcespec method)": [[66, "matflow.ResourceSpec.to_dict"]], "to_json_like() (matflow.resourcespec method)": [[66, "matflow.ResourceSpec.to_json_like"]], "use_job_array (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.use_job_array"]], "workflow (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.workflow"]], "workflow_template (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.workflow_template"]], "write_app_logs (matflow.resourcespec property)": [[66, "matflow.ResourceSpec.write_app_logs"]], "rule (class in matflow)": [[67, "matflow.Rule"]], "cast (matflow.rule attribute)": [[67, "matflow.Rule.cast"]], "check_exists (matflow.rule attribute)": [[67, "matflow.Rule.check_exists"]], "check_missing (matflow.rule attribute)": [[67, "matflow.Rule.check_missing"]], "condition (matflow.rule attribute)": [[67, "matflow.Rule.condition"]], "doc (matflow.rule attribute)": [[67, "matflow.Rule.doc"]], "from_json_like() (matflow.rule class method)": [[67, "matflow.Rule.from_json_like"]], "path (matflow.rule attribute)": [[67, "matflow.Rule.path"]], "test() (matflow.rule method)": [[67, "matflow.Rule.test"]], "to_dict() (matflow.rule method)": [[67, "matflow.Rule.to_dict"]], "to_json_like() (matflow.rule method)": [[67, "matflow.Rule.to_json_like"]], "rundirappfiles (class in matflow)": [[68, "matflow.RunDirAppFiles"]], "get_commands_file_name() (matflow.rundirappfiles class method)": [[68, "matflow.RunDirAppFiles.get_commands_file_name"]], "get_run_file_prefix() (matflow.rundirappfiles static method)": [[68, "matflow.RunDirAppFiles.get_run_file_prefix"]], "get_run_param_dump_file_prefix() (matflow.rundirappfiles class method)": [[68, "matflow.RunDirAppFiles.get_run_param_dump_file_prefix"]], "get_run_param_load_file_prefix() (matflow.rundirappfiles class method)": [[68, "matflow.RunDirAppFiles.get_run_param_load_file_prefix"]], "take_snapshot() (matflow.rundirappfiles class method)": [[68, "matflow.RunDirAppFiles.take_snapshot"]], "default_array_item_var (matflow.sgeposix attribute)": [[69, "matflow.SGEPosix.DEFAULT_ARRAY_ITEM_VAR"]], "default_array_switch (matflow.sgeposix attribute)": [[69, "matflow.SGEPosix.DEFAULT_ARRAY_SWITCH"]], "default_cwd_switch (matflow.sgeposix attribute)": [[69, "matflow.SGEPosix.DEFAULT_CWD_SWITCH"]], "default_del_cmd (matflow.sgeposix attribute)": [[69, "matflow.SGEPosix.DEFAULT_DEL_CMD"]], "default_js_cmd (matflow.sgeposix attribute)": [[69, "matflow.SGEPosix.DEFAULT_JS_CMD"]], "default_login_nodes_cmd (matflow.sgeposix attribute)": [[69, "matflow.SGEPosix.DEFAULT_LOGIN_NODES_CMD"]], "default_login_node_match (matflow.sgeposix attribute)": [[69, "matflow.SGEPosix.DEFAULT_LOGIN_NODE_MATCH"]], "default_shebang_args (matflow.sgeposix attribute)": [[69, "matflow.SGEPosix.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.sgeposix attribute)": [[69, "matflow.SGEPosix.DEFAULT_SHELL_ARGS"]], "default_show_cmd (matflow.sgeposix attribute)": [[69, "matflow.SGEPosix.DEFAULT_SHOW_CMD"]], "default_submit_cmd (matflow.sgeposix attribute)": [[69, "matflow.SGEPosix.DEFAULT_SUBMIT_CMD"]], "sgeposix (class in matflow)": [[69, "matflow.SGEPosix"]], "cancel_jobs() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.cancel_jobs"]], "format_options() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.format_options"]], "format_switch() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.format_switch"]], "get_job_state_info() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.get_job_state_info"]], "get_job_statuses() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.get_job_statuses"]], "get_login_nodes() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.get_login_nodes"]], "get_std_out_err_filename() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.get_std_out_err_filename"]], "get_stderr_filename() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.get_stderr_filename"]], "get_stdout_filename() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.get_stdout_filename"]], "get_submit_command() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.get_submit_command"]], "get_version_info() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.get_version_info"]], "is_jobscript_active() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.sgeposix static method)": [[69, "matflow.SGEPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.parse_submission_output"]], "process_resources() (matflow.sgeposix class method)": [[69, "matflow.SGEPosix.process_resources"]], "state_lookup (matflow.sgeposix attribute)": [[69, "matflow.SGEPosix.state_lookup"]], "unique_properties (matflow.sgeposix property)": [[69, "matflow.SGEPosix.unique_properties"]], "wait_for_jobscripts() (matflow.sgeposix method)": [[69, "matflow.SGEPosix.wait_for_jobscripts"]], "schemainput (class in matflow)": [[70, "matflow.SchemaInput"]], "all_labelled_types (matflow.schemainput property)": [[70, "matflow.SchemaInput.all_labelled_types"]], "default_value (matflow.schemainput property)": [[70, "matflow.SchemaInput.default_value"]], "from_json_like() (matflow.schemainput class method)": [[70, "matflow.SchemaInput.from_json_like"]], "input_or_output (matflow.schemainput property)": [[70, "matflow.SchemaInput.input_or_output"]], "labelled_info() (matflow.schemainput method)": [[70, "matflow.SchemaInput.labelled_info"]], "labels (matflow.schemainput attribute)": [[70, "matflow.SchemaInput.labels"]], "multiple (matflow.schemainput attribute)": [[70, "matflow.SchemaInput.multiple"]], "parameter (matflow.schemainput attribute)": [[70, "matflow.SchemaInput.parameter"]], "single_label (matflow.schemainput property)": [[70, "matflow.SchemaInput.single_label"]], "single_labelled_data (matflow.schemainput property)": [[70, "matflow.SchemaInput.single_labelled_data"]], "single_labelled_type (matflow.schemainput property)": [[70, "matflow.SchemaInput.single_labelled_type"]], "task_schema (matflow.schemainput property)": [[70, "matflow.SchemaInput.task_schema"]], "to_dict() (matflow.schemainput method)": [[70, "matflow.SchemaInput.to_dict"]], "to_json_like() (matflow.schemainput method)": [[70, "matflow.SchemaInput.to_json_like"]], "typ (matflow.schemainput property)": [[70, "matflow.SchemaInput.typ"]], "schemaoutput (class in matflow)": [[71, "matflow.SchemaOutput"]], "from_json_like() (matflow.schemaoutput class method)": [[71, "matflow.SchemaOutput.from_json_like"]], "input_or_output (matflow.schemaoutput property)": [[71, "matflow.SchemaOutput.input_or_output"]], "parameter (matflow.schemaoutput attribute)": [[71, "matflow.SchemaOutput.parameter"]], "propagation_mode (matflow.schemaoutput attribute)": [[71, "matflow.SchemaOutput.propagation_mode"]], "to_dict() (matflow.schemaoutput method)": [[71, "matflow.SchemaOutput.to_dict"]], "to_json_like() (matflow.schemaoutput method)": [[71, "matflow.SchemaOutput.to_json_like"]], "typ (matflow.schemaoutput property)": [[71, "matflow.SchemaOutput.typ"]], "schemaparameter (class in matflow)": [[72, "matflow.SchemaParameter"]], "from_json_like() (matflow.schemaparameter class method)": [[72, "matflow.SchemaParameter.from_json_like"]], "to_dict() (matflow.schemaparameter method)": [[72, "matflow.SchemaParameter.to_dict"]], "to_json_like() (matflow.schemaparameter method)": [[72, "matflow.SchemaParameter.to_json_like"]], "typ (matflow.schemaparameter property)": [[72, "matflow.SchemaParameter.typ"]], "default_array_item_var (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.DEFAULT_ARRAY_ITEM_VAR"]], "default_array_switch (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.DEFAULT_ARRAY_SWITCH"]], "default_del_cmd (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.DEFAULT_DEL_CMD"]], "default_js_cmd (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.DEFAULT_JS_CMD"]], "default_login_nodes_cmd (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.DEFAULT_LOGIN_NODES_CMD"]], "default_login_node_match (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.DEFAULT_LOGIN_NODE_MATCH"]], "default_shebang_args (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.DEFAULT_SHEBANG_ARGS"]], "default_shell_args (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.DEFAULT_SHELL_ARGS"]], "default_shell_executable (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.DEFAULT_SHELL_EXECUTABLE"]], "default_show_cmd (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.DEFAULT_SHOW_CMD"]], "default_submit_cmd (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.DEFAULT_SUBMIT_CMD"]], "inter_state_query_delay (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.INTER_STATE_QUERY_DELAY"]], "num_state_query_tries (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.NUM_STATE_QUERY_TRIES"]], "slurmposix (class in matflow)": [[73, "matflow.SlurmPosix"]], "cancel_jobs() (matflow.slurmposix method)": [[73, "matflow.SlurmPosix.cancel_jobs"]], "format_options() (matflow.slurmposix method)": [[73, "matflow.SlurmPosix.format_options"]], "format_switch() (matflow.slurmposix method)": [[73, "matflow.SlurmPosix.format_switch"]], "get_job_state_info() (matflow.slurmposix method)": [[73, "matflow.SlurmPosix.get_job_state_info"]], "get_std_out_err_filename() (matflow.slurmposix method)": [[73, "matflow.SlurmPosix.get_std_out_err_filename"]], "get_stderr_filename() (matflow.slurmposix method)": [[73, "matflow.SlurmPosix.get_stderr_filename"]], "get_stdout_filename() (matflow.slurmposix method)": [[73, "matflow.SlurmPosix.get_stdout_filename"]], "get_submit_command() (matflow.slurmposix method)": [[73, "matflow.SlurmPosix.get_submit_command"]], "get_version_info() (matflow.slurmposix method)": [[73, "matflow.SlurmPosix.get_version_info"]], "is_jobscript_active() (matflow.slurmposix method)": [[73, "matflow.SlurmPosix.is_jobscript_active"]], "is_num_cores_supported() (matflow.slurmposix static method)": [[73, "matflow.SlurmPosix.is_num_cores_supported"]], "parse_submission_output() (matflow.slurmposix method)": [[73, "matflow.SlurmPosix.parse_submission_output"]], "process_resources() (matflow.slurmposix class method)": [[73, "matflow.SlurmPosix.process_resources"]], "state_lookup (matflow.slurmposix attribute)": [[73, "matflow.SlurmPosix.state_lookup"]], "unique_properties (matflow.slurmposix property)": [[73, "matflow.SlurmPosix.unique_properties"]], "wait_for_jobscripts() (matflow.slurmposix method)": [[73, "matflow.SlurmPosix.wait_for_jobscripts"]], "subparameter (class in matflow)": [[74, "matflow.SubParameter"]], "address (matflow.subparameter attribute)": [[74, "matflow.SubParameter.address"]], "parameter (matflow.subparameter attribute)": [[74, "matflow.SubParameter.parameter"]], "app_std_dir_name (matflow.submission attribute)": [[75, "matflow.Submission.APP_STD_DIR_NAME"]], "commands_dir_name (matflow.submission attribute)": [[75, "matflow.Submission.COMMANDS_DIR_NAME"]], "ears_by_elements (matflow.submission property)": [[75, "matflow.Submission.EARs_by_elements"]], "js_dir_name (matflow.submission attribute)": [[75, "matflow.Submission.JS_DIR_NAME"]], "js_funcs_dir_name (matflow.submission attribute)": [[75, "matflow.Submission.JS_FUNCS_DIR_NAME"]], "js_run_ids_dir_name (matflow.submission attribute)": [[75, "matflow.Submission.JS_RUN_IDS_DIR_NAME"]], "js_script_indices_dir_name (matflow.submission attribute)": [[75, "matflow.Submission.JS_SCRIPT_INDICES_DIR_NAME"]], "js_std_dir_name (matflow.submission attribute)": [[75, "matflow.Submission.JS_STD_DIR_NAME"]], "js_win_pids_dir_name (matflow.submission attribute)": [[75, "matflow.Submission.JS_WIN_PIDS_DIR_NAME"]], "js_parallelism (matflow.submission property)": [[75, "matflow.Submission.JS_parallelism"]], "log_dir_name (matflow.submission attribute)": [[75, "matflow.Submission.LOG_DIR_NAME"]], "scripts_dir_name (matflow.submission attribute)": [[75, "matflow.Submission.SCRIPTS_DIR_NAME"]], "submission (class in matflow)": [[75, "matflow.Submission"]], "tmp_dir_name (matflow.submission attribute)": [[75, "matflow.Submission.TMP_DIR_NAME"]], "workflow_app_alias (matflow.submission attribute)": [[75, "matflow.Submission.WORKFLOW_APP_ALIAS"]], "all_ear_ids (matflow.submission property)": [[75, "matflow.Submission.all_EAR_IDs"]], "all_ears (matflow.submission property)": [[75, "matflow.Submission.all_EARs"]], "all_ears_ids_by_jobscript (matflow.submission property)": [[75, "matflow.Submission.all_EARs_IDs_by_jobscript"]], "all_ears_by_jobscript (matflow.submission property)": [[75, "matflow.Submission.all_EARs_by_jobscript"]], "app_log_path (matflow.submission property)": [[75, "matflow.Submission.app_log_path"]], "app_std_path (matflow.submission property)": [[75, "matflow.Submission.app_std_path"]], "at_submit_metadata (matflow.submission property)": [[75, "matflow.Submission.at_submit_metadata"]], "cancel() (matflow.submission method)": [[75, "matflow.Submission.cancel"]], "commands_path (matflow.submission property)": [[75, "matflow.Submission.commands_path"]], "end_time (matflow.submission property)": [[75, "matflow.Submission.end_time"]], "environments (matflow.submission property)": [[75, "matflow.Submission.environments"]], "from_json_like() (matflow.submission class method)": [[75, "matflow.Submission.from_json_like"]], "get_active_jobscripts() (matflow.submission method)": [[75, "matflow.Submission.get_active_jobscripts"]], "get_app_log_file_name() (matflow.submission static method)": [[75, "matflow.Submission.get_app_log_file_name"]], "get_app_log_file_path() (matflow.submission class method)": [[75, "matflow.Submission.get_app_log_file_path"]], "get_app_log_path() (matflow.submission class method)": [[75, "matflow.Submission.get_app_log_path"]], "get_app_std_path() (matflow.submission class method)": [[75, "matflow.Submission.get_app_std_path"]], "get_commands_path() (matflow.submission class method)": [[75, "matflow.Submission.get_commands_path"]], "get_end_time() (matflow.submission method)": [[75, "matflow.Submission.get_end_time"]], "get_jobscript_functions_name() (matflow.submission method)": [[75, "matflow.Submission.get_jobscript_functions_name"]], "get_jobscript_functions_path() (matflow.submission method)": [[75, "matflow.Submission.get_jobscript_functions_path"]], "get_js_funcs_path() (matflow.submission class method)": [[75, "matflow.Submission.get_js_funcs_path"]], "get_js_path() (matflow.submission class method)": [[75, "matflow.Submission.get_js_path"]], "get_js_run_ids_path() (matflow.submission class method)": [[75, "matflow.Submission.get_js_run_ids_path"]], "get_js_script_indices_path() (matflow.submission class method)": [[75, "matflow.Submission.get_js_script_indices_path"]], "get_js_std_path() (matflow.submission class method)": [[75, "matflow.Submission.get_js_std_path"]], "get_js_win_pids_path() (matflow.submission class method)": [[75, "matflow.Submission.get_js_win_pids_path"]], "get_path() (matflow.submission class method)": [[75, "matflow.Submission.get_path"]], "get_process_ids() (matflow.submission method)": [[75, "matflow.Submission.get_process_IDs"]], "get_scheduler_job_ids() (matflow.submission method)": [[75, "matflow.Submission.get_scheduler_job_IDs"]], "get_scripts_path() (matflow.submission class method)": [[75, "matflow.Submission.get_scripts_path"]], "get_start_time() (matflow.submission method)": [[75, "matflow.Submission.get_start_time"]], "get_tmp_path() (matflow.submission class method)": [[75, "matflow.Submission.get_tmp_path"]], "get_unique_schedulers() (matflow.submission method)": [[75, "matflow.Submission.get_unique_schedulers"]], "get_unique_schedulers_of_jobscripts() (matflow.submission static method)": [[75, "matflow.Submission.get_unique_schedulers_of_jobscripts"]], "get_unique_shells() (matflow.submission method)": [[75, "matflow.Submission.get_unique_shells"]], "index (matflow.submission property)": [[75, "matflow.Submission.index"]], "is_scheduled (matflow.submission property)": [[75, "matflow.Submission.is_scheduled"]], "jobscript_indices (matflow.submission property)": [[75, "matflow.Submission.jobscript_indices"]], "jobscripts (matflow.submission property)": [[75, "matflow.Submission.jobscripts"]], "js_funcs_path (matflow.submission property)": [[75, "matflow.Submission.js_funcs_path"]], "js_path (matflow.submission property)": [[75, "matflow.Submission.js_path"]], "js_run_ids_path (matflow.submission property)": [[75, "matflow.Submission.js_run_ids_path"]], "js_script_indices_path (matflow.submission property)": [[75, "matflow.Submission.js_script_indices_path"]], "js_std_path (matflow.submission property)": [[75, "matflow.Submission.js_std_path"]], "js_win_pids_path (matflow.submission property)": [[75, "matflow.Submission.js_win_pids_path"]], "list_jobscripts() (matflow.submission method)": [[75, "matflow.Submission.list_jobscripts"]], "list_task_jobscripts() (matflow.submission method)": [[75, "matflow.Submission.list_task_jobscripts"]], "needs_app_log_dir (matflow.submission property)": [[75, "matflow.Submission.needs_app_log_dir"]], "needs_script_indices_dir (matflow.submission property)": [[75, "matflow.Submission.needs_script_indices_dir"]], "needs_submit (matflow.submission property)": [[75, "matflow.Submission.needs_submit"]], "needs_win_pids_dir (matflow.submission property)": [[75, "matflow.Submission.needs_win_pids_dir"]], "outstanding_jobscripts (matflow.submission property)": [[75, "matflow.Submission.outstanding_jobscripts"]], "path (matflow.submission property)": [[75, "matflow.Submission.path"]], "scripts_path (matflow.submission property)": [[75, "matflow.Submission.scripts_path"]], "start_time (matflow.submission property)": [[75, "matflow.Submission.start_time"]], "status (matflow.submission property)": [[75, "matflow.Submission.status"]], "submission_parts (matflow.submission property)": [[75, "matflow.Submission.submission_parts"]], "submit() (matflow.submission method)": [[75, "matflow.Submission.submit"]], "submitted_jobscripts (matflow.submission property)": [[75, "matflow.Submission.submitted_jobscripts"]], "tmp_path (matflow.submission property)": [[75, "matflow.Submission.tmp_path"]], "to_dict() (matflow.submission method)": [[75, "matflow.Submission.to_dict"]], "to_json_like() (matflow.submission method)": [[75, "matflow.Submission.to_json_like"]], "workflow (matflow.submission property)": [[75, "matflow.Submission.workflow"]], "task (class in matflow)": [[76, "matflow.Task"]], "add_group() (matflow.task method)": [[76, "matflow.Task.add_group"]], "all_schema_actions() (matflow.task method)": [[76, "matflow.Task.all_schema_actions"]], "all_schema_input_normalised_paths (matflow.task property)": [[76, "matflow.Task.all_schema_input_normalised_paths"]], "all_schema_input_types (matflow.task property)": [[76, "matflow.Task.all_schema_input_types"]], "all_schema_inputs (matflow.task property)": [[76, "matflow.Task.all_schema_inputs"]], "all_schema_output_types (matflow.task property)": [[76, "matflow.Task.all_schema_output_types"]], "all_schema_outputs (matflow.task property)": [[76, "matflow.Task.all_schema_outputs"]], "all_sourced_normalised_paths (matflow.task property)": [[76, "matflow.Task.all_sourced_normalised_paths"]], "defined_input_types (matflow.task property)": [[76, "matflow.Task.defined_input_types"]], "dir_name (matflow.task property)": [[76, "matflow.Task.dir_name"]], "element_sets (matflow.task property)": [[76, "matflow.Task.element_sets"]], "from_json_like() (matflow.task class method)": [[76, "matflow.Task.from_json_like"]], "get_available_task_input_sources() (matflow.task method)": [[76, "matflow.Task.get_available_task_input_sources"]], "get_input_statuses() (matflow.task method)": [[76, "matflow.Task.get_input_statuses"]], "get_param_provided_element_sets() (matflow.task method)": [[76, "matflow.Task.get_param_provided_element_sets"]], "get_schema_action() (matflow.task method)": [[76, "matflow.Task.get_schema_action"]], "get_task_unique_names() (matflow.task static method)": [[76, "matflow.Task.get_task_unique_names"]], "index (matflow.task property)": [[76, "matflow.Task.index"]], "insert_id (matflow.task property)": [[76, "matflow.Task.insert_ID"]], "is_input_type_required() (matflow.task method)": [[76, "matflow.Task.is_input_type_required"]], "merge_envs (matflow.task attribute)": [[76, "matflow.Task.merge_envs"]], "name (matflow.task property)": [[76, "matflow.Task.name"]], "non_universal_input_types (matflow.task property)": [[76, "matflow.Task.non_universal_input_types"]], "num_all_schema_actions (matflow.task property)": [[76, "matflow.Task.num_all_schema_actions"]], "num_element_sets (matflow.task property)": [[76, "matflow.Task.num_element_sets"]], "objective (matflow.task property)": [[76, "matflow.Task.objective"]], "output_labels (matflow.task property)": [[76, "matflow.Task.output_labels"]], "prepare_element_resolution() (matflow.task method)": [[76, "matflow.Task.prepare_element_resolution"]], "provides_parameters() (matflow.task method)": [[76, "matflow.Task.provides_parameters"]], "schema (matflow.task property)": [[76, "matflow.Task.schema"]], "schemas (matflow.task property)": [[76, "matflow.Task.schemas"]], "set_sequence_parameters() (matflow.task method)": [[76, "matflow.Task.set_sequence_parameters"]], "to_dict() (matflow.task method)": [[76, "matflow.Task.to_dict"]], "to_json_like() (matflow.task method)": [[76, "matflow.Task.to_json_like"]], "to_persistent() (matflow.task method)": [[76, "matflow.Task.to_persistent"]], "undefined_input_types (matflow.task property)": [[76, "matflow.Task.undefined_input_types"]], "undefined_inputs (matflow.task property)": [[76, "matflow.Task.undefined_inputs"]], "universal_input_types (matflow.task property)": [[76, "matflow.Task.universal_input_types"]], "workflow_template (matflow.task attribute)": [[76, "matflow.Task.workflow_template"]], "taskinputparameters (class in matflow)": [[77, "matflow.TaskInputParameters"]], "task (matflow.taskinputparameters attribute)": [[77, "matflow.TaskInputParameters.task"]], "tasklist (class in matflow)": [[78, "matflow.TaskList"]], "add_object() (matflow.tasklist method)": [[78, "matflow.TaskList.add_object"]], "add_objects() (matflow.tasklist method)": [[78, "matflow.TaskList.add_objects"]], "from_json_like() (matflow.tasklist class method)": [[78, "matflow.TaskList.from_json_like"]], "get() (matflow.tasklist method)": [[78, "matflow.TaskList.get"]], "get_all() (matflow.tasklist method)": [[78, "matflow.TaskList.get_all"]], "list_attrs() (matflow.tasklist method)": [[78, "matflow.TaskList.list_attrs"]], "to_dict() (matflow.tasklist method)": [[78, "matflow.TaskList.to_dict"]], "to_json_like() (matflow.tasklist method)": [[78, "matflow.TaskList.to_json_like"]], "taskobjective (class in matflow)": [[79, "matflow.TaskObjective"]], "from_json_like() (matflow.taskobjective class method)": [[79, "matflow.TaskObjective.from_json_like"]], "name (matflow.taskobjective attribute)": [[79, "matflow.TaskObjective.name"]], "to_dict() (matflow.taskobjective method)": [[79, "matflow.TaskObjective.to_dict"]], "to_json_like() (matflow.taskobjective method)": [[79, "matflow.TaskObjective.to_json_like"]], "taskoutputparameters (class in matflow)": [[80, "matflow.TaskOutputParameters"]], "task (matflow.taskoutputparameters attribute)": [[80, "matflow.TaskOutputParameters.task"]], "taskschema (class in matflow)": [[81, "matflow.TaskSchema"]], "actions (matflow.taskschema attribute)": [[81, "matflow.TaskSchema.actions"]], "basic_info() (matflow.taskschema method)": [[81, "matflow.TaskSchema.basic_info"]], "doc (matflow.taskschema attribute)": [[81, "matflow.TaskSchema.doc"]], "environment_presets (matflow.taskschema attribute)": [[81, "matflow.TaskSchema.environment_presets"]], "from_json_like() (matflow.taskschema class method)": [[81, "matflow.TaskSchema.from_json_like"]], "get_by_key() (matflow.taskschema class method)": [[81, "matflow.TaskSchema.get_by_key"]], "get_info_html() (matflow.taskschema method)": [[81, "matflow.TaskSchema.get_info_html"]], "get_key() (matflow.taskschema method)": [[81, "matflow.TaskSchema.get_key"]], "get_parameter_dependence() (matflow.taskschema method)": [[81, "matflow.TaskSchema.get_parameter_dependence"]], "ignore_invalid_actions() (matflow.taskschema class method)": [[81, "matflow.TaskSchema.ignore_invalid_actions"]], "implementation (matflow.taskschema attribute)": [[81, "matflow.TaskSchema.implementation"]], "info() (matflow.taskschema method)": [[81, "matflow.TaskSchema.info"]], "input_types (matflow.taskschema property)": [[81, "matflow.TaskSchema.input_types"]], "inputs (matflow.taskschema attribute)": [[81, "matflow.TaskSchema.inputs"]], "make_persistent() (matflow.taskschema method)": [[81, "matflow.TaskSchema.make_persistent"]], "method (matflow.taskschema attribute)": [[81, "matflow.TaskSchema.method"]], "multi_input_types (matflow.taskschema property)": [[81, "matflow.TaskSchema.multi_input_types"]], "name (matflow.taskschema property)": [[81, "matflow.TaskSchema.name"]], "objective (matflow.taskschema attribute)": [[81, "matflow.TaskSchema.objective"]], "output_types (matflow.taskschema property)": [[81, "matflow.TaskSchema.output_types"]], "outputs (matflow.taskschema attribute)": [[81, "matflow.TaskSchema.outputs"]], "parameter_class_modules (matflow.taskschema attribute)": [[81, "matflow.TaskSchema.parameter_class_modules"]], "provides_parameters (matflow.taskschema property)": [[81, "matflow.TaskSchema.provides_parameters"]], "task_template (matflow.taskschema property)": [[81, "matflow.TaskSchema.task_template"]], "to_dict() (matflow.taskschema method)": [[81, "matflow.TaskSchema.to_dict"]], "to_json_like() (matflow.taskschema method)": [[81, "matflow.TaskSchema.to_json_like"]], "version (matflow.taskschema attribute)": [[81, "matflow.TaskSchema.version"]], "web_doc (matflow.taskschema attribute)": [[81, "matflow.TaskSchema.web_doc"]], "taskschemaslist (class in matflow)": [[82, "matflow.TaskSchemasList"]], "add_object() (matflow.taskschemaslist method)": [[82, "matflow.TaskSchemasList.add_object"]], "add_objects() (matflow.taskschemaslist method)": [[82, "matflow.TaskSchemasList.add_objects"]], "from_json_like() (matflow.taskschemaslist class method)": [[82, "matflow.TaskSchemasList.from_json_like"]], "get() (matflow.taskschemaslist method)": [[82, "matflow.TaskSchemasList.get"]], "get_all() (matflow.taskschemaslist method)": [[82, "matflow.TaskSchemasList.get_all"]], "list_attrs() (matflow.taskschemaslist method)": [[82, "matflow.TaskSchemasList.list_attrs"]], "to_dict() (matflow.taskschemaslist method)": [[82, "matflow.TaskSchemasList.to_dict"]], "to_json_like() (matflow.taskschemaslist method)": [[82, "matflow.TaskSchemasList.to_json_like"]], "any (matflow.tasksourcetype attribute)": [[83, "matflow.TaskSourceType.ANY"]], "input (matflow.tasksourcetype attribute)": [[83, "matflow.TaskSourceType.INPUT"]], "output (matflow.tasksourcetype attribute)": [[83, "matflow.TaskSourceType.OUTPUT"]], "tasksourcetype (class in matflow)": [[83, "matflow.TaskSourceType"]], "names() (matflow.tasksourcetype class method)": [[83, "matflow.TaskSourceType.names"]], "tasktemplatelist (class in matflow)": [[84, "matflow.TaskTemplateList"]], "add_object() (matflow.tasktemplatelist method)": [[84, "matflow.TaskTemplateList.add_object"]], "add_objects() (matflow.tasktemplatelist method)": [[84, "matflow.TaskTemplateList.add_objects"]], "from_json_like() (matflow.tasktemplatelist class method)": [[84, "matflow.TaskTemplateList.from_json_like"]], "get() (matflow.tasktemplatelist method)": [[84, "matflow.TaskTemplateList.get"]], "get_all() (matflow.tasktemplatelist method)": [[84, "matflow.TaskTemplateList.get_all"]], "list_attrs() (matflow.tasktemplatelist method)": [[84, "matflow.TaskTemplateList.list_attrs"]], "to_dict() (matflow.tasktemplatelist method)": [[84, "matflow.TaskTemplateList.to_dict"]], "to_json_like() (matflow.tasktemplatelist method)": [[84, "matflow.TaskTemplateList.to_json_like"]], "valueperturbation (class in matflow)": [[85, "matflow.ValuePerturbation"]], "additive_factor (matflow.valueperturbation attribute)": [[85, "matflow.ValuePerturbation.additive_factor"]], "from_json_like() (matflow.valueperturbation class method)": [[85, "matflow.ValuePerturbation.from_json_like"]], "from_spec() (matflow.valueperturbation class method)": [[85, "matflow.ValuePerturbation.from_spec"]], "make_persistent() (matflow.valueperturbation method)": [[85, "matflow.ValuePerturbation.make_persistent"]], "multiplicative_factor (matflow.valueperturbation attribute)": [[85, "matflow.ValuePerturbation.multiplicative_factor"]], "name (matflow.valueperturbation attribute)": [[85, "matflow.ValuePerturbation.name"]], "normalised_path (matflow.valueperturbation property)": [[85, "matflow.ValuePerturbation.normalised_path"]], "path (matflow.valueperturbation attribute)": [[85, "matflow.ValuePerturbation.path"]], "to_dict() (matflow.valueperturbation method)": [[85, "matflow.ValuePerturbation.to_dict"]], "to_json_like() (matflow.valueperturbation method)": [[85, "matflow.ValuePerturbation.to_json_like"]], "value (matflow.valueperturbation property)": [[85, "matflow.ValuePerturbation.value"]], "workflow (matflow.valueperturbation property)": [[85, "matflow.ValuePerturbation.workflow"]], "valuesequence (class in matflow)": [[86, "matflow.ValueSequence"]], "from_file() (matflow.valuesequence class method)": [[86, "matflow.ValueSequence.from_file"]], "from_geometric_space() (matflow.valuesequence class method)": [[86, "matflow.ValueSequence.from_geometric_space"]], "from_json_like() (matflow.valuesequence class method)": [[86, "matflow.ValueSequence.from_json_like"]], "from_linear_space() (matflow.valuesequence class method)": [[86, "matflow.ValueSequence.from_linear_space"]], "from_log_space() (matflow.valuesequence class method)": [[86, "matflow.ValueSequence.from_log_space"]], "from_random_uniform() (matflow.valuesequence class method)": [[86, "matflow.ValueSequence.from_random_uniform"]], "from_range() (matflow.valuesequence class method)": [[86, "matflow.ValueSequence.from_range"]], "from_rectangle() (matflow.valuesequence class method)": [[86, "matflow.ValueSequence.from_rectangle"]], "input_path (matflow.valuesequence property)": [[86, "matflow.ValueSequence.input_path"]], "input_type (matflow.valuesequence property)": [[86, "matflow.ValueSequence.input_type"]], "is_sub_value (matflow.valuesequence property)": [[86, "matflow.ValueSequence.is_sub_value"]], "label (matflow.valuesequence attribute)": [[86, "matflow.ValueSequence.label"]], "labelled_type (matflow.valuesequence property)": [[86, "matflow.ValueSequence.labelled_type"]], "make_persistent() (matflow.valuesequence method)": [[86, "matflow.ValueSequence.make_persistent"]], "nesting_order (matflow.valuesequence attribute)": [[86, "matflow.ValueSequence.nesting_order"]], "normalised_inputs_path (matflow.valuesequence property)": [[86, "matflow.ValueSequence.normalised_inputs_path"]], "normalised_path (matflow.valuesequence property)": [[86, "matflow.ValueSequence.normalised_path"]], "parameter (matflow.valuesequence property)": [[86, "matflow.ValueSequence.parameter"]], "path (matflow.valuesequence attribute)": [[86, "matflow.ValueSequence.path"]], "path_split (matflow.valuesequence property)": [[86, "matflow.ValueSequence.path_split"]], "path_type (matflow.valuesequence property)": [[86, "matflow.ValueSequence.path_type"]], "resource_scope (matflow.valuesequence property)": [[86, "matflow.ValueSequence.resource_scope"]], "to_dict() (matflow.valuesequence method)": [[86, "matflow.ValueSequence.to_dict"]], "to_json_like() (matflow.valuesequence method)": [[86, "matflow.ValueSequence.to_json_like"]], "value_class_method (matflow.valuesequence attribute)": [[86, "matflow.ValueSequence.value_class_method"]], "values (matflow.valuesequence property)": [[86, "matflow.ValueSequence.values"]], "workflow (matflow.valuesequence property)": [[86, "matflow.ValueSequence.workflow"]], "workflow (class in matflow)": [[87, "matflow.Workflow"]], "abort_run() (matflow.workflow method)": [[87, "matflow.Workflow.abort_run"]], "add_loop() (matflow.workflow method)": [[87, "matflow.Workflow.add_loop"]], "add_submission() (matflow.workflow method)": [[87, "matflow.Workflow.add_submission"]], "add_task() (matflow.workflow method)": [[87, "matflow.Workflow.add_task"]], "add_task_after() (matflow.workflow method)": [[87, "matflow.Workflow.add_task_after"]], "add_task_before() (matflow.workflow method)": [[87, "matflow.Workflow.add_task_before"]], "artifacts_path (matflow.workflow property)": [[87, "matflow.Workflow.artifacts_path"]], "batch_update() (matflow.workflow method)": [[87, "matflow.Workflow.batch_update"]], "cached_merged_parameters() (matflow.workflow method)": [[87, "matflow.Workflow.cached_merged_parameters"]], "cancel() (matflow.workflow method)": [[87, "matflow.Workflow.cancel"]], "check_parameters_exist() (matflow.workflow method)": [[87, "matflow.Workflow.check_parameters_exist"]], "copy() (matflow.workflow method)": [[87, "matflow.Workflow.copy"]], "creation_info (matflow.workflow property)": [[87, "matflow.Workflow.creation_info"]], "delete() (matflow.workflow method)": [[87, "matflow.Workflow.delete"]], "elements() (matflow.workflow method)": [[87, "matflow.Workflow.elements"]], "ensure_commands_file() (matflow.workflow method)": [[87, "matflow.Workflow.ensure_commands_file"]], "execute_combined_runs() (matflow.workflow method)": [[87, "matflow.Workflow.execute_combined_runs"]], "execute_run() (matflow.workflow method)": [[87, "matflow.Workflow.execute_run"]], "execution_path (matflow.workflow property)": [[87, "matflow.Workflow.execution_path"]], "from_json_file() (matflow.workflow class method)": [[87, "matflow.Workflow.from_JSON_file"]], "from_json_string() (matflow.workflow class method)": [[87, "matflow.Workflow.from_JSON_string"]], "from_yaml_file() (matflow.workflow class method)": [[87, "matflow.Workflow.from_YAML_file"]], "from_yaml_string() (matflow.workflow class method)": [[87, "matflow.Workflow.from_YAML_string"]], "from_file() (matflow.workflow class method)": [[87, "matflow.Workflow.from_file"]], "from_template() (matflow.workflow class method)": [[87, "matflow.Workflow.from_template"]], "from_template_data() (matflow.workflow class method)": [[87, "matflow.Workflow.from_template_data"]], "get_ear_ids_of_tasks() (matflow.workflow method)": [[87, "matflow.Workflow.get_EAR_IDs_of_tasks"]], "get_ear_skipped() (matflow.workflow method)": [[87, "matflow.Workflow.get_EAR_skipped"]], "get_ears_from_ids() (matflow.workflow method)": [[87, "matflow.Workflow.get_EARs_from_IDs"]], "get_ears_of_tasks() (matflow.workflow method)": [[87, "matflow.Workflow.get_EARs_of_tasks"]], "get_all_ears() (matflow.workflow method)": [[87, "matflow.Workflow.get_all_EARs"]], "get_all_element_iterations() (matflow.workflow method)": [[87, "matflow.Workflow.get_all_element_iterations"]], "get_all_elements() (matflow.workflow method)": [[87, "matflow.Workflow.get_all_elements"]], "get_all_parameter_data() (matflow.workflow method)": [[87, "matflow.Workflow.get_all_parameter_data"]], "get_all_parameter_sources() (matflow.workflow method)": [[87, "matflow.Workflow.get_all_parameter_sources"]], "get_all_parameters() (matflow.workflow method)": [[87, "matflow.Workflow.get_all_parameters"]], "get_all_submission_run_ids() (matflow.workflow method)": [[87, "matflow.Workflow.get_all_submission_run_IDs"]], "get_element_ids_from_ear_ids() (matflow.workflow method)": [[87, "matflow.Workflow.get_element_IDs_from_EAR_IDs"]], "get_element_iteration_ids_from_ear_ids() (matflow.workflow method)": [[87, "matflow.Workflow.get_element_iteration_IDs_from_EAR_IDs"]], "get_element_iterations_from_ids() (matflow.workflow method)": [[87, "matflow.Workflow.get_element_iterations_from_IDs"]], "get_element_iterations_of_tasks() (matflow.workflow method)": [[87, "matflow.Workflow.get_element_iterations_of_tasks"]], "get_elements_from_ids() (matflow.workflow method)": [[87, "matflow.Workflow.get_elements_from_IDs"]], "get_iteration_task_pathway() (matflow.workflow method)": [[87, "matflow.Workflow.get_iteration_task_pathway"]], "get_parameter() (matflow.workflow method)": [[87, "matflow.Workflow.get_parameter"]], "get_parameter_data() (matflow.workflow method)": [[87, "matflow.Workflow.get_parameter_data"]], "get_parameter_set_statuses() (matflow.workflow method)": [[87, "matflow.Workflow.get_parameter_set_statuses"]], "get_parameter_source() (matflow.workflow method)": [[87, "matflow.Workflow.get_parameter_source"]], "get_parameter_sources() (matflow.workflow method)": [[87, "matflow.Workflow.get_parameter_sources"]], "get_parameters() (matflow.workflow method)": [[87, "matflow.Workflow.get_parameters"]], "get_process_ids() (matflow.workflow method)": [[87, "matflow.Workflow.get_process_IDs"]], "get_run_directories() (matflow.workflow method)": [[87, "matflow.Workflow.get_run_directories"]], "get_running_elements() (matflow.workflow method)": [[87, "matflow.Workflow.get_running_elements"]], "get_running_runs() (matflow.workflow method)": [[87, "matflow.Workflow.get_running_runs"]], "get_scheduler_job_ids() (matflow.workflow method)": [[87, "matflow.Workflow.get_scheduler_job_IDs"]], "get_store_ears() (matflow.workflow method)": [[87, "matflow.Workflow.get_store_EARs"]], "get_store_element_iterations() (matflow.workflow method)": [[87, "matflow.Workflow.get_store_element_iterations"]], "get_store_elements() (matflow.workflow method)": [[87, "matflow.Workflow.get_store_elements"]], "get_store_tasks() (matflow.workflow method)": [[87, "matflow.Workflow.get_store_tasks"]], "get_task_ids_from_element_ids() (matflow.workflow method)": [[87, "matflow.Workflow.get_task_IDs_from_element_IDs"]], "get_task_elements() (matflow.workflow method)": [[87, "matflow.Workflow.get_task_elements"]], "get_task_unique_names() (matflow.workflow method)": [[87, "matflow.Workflow.get_task_unique_names"]], "get_text_file() (matflow.workflow method)": [[87, "matflow.Workflow.get_text_file"]], "id_ (matflow.workflow property)": [[87, "matflow.Workflow.id_"]], "input_files_path (matflow.workflow property)": [[87, "matflow.Workflow.input_files_path"]], "is_parameter_set() (matflow.workflow method)": [[87, "matflow.Workflow.is_parameter_set"]], "list_jobscripts() (matflow.workflow method)": [[87, "matflow.Workflow.list_jobscripts"]], "list_task_jobscripts() (matflow.workflow method)": [[87, "matflow.Workflow.list_task_jobscripts"]], "loops (matflow.workflow property)": [[87, "matflow.Workflow.loops"]], "name (matflow.workflow property)": [[87, "matflow.Workflow.name"]], "num_ears (matflow.workflow property)": [[87, "matflow.Workflow.num_EARs"]], "num_added_tasks (matflow.workflow property)": [[87, "matflow.Workflow.num_added_tasks"]], "num_element_iterations (matflow.workflow property)": [[87, "matflow.Workflow.num_element_iterations"]], "num_elements (matflow.workflow property)": [[87, "matflow.Workflow.num_elements"]], "num_loops (matflow.workflow property)": [[87, "matflow.Workflow.num_loops"]], "num_submissions (matflow.workflow property)": [[87, "matflow.Workflow.num_submissions"]], "num_tasks (matflow.workflow property)": [[87, "matflow.Workflow.num_tasks"]], "process_shell_parameter_output() (matflow.workflow method)": [[87, "matflow.Workflow.process_shell_parameter_output"]], "rechunk() (matflow.workflow method)": [[87, "matflow.Workflow.rechunk"]], "rechunk_parameter_base() (matflow.workflow method)": [[87, "matflow.Workflow.rechunk_parameter_base"]], "rechunk_runs() (matflow.workflow method)": [[87, "matflow.Workflow.rechunk_runs"]], "reload() (matflow.workflow method)": [[87, "matflow.Workflow.reload"]], "resolve_jobscripts() (matflow.workflow method)": [[87, "matflow.Workflow.resolve_jobscripts"]], "save_parameter() (matflow.workflow method)": [[87, "matflow.Workflow.save_parameter"]], "set_ear_end() (matflow.workflow method)": [[87, "matflow.Workflow.set_EAR_end"]], "set_ear_skip() (matflow.workflow method)": [[87, "matflow.Workflow.set_EAR_skip"]], "set_ear_start() (matflow.workflow method)": [[87, "matflow.Workflow.set_EAR_start"]], "set_ears_initialised() (matflow.workflow method)": [[87, "matflow.Workflow.set_EARs_initialised"]], "set_multi_run_ends() (matflow.workflow method)": [[87, "matflow.Workflow.set_multi_run_ends"]], "set_multi_run_starts() (matflow.workflow method)": [[87, "matflow.Workflow.set_multi_run_starts"]], "set_parameter_value() (matflow.workflow method)": [[87, "matflow.Workflow.set_parameter_value"]], "set_parameter_values() (matflow.workflow method)": [[87, "matflow.Workflow.set_parameter_values"]], "show_all_ear_statuses() (matflow.workflow method)": [[87, "matflow.Workflow.show_all_EAR_statuses"]], "store_format (matflow.workflow property)": [[87, "matflow.Workflow.store_format"]], "submissions (matflow.workflow property)": [[87, "matflow.Workflow.submissions"]], "submissions_path (matflow.workflow property)": [[87, "matflow.Workflow.submissions_path"]], "submit() (matflow.workflow method)": [[87, "matflow.Workflow.submit"]], "task_artifacts_path (matflow.workflow property)": [[87, "matflow.Workflow.task_artifacts_path"]], "tasks (matflow.workflow property)": [[87, "matflow.Workflow.tasks"]], "template (matflow.workflow property)": [[87, "matflow.Workflow.template"]], "template_components (matflow.workflow property)": [[87, "matflow.Workflow.template_components"]], "temporary_rename() (matflow.workflow class method)": [[87, "matflow.Workflow.temporary_rename"]], "ts_fmt (matflow.workflow property)": [[87, "matflow.Workflow.ts_fmt"]], "ts_name_fmt (matflow.workflow property)": [[87, "matflow.Workflow.ts_name_fmt"]], "unzip() (matflow.workflow method)": [[87, "matflow.Workflow.unzip"]], "url (matflow.workflow property)": [[87, "matflow.Workflow.url"]], "wait() (matflow.workflow method)": [[87, "matflow.Workflow.wait"]], "zip() (matflow.workflow method)": [[87, "matflow.Workflow.zip"]], "workflowblueprint (class in matflow)": [[88, "matflow.WorkflowBlueprint"]], "workflow_template (matflow.workflowblueprint attribute)": [[88, "matflow.WorkflowBlueprint.workflow_template"]], "workflowloop (class in matflow)": [[89, "matflow.WorkflowLoop"]], "add_iteration() (matflow.workflowloop method)": [[89, "matflow.WorkflowLoop.add_iteration"]], "downstream_tasks (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.downstream_tasks"]], "get_child_loops() (matflow.workflowloop method)": [[89, "matflow.WorkflowLoop.get_child_loops"]], "get_element_ids() (matflow.workflowloop method)": [[89, "matflow.WorkflowLoop.get_element_IDs"]], "get_elements() (matflow.workflowloop method)": [[89, "matflow.WorkflowLoop.get_elements"]], "get_parent_loops() (matflow.workflowloop method)": [[89, "matflow.WorkflowLoop.get_parent_loops"]], "index (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.index"]], "iterable_parameters (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.iterable_parameters"]], "name (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.name"]], "new_empty_loop() (matflow.workflowloop class method)": [[89, "matflow.WorkflowLoop.new_empty_loop"]], "num_added_iterations (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.num_added_iterations"]], "num_iterations (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.num_iterations"]], "output_parameters (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.output_parameters"]], "parents (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.parents"]], "skip_downstream_iterations() (matflow.workflowloop method)": [[89, "matflow.WorkflowLoop.skip_downstream_iterations"]], "task_indices (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.task_indices"]], "task_insert_ids (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.task_insert_IDs"]], "task_objects (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.task_objects"]], "template (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.template"]], "test_termination() (matflow.workflowloop method)": [[89, "matflow.WorkflowLoop.test_termination"]], "upstream_tasks (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.upstream_tasks"]], "workflow (matflow.workflowloop property)": [[89, "matflow.WorkflowLoop.workflow"]], "workflowlooplist (class in matflow)": [[90, "matflow.WorkflowLoopList"]], "add_object() (matflow.workflowlooplist method)": [[90, "matflow.WorkflowLoopList.add_object"]], "add_objects() (matflow.workflowlooplist method)": [[90, "matflow.WorkflowLoopList.add_objects"]], "from_json_like() (matflow.workflowlooplist class method)": [[90, "matflow.WorkflowLoopList.from_json_like"]], "get() (matflow.workflowlooplist method)": [[90, "matflow.WorkflowLoopList.get"]], "get_all() (matflow.workflowlooplist method)": [[90, "matflow.WorkflowLoopList.get_all"]], "list_attrs() (matflow.workflowlooplist method)": [[90, "matflow.WorkflowLoopList.list_attrs"]], "to_dict() (matflow.workflowlooplist method)": [[90, "matflow.WorkflowLoopList.to_dict"]], "to_json_like() (matflow.workflowlooplist method)": [[90, "matflow.WorkflowLoopList.to_json_like"]], "workflowtask (class in matflow)": [[91, "matflow.WorkflowTask"]], "add_elements() (matflow.workflowtask method)": [[91, "matflow.WorkflowTask.add_elements"]], "dir_name (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.dir_name"]], "downstream_tasks (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.downstream_tasks"]], "element_ids (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.element_IDs"]], "elements (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.elements"]], "ensure_input_sources() (matflow.workflowtask method)": [[91, "matflow.WorkflowTask.ensure_input_sources"]], "generate_new_elements() (matflow.workflowtask method)": [[91, "matflow.WorkflowTask.generate_new_elements"]], "get() (matflow.workflowtask method)": [[91, "matflow.WorkflowTask.get"]], "get_all_element_iterations() (matflow.workflowtask method)": [[91, "matflow.WorkflowTask.get_all_element_iterations"]], "get_dependent_elements() (matflow.workflowtask method)": [[91, "matflow.WorkflowTask.get_dependent_elements"]], "get_dependent_tasks() (matflow.workflowtask method)": [[91, "matflow.WorkflowTask.get_dependent_tasks"]], "get_dir_name() (matflow.workflowtask method)": [[91, "matflow.WorkflowTask.get_dir_name"]], "get_element_dependencies() (matflow.workflowtask method)": [[91, "matflow.WorkflowTask.get_element_dependencies"]], "get_task_dependencies() (matflow.workflowtask method)": [[91, "matflow.WorkflowTask.get_task_dependencies"]], "index (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.index"]], "initialise_ears() (matflow.workflowtask method)": [[91, "matflow.WorkflowTask.initialise_EARs"]], "inputs (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.inputs"]], "insert_id (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.insert_ID"]], "name (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.name"]], "new_empty_task() (matflow.workflowtask class method)": [[91, "matflow.WorkflowTask.new_empty_task"]], "num_actions (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.num_actions"]], "num_element_sets (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.num_element_sets"]], "num_elements (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.num_elements"]], "outputs (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.outputs"]], "resolve_element_data_indices() (matflow.workflowtask static method)": [[91, "matflow.WorkflowTask.resolve_element_data_indices"]], "template (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.template"]], "unique_name (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.unique_name"]], "upstream_tasks (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.upstream_tasks"]], "workflow (matflow.workflowtask property)": [[91, "matflow.WorkflowTask.workflow"]], "workflowtasklist (class in matflow)": [[92, "matflow.WorkflowTaskList"]], "add_object() (matflow.workflowtasklist method)": [[92, "matflow.WorkflowTaskList.add_object"]], "add_objects() (matflow.workflowtasklist method)": [[92, "matflow.WorkflowTaskList.add_objects"]], "from_json_like() (matflow.workflowtasklist class method)": [[92, "matflow.WorkflowTaskList.from_json_like"]], "get() (matflow.workflowtasklist method)": [[92, "matflow.WorkflowTaskList.get"]], "get_all() (matflow.workflowtasklist method)": [[92, "matflow.WorkflowTaskList.get_all"]], "list_attrs() (matflow.workflowtasklist method)": [[92, "matflow.WorkflowTaskList.list_attrs"]], "to_dict() (matflow.workflowtasklist method)": [[92, "matflow.WorkflowTaskList.to_dict"]], "to_json_like() (matflow.workflowtasklist method)": [[92, "matflow.WorkflowTaskList.to_json_like"]], "workflowtemplate (class in matflow)": [[93, "matflow.WorkflowTemplate"]], "config (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.config"]], "doc (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.doc"]], "env_presets (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.env_presets"]], "environments (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.environments"]], "from_json_file() (matflow.workflowtemplate class method)": [[93, "matflow.WorkflowTemplate.from_JSON_file"]], "from_json_string() (matflow.workflowtemplate class method)": [[93, "matflow.WorkflowTemplate.from_JSON_string"]], "from_yaml_file() (matflow.workflowtemplate class method)": [[93, "matflow.WorkflowTemplate.from_YAML_file"]], "from_yaml_string() (matflow.workflowtemplate class method)": [[93, "matflow.WorkflowTemplate.from_YAML_string"]], "from_file() (matflow.workflowtemplate class method)": [[93, "matflow.WorkflowTemplate.from_file"]], "from_json_like() (matflow.workflowtemplate class method)": [[93, "matflow.WorkflowTemplate.from_json_like"]], "loops (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.loops"]], "merge_envs (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.merge_envs"]], "merge_resources (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.merge_resources"]], "name (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.name"]], "resources (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.resources"]], "source_file (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.source_file"]], "store_kwargs (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.store_kwargs"]], "tasks (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.tasks"]], "to_dict() (matflow.workflowtemplate method)": [[93, "matflow.WorkflowTemplate.to_dict"]], "to_json_like() (matflow.workflowtemplate method)": [[93, "matflow.WorkflowTemplate.to_json_like"]], "workflow (matflow.workflowtemplate attribute)": [[93, "matflow.WorkflowTemplate.workflow"]], "app (in module matflow)": [[94, "matflow.app"]], "cancel() (in module matflow)": [[95, "matflow.cancel"]], "matflow.cli": [[96, "module-matflow.cli"]], "get_os_info() (in module matflow)": [[97, "matflow.get_OS_info"]], "get_known_submissions() (in module matflow)": [[98, "matflow.get_known_submissions"]], "get_shell_info() (in module matflow)": [[99, "matflow.get_shell_info"]], "make_and_submit_demo_workflow() (in module matflow)": [[100, "matflow.make_and_submit_demo_workflow"]], "make_and_submit_workflow() (in module matflow)": [[101, "matflow.make_and_submit_workflow"]], "make_demo_workflow() (in module matflow)": [[102, "matflow.make_demo_workflow"]], "make_workflow() (in module matflow)": [[103, "matflow.make_workflow"]], "matflow.param_classes": [[104, "module-matflow.param_classes"]], "matflow.param_classes.load": [[105, "module-matflow.param_classes.load"]], "loadcase (class in matflow.param_classes.load)": [[106, "matflow.param_classes.load.LoadCase"]], "biaxial() (matflow.param_classes.load.loadcase class method)": [[106, "matflow.param_classes.load.LoadCase.biaxial"]], "create_damask_loading_plan() (matflow.param_classes.load.loadcase method)": [[106, "matflow.param_classes.load.LoadCase.create_damask_loading_plan"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.load.loadcase class method)": [[106, "matflow.param_classes.load.LoadCase.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.param_classes.load.loadcase method)": [[106, "matflow.param_classes.load.LoadCase.dump_to_HDF5_group"]], "example_uniaxial() (matflow.param_classes.load.loadcase class method)": [[106, "matflow.param_classes.load.LoadCase.example_uniaxial"]], "multistep() (matflow.param_classes.load.loadcase class method)": [[106, "matflow.param_classes.load.LoadCase.multistep"]], "num_steps (matflow.param_classes.load.loadcase property)": [[106, "matflow.param_classes.load.LoadCase.num_steps"]], "planar_2d() (matflow.param_classes.load.loadcase class method)": [[106, "matflow.param_classes.load.LoadCase.planar_2D"]], "plane_strain() (matflow.param_classes.load.loadcase class method)": [[106, "matflow.param_classes.load.LoadCase.plane_strain"]], "prepare_json_dump() (matflow.param_classes.load.loadcase method)": [[106, "matflow.param_classes.load.LoadCase.prepare_JSON_dump"]], "random_2d() (matflow.param_classes.load.loadcase class method)": [[106, "matflow.param_classes.load.LoadCase.random_2D"]], "random_3d() (matflow.param_classes.load.loadcase class method)": [[106, "matflow.param_classes.load.LoadCase.random_3D"]], "save_from_hdf5_group() (matflow.param_classes.load.loadcase class method)": [[106, "matflow.param_classes.load.LoadCase.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.load.loadcase class method)": [[106, "matflow.param_classes.load.LoadCase.save_from_JSON"]], "steps (matflow.param_classes.load.loadcase attribute)": [[106, "matflow.param_classes.load.LoadCase.steps"]], "to_dict() (matflow.param_classes.load.loadcase method)": [[106, "matflow.param_classes.load.LoadCase.to_dict"]], "type (matflow.param_classes.load.loadcase property)": [[106, "matflow.param_classes.load.LoadCase.type"]], "types (matflow.param_classes.load.loadcase property)": [[106, "matflow.param_classes.load.LoadCase.types"]], "uniaxial() (matflow.param_classes.load.loadcase class method)": [[106, "matflow.param_classes.load.LoadCase.uniaxial"]], "uniaxial_cyclic() (matflow.param_classes.load.loadcase class method)": [[106, "matflow.param_classes.load.LoadCase.uniaxial_cyclic"]], "loadstep (class in matflow.param_classes.load)": [[107, "matflow.param_classes.load.LoadStep"]], "biaxial() (matflow.param_classes.load.loadstep class method)": [[107, "matflow.param_classes.load.LoadStep.biaxial"]], "direction (matflow.param_classes.load.loadstep attribute)": [[107, "matflow.param_classes.load.LoadStep.direction"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.load.loadstep class method)": [[107, "matflow.param_classes.load.LoadStep.dump_element_group_to_HDF5_group"]], "dump_frequency (matflow.param_classes.load.loadstep attribute)": [[107, "matflow.param_classes.load.LoadStep.dump_frequency"]], "dump_to_hdf5_group() (matflow.param_classes.load.loadstep method)": [[107, "matflow.param_classes.load.LoadStep.dump_to_HDF5_group"]], "example_uniaxial() (matflow.param_classes.load.loadstep class method)": [[107, "matflow.param_classes.load.LoadStep.example_uniaxial"]], "method_args (matflow.param_classes.load.loadstep property)": [[107, "matflow.param_classes.load.LoadStep.method_args"]], "method_name (matflow.param_classes.load.loadstep property)": [[107, "matflow.param_classes.load.LoadStep.method_name"]], "normal_direction (matflow.param_classes.load.loadstep attribute)": [[107, "matflow.param_classes.load.LoadStep.normal_direction"]], "num_increments (matflow.param_classes.load.loadstep attribute)": [[107, "matflow.param_classes.load.LoadStep.num_increments"]], "planar_2d() (matflow.param_classes.load.loadstep class method)": [[107, "matflow.param_classes.load.LoadStep.planar_2D"]], "plane_strain() (matflow.param_classes.load.loadstep class method)": [[107, "matflow.param_classes.load.LoadStep.plane_strain"]], "prepare_json_dump() (matflow.param_classes.load.loadstep method)": [[107, "matflow.param_classes.load.LoadStep.prepare_JSON_dump"]], "random_2d() (matflow.param_classes.load.loadstep class method)": [[107, "matflow.param_classes.load.LoadStep.random_2D"]], "random_3d() (matflow.param_classes.load.loadstep class method)": [[107, "matflow.param_classes.load.LoadStep.random_3D"]], "save_from_hdf5_group() (matflow.param_classes.load.loadstep class method)": [[107, "matflow.param_classes.load.LoadStep.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.load.loadstep class method)": [[107, "matflow.param_classes.load.LoadStep.save_from_JSON"]], "strain_like_tensor (matflow.param_classes.load.loadstep property)": [[107, "matflow.param_classes.load.LoadStep.strain_like_tensor"]], "stress (matflow.param_classes.load.loadstep attribute)": [[107, "matflow.param_classes.load.LoadStep.stress"]], "target_def_grad (matflow.param_classes.load.loadstep attribute)": [[107, "matflow.param_classes.load.LoadStep.target_def_grad"]], "target_def_grad_rate (matflow.param_classes.load.loadstep attribute)": [[107, "matflow.param_classes.load.LoadStep.target_def_grad_rate"]], "target_vel_grad (matflow.param_classes.load.loadstep attribute)": [[107, "matflow.param_classes.load.LoadStep.target_vel_grad"]], "to_dict() (matflow.param_classes.load.loadstep method)": [[107, "matflow.param_classes.load.LoadStep.to_dict"]], "total_time (matflow.param_classes.load.loadstep attribute)": [[107, "matflow.param_classes.load.LoadStep.total_time"]], "type (matflow.param_classes.load.loadstep property)": [[107, "matflow.param_classes.load.LoadStep.type"]], "uniaxial() (matflow.param_classes.load.loadstep class method)": [[107, "matflow.param_classes.load.LoadStep.uniaxial"]], "uniaxial_cyclic() (matflow.param_classes.load.loadstep class method)": [[107, "matflow.param_classes.load.LoadStep.uniaxial_cyclic"]], "def_grad_rate (matflow.param_classes.load.strainratemode attribute)": [[108, "matflow.param_classes.load.StrainRateMode.DEF_GRAD_RATE"]], "strainratemode (class in matflow.param_classes.load)": [[108, "matflow.param_classes.load.StrainRateMode"]], "vel_grad (matflow.param_classes.load.strainratemode attribute)": [[108, "matflow.param_classes.load.StrainRateMode.VEL_GRAD"]], "vel_grad_approx (matflow.param_classes.load.strainratemode attribute)": [[108, "matflow.param_classes.load.StrainRateMode.VEL_GRAD_APPROX"]], "symbol (matflow.param_classes.load.strainratemode attribute)": [[108, "matflow.param_classes.load.StrainRateMode.symbol"]], "value (matflow.param_classes.load.strainratemode property)": [[108, "matflow.param_classes.load.StrainRateMode.value"]], "matflow.param_classes.orientations": [[109, "module-matflow.param_classes.orientations"]], "bunge (matflow.param_classes.orientations.eulerdefinition attribute)": [[110, "matflow.param_classes.orientations.EulerDefinition.BUNGE"]], "eulerdefinition (class in matflow.param_classes.orientations)": [[110, "matflow.param_classes.orientations.EulerDefinition"]], "rotation_order (matflow.param_classes.orientations.eulerdefinition attribute)": [[110, "matflow.param_classes.orientations.EulerDefinition.rotation_order"]], "value (matflow.param_classes.orientations.eulerdefinition property)": [[110, "matflow.param_classes.orientations.EulerDefinition.value"]], "a (matflow.param_classes.orientations.latticedirection attribute)": [[111, "matflow.param_classes.orientations.LatticeDirection.A"]], "a_star (matflow.param_classes.orientations.latticedirection attribute)": [[111, "matflow.param_classes.orientations.LatticeDirection.A_STAR"]], "b (matflow.param_classes.orientations.latticedirection attribute)": [[111, "matflow.param_classes.orientations.LatticeDirection.B"]], "b_star (matflow.param_classes.orientations.latticedirection attribute)": [[111, "matflow.param_classes.orientations.LatticeDirection.B_STAR"]], "c (matflow.param_classes.orientations.latticedirection attribute)": [[111, "matflow.param_classes.orientations.LatticeDirection.C"]], "c_star (matflow.param_classes.orientations.latticedirection attribute)": [[111, "matflow.param_classes.orientations.LatticeDirection.C_STAR"]], "latticedirection (class in matflow.param_classes.orientations)": [[111, "matflow.param_classes.orientations.LatticeDirection"]], "orientationrepresentation (class in matflow.param_classes.orientations)": [[112, "matflow.param_classes.orientations.OrientationRepresentation"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.orientations.orientationrepresentation class method)": [[112, "matflow.param_classes.orientations.OrientationRepresentation.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.orientationrepresentation method)": [[112, "matflow.param_classes.orientations.OrientationRepresentation.dump_to_HDF5_group"]], "euler() (matflow.param_classes.orientations.orientationrepresentation class method)": [[112, "matflow.param_classes.orientations.OrientationRepresentation.euler"]], "euler_definition (matflow.param_classes.orientations.orientationrepresentation attribute)": [[112, "matflow.param_classes.orientations.OrientationRepresentation.euler_definition"]], "euler_is_degrees (matflow.param_classes.orientations.orientationrepresentation attribute)": [[112, "matflow.param_classes.orientations.OrientationRepresentation.euler_is_degrees"]], "prepare_json_dump() (matflow.param_classes.orientations.orientationrepresentation method)": [[112, "matflow.param_classes.orientations.OrientationRepresentation.prepare_JSON_dump"]], "quat_order (matflow.param_classes.orientations.orientationrepresentation attribute)": [[112, "matflow.param_classes.orientations.OrientationRepresentation.quat_order"]], "quaternion() (matflow.param_classes.orientations.orientationrepresentation class method)": [[112, "matflow.param_classes.orientations.OrientationRepresentation.quaternion"]], "save_from_hdf5_group() (matflow.param_classes.orientations.orientationrepresentation class method)": [[112, "matflow.param_classes.orientations.OrientationRepresentation.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.orientations.orientationrepresentation class method)": [[112, "matflow.param_classes.orientations.OrientationRepresentation.save_from_JSON"]], "to_dict() (matflow.param_classes.orientations.orientationrepresentation method)": [[112, "matflow.param_classes.orientations.OrientationRepresentation.to_dict"]], "type (matflow.param_classes.orientations.orientationrepresentation attribute)": [[112, "matflow.param_classes.orientations.OrientationRepresentation.type"]], "euler (matflow.param_classes.orientations.orientationrepresentationtype attribute)": [[113, "matflow.param_classes.orientations.OrientationRepresentationType.EULER"]], "orientationrepresentationtype (class in matflow.param_classes.orientations)": [[113, "matflow.param_classes.orientations.OrientationRepresentationType"]], "quaternion (matflow.param_classes.orientations.orientationrepresentationtype attribute)": [[113, "matflow.param_classes.orientations.OrientationRepresentationType.QUATERNION"]], "orientations (class in matflow.param_classes.orientations)": [[114, "matflow.param_classes.orientations.Orientations"]], "data (matflow.param_classes.orientations.orientations attribute)": [[114, "matflow.param_classes.orientations.Orientations.data"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.orientations.orientations class method)": [[114, "matflow.param_classes.orientations.Orientations.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.orientations method)": [[114, "matflow.param_classes.orientations.Orientations.dump_to_HDF5_group"]], "from_json_like() (matflow.param_classes.orientations.orientations class method)": [[114, "matflow.param_classes.orientations.Orientations.from_JSON_like"]], "from_file() (matflow.param_classes.orientations.orientations class method)": [[114, "matflow.param_classes.orientations.Orientations.from_file"]], "from_random() (matflow.param_classes.orientations.orientations class method)": [[114, "matflow.param_classes.orientations.Orientations.from_random"]], "prepare_json_dump() (matflow.param_classes.orientations.orientations method)": [[114, "matflow.param_classes.orientations.Orientations.prepare_JSON_dump"]], "quat_sample_random() (matflow.param_classes.orientations.orientations static method)": [[114, "matflow.param_classes.orientations.Orientations.quat_sample_random"]], "representation (matflow.param_classes.orientations.orientations attribute)": [[114, "matflow.param_classes.orientations.Orientations.representation"]], "save_from_hdf5_group() (matflow.param_classes.orientations.orientations class method)": [[114, "matflow.param_classes.orientations.Orientations.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.orientations.orientations class method)": [[114, "matflow.param_classes.orientations.Orientations.save_from_JSON"]], "to_dict() (matflow.param_classes.orientations.orientations method)": [[114, "matflow.param_classes.orientations.Orientations.to_dict"]], "unit_cell_alignment (matflow.param_classes.orientations.orientations attribute)": [[114, "matflow.param_classes.orientations.Orientations.unit_cell_alignment"]], "quatorder (class in matflow.param_classes.orientations)": [[115, "matflow.param_classes.orientations.QuatOrder"]], "scalar_vector (matflow.param_classes.orientations.quatorder attribute)": [[115, "matflow.param_classes.orientations.QuatOrder.SCALAR_VECTOR"]], "vector_scalar (matflow.param_classes.orientations.quatorder attribute)": [[115, "matflow.param_classes.orientations.QuatOrder.VECTOR_SCALAR"]], "unitcellalignment (class in matflow.param_classes.orientations)": [[116, "matflow.param_classes.orientations.UnitCellAlignment"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.orientations.unitcellalignment class method)": [[116, "matflow.param_classes.orientations.UnitCellAlignment.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.param_classes.orientations.unitcellalignment method)": [[116, "matflow.param_classes.orientations.UnitCellAlignment.dump_to_HDF5_group"]], "from_hex_convention_damask() (matflow.param_classes.orientations.unitcellalignment class method)": [[116, "matflow.param_classes.orientations.UnitCellAlignment.from_hex_convention_DAMASK"]], "from_hex_convention_mtex() (matflow.param_classes.orientations.unitcellalignment class method)": [[116, "matflow.param_classes.orientations.UnitCellAlignment.from_hex_convention_MTEX"]], "prepare_json_dump() (matflow.param_classes.orientations.unitcellalignment method)": [[116, "matflow.param_classes.orientations.UnitCellAlignment.prepare_JSON_dump"]], "save_from_hdf5_group() (matflow.param_classes.orientations.unitcellalignment class method)": [[116, "matflow.param_classes.orientations.UnitCellAlignment.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.orientations.unitcellalignment class method)": [[116, "matflow.param_classes.orientations.UnitCellAlignment.save_from_JSON"]], "to_dict() (matflow.param_classes.orientations.unitcellalignment method)": [[116, "matflow.param_classes.orientations.UnitCellAlignment.to_dict"]], "x (matflow.param_classes.orientations.unitcellalignment attribute)": [[116, "matflow.param_classes.orientations.UnitCellAlignment.x"]], "y (matflow.param_classes.orientations.unitcellalignment attribute)": [[116, "matflow.param_classes.orientations.UnitCellAlignment.y"]], "z (matflow.param_classes.orientations.unitcellalignment attribute)": [[116, "matflow.param_classes.orientations.UnitCellAlignment.z"]], "matflow.param_classes.seeds": [[117, "module-matflow.param_classes.seeds"]], "microstructureseeds (class in matflow.param_classes.seeds)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds"]], "box_size (matflow.param_classes.seeds.microstructureseeds attribute)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.box_size"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.seeds.microstructureseeds class method)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.param_classes.seeds.microstructureseeds method)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.dump_to_HDF5_group"]], "from_json_like() (matflow.param_classes.seeds.microstructureseeds class method)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.from_JSON_like"]], "from_file() (matflow.param_classes.seeds.microstructureseeds class method)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.from_file"]], "from_random() (matflow.param_classes.seeds.microstructureseeds class method)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.from_random"]], "num_seeds (matflow.param_classes.seeds.microstructureseeds property)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.num_seeds"]], "orientations (matflow.param_classes.seeds.microstructureseeds attribute)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.orientations"]], "phase_label (matflow.param_classes.seeds.microstructureseeds attribute)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.phase_label"]], "position (matflow.param_classes.seeds.microstructureseeds attribute)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.position"]], "prepare_json_dump() (matflow.param_classes.seeds.microstructureseeds method)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.prepare_JSON_dump"]], "random_seed (matflow.param_classes.seeds.microstructureseeds attribute)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.random_seed"]], "save_from_hdf5_group() (matflow.param_classes.seeds.microstructureseeds class method)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.seeds.microstructureseeds class method)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.save_from_JSON"]], "show() (matflow.param_classes.seeds.microstructureseeds method)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.show"]], "to_dict() (matflow.param_classes.seeds.microstructureseeds method)": [[118, "matflow.param_classes.seeds.MicrostructureSeeds.to_dict"]], "matflow.param_classes.single_crystal_parameters": [[119, "module-matflow.param_classes.single_crystal_parameters"]], "perturbation (class in matflow.param_classes.single_crystal_parameters)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation"]], "clear() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.clear"]], "copy() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.copy"]], "fromkeys() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.fromkeys"]], "get() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.get"]], "items() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.items"]], "keys() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.keys"]], "multiplicative (matflow.param_classes.single_crystal_parameters.perturbation attribute)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.multiplicative"]], "path (matflow.param_classes.single_crystal_parameters.perturbation attribute)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.path"]], "pop() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.pop"]], "popitem() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.popitem"]], "setdefault() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.setdefault"]], "update() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.update"]], "values() (matflow.param_classes.single_crystal_parameters.perturbation method)": [[120, "matflow.param_classes.single_crystal_parameters.Perturbation.values"]], "singlecrystalparameters (class in matflow.param_classes.single_crystal_parameters)": [[121, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters"]], "as_base() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[121, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.as_base"]], "base (matflow.param_classes.single_crystal_parameters.singlecrystalparameters property)": [[121, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.base"]], "dump_element_group_to_hdf5_group() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters class method)": [[121, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.dump_element_group_to_HDF5_group"]], "dump_to_hdf5_group() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[121, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.dump_to_HDF5_group"]], "perturbations (matflow.param_classes.single_crystal_parameters.singlecrystalparameters property)": [[121, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.perturbations"]], "phases (matflow.param_classes.single_crystal_parameters.singlecrystalparameters property)": [[121, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.phases"]], "prepare_json_dump() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[121, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.prepare_JSON_dump"]], "save_from_hdf5_group() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters class method)": [[121, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.save_from_HDF5_group"]], "save_from_json() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters class method)": [[121, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.save_from_JSON"]], "to_dict() (matflow.param_classes.single_crystal_parameters.singlecrystalparameters method)": [[121, "matflow.param_classes.single_crystal_parameters.SingleCrystalParameters.to_dict"]], "matflow.param_classes.utils": [[122, "module-matflow.param_classes.utils"]], "masked_array_from_list() (in module matflow.param_classes.utils)": [[123, "matflow.param_classes.utils.masked_array_from_list"]], "run_hpcflow_tests() (in module matflow)": [[124, "matflow.run_hpcflow_tests"]], "run_tests() (in module matflow)": [[125, "matflow.run_tests"]], "show() (in module matflow)": [[126, "matflow.show"]], "show_legend() (in module matflow)": [[127, "matflow.show_legend"]], "submit_workflow() (in module matflow)": [[128, "matflow.submit_workflow"]], "matflow.tests": [[129, "module-matflow.tests"]], "matflow.tests.conftest": [[130, "module-matflow.tests.conftest"]], "load_case_1() (in module matflow.tests.conftest)": [[131, "matflow.tests.conftest.load_case_1"]], "new_null_config() (in module matflow.tests.conftest)": [[132, "matflow.tests.conftest.new_null_config"]], "null_config() (in module matflow.tests.conftest)": [[133, "matflow.tests.conftest.null_config"]], "orientations_1() (in module matflow.tests.conftest)": [[134, "matflow.tests.conftest.orientations_1"]], "pytest_addoption() (in module matflow.tests.conftest)": [[135, "matflow.tests.conftest.pytest_addoption"]], "pytest_collection_modifyitems() (in module matflow.tests.conftest)": [[136, "matflow.tests.conftest.pytest_collection_modifyitems"]], "pytest_configure() (in module matflow.tests.conftest)": [[137, "matflow.tests.conftest.pytest_configure"]], "pytest_unconfigure() (in module matflow.tests.conftest)": [[138, "matflow.tests.conftest.pytest_unconfigure"]], "seeds_1() (in module matflow.tests.conftest)": [[139, "matflow.tests.conftest.seeds_1"]], "matflow.tests.data": [[140, "module-matflow.tests.data"]], "matflow.tests.test_cli": [[141, "module-matflow.tests.test_cli"]], "test_hpcflow_version() (in module matflow.tests.test_cli)": [[142, "matflow.tests.test_cli.test_hpcflow_version"]], "test_version() (in module matflow.tests.test_cli)": [[143, "matflow.tests.test_cli.test_version"]], "matflow.tests.test_utils": [[144, "module-matflow.tests.test_utils"]], "test_masked_array_from_list_1d() (in module matflow.tests.test_utils)": [[145, "matflow.tests.test_utils.test_masked_array_from_list_1D"]], "test_masked_array_from_list_1d_masked() (in module matflow.tests.test_utils)": [[146, "matflow.tests.test_utils.test_masked_array_from_list_1D_masked"]], "test_masked_array_from_list_2d() (in module matflow.tests.test_utils)": [[147, "matflow.tests.test_utils.test_masked_array_from_list_2D"]], "test_masked_array_from_list_2d_masked() (in module matflow.tests.test_utils)": [[148, "matflow.tests.test_utils.test_masked_array_from_list_2D_masked"]], "matflow.tests.utils": [[149, "module-matflow.tests.utils"]], "--add-submission": [[151, "cmdoption-matflow-demo-workflow-make-add-submission"], [151, "cmdoption-matflow-make-add-submission"]], "--add-to-known": [[151, "cmdoption-matflow-demo-workflow-go-add-to-known"], [151, "cmdoption-matflow-go-add-to-known"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"]], "--all": [[151, "cmdoption-matflow-config-get-all"], [151, "cmdoption-matflow-demo-data-cache-all"]], "--array-idx": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stderr-array-idx"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stdout-array-idx"]], "--backup": [[151, "cmdoption-matflow-rechunk-backup"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup"]], "--cancel": [[151, "cmdoption-matflow-demo-workflow-go-cancel"], [151, "cmdoption-matflow-go-cancel"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-cancel"]], "--chunk-size": [[151, "cmdoption-matflow-rechunk-chunk-size"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-chunk-size"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-chunk-size"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-chunk-size"]], "--click-exit-code": [[151, "cmdoption-matflow-internal-noop-click-exit-code"]], "--config-dir": [[151, "cmdoption-matflow-config-dir"], [151, "cmdoption-matflow-manage-get-config-path-config-dir"], [151, "cmdoption-matflow-manage-reset-config-config-dir"]], "--config-key": [[151, "cmdoption-matflow-config-key"]], "--defaults": [[151, "cmdoption-matflow-config-add-scheduler-defaults"], [151, "cmdoption-matflow-config-add-shell-defaults"], [151, "cmdoption-matflow-config-add-shell-wsl-defaults"]], "--doc": [[151, "cmdoption-matflow-demo-workflow-copy-doc"], [151, "cmdoption-matflow-demo-workflow-show-doc"]], "--element": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element"]], "--env-source-file": [[151, "cmdoption-matflow-configure-env-env-source-file"]], "--exclude-os": [[151, "cmdoption-matflow-submission-shell-info-exclude-os"]], "--file": [[151, "cmdoption-matflow-config-get-file"], [151, "cmdoption-matflow-helper-pid-f"]], "--force-array": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-force-array"]], "--format": [[151, "cmdoption-matflow-demo-workflow-go-format"], [151, "cmdoption-matflow-demo-workflow-make-format"], [151, "cmdoption-matflow-go-format"], [151, "cmdoption-matflow-make-format"]], "--full": [[151, "cmdoption-matflow-show-f"]], "--help": [[151, "cmdoption-matflow-help"]], "--hostname": [[151, "cmdoption-matflow-manage-clear-cache-hostname"]], "--hpcflow-version": [[151, "cmdoption-matflow-hpcflow-version"]], "--include-execute": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-execute"], [151, "cmdoption-matflow-zip-include-execute"]], "--include-rechunk-backups": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-rechunk-backups"], [151, "cmdoption-matflow-zip-include-rechunk-backups"]], "--infile1": [[151, "cmdoption-matflow-demo-software-doSomething-i1"]], "--infile2": [[151, "cmdoption-matflow-demo-software-doSomething-i2"]], "--jobscripts": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-jobscripts"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-jobscripts"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "--js-parallelism": [[151, "cmdoption-matflow-demo-workflow-go-js-parallelism"], [151, "cmdoption-matflow-go-js-parallelism"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-js-parallelism"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism"]], "--json": [[151, "cmdoption-matflow-config-append-json"], [151, "cmdoption-matflow-config-prepend-json"], [151, "cmdoption-matflow-config-set-json"], [151, "cmdoption-matflow-config-update-json"], [151, "cmdoption-matflow-submission-get-known-json"]], "--legend": [[151, "cmdoption-matflow-show-legend"]], "--list": [[151, "cmdoption-matflow-demo-data-l"], [151, "cmdoption-matflow-demo-workflow-l"]], "--log": [[151, "cmdoption-matflow-unzip-log"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-log"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log"], [151, "cmdoption-matflow-zip-log"]], "--max-js": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-max-js"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-max-js"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-max-js"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-max-js"]], "--max-recent": [[151, "cmdoption-matflow-show-r"]], "--metadata": [[151, "cmdoption-matflow-config-get-metadata"]], "--name": [[151, "cmdoption-matflow-demo-workflow-go-name"], [151, "cmdoption-matflow-demo-workflow-make-name"], [151, "cmdoption-matflow-go-name"], [151, "cmdoption-matflow-make-name"], [151, "cmdoption-matflow-open-env-source-name"]], "--new": [[151, "cmdoption-matflow-config-import-new"]], "--no-add-to-known": [[151, "cmdoption-matflow-demo-workflow-go-add-to-known"], [151, "cmdoption-matflow-go-add-to-known"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"]], "--no-backup": [[151, "cmdoption-matflow-rechunk-backup"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup"]], "--no-callback": [[151, "cmdoption-matflow-config-no-callback"]], "--no-doc": [[151, "cmdoption-matflow-demo-workflow-copy-doc"], [151, "cmdoption-matflow-demo-workflow-show-doc"]], "--no-rename": [[151, "cmdoption-matflow-config-import-rename"]], "--no-status": [[151, "cmdoption-matflow-cancel-status"], [151, "cmdoption-matflow-demo-workflow-go-status"], [151, "cmdoption-matflow-demo-workflow-make-status"], [151, "cmdoption-matflow-go-status"], [151, "cmdoption-matflow-make-status"], [151, "cmdoption-matflow-rechunk-status"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-status"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status"]], "--no-syntax": [[151, "cmdoption-matflow-demo-workflow-show-syntax"]], "--no-update": [[151, "cmdoption-matflow-show-no-update"]], "--os-info": [[151, "cmdoption-matflow-submission-os-info"]], "--out": [[151, "cmdoption-matflow-demo-software-doSomething-o"]], "--overwrite": [[151, "cmdoption-matflow-demo-workflow-go-overwrite"], [151, "cmdoption-matflow-demo-workflow-make-overwrite"], [151, "cmdoption-matflow-go-overwrite"], [151, "cmdoption-matflow-make-overwrite"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-overwrite"], [151, "cmdoption-matflow-zip-overwrite"]], "--path": [[151, "cmdoption-matflow-config-init-path"], [151, "cmdoption-matflow-config-open-path"], [151, "cmdoption-matflow-demo-workflow-go-path"], [151, "cmdoption-matflow-demo-workflow-make-path"], [151, "cmdoption-matflow-go-path"], [151, "cmdoption-matflow-make-path"], [151, "cmdoption-matflow-open-config-path"], [151, "cmdoption-matflow-open-demo-data-cache-dir-path"], [151, "cmdoption-matflow-open-env-source-path"], [151, "cmdoption-matflow-open-known-subs-path"], [151, "cmdoption-matflow-open-log-path"], [151, "cmdoption-matflow-open-user-cache-dir-path"], [151, "cmdoption-matflow-open-user-cache-hostname-dir-path"], [151, "cmdoption-matflow-open-user-data-dir-path"], [151, "cmdoption-matflow-open-user-data-hostname-dir-path"], [151, "cmdoption-matflow-open-user-runtime-dir-path"], [151, "cmdoption-matflow-open-workflow-path"], [151, "cmdoption-matflow-unzip-path"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-path"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-path"], [151, "cmdoption-matflow-zip-path"]], "--print-idx": [[151, "cmdoption-matflow-demo-workflow-go-print-idx"], [151, "cmdoption-matflow-go-print-idx"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-print-idx"]], "--raise": [[151, "cmdoption-matflow-internal-noop-raise"]], "--ref-type": [[151, "cmdoption-matflow-cancel-r"], [151, "cmdoption-matflow-open-workflow-r"], [151, "cmdoption-matflow-rechunk-r"], [151, "cmdoption-matflow-workflow-r"], [151, "cmdoption-matflow-zip-r"]], "--rename": [[151, "cmdoption-matflow-config-import-rename"]], "--run-time-info": [[151, "cmdoption-matflow-run-time-info"]], "--setup": [[151, "cmdoption-matflow-configure-env-setup"]], "--sleep": [[151, "cmdoption-matflow-internal-noop-sleep"]], "--status": [[151, "cmdoption-matflow-cancel-status"], [151, "cmdoption-matflow-demo-workflow-go-status"], [151, "cmdoption-matflow-demo-workflow-make-status"], [151, "cmdoption-matflow-go-status"], [151, "cmdoption-matflow-make-status"], [151, "cmdoption-matflow-rechunk-status"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-status"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status"]], "--std-stream": [[151, "cmdoption-matflow-std-stream"]], "--stderr": [[151, "cmdoption-matflow-internal-workflow-PATH-save-parameter-stderr"]], "--store": [[151, "cmdoption-matflow-demo-workflow-go-store"], [151, "cmdoption-matflow-demo-workflow-make-store"], [151, "cmdoption-matflow-go-store"], [151, "cmdoption-matflow-make-store"]], "--string": [[151, "cmdoption-matflow-go-string"], [151, "cmdoption-matflow-make-string"]], "--sub-idx": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-sub-idx"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-sub-idx"]], "--submission": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission"]], "--syntax": [[151, "cmdoption-matflow-demo-workflow-show-syntax"]], "--task": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task"]], "--task-names": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-task-names"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-task-names"]], "--tasks": [[151, "cmdoption-matflow-demo-workflow-go-tasks"], [151, "cmdoption-matflow-go-tasks"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-tasks"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-tasks"]], "--timeit": [[151, "cmdoption-matflow-timeit"]], "--timeit-file": [[151, "cmdoption-matflow-timeit-file"]], "--timeout": [[151, "cmdoption-matflow-helper-restart-timeout"], [151, "cmdoption-matflow-helper-run-timeout"], [151, "cmdoption-matflow-helper-start-timeout"]], "--timeout-check-interval": [[151, "cmdoption-matflow-helper-restart-timeout-check-interval"], [151, "cmdoption-matflow-helper-run-timeout-check-interval"], [151, "cmdoption-matflow-helper-start-timeout-check-interval"]], "--ts-fmt": [[151, "cmdoption-matflow-demo-workflow-go-ts-fmt"], [151, "cmdoption-matflow-demo-workflow-make-ts-fmt"], [151, "cmdoption-matflow-go-ts-fmt"], [151, "cmdoption-matflow-make-ts-fmt"]], "--ts-name-fmt": [[151, "cmdoption-matflow-demo-workflow-go-ts-name-fmt"], [151, "cmdoption-matflow-demo-workflow-make-ts-name-fmt"], [151, "cmdoption-matflow-go-ts-name-fmt"], [151, "cmdoption-matflow-make-ts-name-fmt"]], "--use-current-env": [[151, "cmdoption-matflow-configure-env-use-current-env"]], "--value": [[151, "cmdoption-matflow-demo-software-doSomething-v"]], "--var": [[151, "cmdoption-matflow-demo-workflow-go-v"], [151, "cmdoption-matflow-demo-workflow-make-v"], [151, "cmdoption-matflow-go-v"], [151, "cmdoption-matflow-make-v"]], "--version": [[151, "cmdoption-matflow-version"]], "--wait": [[151, "cmdoption-matflow-demo-workflow-go-wait"], [151, "cmdoption-matflow-go-wait"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait"]], "--watch-interval": [[151, "cmdoption-matflow-helper-restart-watch-interval"], [151, "cmdoption-matflow-helper-run-watch-interval"], [151, "cmdoption-matflow-helper-start-watch-interval"]], "--width": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-width"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-width"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-width"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-width"]], "--with-config": [[151, "cmdoption-matflow-with-config"]], "-f": [[151, "cmdoption-matflow-helper-pid-f"], [151, "cmdoption-matflow-show-f"]], "-i1": [[151, "cmdoption-matflow-demo-software-doSomething-i1"]], "-i2": [[151, "cmdoption-matflow-demo-software-doSomething-i2"]], "-j": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "-l": [[151, "cmdoption-matflow-demo-data-l"], [151, "cmdoption-matflow-demo-workflow-l"]], "-o": [[151, "cmdoption-matflow-demo-software-doSomething-o"]], "-r": [[151, "cmdoption-matflow-cancel-r"], [151, "cmdoption-matflow-open-workflow-r"], [151, "cmdoption-matflow-rechunk-r"], [151, "cmdoption-matflow-show-r"], [151, "cmdoption-matflow-workflow-r"], [151, "cmdoption-matflow-zip-r"]], "-v": [[151, "cmdoption-matflow-demo-software-doSomething-v"], [151, "cmdoption-matflow-demo-workflow-go-v"], [151, "cmdoption-matflow-demo-workflow-make-v"], [151, "cmdoption-matflow-go-v"], [151, "cmdoption-matflow-make-v"]], "block_action_idx": [[151, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-BLOCK_ACTION_IDX"]], "block_idx": [[151, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-BLOCK_IDX"]], "cmd_idx": [[151, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-CMD_IDX"]], "destination": [[151, "cmdoption-matflow-demo-data-copy-arg-DESTINATION"], [151, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION"]], "ear_id": [[151, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID"]], "file_name": [[151, "cmdoption-matflow-demo-data-cache-arg-FILE_NAME"], [151, "cmdoption-matflow-demo-data-copy-arg-FILE_NAME"]], "file_path": [[151, "cmdoption-matflow-config-import-arg-FILE_PATH"]], "index": [[151, "cmdoption-matflow-config-pop-arg-INDEX"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX"]], "jobscript_idx": [[151, "cmdoption-matflow-internal-workflow-PATH-execute-combined-runs-arg-JOBSCRIPT_IDX"], [151, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-JOBSCRIPT_IDX"]], "js_idx": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX"]], "known_name": [[151, "cmdoption-matflow-config-init-arg-KNOWN_NAME"]], "name": [[151, "cmdoption-matflow-config-add-scheduler-arg-NAME"], [151, "cmdoption-matflow-config-add-shell-arg-NAME"], [151, "cmdoption-matflow-config-append-arg-NAME"], [151, "cmdoption-matflow-config-get-arg-NAME"], [151, "cmdoption-matflow-config-pop-arg-NAME"], [151, "cmdoption-matflow-config-prepend-arg-NAME"], [151, "cmdoption-matflow-config-set-arg-NAME"], [151, "cmdoption-matflow-config-unset-arg-NAME"], [151, "cmdoption-matflow-config-update-arg-NAME"], [151, "cmdoption-matflow-configure-env-arg-NAME"], [151, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME"]], "path": [[151, "cmdoption-matflow-internal-workflow-arg-PATH"]], "py_test_args": [[151, "cmdoption-matflow-test-arg-PY_TEST_ARGS"], [151, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS"]], "run_id": [[151, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-RUN_ID"]], "scheduler_name": [[151, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME"]], "sha": [[151, "cmdoption-matflow-config-set-github-demo-data-dir-arg-SHA"]], "shell_name": [[151, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME"]], "submission_idx": [[151, "cmdoption-matflow-internal-workflow-PATH-execute-combined-runs-arg-SUBMISSION_IDX"], [151, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-SUBMISSION_IDX"]], "sub_idx": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX"]], "template_file_or_str": [[151, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR"], [151, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR"]], "value": [[151, "cmdoption-matflow-config-append-arg-VALUE"], [151, "cmdoption-matflow-config-prepend-arg-VALUE"], [151, "cmdoption-matflow-config-set-arg-VALUE"], [151, "cmdoption-matflow-config-update-arg-VALUE"], [151, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE"]], "workflow_name": [[151, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME"], [151, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME"], [151, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME"], [151, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME"]], "workflow_path": [[151, "cmdoption-matflow-unzip-arg-WORKFLOW_PATH"]], "workflow_ref": [[151, "cmdoption-matflow-cancel-arg-WORKFLOW_REF"], [151, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF"], [151, "cmdoption-matflow-rechunk-arg-WORKFLOW_REF"], [151, "cmdoption-matflow-workflow-arg-WORKFLOW_REF"], [151, "cmdoption-matflow-zip-arg-WORKFLOW_REF"]], "matflow command line option": [[151, "cmdoption-matflow-config-dir"], [151, "cmdoption-matflow-config-key"], [151, "cmdoption-matflow-help"], [151, "cmdoption-matflow-hpcflow-version"], [151, "cmdoption-matflow-run-time-info"], [151, "cmdoption-matflow-std-stream"], [151, "cmdoption-matflow-timeit"], [151, "cmdoption-matflow-timeit-file"], [151, "cmdoption-matflow-version"], [151, "cmdoption-matflow-with-config"]], "matflow-cancel command line option": [[151, "cmdoption-matflow-cancel-arg-WORKFLOW_REF"], [151, "cmdoption-matflow-cancel-r"], [151, "cmdoption-matflow-cancel-status"]], "matflow-config command line option": [[151, "cmdoption-matflow-config-no-callback"]], "matflow-config-add-scheduler command line option": [[151, "cmdoption-matflow-config-add-scheduler-arg-NAME"], [151, "cmdoption-matflow-config-add-scheduler-defaults"]], "matflow-config-add-shell command line option": [[151, "cmdoption-matflow-config-add-shell-arg-NAME"], [151, "cmdoption-matflow-config-add-shell-defaults"]], "matflow-config-add-shell-wsl command line option": [[151, "cmdoption-matflow-config-add-shell-wsl-defaults"]], "matflow-config-append command line option": [[151, "cmdoption-matflow-config-append-arg-NAME"], [151, "cmdoption-matflow-config-append-arg-VALUE"], [151, "cmdoption-matflow-config-append-json"]], "matflow-config-get command line option": [[151, "cmdoption-matflow-config-get-all"], [151, "cmdoption-matflow-config-get-arg-NAME"], [151, "cmdoption-matflow-config-get-file"], [151, "cmdoption-matflow-config-get-metadata"]], "matflow-config-import command line option": [[151, "cmdoption-matflow-config-import-arg-FILE_PATH"], [151, "cmdoption-matflow-config-import-new"], [151, "cmdoption-matflow-config-import-rename"]], "matflow-config-init command line option": [[151, "cmdoption-matflow-config-init-arg-KNOWN_NAME"], [151, "cmdoption-matflow-config-init-path"]], "matflow-config-open command line option": [[151, "cmdoption-matflow-config-open-path"]], "matflow-config-pop command line option": [[151, "cmdoption-matflow-config-pop-arg-INDEX"], [151, "cmdoption-matflow-config-pop-arg-NAME"]], "matflow-config-prepend command line option": [[151, "cmdoption-matflow-config-prepend-arg-NAME"], [151, "cmdoption-matflow-config-prepend-arg-VALUE"], [151, "cmdoption-matflow-config-prepend-json"]], "matflow-config-set command line option": [[151, "cmdoption-matflow-config-set-arg-NAME"], [151, "cmdoption-matflow-config-set-arg-VALUE"], [151, "cmdoption-matflow-config-set-json"]], "matflow-config-set-github-demo-data-dir command line option": [[151, "cmdoption-matflow-config-set-github-demo-data-dir-arg-SHA"]], "matflow-config-unset command line option": [[151, "cmdoption-matflow-config-unset-arg-NAME"]], "matflow-config-update command line option": [[151, "cmdoption-matflow-config-update-arg-NAME"], [151, "cmdoption-matflow-config-update-arg-VALUE"], [151, "cmdoption-matflow-config-update-json"]], "matflow-configure-env command line option": [[151, "cmdoption-matflow-configure-env-arg-NAME"], [151, "cmdoption-matflow-configure-env-env-source-file"], [151, "cmdoption-matflow-configure-env-setup"], [151, "cmdoption-matflow-configure-env-use-current-env"]], "matflow-demo-data command line option": [[151, "cmdoption-matflow-demo-data-l"]], "matflow-demo-data-cache command line option": [[151, "cmdoption-matflow-demo-data-cache-all"], [151, "cmdoption-matflow-demo-data-cache-arg-FILE_NAME"]], "matflow-demo-data-copy command line option": [[151, "cmdoption-matflow-demo-data-copy-arg-DESTINATION"], [151, "cmdoption-matflow-demo-data-copy-arg-FILE_NAME"]], "matflow-demo-software-dosomething command line option": [[151, "cmdoption-matflow-demo-software-doSomething-i1"], [151, "cmdoption-matflow-demo-software-doSomething-i2"], [151, "cmdoption-matflow-demo-software-doSomething-o"], [151, "cmdoption-matflow-demo-software-doSomething-v"]], "matflow-demo-workflow command line option": [[151, "cmdoption-matflow-demo-workflow-l"]], "matflow-demo-workflow-copy command line option": [[151, "cmdoption-matflow-demo-workflow-copy-arg-DESTINATION"], [151, "cmdoption-matflow-demo-workflow-copy-arg-WORKFLOW_NAME"], [151, "cmdoption-matflow-demo-workflow-copy-doc"]], "matflow-demo-workflow-go command line option": [[151, "cmdoption-matflow-demo-workflow-go-add-to-known"], [151, "cmdoption-matflow-demo-workflow-go-arg-WORKFLOW_NAME"], [151, "cmdoption-matflow-demo-workflow-go-cancel"], [151, "cmdoption-matflow-demo-workflow-go-format"], [151, "cmdoption-matflow-demo-workflow-go-js-parallelism"], [151, "cmdoption-matflow-demo-workflow-go-name"], [151, "cmdoption-matflow-demo-workflow-go-overwrite"], [151, "cmdoption-matflow-demo-workflow-go-path"], [151, "cmdoption-matflow-demo-workflow-go-print-idx"], [151, "cmdoption-matflow-demo-workflow-go-status"], [151, "cmdoption-matflow-demo-workflow-go-store"], [151, "cmdoption-matflow-demo-workflow-go-tasks"], [151, "cmdoption-matflow-demo-workflow-go-ts-fmt"], [151, "cmdoption-matflow-demo-workflow-go-ts-name-fmt"], [151, "cmdoption-matflow-demo-workflow-go-v"], [151, "cmdoption-matflow-demo-workflow-go-wait"]], "matflow-demo-workflow-make command line option": [[151, "cmdoption-matflow-demo-workflow-make-add-submission"], [151, "cmdoption-matflow-demo-workflow-make-arg-WORKFLOW_NAME"], [151, "cmdoption-matflow-demo-workflow-make-format"], [151, "cmdoption-matflow-demo-workflow-make-name"], [151, "cmdoption-matflow-demo-workflow-make-overwrite"], [151, "cmdoption-matflow-demo-workflow-make-path"], [151, "cmdoption-matflow-demo-workflow-make-status"], [151, "cmdoption-matflow-demo-workflow-make-store"], [151, "cmdoption-matflow-demo-workflow-make-ts-fmt"], [151, "cmdoption-matflow-demo-workflow-make-ts-name-fmt"], [151, "cmdoption-matflow-demo-workflow-make-v"]], "matflow-demo-workflow-show command line option": [[151, "cmdoption-matflow-demo-workflow-show-arg-WORKFLOW_NAME"], [151, "cmdoption-matflow-demo-workflow-show-doc"], [151, "cmdoption-matflow-demo-workflow-show-syntax"]], "matflow-go command line option": [[151, "cmdoption-matflow-go-add-to-known"], [151, "cmdoption-matflow-go-arg-TEMPLATE_FILE_OR_STR"], [151, "cmdoption-matflow-go-cancel"], [151, "cmdoption-matflow-go-format"], [151, "cmdoption-matflow-go-js-parallelism"], [151, "cmdoption-matflow-go-name"], [151, "cmdoption-matflow-go-overwrite"], [151, "cmdoption-matflow-go-path"], [151, "cmdoption-matflow-go-print-idx"], [151, "cmdoption-matflow-go-status"], [151, "cmdoption-matflow-go-store"], [151, "cmdoption-matflow-go-string"], [151, "cmdoption-matflow-go-tasks"], [151, "cmdoption-matflow-go-ts-fmt"], [151, "cmdoption-matflow-go-ts-name-fmt"], [151, "cmdoption-matflow-go-v"], [151, "cmdoption-matflow-go-wait"]], "matflow-helper-pid command line option": [[151, "cmdoption-matflow-helper-pid-f"]], "matflow-helper-restart command line option": [[151, "cmdoption-matflow-helper-restart-timeout"], [151, "cmdoption-matflow-helper-restart-timeout-check-interval"], [151, "cmdoption-matflow-helper-restart-watch-interval"]], "matflow-helper-run command line option": [[151, "cmdoption-matflow-helper-run-timeout"], [151, "cmdoption-matflow-helper-run-timeout-check-interval"], [151, "cmdoption-matflow-helper-run-watch-interval"]], "matflow-helper-start command line option": [[151, "cmdoption-matflow-helper-start-timeout"], [151, "cmdoption-matflow-helper-start-timeout-check-interval"], [151, "cmdoption-matflow-helper-start-watch-interval"]], "matflow-internal-noop command line option": [[151, "cmdoption-matflow-internal-noop-click-exit-code"], [151, "cmdoption-matflow-internal-noop-raise"], [151, "cmdoption-matflow-internal-noop-sleep"]], "matflow-internal-workflow command line option": [[151, "cmdoption-matflow-internal-workflow-arg-PATH"]], "matflow-internal-workflow-path-execute-combined-runs command line option": [[151, "cmdoption-matflow-internal-workflow-PATH-execute-combined-runs-arg-JOBSCRIPT_IDX"], [151, "cmdoption-matflow-internal-workflow-PATH-execute-combined-runs-arg-SUBMISSION_IDX"]], "matflow-internal-workflow-path-execute-run command line option": [[151, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-BLOCK_ACTION_IDX"], [151, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-BLOCK_IDX"], [151, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-JOBSCRIPT_IDX"], [151, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-RUN_ID"], [151, "cmdoption-matflow-internal-workflow-PATH-execute-run-arg-SUBMISSION_IDX"]], "matflow-internal-workflow-path-save-parameter command line option": [[151, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-CMD_IDX"], [151, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-EAR_ID"], [151, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-NAME"], [151, "cmdoption-matflow-internal-workflow-PATH-save-parameter-arg-VALUE"], [151, "cmdoption-matflow-internal-workflow-PATH-save-parameter-stderr"]], "matflow-make command line option": [[151, "cmdoption-matflow-make-add-submission"], [151, "cmdoption-matflow-make-arg-TEMPLATE_FILE_OR_STR"], [151, "cmdoption-matflow-make-format"], [151, "cmdoption-matflow-make-name"], [151, "cmdoption-matflow-make-overwrite"], [151, "cmdoption-matflow-make-path"], [151, "cmdoption-matflow-make-status"], [151, "cmdoption-matflow-make-store"], [151, "cmdoption-matflow-make-string"], [151, "cmdoption-matflow-make-ts-fmt"], [151, "cmdoption-matflow-make-ts-name-fmt"], [151, "cmdoption-matflow-make-v"]], "matflow-manage-clear-cache command line option": [[151, "cmdoption-matflow-manage-clear-cache-hostname"]], "matflow-manage-get-config-path command line option": [[151, "cmdoption-matflow-manage-get-config-path-config-dir"]], "matflow-manage-reset-config command line option": [[151, "cmdoption-matflow-manage-reset-config-config-dir"]], "matflow-open-config command line option": [[151, "cmdoption-matflow-open-config-path"]], "matflow-open-demo-data-cache-dir command line option": [[151, "cmdoption-matflow-open-demo-data-cache-dir-path"]], "matflow-open-env-source command line option": [[151, "cmdoption-matflow-open-env-source-name"], [151, "cmdoption-matflow-open-env-source-path"]], "matflow-open-known-subs command line option": [[151, "cmdoption-matflow-open-known-subs-path"]], "matflow-open-log command line option": [[151, "cmdoption-matflow-open-log-path"]], "matflow-open-user-cache-dir command line option": [[151, "cmdoption-matflow-open-user-cache-dir-path"]], "matflow-open-user-cache-hostname-dir command line option": [[151, "cmdoption-matflow-open-user-cache-hostname-dir-path"]], "matflow-open-user-data-dir command line option": [[151, "cmdoption-matflow-open-user-data-dir-path"]], "matflow-open-user-data-hostname-dir command line option": [[151, "cmdoption-matflow-open-user-data-hostname-dir-path"]], "matflow-open-user-runtime-dir command line option": [[151, "cmdoption-matflow-open-user-runtime-dir-path"]], "matflow-open-workflow command line option": [[151, "cmdoption-matflow-open-workflow-arg-WORKFLOW_REF"], [151, "cmdoption-matflow-open-workflow-path"], [151, "cmdoption-matflow-open-workflow-r"]], "matflow-rechunk command line option": [[151, "cmdoption-matflow-rechunk-arg-WORKFLOW_REF"], [151, "cmdoption-matflow-rechunk-backup"], [151, "cmdoption-matflow-rechunk-chunk-size"], [151, "cmdoption-matflow-rechunk-r"], [151, "cmdoption-matflow-rechunk-status"]], "matflow-show command line option": [[151, "cmdoption-matflow-show-f"], [151, "cmdoption-matflow-show-legend"], [151, "cmdoption-matflow-show-no-update"], [151, "cmdoption-matflow-show-r"]], "matflow-submission command line option": [[151, "cmdoption-matflow-submission-os-info"]], "matflow-submission-get-known command line option": [[151, "cmdoption-matflow-submission-get-known-json"]], "matflow-submission-scheduler command line option": [[151, "cmdoption-matflow-submission-scheduler-arg-SCHEDULER_NAME"]], "matflow-submission-shell-info command line option": [[151, "cmdoption-matflow-submission-shell-info-arg-SHELL_NAME"], [151, "cmdoption-matflow-submission-shell-info-exclude-os"]], "matflow-test command line option": [[151, "cmdoption-matflow-test-arg-PY_TEST_ARGS"]], "matflow-test-hpcflow command line option": [[151, "cmdoption-matflow-test-hpcflow-arg-PY_TEST_ARGS"]], "matflow-unzip command line option": [[151, "cmdoption-matflow-unzip-arg-WORKFLOW_PATH"], [151, "cmdoption-matflow-unzip-log"], [151, "cmdoption-matflow-unzip-path"]], "matflow-workflow command line option": [[151, "cmdoption-matflow-workflow-arg-WORKFLOW_REF"], [151, "cmdoption-matflow-workflow-r"]], "matflow-workflow-workflow_ref-abort-run command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-element"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-submission"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-abort-run-task"]], "matflow-workflow-workflow_ref-add-submission command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-force-array"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-js-parallelism"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-status"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-add-submission-tasks"]], "matflow-workflow-workflow_ref-get-param command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-arg-INDEX"]], "matflow-workflow-workflow_ref-get-param-source command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-get-param-source-arg-INDEX"]], "matflow-workflow-workflow_ref-is-param-set command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-is-param-set-arg-INDEX"]], "matflow-workflow-workflow_ref-list-jobscripts command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-jobscripts"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-max-js"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-sub-idx"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-jobscripts-width"]], "matflow-workflow-workflow_ref-list-task-jobscripts command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-max-js"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-sub-idx"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-task-names"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-list-task-jobscripts-width"]], "matflow-workflow-workflow_ref-rechunk command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-backup"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-chunk-size"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-status"]], "matflow-workflow-workflow_ref-rechunk-parameter-base command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-backup"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-chunk-size"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-parameter-base-status"]], "matflow-workflow-workflow_ref-rechunk-runs command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-backup"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-chunk-size"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-rechunk-runs-status"]], "matflow-workflow-workflow_ref-sub command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-arg-SUB_IDX"]], "matflow-workflow-workflow_ref-sub-sub_idx-js command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-arg-JS_IDX"]], "matflow-workflow-workflow_ref-sub-sub_idx-js-js_idx-stderr command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stderr-array-idx"]], "matflow-workflow-workflow_ref-sub-sub_idx-js-js_idx-stdout command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-js-JS_IDX-stdout-array-idx"]], "matflow-workflow-workflow_ref-sub-sub_idx-list-jobscripts command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-jobscripts"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-max-js"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-jobscripts-width"]], "matflow-workflow-workflow_ref-sub-sub_idx-list-task-jobscripts command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-max-js"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-task-names"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-sub-SUB_IDX-list-task-jobscripts-width"]], "matflow-workflow-workflow_ref-submit command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-add-to-known"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-cancel"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-js-parallelism"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-print-idx"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-status"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-tasks"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-submit-wait"]], "matflow-workflow-workflow_ref-unzip command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-log"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-unzip-path"]], "matflow-workflow-workflow_ref-wait command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-wait-j"]], "matflow-workflow-workflow_ref-zip command line option": [[151, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-execute"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-include-rechunk-backups"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-log"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-overwrite"], [151, "cmdoption-matflow-workflow-WORKFLOW_REF-zip-path"]], "matflow-zip command line option": [[151, "cmdoption-matflow-zip-arg-WORKFLOW_REF"], [151, "cmdoption-matflow-zip-include-execute"], [151, "cmdoption-matflow-zip-include-rechunk-backups"], [151, "cmdoption-matflow-zip-log"], [151, "cmdoption-matflow-zip-overwrite"], [151, "cmdoption-matflow-zip-path"], [151, "cmdoption-matflow-zip-r"]]}})